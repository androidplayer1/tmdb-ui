function u0(e,t){for(var a=0;a<t.length;a++){const r=t[a];if(typeof r!="string"&&!Array.isArray(r)){for(const i in r)if(i!=="default"&&!(i in e)){const n=Object.getOwnPropertyDescriptor(r,i);n&&Object.defineProperty(e,i,n.get?n:{enumerable:!0,get:()=>r[i]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))r(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const d of n.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function a(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(i){if(i.ep)return;i.ep=!0;const n=a(i);fetch(i.href,n)}})();function m0(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var c0={exports:{}},$n={},f0={exports:{}},Y={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ui=Symbol.for("react.element"),Um=Symbol.for("react.portal"),Hm=Symbol.for("react.fragment"),Wm=Symbol.for("react.strict_mode"),zm=Symbol.for("react.profiler"),$m=Symbol.for("react.provider"),Gm=Symbol.for("react.context"),Ym=Symbol.for("react.forward_ref"),Qm=Symbol.for("react.suspense"),Km=Symbol.for("react.memo"),Xm=Symbol.for("react.lazy"),Kl=Symbol.iterator;function Jm(e){return e===null||typeof e!="object"?null:(e=Kl&&e[Kl]||e["@@iterator"],typeof e=="function"?e:null)}var h0={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v0=Object.assign,g0={};function t1(e,t,a){this.props=e,this.context=t,this.refs=g0,this.updater=a||h0}t1.prototype.isReactComponent={};t1.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};t1.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function y0(){}y0.prototype=t1.prototype;function Eo(e,t,a){this.props=e,this.context=t,this.refs=g0,this.updater=a||h0}var Do=Eo.prototype=new y0;Do.constructor=Eo;v0(Do,t1.prototype);Do.isPureReactComponent=!0;var Xl=Array.isArray,b0=Object.prototype.hasOwnProperty,Co={current:null},w0={key:!0,ref:!0,__self:!0,__source:!0};function S0(e,t,a){var r,i={},n=null,d=null;if(t!=null)for(r in t.ref!==void 0&&(d=t.ref),t.key!==void 0&&(n=""+t.key),t)b0.call(t,r)&&!w0.hasOwnProperty(r)&&(i[r]=t[r]);var p=arguments.length-2;if(p===1)i.children=a;else if(1<p){for(var o=Array(p),l=0;l<p;l++)o[l]=arguments[l+2];i.children=o}if(e&&e.defaultProps)for(r in p=e.defaultProps,p)i[r]===void 0&&(i[r]=p[r]);return{$$typeof:ui,type:e,key:n,ref:d,props:i,_owner:Co.current}}function Zm(e,t){return{$$typeof:ui,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function No(e){return typeof e=="object"&&e!==null&&e.$$typeof===ui}function ec(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(a){return t[a]})}var Jl=/\/+/g;function Cd(e,t){return typeof e=="object"&&e!==null&&e.key!=null?ec(""+e.key):t.toString(36)}function Qi(e,t,a,r,i){var n=typeof e;(n==="undefined"||n==="boolean")&&(e=null);var d=!1;if(e===null)d=!0;else switch(n){case"string":case"number":d=!0;break;case"object":switch(e.$$typeof){case ui:case Um:d=!0}}if(d)return d=e,i=i(d),e=r===""?"."+Cd(d,0):r,Xl(i)?(a="",e!=null&&(a=e.replace(Jl,"$&/")+"/"),Qi(i,t,a,"",function(l){return l})):i!=null&&(No(i)&&(i=Zm(i,a+(!i.key||d&&d.key===i.key?"":(""+i.key).replace(Jl,"$&/")+"/")+e)),t.push(i)),1;if(d=0,r=r===""?".":r+":",Xl(e))for(var p=0;p<e.length;p++){n=e[p];var o=r+Cd(n,p);d+=Qi(n,t,a,o,i)}else if(o=Jm(e),typeof o=="function")for(e=o.call(e),p=0;!(n=e.next()).done;)n=n.value,o=r+Cd(n,p++),d+=Qi(n,t,a,o,i);else if(n==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return d}function Ci(e,t,a){if(e==null)return e;var r=[],i=0;return Qi(e,r,"","",function(n){return t.call(a,n,i++)}),r}function tc(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(a){(e._status===0||e._status===-1)&&(e._status=1,e._result=a)},function(a){(e._status===0||e._status===-1)&&(e._status=2,e._result=a)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var Ye={current:null},Ki={transition:null},ac={ReactCurrentDispatcher:Ye,ReactCurrentBatchConfig:Ki,ReactCurrentOwner:Co};function _0(){throw Error("act(...) is not supported in production builds of React.")}Y.Children={map:Ci,forEach:function(e,t,a){Ci(e,function(){t.apply(this,arguments)},a)},count:function(e){var t=0;return Ci(e,function(){t++}),t},toArray:function(e){return Ci(e,function(t){return t})||[]},only:function(e){if(!No(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};Y.Component=t1;Y.Fragment=Hm;Y.Profiler=zm;Y.PureComponent=Eo;Y.StrictMode=Wm;Y.Suspense=Qm;Y.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ac;Y.act=_0;Y.cloneElement=function(e,t,a){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=v0({},e.props),i=e.key,n=e.ref,d=e._owner;if(t!=null){if(t.ref!==void 0&&(n=t.ref,d=Co.current),t.key!==void 0&&(i=""+t.key),e.type&&e.type.defaultProps)var p=e.type.defaultProps;for(o in t)b0.call(t,o)&&!w0.hasOwnProperty(o)&&(r[o]=t[o]===void 0&&p!==void 0?p[o]:t[o])}var o=arguments.length-2;if(o===1)r.children=a;else if(1<o){p=Array(o);for(var l=0;l<o;l++)p[l]=arguments[l+2];r.children=p}return{$$typeof:ui,type:e.type,key:i,ref:n,props:r,_owner:d}};Y.createContext=function(e){return e={$$typeof:Gm,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:$m,_context:e},e.Consumer=e};Y.createElement=S0;Y.createFactory=function(e){var t=S0.bind(null,e);return t.type=e,t};Y.createRef=function(){return{current:null}};Y.forwardRef=function(e){return{$$typeof:Ym,render:e}};Y.isValidElement=No;Y.lazy=function(e){return{$$typeof:Xm,_payload:{_status:-1,_result:e},_init:tc}};Y.memo=function(e,t){return{$$typeof:Km,type:e,compare:t===void 0?null:t}};Y.startTransition=function(e){var t=Ki.transition;Ki.transition={};try{e()}finally{Ki.transition=t}};Y.unstable_act=_0;Y.useCallback=function(e,t){return Ye.current.useCallback(e,t)};Y.useContext=function(e){return Ye.current.useContext(e)};Y.useDebugValue=function(){};Y.useDeferredValue=function(e){return Ye.current.useDeferredValue(e)};Y.useEffect=function(e,t){return Ye.current.useEffect(e,t)};Y.useId=function(){return Ye.current.useId()};Y.useImperativeHandle=function(e,t,a){return Ye.current.useImperativeHandle(e,t,a)};Y.useInsertionEffect=function(e,t){return Ye.current.useInsertionEffect(e,t)};Y.useLayoutEffect=function(e,t){return Ye.current.useLayoutEffect(e,t)};Y.useMemo=function(e,t){return Ye.current.useMemo(e,t)};Y.useReducer=function(e,t,a){return Ye.current.useReducer(e,t,a)};Y.useRef=function(e){return Ye.current.useRef(e)};Y.useState=function(e){return Ye.current.useState(e)};Y.useSyncExternalStore=function(e,t,a){return Ye.current.useSyncExternalStore(e,t,a)};Y.useTransition=function(){return Ye.current.useTransition()};Y.version="18.3.1";f0.exports=Y;var y=f0.exports;const T0=m0(y),rc=u0({__proto__:null,default:T0},[y]);/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ic=y,nc=Symbol.for("react.element"),dc=Symbol.for("react.fragment"),pc=Object.prototype.hasOwnProperty,oc=ic.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,lc={key:!0,ref:!0,__self:!0,__source:!0};function E0(e,t,a){var r,i={},n=null,d=null;a!==void 0&&(n=""+a),t.key!==void 0&&(n=""+t.key),t.ref!==void 0&&(d=t.ref);for(r in t)pc.call(t,r)&&!lc.hasOwnProperty(r)&&(i[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps,t)i[r]===void 0&&(i[r]=t[r]);return{$$typeof:nc,type:e,key:n,ref:d,props:i,_owner:oc.current}}$n.Fragment=dc;$n.jsx=E0;$n.jsxs=E0;c0.exports=$n;var b=c0.exports,D0={exports:{}},ut={},C0={exports:{}},N0={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(O,z){var $=O.length;O.push(z);e:for(;0<$;){var re=$-1>>>1,me=O[re];if(0<i(me,z))O[re]=z,O[$]=me,$=re;else break e}}function a(O){return O.length===0?null:O[0]}function r(O){if(O.length===0)return null;var z=O[0],$=O.pop();if($!==z){O[0]=$;e:for(var re=0,me=O.length,kt=me>>>1;re<kt;){var Le=2*(re+1)-1,St=O[Le],We=Le+1,It=O[We];if(0>i(St,$))We<me&&0>i(It,St)?(O[re]=It,O[We]=$,re=We):(O[re]=St,O[Le]=$,re=Le);else if(We<me&&0>i(It,$))O[re]=It,O[We]=$,re=We;else break e}}return z}function i(O,z){var $=O.sortIndex-z.sortIndex;return $!==0?$:O.id-z.id}if(typeof performance=="object"&&typeof performance.now=="function"){var n=performance;e.unstable_now=function(){return n.now()}}else{var d=Date,p=d.now();e.unstable_now=function(){return d.now()-p}}var o=[],l=[],s=1,u=null,m=3,h=!1,w=!1,_=!1,N=typeof setTimeout=="function"?setTimeout:null,f=typeof clearTimeout=="function"?clearTimeout:null,c=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function v(O){for(var z=a(l);z!==null;){if(z.callback===null)r(l);else if(z.startTime<=O)r(l),z.sortIndex=z.expirationTime,t(o,z);else break;z=a(l)}}function D(O){if(_=!1,v(O),!w)if(a(o)!==null)w=!0,wt(P);else{var z=a(l);z!==null&&ne(D,z.startTime-O)}}function P(O,z){w=!1,_&&(_=!1,f(x),x=-1),h=!0;var $=m;try{for(v(z),u=a(o);u!==null&&(!(u.expirationTime>z)||O&&!V());){var re=u.callback;if(typeof re=="function"){u.callback=null,m=u.priorityLevel;var me=re(u.expirationTime<=z);z=e.unstable_now(),typeof me=="function"?u.callback=me:u===a(o)&&r(o),v(z)}else r(o);u=a(o)}if(u!==null)var kt=!0;else{var Le=a(l);Le!==null&&ne(D,Le.startTime-z),kt=!1}return kt}finally{u=null,m=$,h=!1}}var S=!1,L=null,x=-1,R=5,C=-1;function V(){return!(e.unstable_now()-C<R)}function W(){if(L!==null){var O=e.unstable_now();C=O;var z=!0;try{z=L(!0,O)}finally{z?J():(S=!1,L=null)}}else S=!1}var J;if(typeof c=="function")J=function(){c(W)};else if(typeof MessageChannel<"u"){var de=new MessageChannel,nt=de.port2;de.port1.onmessage=W,J=function(){nt.postMessage(null)}}else J=function(){N(W,0)};function wt(O){L=O,S||(S=!0,J())}function ne(O,z){x=N(function(){O(e.unstable_now())},z)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(O){O.callback=null},e.unstable_continueExecution=function(){w||h||(w=!0,wt(P))},e.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<O?Math.floor(1e3/O):5},e.unstable_getCurrentPriorityLevel=function(){return m},e.unstable_getFirstCallbackNode=function(){return a(o)},e.unstable_next=function(O){switch(m){case 1:case 2:case 3:var z=3;break;default:z=m}var $=m;m=z;try{return O()}finally{m=$}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(O,z){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var $=m;m=O;try{return z()}finally{m=$}},e.unstable_scheduleCallback=function(O,z,$){var re=e.unstable_now();switch(typeof $=="object"&&$!==null?($=$.delay,$=typeof $=="number"&&0<$?re+$:re):$=re,O){case 1:var me=-1;break;case 2:me=250;break;case 5:me=1073741823;break;case 4:me=1e4;break;default:me=5e3}return me=$+me,O={id:s++,callback:z,priorityLevel:O,startTime:$,expirationTime:me,sortIndex:-1},$>re?(O.sortIndex=$,t(l,O),a(o)===null&&O===a(l)&&(_?(f(x),x=-1):_=!0,ne(D,$-re))):(O.sortIndex=me,t(o,O),w||h||(w=!0,wt(P))),O},e.unstable_shouldYield=V,e.unstable_wrapCallback=function(O){var z=m;return function(){var $=m;m=z;try{return O.apply(this,arguments)}finally{m=$}}}})(N0);C0.exports=N0;var sc=C0.exports;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var uc=y,st=sc;function k(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,a=1;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var x0=new Set,z1={};function sr(e,t){$r(e,t),$r(e+"Capture",t)}function $r(e,t){for(z1[e]=t,e=0;e<t.length;e++)x0.add(t[e])}var Jt=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),gp=Object.prototype.hasOwnProperty,mc=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Zl={},es={};function cc(e){return gp.call(es,e)?!0:gp.call(Zl,e)?!1:mc.test(e)?es[e]=!0:(Zl[e]=!0,!1)}function fc(e,t,a,r){if(a!==null&&a.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:a!==null?!a.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function hc(e,t,a,r){if(t===null||typeof t>"u"||fc(e,t,a,r))return!0;if(r)return!1;if(a!==null)switch(a.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function Qe(e,t,a,r,i,n,d){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=a,this.propertyName=e,this.type=t,this.sanitizeURL=n,this.removeEmptyString=d}var Me={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){Me[e]=new Qe(e,0,!1,e,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];Me[t]=new Qe(t,1,!1,e[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(e){Me[e]=new Qe(e,2,!1,e.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){Me[e]=new Qe(e,2,!1,e,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){Me[e]=new Qe(e,3,!1,e.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(e){Me[e]=new Qe(e,3,!0,e,null,!1,!1)});["capture","download"].forEach(function(e){Me[e]=new Qe(e,4,!1,e,null,!1,!1)});["cols","rows","size","span"].forEach(function(e){Me[e]=new Qe(e,6,!1,e,null,!1,!1)});["rowSpan","start"].forEach(function(e){Me[e]=new Qe(e,5,!1,e.toLowerCase(),null,!1,!1)});var xo=/[\-:]([a-z])/g;function Ao(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(xo,Ao);Me[t]=new Qe(t,1,!1,e,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(xo,Ao);Me[t]=new Qe(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(xo,Ao);Me[t]=new Qe(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(e){Me[e]=new Qe(e,1,!1,e.toLowerCase(),null,!1,!1)});Me.xlinkHref=new Qe("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(e){Me[e]=new Qe(e,1,!1,e.toLowerCase(),null,!0,!0)});function Ro(e,t,a,r){var i=Me.hasOwnProperty(t)?Me[t]:null;(i!==null?i.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(hc(t,a,i,r)&&(a=null),r||i===null?cc(t)&&(a===null?e.removeAttribute(t):e.setAttribute(t,""+a)):i.mustUseProperty?e[i.propertyName]=a===null?i.type===3?!1:"":a:(t=i.attributeName,r=i.attributeNamespace,a===null?e.removeAttribute(t):(i=i.type,a=i===3||i===4&&a===!0?"":""+a,r?e.setAttributeNS(r,t,a):e.setAttribute(t,a))))}var ra=uc.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Ni=Symbol.for("react.element"),Cr=Symbol.for("react.portal"),Nr=Symbol.for("react.fragment"),Po=Symbol.for("react.strict_mode"),yp=Symbol.for("react.profiler"),A0=Symbol.for("react.provider"),R0=Symbol.for("react.context"),ko=Symbol.for("react.forward_ref"),bp=Symbol.for("react.suspense"),wp=Symbol.for("react.suspense_list"),Lo=Symbol.for("react.memo"),ma=Symbol.for("react.lazy"),P0=Symbol.for("react.offscreen"),ts=Symbol.iterator;function c1(e){return e===null||typeof e!="object"?null:(e=ts&&e[ts]||e["@@iterator"],typeof e=="function"?e:null)}var we=Object.assign,Nd;function N1(e){if(Nd===void 0)try{throw Error()}catch(a){var t=a.stack.trim().match(/\n( *(at )?)/);Nd=t&&t[1]||""}return`
`+Nd+e}var xd=!1;function Ad(e,t){if(!e||xd)return"";xd=!0;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var r=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){r=l}e.call(t.prototype)}else{try{throw Error()}catch(l){r=l}e()}}catch(l){if(l&&r&&typeof l.stack=="string"){for(var i=l.stack.split(`
`),n=r.stack.split(`
`),d=i.length-1,p=n.length-1;1<=d&&0<=p&&i[d]!==n[p];)p--;for(;1<=d&&0<=p;d--,p--)if(i[d]!==n[p]){if(d!==1||p!==1)do if(d--,p--,0>p||i[d]!==n[p]){var o=`
`+i[d].replace(" at new "," at ");return e.displayName&&o.includes("<anonymous>")&&(o=o.replace("<anonymous>",e.displayName)),o}while(1<=d&&0<=p);break}}}finally{xd=!1,Error.prepareStackTrace=a}return(e=e?e.displayName||e.name:"")?N1(e):""}function vc(e){switch(e.tag){case 5:return N1(e.type);case 16:return N1("Lazy");case 13:return N1("Suspense");case 19:return N1("SuspenseList");case 0:case 2:case 15:return e=Ad(e.type,!1),e;case 11:return e=Ad(e.type.render,!1),e;case 1:return e=Ad(e.type,!0),e;default:return""}}function Sp(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Nr:return"Fragment";case Cr:return"Portal";case yp:return"Profiler";case Po:return"StrictMode";case bp:return"Suspense";case wp:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case R0:return(e.displayName||"Context")+".Consumer";case A0:return(e._context.displayName||"Context")+".Provider";case ko:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Lo:return t=e.displayName||null,t!==null?t:Sp(e.type)||"Memo";case ma:t=e._payload,e=e._init;try{return Sp(e(t))}catch{}}return null}function gc(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Sp(t);case 8:return t===Po?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function xa(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function k0(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function yc(e){var t=k0(e)?"checked":"value",a=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof a<"u"&&typeof a.get=="function"&&typeof a.set=="function"){var i=a.get,n=a.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(d){r=""+d,n.call(this,d)}}),Object.defineProperty(e,t,{enumerable:a.enumerable}),{getValue:function(){return r},setValue:function(d){r=""+d},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function xi(e){e._valueTracker||(e._valueTracker=yc(e))}function L0(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var a=t.getValue(),r="";return e&&(r=k0(e)?e.checked?"true":"false":e.value),e=r,e!==a?(t.setValue(e),!0):!1}function cn(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function _p(e,t){var a=t.checked;return we({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:a??e._wrapperState.initialChecked})}function as(e,t){var a=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;a=xa(t.value!=null?t.value:a),e._wrapperState={initialChecked:r,initialValue:a,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function V0(e,t){t=t.checked,t!=null&&Ro(e,"checked",t,!1)}function Tp(e,t){V0(e,t);var a=xa(t.value),r=t.type;if(a!=null)r==="number"?(a===0&&e.value===""||e.value!=a)&&(e.value=""+a):e.value!==""+a&&(e.value=""+a);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?Ep(e,t.type,a):t.hasOwnProperty("defaultValue")&&Ep(e,t.type,xa(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function rs(e,t,a){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,a||t===e.value||(e.value=t),e.defaultValue=t}a=e.name,a!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,a!==""&&(e.name=a)}function Ep(e,t,a){(t!=="number"||cn(e.ownerDocument)!==e)&&(a==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+a&&(e.defaultValue=""+a))}var x1=Array.isArray;function jr(e,t,a,r){if(e=e.options,t){t={};for(var i=0;i<a.length;i++)t["$"+a[i]]=!0;for(a=0;a<e.length;a++)i=t.hasOwnProperty("$"+e[a].value),e[a].selected!==i&&(e[a].selected=i),i&&r&&(e[a].defaultSelected=!0)}else{for(a=""+xa(a),t=null,i=0;i<e.length;i++){if(e[i].value===a){e[i].selected=!0,r&&(e[i].defaultSelected=!0);return}t!==null||e[i].disabled||(t=e[i])}t!==null&&(t.selected=!0)}}function Dp(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(k(91));return we({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function is(e,t){var a=t.value;if(a==null){if(a=t.children,t=t.defaultValue,a!=null){if(t!=null)throw Error(k(92));if(x1(a)){if(1<a.length)throw Error(k(93));a=a[0]}t=a}t==null&&(t=""),a=t}e._wrapperState={initialValue:xa(a)}}function O0(e,t){var a=xa(t.value),r=xa(t.defaultValue);a!=null&&(a=""+a,a!==e.value&&(e.value=a),t.defaultValue==null&&e.defaultValue!==a&&(e.defaultValue=a)),r!=null&&(e.defaultValue=""+r)}function ns(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function B0(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Cp(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?B0(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var Ai,q0=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,a,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,a,r,i)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(Ai=Ai||document.createElement("div"),Ai.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Ai.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function $1(e,t){if(t){var a=e.firstChild;if(a&&a===e.lastChild&&a.nodeType===3){a.nodeValue=t;return}}e.textContent=t}var O1={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},bc=["Webkit","ms","Moz","O"];Object.keys(O1).forEach(function(e){bc.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),O1[t]=O1[e]})});function M0(e,t,a){return t==null||typeof t=="boolean"||t===""?"":a||typeof t!="number"||t===0||O1.hasOwnProperty(e)&&O1[e]?(""+t).trim():t+"px"}function j0(e,t){e=e.style;for(var a in t)if(t.hasOwnProperty(a)){var r=a.indexOf("--")===0,i=M0(a,t[a],r);a==="float"&&(a="cssFloat"),r?e.setProperty(a,i):e[a]=i}}var wc=we({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Np(e,t){if(t){if(wc[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(k(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(k(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(k(61))}if(t.style!=null&&typeof t.style!="object")throw Error(k(62))}}function xp(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ap=null;function Vo(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var Rp=null,Fr=null,Ir=null;function ds(e){if(e=fi(e)){if(typeof Rp!="function")throw Error(k(280));var t=e.stateNode;t&&(t=Xn(t),Rp(e.stateNode,e.type,t))}}function F0(e){Fr?Ir?Ir.push(e):Ir=[e]:Fr=e}function I0(){if(Fr){var e=Fr,t=Ir;if(Ir=Fr=null,ds(e),t)for(e=0;e<t.length;e++)ds(t[e])}}function U0(e,t){return e(t)}function H0(){}var Rd=!1;function W0(e,t,a){if(Rd)return e(t,a);Rd=!0;try{return U0(e,t,a)}finally{Rd=!1,(Fr!==null||Ir!==null)&&(H0(),I0())}}function G1(e,t){var a=e.stateNode;if(a===null)return null;var r=Xn(a);if(r===null)return null;a=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(a&&typeof a!="function")throw Error(k(231,t,typeof a));return a}var Pp=!1;if(Jt)try{var f1={};Object.defineProperty(f1,"passive",{get:function(){Pp=!0}}),window.addEventListener("test",f1,f1),window.removeEventListener("test",f1,f1)}catch{Pp=!1}function Sc(e,t,a,r,i,n,d,p,o){var l=Array.prototype.slice.call(arguments,3);try{t.apply(a,l)}catch(s){this.onError(s)}}var B1=!1,fn=null,hn=!1,kp=null,_c={onError:function(e){B1=!0,fn=e}};function Tc(e,t,a,r,i,n,d,p,o){B1=!1,fn=null,Sc.apply(_c,arguments)}function Ec(e,t,a,r,i,n,d,p,o){if(Tc.apply(this,arguments),B1){if(B1){var l=fn;B1=!1,fn=null}else throw Error(k(198));hn||(hn=!0,kp=l)}}function ur(e){var t=e,a=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,t.flags&4098&&(a=t.return),e=t.return;while(e)}return t.tag===3?a:null}function z0(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function ps(e){if(ur(e)!==e)throw Error(k(188))}function Dc(e){var t=e.alternate;if(!t){if(t=ur(e),t===null)throw Error(k(188));return t!==e?null:e}for(var a=e,r=t;;){var i=a.return;if(i===null)break;var n=i.alternate;if(n===null){if(r=i.return,r!==null){a=r;continue}break}if(i.child===n.child){for(n=i.child;n;){if(n===a)return ps(i),e;if(n===r)return ps(i),t;n=n.sibling}throw Error(k(188))}if(a.return!==r.return)a=i,r=n;else{for(var d=!1,p=i.child;p;){if(p===a){d=!0,a=i,r=n;break}if(p===r){d=!0,r=i,a=n;break}p=p.sibling}if(!d){for(p=n.child;p;){if(p===a){d=!0,a=n,r=i;break}if(p===r){d=!0,r=n,a=i;break}p=p.sibling}if(!d)throw Error(k(189))}}if(a.alternate!==r)throw Error(k(190))}if(a.tag!==3)throw Error(k(188));return a.stateNode.current===a?e:t}function $0(e){return e=Dc(e),e!==null?G0(e):null}function G0(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=G0(e);if(t!==null)return t;e=e.sibling}return null}var Y0=st.unstable_scheduleCallback,os=st.unstable_cancelCallback,Cc=st.unstable_shouldYield,Nc=st.unstable_requestPaint,Ee=st.unstable_now,xc=st.unstable_getCurrentPriorityLevel,Oo=st.unstable_ImmediatePriority,Q0=st.unstable_UserBlockingPriority,vn=st.unstable_NormalPriority,Ac=st.unstable_LowPriority,K0=st.unstable_IdlePriority,Gn=null,Mt=null;function Rc(e){if(Mt&&typeof Mt.onCommitFiberRoot=="function")try{Mt.onCommitFiberRoot(Gn,e,void 0,(e.current.flags&128)===128)}catch{}}var At=Math.clz32?Math.clz32:Lc,Pc=Math.log,kc=Math.LN2;function Lc(e){return e>>>=0,e===0?32:31-(Pc(e)/kc|0)|0}var Ri=64,Pi=4194304;function A1(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function gn(e,t){var a=e.pendingLanes;if(a===0)return 0;var r=0,i=e.suspendedLanes,n=e.pingedLanes,d=a&268435455;if(d!==0){var p=d&~i;p!==0?r=A1(p):(n&=d,n!==0&&(r=A1(n)))}else d=a&~i,d!==0?r=A1(d):n!==0&&(r=A1(n));if(r===0)return 0;if(t!==0&&t!==r&&!(t&i)&&(i=r&-r,n=t&-t,i>=n||i===16&&(n&4194240)!==0))return t;if(r&4&&(r|=a&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)a=31-At(t),i=1<<a,r|=e[a],t&=~i;return r}function Vc(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Oc(e,t){for(var a=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,n=e.pendingLanes;0<n;){var d=31-At(n),p=1<<d,o=i[d];o===-1?(!(p&a)||p&r)&&(i[d]=Vc(p,t)):o<=t&&(e.expiredLanes|=p),n&=~p}}function Lp(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function X0(){var e=Ri;return Ri<<=1,!(Ri&4194240)&&(Ri=64),e}function Pd(e){for(var t=[],a=0;31>a;a++)t.push(e);return t}function mi(e,t,a){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-At(t),e[t]=a}function Bc(e,t){var a=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<a;){var i=31-At(a),n=1<<i;t[i]=0,r[i]=-1,e[i]=-1,a&=~n}}function Bo(e,t){var a=e.entangledLanes|=t;for(e=e.entanglements;a;){var r=31-At(a),i=1<<r;i&t|e[r]&t&&(e[r]|=t),a&=~i}}var pe=0;function J0(e){return e&=-e,1<e?4<e?e&268435455?16:536870912:4:1}var Z0,qo,eu,tu,au,Vp=!1,ki=[],wa=null,Sa=null,_a=null,Y1=new Map,Q1=new Map,fa=[],qc="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function ls(e,t){switch(e){case"focusin":case"focusout":wa=null;break;case"dragenter":case"dragleave":Sa=null;break;case"mouseover":case"mouseout":_a=null;break;case"pointerover":case"pointerout":Y1.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Q1.delete(t.pointerId)}}function h1(e,t,a,r,i,n){return e===null||e.nativeEvent!==n?(e={blockedOn:t,domEventName:a,eventSystemFlags:r,nativeEvent:n,targetContainers:[i]},t!==null&&(t=fi(t),t!==null&&qo(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,i!==null&&t.indexOf(i)===-1&&t.push(i),e)}function Mc(e,t,a,r,i){switch(t){case"focusin":return wa=h1(wa,e,t,a,r,i),!0;case"dragenter":return Sa=h1(Sa,e,t,a,r,i),!0;case"mouseover":return _a=h1(_a,e,t,a,r,i),!0;case"pointerover":var n=i.pointerId;return Y1.set(n,h1(Y1.get(n)||null,e,t,a,r,i)),!0;case"gotpointercapture":return n=i.pointerId,Q1.set(n,h1(Q1.get(n)||null,e,t,a,r,i)),!0}return!1}function ru(e){var t=Ya(e.target);if(t!==null){var a=ur(t);if(a!==null){if(t=a.tag,t===13){if(t=z0(a),t!==null){e.blockedOn=t,au(e.priority,function(){eu(a)});return}}else if(t===3&&a.stateNode.current.memoizedState.isDehydrated){e.blockedOn=a.tag===3?a.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Xi(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var a=Op(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(a===null){a=e.nativeEvent;var r=new a.constructor(a.type,a);Ap=r,a.target.dispatchEvent(r),Ap=null}else return t=fi(a),t!==null&&qo(t),e.blockedOn=a,!1;t.shift()}return!0}function ss(e,t,a){Xi(e)&&a.delete(t)}function jc(){Vp=!1,wa!==null&&Xi(wa)&&(wa=null),Sa!==null&&Xi(Sa)&&(Sa=null),_a!==null&&Xi(_a)&&(_a=null),Y1.forEach(ss),Q1.forEach(ss)}function v1(e,t){e.blockedOn===t&&(e.blockedOn=null,Vp||(Vp=!0,st.unstable_scheduleCallback(st.unstable_NormalPriority,jc)))}function K1(e){function t(i){return v1(i,e)}if(0<ki.length){v1(ki[0],e);for(var a=1;a<ki.length;a++){var r=ki[a];r.blockedOn===e&&(r.blockedOn=null)}}for(wa!==null&&v1(wa,e),Sa!==null&&v1(Sa,e),_a!==null&&v1(_a,e),Y1.forEach(t),Q1.forEach(t),a=0;a<fa.length;a++)r=fa[a],r.blockedOn===e&&(r.blockedOn=null);for(;0<fa.length&&(a=fa[0],a.blockedOn===null);)ru(a),a.blockedOn===null&&fa.shift()}var Ur=ra.ReactCurrentBatchConfig,yn=!0;function Fc(e,t,a,r){var i=pe,n=Ur.transition;Ur.transition=null;try{pe=1,Mo(e,t,a,r)}finally{pe=i,Ur.transition=n}}function Ic(e,t,a,r){var i=pe,n=Ur.transition;Ur.transition=null;try{pe=4,Mo(e,t,a,r)}finally{pe=i,Ur.transition=n}}function Mo(e,t,a,r){if(yn){var i=Op(e,t,a,r);if(i===null)Id(e,t,r,bn,a),ls(e,r);else if(Mc(i,e,t,a,r))r.stopPropagation();else if(ls(e,r),t&4&&-1<qc.indexOf(e)){for(;i!==null;){var n=fi(i);if(n!==null&&Z0(n),n=Op(e,t,a,r),n===null&&Id(e,t,r,bn,a),n===i)break;i=n}i!==null&&r.stopPropagation()}else Id(e,t,r,null,a)}}var bn=null;function Op(e,t,a,r){if(bn=null,e=Vo(r),e=Ya(e),e!==null)if(t=ur(e),t===null)e=null;else if(a=t.tag,a===13){if(e=z0(t),e!==null)return e;e=null}else if(a===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return bn=e,null}function iu(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(xc()){case Oo:return 1;case Q0:return 4;case vn:case Ac:return 16;case K0:return 536870912;default:return 16}default:return 16}}var va=null,jo=null,Ji=null;function nu(){if(Ji)return Ji;var e,t=jo,a=t.length,r,i="value"in va?va.value:va.textContent,n=i.length;for(e=0;e<a&&t[e]===i[e];e++);var d=a-e;for(r=1;r<=d&&t[a-r]===i[n-r];r++);return Ji=i.slice(e,1<r?1-r:void 0)}function Zi(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Li(){return!0}function us(){return!1}function mt(e){function t(a,r,i,n,d){this._reactName=a,this._targetInst=i,this.type=r,this.nativeEvent=n,this.target=d,this.currentTarget=null;for(var p in e)e.hasOwnProperty(p)&&(a=e[p],this[p]=a?a(n):n[p]);return this.isDefaultPrevented=(n.defaultPrevented!=null?n.defaultPrevented:n.returnValue===!1)?Li:us,this.isPropagationStopped=us,this}return we(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():typeof a.returnValue!="unknown"&&(a.returnValue=!1),this.isDefaultPrevented=Li)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():typeof a.cancelBubble!="unknown"&&(a.cancelBubble=!0),this.isPropagationStopped=Li)},persist:function(){},isPersistent:Li}),t}var a1={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Fo=mt(a1),ci=we({},a1,{view:0,detail:0}),Uc=mt(ci),kd,Ld,g1,Yn=we({},ci,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Io,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==g1&&(g1&&e.type==="mousemove"?(kd=e.screenX-g1.screenX,Ld=e.screenY-g1.screenY):Ld=kd=0,g1=e),kd)},movementY:function(e){return"movementY"in e?e.movementY:Ld}}),ms=mt(Yn),Hc=we({},Yn,{dataTransfer:0}),Wc=mt(Hc),zc=we({},ci,{relatedTarget:0}),Vd=mt(zc),$c=we({},a1,{animationName:0,elapsedTime:0,pseudoElement:0}),Gc=mt($c),Yc=we({},a1,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qc=mt(Yc),Kc=we({},a1,{data:0}),cs=mt(Kc),Xc={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Jc={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Zc={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function e3(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=Zc[e])?!!t[e]:!1}function Io(){return e3}var t3=we({},ci,{key:function(e){if(e.key){var t=Xc[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=Zi(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?Jc[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Io,charCode:function(e){return e.type==="keypress"?Zi(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Zi(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),a3=mt(t3),r3=we({},Yn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),fs=mt(r3),i3=we({},ci,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Io}),n3=mt(i3),d3=we({},a1,{propertyName:0,elapsedTime:0,pseudoElement:0}),p3=mt(d3),o3=we({},Yn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),l3=mt(o3),s3=[9,13,27,32],Uo=Jt&&"CompositionEvent"in window,q1=null;Jt&&"documentMode"in document&&(q1=document.documentMode);var u3=Jt&&"TextEvent"in window&&!q1,du=Jt&&(!Uo||q1&&8<q1&&11>=q1),hs=" ",vs=!1;function pu(e,t){switch(e){case"keyup":return s3.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function ou(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var xr=!1;function m3(e,t){switch(e){case"compositionend":return ou(t);case"keypress":return t.which!==32?null:(vs=!0,hs);case"textInput":return e=t.data,e===hs&&vs?null:e;default:return null}}function c3(e,t){if(xr)return e==="compositionend"||!Uo&&pu(e,t)?(e=nu(),Ji=jo=va=null,xr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return du&&t.locale!=="ko"?null:t.data;default:return null}}var f3={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function gs(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!f3[e.type]:t==="textarea"}function lu(e,t,a,r){F0(r),t=wn(t,"onChange"),0<t.length&&(a=new Fo("onChange","change",null,a,r),e.push({event:a,listeners:t}))}var M1=null,X1=null;function h3(e){wu(e,0)}function Qn(e){var t=Pr(e);if(L0(t))return e}function v3(e,t){if(e==="change")return t}var su=!1;if(Jt){var Od;if(Jt){var Bd="oninput"in document;if(!Bd){var ys=document.createElement("div");ys.setAttribute("oninput","return;"),Bd=typeof ys.oninput=="function"}Od=Bd}else Od=!1;su=Od&&(!document.documentMode||9<document.documentMode)}function bs(){M1&&(M1.detachEvent("onpropertychange",uu),X1=M1=null)}function uu(e){if(e.propertyName==="value"&&Qn(X1)){var t=[];lu(t,X1,e,Vo(e)),W0(h3,t)}}function g3(e,t,a){e==="focusin"?(bs(),M1=t,X1=a,M1.attachEvent("onpropertychange",uu)):e==="focusout"&&bs()}function y3(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Qn(X1)}function b3(e,t){if(e==="click")return Qn(t)}function w3(e,t){if(e==="input"||e==="change")return Qn(t)}function S3(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Pt=typeof Object.is=="function"?Object.is:S3;function J1(e,t){if(Pt(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var a=Object.keys(e),r=Object.keys(t);if(a.length!==r.length)return!1;for(r=0;r<a.length;r++){var i=a[r];if(!gp.call(t,i)||!Pt(e[i],t[i]))return!1}return!0}function ws(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Ss(e,t){var a=ws(e);e=0;for(var r;a;){if(a.nodeType===3){if(r=e+a.textContent.length,e<=t&&r>=t)return{node:a,offset:t-e};e=r}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ws(a)}}function mu(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?mu(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function cu(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var a=typeof t.contentWindow.location.href=="string"}catch{a=!1}if(a)e=t.contentWindow;else break;t=cn(e.document)}return t}function Ho(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function _3(e){var t=cu(),a=e.focusedElem,r=e.selectionRange;if(t!==a&&a&&a.ownerDocument&&mu(a.ownerDocument.documentElement,a)){if(r!==null&&Ho(a)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in a)a.selectionStart=t,a.selectionEnd=Math.min(e,a.value.length);else if(e=(t=a.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var i=a.textContent.length,n=Math.min(r.start,i);r=r.end===void 0?n:Math.min(r.end,i),!e.extend&&n>r&&(i=r,r=n,n=i),i=Ss(a,n);var d=Ss(a,r);i&&d&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==d.node||e.focusOffset!==d.offset)&&(t=t.createRange(),t.setStart(i.node,i.offset),e.removeAllRanges(),n>r?(e.addRange(t),e.extend(d.node,d.offset)):(t.setEnd(d.node,d.offset),e.addRange(t)))}}for(t=[],e=a;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof a.focus=="function"&&a.focus(),a=0;a<t.length;a++)e=t[a],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var T3=Jt&&"documentMode"in document&&11>=document.documentMode,Ar=null,Bp=null,j1=null,qp=!1;function _s(e,t,a){var r=a.window===a?a.document:a.nodeType===9?a:a.ownerDocument;qp||Ar==null||Ar!==cn(r)||(r=Ar,"selectionStart"in r&&Ho(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),j1&&J1(j1,r)||(j1=r,r=wn(Bp,"onSelect"),0<r.length&&(t=new Fo("onSelect","select",null,t,a),e.push({event:t,listeners:r}),t.target=Ar)))}function Vi(e,t){var a={};return a[e.toLowerCase()]=t.toLowerCase(),a["Webkit"+e]="webkit"+t,a["Moz"+e]="moz"+t,a}var Rr={animationend:Vi("Animation","AnimationEnd"),animationiteration:Vi("Animation","AnimationIteration"),animationstart:Vi("Animation","AnimationStart"),transitionend:Vi("Transition","TransitionEnd")},qd={},fu={};Jt&&(fu=document.createElement("div").style,"AnimationEvent"in window||(delete Rr.animationend.animation,delete Rr.animationiteration.animation,delete Rr.animationstart.animation),"TransitionEvent"in window||delete Rr.transitionend.transition);function Kn(e){if(qd[e])return qd[e];if(!Rr[e])return e;var t=Rr[e],a;for(a in t)if(t.hasOwnProperty(a)&&a in fu)return qd[e]=t[a];return e}var hu=Kn("animationend"),vu=Kn("animationiteration"),gu=Kn("animationstart"),yu=Kn("transitionend"),bu=new Map,Ts="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Ra(e,t){bu.set(e,t),sr(t,[e])}for(var Md=0;Md<Ts.length;Md++){var jd=Ts[Md],E3=jd.toLowerCase(),D3=jd[0].toUpperCase()+jd.slice(1);Ra(E3,"on"+D3)}Ra(hu,"onAnimationEnd");Ra(vu,"onAnimationIteration");Ra(gu,"onAnimationStart");Ra("dblclick","onDoubleClick");Ra("focusin","onFocus");Ra("focusout","onBlur");Ra(yu,"onTransitionEnd");$r("onMouseEnter",["mouseout","mouseover"]);$r("onMouseLeave",["mouseout","mouseover"]);$r("onPointerEnter",["pointerout","pointerover"]);$r("onPointerLeave",["pointerout","pointerover"]);sr("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));sr("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));sr("onBeforeInput",["compositionend","keypress","textInput","paste"]);sr("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));sr("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));sr("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var R1="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),C3=new Set("cancel close invalid load scroll toggle".split(" ").concat(R1));function Es(e,t,a){var r=e.type||"unknown-event";e.currentTarget=a,Ec(r,t,void 0,e),e.currentTarget=null}function wu(e,t){t=(t&4)!==0;for(var a=0;a<e.length;a++){var r=e[a],i=r.event;r=r.listeners;e:{var n=void 0;if(t)for(var d=r.length-1;0<=d;d--){var p=r[d],o=p.instance,l=p.currentTarget;if(p=p.listener,o!==n&&i.isPropagationStopped())break e;Es(i,p,l),n=o}else for(d=0;d<r.length;d++){if(p=r[d],o=p.instance,l=p.currentTarget,p=p.listener,o!==n&&i.isPropagationStopped())break e;Es(i,p,l),n=o}}}if(hn)throw e=kp,hn=!1,kp=null,e}function ce(e,t){var a=t[Up];a===void 0&&(a=t[Up]=new Set);var r=e+"__bubble";a.has(r)||(Su(t,e,2,!1),a.add(r))}function Fd(e,t,a){var r=0;t&&(r|=4),Su(a,e,r,t)}var Oi="_reactListening"+Math.random().toString(36).slice(2);function Z1(e){if(!e[Oi]){e[Oi]=!0,x0.forEach(function(a){a!=="selectionchange"&&(C3.has(a)||Fd(a,!1,e),Fd(a,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Oi]||(t[Oi]=!0,Fd("selectionchange",!1,t))}}function Su(e,t,a,r){switch(iu(t)){case 1:var i=Fc;break;case 4:i=Ic;break;default:i=Mo}a=i.bind(null,t,a,e),i=void 0,!Pp||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(i=!0),r?i!==void 0?e.addEventListener(t,a,{capture:!0,passive:i}):e.addEventListener(t,a,!0):i!==void 0?e.addEventListener(t,a,{passive:i}):e.addEventListener(t,a,!1)}function Id(e,t,a,r,i){var n=r;if(!(t&1)&&!(t&2)&&r!==null)e:for(;;){if(r===null)return;var d=r.tag;if(d===3||d===4){var p=r.stateNode.containerInfo;if(p===i||p.nodeType===8&&p.parentNode===i)break;if(d===4)for(d=r.return;d!==null;){var o=d.tag;if((o===3||o===4)&&(o=d.stateNode.containerInfo,o===i||o.nodeType===8&&o.parentNode===i))return;d=d.return}for(;p!==null;){if(d=Ya(p),d===null)return;if(o=d.tag,o===5||o===6){r=n=d;continue e}p=p.parentNode}}r=r.return}W0(function(){var l=n,s=Vo(a),u=[];e:{var m=bu.get(e);if(m!==void 0){var h=Fo,w=e;switch(e){case"keypress":if(Zi(a)===0)break e;case"keydown":case"keyup":h=a3;break;case"focusin":w="focus",h=Vd;break;case"focusout":w="blur",h=Vd;break;case"beforeblur":case"afterblur":h=Vd;break;case"click":if(a.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":h=ms;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":h=Wc;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":h=n3;break;case hu:case vu:case gu:h=Gc;break;case yu:h=p3;break;case"scroll":h=Uc;break;case"wheel":h=l3;break;case"copy":case"cut":case"paste":h=Qc;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":h=fs}var _=(t&4)!==0,N=!_&&e==="scroll",f=_?m!==null?m+"Capture":null:m;_=[];for(var c=l,v;c!==null;){v=c;var D=v.stateNode;if(v.tag===5&&D!==null&&(v=D,f!==null&&(D=G1(c,f),D!=null&&_.push(ei(c,D,v)))),N)break;c=c.return}0<_.length&&(m=new h(m,w,null,a,s),u.push({event:m,listeners:_}))}}if(!(t&7)){e:{if(m=e==="mouseover"||e==="pointerover",h=e==="mouseout"||e==="pointerout",m&&a!==Ap&&(w=a.relatedTarget||a.fromElement)&&(Ya(w)||w[Zt]))break e;if((h||m)&&(m=s.window===s?s:(m=s.ownerDocument)?m.defaultView||m.parentWindow:window,h?(w=a.relatedTarget||a.toElement,h=l,w=w?Ya(w):null,w!==null&&(N=ur(w),w!==N||w.tag!==5&&w.tag!==6)&&(w=null)):(h=null,w=l),h!==w)){if(_=ms,D="onMouseLeave",f="onMouseEnter",c="mouse",(e==="pointerout"||e==="pointerover")&&(_=fs,D="onPointerLeave",f="onPointerEnter",c="pointer"),N=h==null?m:Pr(h),v=w==null?m:Pr(w),m=new _(D,c+"leave",h,a,s),m.target=N,m.relatedTarget=v,D=null,Ya(s)===l&&(_=new _(f,c+"enter",w,a,s),_.target=v,_.relatedTarget=N,D=_),N=D,h&&w)t:{for(_=h,f=w,c=0,v=_;v;v=yr(v))c++;for(v=0,D=f;D;D=yr(D))v++;for(;0<c-v;)_=yr(_),c--;for(;0<v-c;)f=yr(f),v--;for(;c--;){if(_===f||f!==null&&_===f.alternate)break t;_=yr(_),f=yr(f)}_=null}else _=null;h!==null&&Ds(u,m,h,_,!1),w!==null&&N!==null&&Ds(u,N,w,_,!0)}}e:{if(m=l?Pr(l):window,h=m.nodeName&&m.nodeName.toLowerCase(),h==="select"||h==="input"&&m.type==="file")var P=v3;else if(gs(m))if(su)P=w3;else{P=y3;var S=g3}else(h=m.nodeName)&&h.toLowerCase()==="input"&&(m.type==="checkbox"||m.type==="radio")&&(P=b3);if(P&&(P=P(e,l))){lu(u,P,a,s);break e}S&&S(e,m,l),e==="focusout"&&(S=m._wrapperState)&&S.controlled&&m.type==="number"&&Ep(m,"number",m.value)}switch(S=l?Pr(l):window,e){case"focusin":(gs(S)||S.contentEditable==="true")&&(Ar=S,Bp=l,j1=null);break;case"focusout":j1=Bp=Ar=null;break;case"mousedown":qp=!0;break;case"contextmenu":case"mouseup":case"dragend":qp=!1,_s(u,a,s);break;case"selectionchange":if(T3)break;case"keydown":case"keyup":_s(u,a,s)}var L;if(Uo)e:{switch(e){case"compositionstart":var x="onCompositionStart";break e;case"compositionend":x="onCompositionEnd";break e;case"compositionupdate":x="onCompositionUpdate";break e}x=void 0}else xr?pu(e,a)&&(x="onCompositionEnd"):e==="keydown"&&a.keyCode===229&&(x="onCompositionStart");x&&(du&&a.locale!=="ko"&&(xr||x!=="onCompositionStart"?x==="onCompositionEnd"&&xr&&(L=nu()):(va=s,jo="value"in va?va.value:va.textContent,xr=!0)),S=wn(l,x),0<S.length&&(x=new cs(x,e,null,a,s),u.push({event:x,listeners:S}),L?x.data=L:(L=ou(a),L!==null&&(x.data=L)))),(L=u3?m3(e,a):c3(e,a))&&(l=wn(l,"onBeforeInput"),0<l.length&&(s=new cs("onBeforeInput","beforeinput",null,a,s),u.push({event:s,listeners:l}),s.data=L))}wu(u,t)})}function ei(e,t,a){return{instance:e,listener:t,currentTarget:a}}function wn(e,t){for(var a=t+"Capture",r=[];e!==null;){var i=e,n=i.stateNode;i.tag===5&&n!==null&&(i=n,n=G1(e,a),n!=null&&r.unshift(ei(e,n,i)),n=G1(e,t),n!=null&&r.push(ei(e,n,i))),e=e.return}return r}function yr(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Ds(e,t,a,r,i){for(var n=t._reactName,d=[];a!==null&&a!==r;){var p=a,o=p.alternate,l=p.stateNode;if(o!==null&&o===r)break;p.tag===5&&l!==null&&(p=l,i?(o=G1(a,n),o!=null&&d.unshift(ei(a,o,p))):i||(o=G1(a,n),o!=null&&d.push(ei(a,o,p)))),a=a.return}d.length!==0&&e.push({event:t,listeners:d})}var N3=/\r\n?/g,x3=/\u0000|\uFFFD/g;function Cs(e){return(typeof e=="string"?e:""+e).replace(N3,`
`).replace(x3,"")}function Bi(e,t,a){if(t=Cs(t),Cs(e)!==t&&a)throw Error(k(425))}function Sn(){}var Mp=null,jp=null;function Fp(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var Ip=typeof setTimeout=="function"?setTimeout:void 0,A3=typeof clearTimeout=="function"?clearTimeout:void 0,Ns=typeof Promise=="function"?Promise:void 0,R3=typeof queueMicrotask=="function"?queueMicrotask:typeof Ns<"u"?function(e){return Ns.resolve(null).then(e).catch(P3)}:Ip;function P3(e){setTimeout(function(){throw e})}function Ud(e,t){var a=t,r=0;do{var i=a.nextSibling;if(e.removeChild(a),i&&i.nodeType===8)if(a=i.data,a==="/$"){if(r===0){e.removeChild(i),K1(t);return}r--}else a!=="$"&&a!=="$?"&&a!=="$!"||r++;a=i}while(a);K1(t)}function Ta(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function xs(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var a=e.data;if(a==="$"||a==="$!"||a==="$?"){if(t===0)return e;t--}else a==="/$"&&t++}e=e.previousSibling}return null}var r1=Math.random().toString(36).slice(2),qt="__reactFiber$"+r1,ti="__reactProps$"+r1,Zt="__reactContainer$"+r1,Up="__reactEvents$"+r1,k3="__reactListeners$"+r1,L3="__reactHandles$"+r1;function Ya(e){var t=e[qt];if(t)return t;for(var a=e.parentNode;a;){if(t=a[Zt]||a[qt]){if(a=t.alternate,t.child!==null||a!==null&&a.child!==null)for(e=xs(e);e!==null;){if(a=e[qt])return a;e=xs(e)}return t}e=a,a=e.parentNode}return null}function fi(e){return e=e[qt]||e[Zt],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Pr(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(k(33))}function Xn(e){return e[ti]||null}var Hp=[],kr=-1;function Pa(e){return{current:e}}function fe(e){0>kr||(e.current=Hp[kr],Hp[kr]=null,kr--)}function ue(e,t){kr++,Hp[kr]=e.current,e.current=t}var Aa={},He=Pa(Aa),at=Pa(!1),ar=Aa;function Gr(e,t){var a=e.type.contextTypes;if(!a)return Aa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i={},n;for(n in a)i[n]=t[n];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function rt(e){return e=e.childContextTypes,e!=null}function _n(){fe(at),fe(He)}function As(e,t,a){if(He.current!==Aa)throw Error(k(168));ue(He,t),ue(at,a)}function _u(e,t,a){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return a;r=r.getChildContext();for(var i in r)if(!(i in t))throw Error(k(108,gc(e)||"Unknown",i));return we({},a,r)}function Tn(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Aa,ar=He.current,ue(He,e),ue(at,at.current),!0}function Rs(e,t,a){var r=e.stateNode;if(!r)throw Error(k(169));a?(e=_u(e,t,ar),r.__reactInternalMemoizedMergedChildContext=e,fe(at),fe(He),ue(He,e)):fe(at),ue(at,a)}var $t=null,Jn=!1,Hd=!1;function Tu(e){$t===null?$t=[e]:$t.push(e)}function V3(e){Jn=!0,Tu(e)}function ka(){if(!Hd&&$t!==null){Hd=!0;var e=0,t=pe;try{var a=$t;for(pe=1;e<a.length;e++){var r=a[e];do r=r(!0);while(r!==null)}$t=null,Jn=!1}catch(i){throw $t!==null&&($t=$t.slice(e+1)),Y0(Oo,ka),i}finally{pe=t,Hd=!1}}return null}var Lr=[],Vr=0,En=null,Dn=0,ct=[],ft=0,rr=null,Yt=1,Qt="";function Ia(e,t){Lr[Vr++]=Dn,Lr[Vr++]=En,En=e,Dn=t}function Eu(e,t,a){ct[ft++]=Yt,ct[ft++]=Qt,ct[ft++]=rr,rr=e;var r=Yt;e=Qt;var i=32-At(r)-1;r&=~(1<<i),a+=1;var n=32-At(t)+i;if(30<n){var d=i-i%5;n=(r&(1<<d)-1).toString(32),r>>=d,i-=d,Yt=1<<32-At(t)+i|a<<i|r,Qt=n+e}else Yt=1<<n|a<<i|r,Qt=e}function Wo(e){e.return!==null&&(Ia(e,1),Eu(e,1,0))}function zo(e){for(;e===En;)En=Lr[--Vr],Lr[Vr]=null,Dn=Lr[--Vr],Lr[Vr]=null;for(;e===rr;)rr=ct[--ft],ct[ft]=null,Qt=ct[--ft],ct[ft]=null,Yt=ct[--ft],ct[ft]=null}var lt=null,ot=null,ve=!1,Nt=null;function Du(e,t){var a=vt(5,null,null,0);a.elementType="DELETED",a.stateNode=t,a.return=e,t=e.deletions,t===null?(e.deletions=[a],e.flags|=16):t.push(a)}function Ps(e,t){switch(e.tag){case 5:var a=e.type;return t=t.nodeType!==1||a.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,lt=e,ot=Ta(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,lt=e,ot=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(a=rr!==null?{id:Yt,overflow:Qt}:null,e.memoizedState={dehydrated:t,treeContext:a,retryLane:1073741824},a=vt(18,null,null,0),a.stateNode=t,a.return=e,e.child=a,lt=e,ot=null,!0):!1;default:return!1}}function Wp(e){return(e.mode&1)!==0&&(e.flags&128)===0}function zp(e){if(ve){var t=ot;if(t){var a=t;if(!Ps(e,t)){if(Wp(e))throw Error(k(418));t=Ta(a.nextSibling);var r=lt;t&&Ps(e,t)?Du(r,a):(e.flags=e.flags&-4097|2,ve=!1,lt=e)}}else{if(Wp(e))throw Error(k(418));e.flags=e.flags&-4097|2,ve=!1,lt=e}}}function ks(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;lt=e}function qi(e){if(e!==lt)return!1;if(!ve)return ks(e),ve=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!Fp(e.type,e.memoizedProps)),t&&(t=ot)){if(Wp(e))throw Cu(),Error(k(418));for(;t;)Du(e,t),t=Ta(t.nextSibling)}if(ks(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(k(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var a=e.data;if(a==="/$"){if(t===0){ot=Ta(e.nextSibling);break e}t--}else a!=="$"&&a!=="$!"&&a!=="$?"||t++}e=e.nextSibling}ot=null}}else ot=lt?Ta(e.stateNode.nextSibling):null;return!0}function Cu(){for(var e=ot;e;)e=Ta(e.nextSibling)}function Yr(){ot=lt=null,ve=!1}function $o(e){Nt===null?Nt=[e]:Nt.push(e)}var O3=ra.ReactCurrentBatchConfig;function y1(e,t,a){if(e=a.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(a._owner){if(a=a._owner,a){if(a.tag!==1)throw Error(k(309));var r=a.stateNode}if(!r)throw Error(k(147,e));var i=r,n=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===n?t.ref:(t=function(d){var p=i.refs;d===null?delete p[n]:p[n]=d},t._stringRef=n,t)}if(typeof e!="string")throw Error(k(284));if(!a._owner)throw Error(k(290,e))}return e}function Mi(e,t){throw e=Object.prototype.toString.call(t),Error(k(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ls(e){var t=e._init;return t(e._payload)}function Nu(e){function t(f,c){if(e){var v=f.deletions;v===null?(f.deletions=[c],f.flags|=16):v.push(c)}}function a(f,c){if(!e)return null;for(;c!==null;)t(f,c),c=c.sibling;return null}function r(f,c){for(f=new Map;c!==null;)c.key!==null?f.set(c.key,c):f.set(c.index,c),c=c.sibling;return f}function i(f,c){return f=Na(f,c),f.index=0,f.sibling=null,f}function n(f,c,v){return f.index=v,e?(v=f.alternate,v!==null?(v=v.index,v<c?(f.flags|=2,c):v):(f.flags|=2,c)):(f.flags|=1048576,c)}function d(f){return e&&f.alternate===null&&(f.flags|=2),f}function p(f,c,v,D){return c===null||c.tag!==6?(c=Kd(v,f.mode,D),c.return=f,c):(c=i(c,v),c.return=f,c)}function o(f,c,v,D){var P=v.type;return P===Nr?s(f,c,v.props.children,D,v.key):c!==null&&(c.elementType===P||typeof P=="object"&&P!==null&&P.$$typeof===ma&&Ls(P)===c.type)?(D=i(c,v.props),D.ref=y1(f,c,v),D.return=f,D):(D=pn(v.type,v.key,v.props,null,f.mode,D),D.ref=y1(f,c,v),D.return=f,D)}function l(f,c,v,D){return c===null||c.tag!==4||c.stateNode.containerInfo!==v.containerInfo||c.stateNode.implementation!==v.implementation?(c=Xd(v,f.mode,D),c.return=f,c):(c=i(c,v.children||[]),c.return=f,c)}function s(f,c,v,D,P){return c===null||c.tag!==7?(c=tr(v,f.mode,D,P),c.return=f,c):(c=i(c,v),c.return=f,c)}function u(f,c,v){if(typeof c=="string"&&c!==""||typeof c=="number")return c=Kd(""+c,f.mode,v),c.return=f,c;if(typeof c=="object"&&c!==null){switch(c.$$typeof){case Ni:return v=pn(c.type,c.key,c.props,null,f.mode,v),v.ref=y1(f,null,c),v.return=f,v;case Cr:return c=Xd(c,f.mode,v),c.return=f,c;case ma:var D=c._init;return u(f,D(c._payload),v)}if(x1(c)||c1(c))return c=tr(c,f.mode,v,null),c.return=f,c;Mi(f,c)}return null}function m(f,c,v,D){var P=c!==null?c.key:null;if(typeof v=="string"&&v!==""||typeof v=="number")return P!==null?null:p(f,c,""+v,D);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case Ni:return v.key===P?o(f,c,v,D):null;case Cr:return v.key===P?l(f,c,v,D):null;case ma:return P=v._init,m(f,c,P(v._payload),D)}if(x1(v)||c1(v))return P!==null?null:s(f,c,v,D,null);Mi(f,v)}return null}function h(f,c,v,D,P){if(typeof D=="string"&&D!==""||typeof D=="number")return f=f.get(v)||null,p(c,f,""+D,P);if(typeof D=="object"&&D!==null){switch(D.$$typeof){case Ni:return f=f.get(D.key===null?v:D.key)||null,o(c,f,D,P);case Cr:return f=f.get(D.key===null?v:D.key)||null,l(c,f,D,P);case ma:var S=D._init;return h(f,c,v,S(D._payload),P)}if(x1(D)||c1(D))return f=f.get(v)||null,s(c,f,D,P,null);Mi(c,D)}return null}function w(f,c,v,D){for(var P=null,S=null,L=c,x=c=0,R=null;L!==null&&x<v.length;x++){L.index>x?(R=L,L=null):R=L.sibling;var C=m(f,L,v[x],D);if(C===null){L===null&&(L=R);break}e&&L&&C.alternate===null&&t(f,L),c=n(C,c,x),S===null?P=C:S.sibling=C,S=C,L=R}if(x===v.length)return a(f,L),ve&&Ia(f,x),P;if(L===null){for(;x<v.length;x++)L=u(f,v[x],D),L!==null&&(c=n(L,c,x),S===null?P=L:S.sibling=L,S=L);return ve&&Ia(f,x),P}for(L=r(f,L);x<v.length;x++)R=h(L,f,x,v[x],D),R!==null&&(e&&R.alternate!==null&&L.delete(R.key===null?x:R.key),c=n(R,c,x),S===null?P=R:S.sibling=R,S=R);return e&&L.forEach(function(V){return t(f,V)}),ve&&Ia(f,x),P}function _(f,c,v,D){var P=c1(v);if(typeof P!="function")throw Error(k(150));if(v=P.call(v),v==null)throw Error(k(151));for(var S=P=null,L=c,x=c=0,R=null,C=v.next();L!==null&&!C.done;x++,C=v.next()){L.index>x?(R=L,L=null):R=L.sibling;var V=m(f,L,C.value,D);if(V===null){L===null&&(L=R);break}e&&L&&V.alternate===null&&t(f,L),c=n(V,c,x),S===null?P=V:S.sibling=V,S=V,L=R}if(C.done)return a(f,L),ve&&Ia(f,x),P;if(L===null){for(;!C.done;x++,C=v.next())C=u(f,C.value,D),C!==null&&(c=n(C,c,x),S===null?P=C:S.sibling=C,S=C);return ve&&Ia(f,x),P}for(L=r(f,L);!C.done;x++,C=v.next())C=h(L,f,x,C.value,D),C!==null&&(e&&C.alternate!==null&&L.delete(C.key===null?x:C.key),c=n(C,c,x),S===null?P=C:S.sibling=C,S=C);return e&&L.forEach(function(W){return t(f,W)}),ve&&Ia(f,x),P}function N(f,c,v,D){if(typeof v=="object"&&v!==null&&v.type===Nr&&v.key===null&&(v=v.props.children),typeof v=="object"&&v!==null){switch(v.$$typeof){case Ni:e:{for(var P=v.key,S=c;S!==null;){if(S.key===P){if(P=v.type,P===Nr){if(S.tag===7){a(f,S.sibling),c=i(S,v.props.children),c.return=f,f=c;break e}}else if(S.elementType===P||typeof P=="object"&&P!==null&&P.$$typeof===ma&&Ls(P)===S.type){a(f,S.sibling),c=i(S,v.props),c.ref=y1(f,S,v),c.return=f,f=c;break e}a(f,S);break}else t(f,S);S=S.sibling}v.type===Nr?(c=tr(v.props.children,f.mode,D,v.key),c.return=f,f=c):(D=pn(v.type,v.key,v.props,null,f.mode,D),D.ref=y1(f,c,v),D.return=f,f=D)}return d(f);case Cr:e:{for(S=v.key;c!==null;){if(c.key===S)if(c.tag===4&&c.stateNode.containerInfo===v.containerInfo&&c.stateNode.implementation===v.implementation){a(f,c.sibling),c=i(c,v.children||[]),c.return=f,f=c;break e}else{a(f,c);break}else t(f,c);c=c.sibling}c=Xd(v,f.mode,D),c.return=f,f=c}return d(f);case ma:return S=v._init,N(f,c,S(v._payload),D)}if(x1(v))return w(f,c,v,D);if(c1(v))return _(f,c,v,D);Mi(f,v)}return typeof v=="string"&&v!==""||typeof v=="number"?(v=""+v,c!==null&&c.tag===6?(a(f,c.sibling),c=i(c,v),c.return=f,f=c):(a(f,c),c=Kd(v,f.mode,D),c.return=f,f=c),d(f)):a(f,c)}return N}var Qr=Nu(!0),xu=Nu(!1),Cn=Pa(null),Nn=null,Or=null,Go=null;function Yo(){Go=Or=Nn=null}function Qo(e){var t=Cn.current;fe(Cn),e._currentValue=t}function $p(e,t,a){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===a)break;e=e.return}}function Hr(e,t){Nn=e,Go=Or=null,e=e.dependencies,e!==null&&e.firstContext!==null&&(e.lanes&t&&(tt=!0),e.firstContext=null)}function yt(e){var t=e._currentValue;if(Go!==e)if(e={context:e,memoizedValue:t,next:null},Or===null){if(Nn===null)throw Error(k(308));Or=e,Nn.dependencies={lanes:0,firstContext:e}}else Or=Or.next=e;return t}var Qa=null;function Ko(e){Qa===null?Qa=[e]:Qa.push(e)}function Au(e,t,a,r){var i=t.interleaved;return i===null?(a.next=a,Ko(t)):(a.next=i.next,i.next=a),t.interleaved=a,ea(e,r)}function ea(e,t){e.lanes|=t;var a=e.alternate;for(a!==null&&(a.lanes|=t),a=e,e=e.return;e!==null;)e.childLanes|=t,a=e.alternate,a!==null&&(a.childLanes|=t),a=e,e=e.return;return a.tag===3?a.stateNode:null}var ca=!1;function Xo(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ru(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Kt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Ea(e,t,a){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,ee&2){var i=r.pending;return i===null?t.next=t:(t.next=i.next,i.next=t),r.pending=t,ea(e,a)}return i=r.interleaved,i===null?(t.next=t,Ko(r)):(t.next=i.next,i.next=t),r.interleaved=t,ea(e,a)}function en(e,t,a){if(t=t.updateQueue,t!==null&&(t=t.shared,(a&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,a|=r,t.lanes=a,Bo(e,a)}}function Vs(e,t){var a=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,a===r)){var i=null,n=null;if(a=a.firstBaseUpdate,a!==null){do{var d={eventTime:a.eventTime,lane:a.lane,tag:a.tag,payload:a.payload,callback:a.callback,next:null};n===null?i=n=d:n=n.next=d,a=a.next}while(a!==null);n===null?i=n=t:n=n.next=t}else i=n=t;a={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:n,shared:r.shared,effects:r.effects},e.updateQueue=a;return}e=a.lastBaseUpdate,e===null?a.firstBaseUpdate=t:e.next=t,a.lastBaseUpdate=t}function xn(e,t,a,r){var i=e.updateQueue;ca=!1;var n=i.firstBaseUpdate,d=i.lastBaseUpdate,p=i.shared.pending;if(p!==null){i.shared.pending=null;var o=p,l=o.next;o.next=null,d===null?n=l:d.next=l,d=o;var s=e.alternate;s!==null&&(s=s.updateQueue,p=s.lastBaseUpdate,p!==d&&(p===null?s.firstBaseUpdate=l:p.next=l,s.lastBaseUpdate=o))}if(n!==null){var u=i.baseState;d=0,s=l=o=null,p=n;do{var m=p.lane,h=p.eventTime;if((r&m)===m){s!==null&&(s=s.next={eventTime:h,lane:0,tag:p.tag,payload:p.payload,callback:p.callback,next:null});e:{var w=e,_=p;switch(m=t,h=a,_.tag){case 1:if(w=_.payload,typeof w=="function"){u=w.call(h,u,m);break e}u=w;break e;case 3:w.flags=w.flags&-65537|128;case 0:if(w=_.payload,m=typeof w=="function"?w.call(h,u,m):w,m==null)break e;u=we({},u,m);break e;case 2:ca=!0}}p.callback!==null&&p.lane!==0&&(e.flags|=64,m=i.effects,m===null?i.effects=[p]:m.push(p))}else h={eventTime:h,lane:m,tag:p.tag,payload:p.payload,callback:p.callback,next:null},s===null?(l=s=h,o=u):s=s.next=h,d|=m;if(p=p.next,p===null){if(p=i.shared.pending,p===null)break;m=p,p=m.next,m.next=null,i.lastBaseUpdate=m,i.shared.pending=null}}while(!0);if(s===null&&(o=u),i.baseState=o,i.firstBaseUpdate=l,i.lastBaseUpdate=s,t=i.shared.interleaved,t!==null){i=t;do d|=i.lane,i=i.next;while(i!==t)}else n===null&&(i.shared.lanes=0);nr|=d,e.lanes=d,e.memoizedState=u}}function Os(e,t,a){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(i!==null){if(r.callback=null,r=a,typeof i!="function")throw Error(k(191,i));i.call(r)}}}var hi={},jt=Pa(hi),ai=Pa(hi),ri=Pa(hi);function Ka(e){if(e===hi)throw Error(k(174));return e}function Jo(e,t){switch(ue(ri,t),ue(ai,e),ue(jt,hi),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Cp(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=Cp(t,e)}fe(jt),ue(jt,t)}function Kr(){fe(jt),fe(ai),fe(ri)}function Pu(e){Ka(ri.current);var t=Ka(jt.current),a=Cp(t,e.type);t!==a&&(ue(ai,e),ue(jt,a))}function Zo(e){ai.current===e&&(fe(jt),fe(ai))}var ye=Pa(0);function An(e){for(var t=e;t!==null;){if(t.tag===13){var a=t.memoizedState;if(a!==null&&(a=a.dehydrated,a===null||a.data==="$?"||a.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if(t.flags&128)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Wd=[];function el(){for(var e=0;e<Wd.length;e++)Wd[e]._workInProgressVersionPrimary=null;Wd.length=0}var tn=ra.ReactCurrentDispatcher,zd=ra.ReactCurrentBatchConfig,ir=0,be=null,xe=null,Pe=null,Rn=!1,F1=!1,ii=0,B3=0;function Fe(){throw Error(k(321))}function tl(e,t){if(t===null)return!1;for(var a=0;a<t.length&&a<e.length;a++)if(!Pt(e[a],t[a]))return!1;return!0}function al(e,t,a,r,i,n){if(ir=n,be=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,tn.current=e===null||e.memoizedState===null?F3:I3,e=a(r,i),F1){n=0;do{if(F1=!1,ii=0,25<=n)throw Error(k(301));n+=1,Pe=xe=null,t.updateQueue=null,tn.current=U3,e=a(r,i)}while(F1)}if(tn.current=Pn,t=xe!==null&&xe.next!==null,ir=0,Pe=xe=be=null,Rn=!1,t)throw Error(k(300));return e}function rl(){var e=ii!==0;return ii=0,e}function Ot(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Pe===null?be.memoizedState=Pe=e:Pe=Pe.next=e,Pe}function bt(){if(xe===null){var e=be.alternate;e=e!==null?e.memoizedState:null}else e=xe.next;var t=Pe===null?be.memoizedState:Pe.next;if(t!==null)Pe=t,xe=e;else{if(e===null)throw Error(k(310));xe=e,e={memoizedState:xe.memoizedState,baseState:xe.baseState,baseQueue:xe.baseQueue,queue:xe.queue,next:null},Pe===null?be.memoizedState=Pe=e:Pe=Pe.next=e}return Pe}function ni(e,t){return typeof t=="function"?t(e):t}function $d(e){var t=bt(),a=t.queue;if(a===null)throw Error(k(311));a.lastRenderedReducer=e;var r=xe,i=r.baseQueue,n=a.pending;if(n!==null){if(i!==null){var d=i.next;i.next=n.next,n.next=d}r.baseQueue=i=n,a.pending=null}if(i!==null){n=i.next,r=r.baseState;var p=d=null,o=null,l=n;do{var s=l.lane;if((ir&s)===s)o!==null&&(o=o.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:e(r,l.action);else{var u={lane:s,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};o===null?(p=o=u,d=r):o=o.next=u,be.lanes|=s,nr|=s}l=l.next}while(l!==null&&l!==n);o===null?d=r:o.next=p,Pt(r,t.memoizedState)||(tt=!0),t.memoizedState=r,t.baseState=d,t.baseQueue=o,a.lastRenderedState=r}if(e=a.interleaved,e!==null){i=e;do n=i.lane,be.lanes|=n,nr|=n,i=i.next;while(i!==e)}else i===null&&(a.lanes=0);return[t.memoizedState,a.dispatch]}function Gd(e){var t=bt(),a=t.queue;if(a===null)throw Error(k(311));a.lastRenderedReducer=e;var r=a.dispatch,i=a.pending,n=t.memoizedState;if(i!==null){a.pending=null;var d=i=i.next;do n=e(n,d.action),d=d.next;while(d!==i);Pt(n,t.memoizedState)||(tt=!0),t.memoizedState=n,t.baseQueue===null&&(t.baseState=n),a.lastRenderedState=n}return[n,r]}function ku(){}function Lu(e,t){var a=be,r=bt(),i=t(),n=!Pt(r.memoizedState,i);if(n&&(r.memoizedState=i,tt=!0),r=r.queue,il(Bu.bind(null,a,r,e),[e]),r.getSnapshot!==t||n||Pe!==null&&Pe.memoizedState.tag&1){if(a.flags|=2048,di(9,Ou.bind(null,a,r,i,t),void 0,null),ke===null)throw Error(k(349));ir&30||Vu(a,t,i)}return i}function Vu(e,t,a){e.flags|=16384,e={getSnapshot:t,value:a},t=be.updateQueue,t===null?(t={lastEffect:null,stores:null},be.updateQueue=t,t.stores=[e]):(a=t.stores,a===null?t.stores=[e]:a.push(e))}function Ou(e,t,a,r){t.value=a,t.getSnapshot=r,qu(t)&&Mu(e)}function Bu(e,t,a){return a(function(){qu(t)&&Mu(e)})}function qu(e){var t=e.getSnapshot;e=e.value;try{var a=t();return!Pt(e,a)}catch{return!0}}function Mu(e){var t=ea(e,1);t!==null&&Rt(t,e,1,-1)}function Bs(e){var t=Ot();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ni,lastRenderedState:e},t.queue=e,e=e.dispatch=j3.bind(null,be,e),[t.memoizedState,e]}function di(e,t,a,r){return e={tag:e,create:t,destroy:a,deps:r,next:null},t=be.updateQueue,t===null?(t={lastEffect:null,stores:null},be.updateQueue=t,t.lastEffect=e.next=e):(a=t.lastEffect,a===null?t.lastEffect=e.next=e:(r=a.next,a.next=e,e.next=r,t.lastEffect=e)),e}function ju(){return bt().memoizedState}function an(e,t,a,r){var i=Ot();be.flags|=e,i.memoizedState=di(1|t,a,void 0,r===void 0?null:r)}function Zn(e,t,a,r){var i=bt();r=r===void 0?null:r;var n=void 0;if(xe!==null){var d=xe.memoizedState;if(n=d.destroy,r!==null&&tl(r,d.deps)){i.memoizedState=di(t,a,n,r);return}}be.flags|=e,i.memoizedState=di(1|t,a,n,r)}function qs(e,t){return an(8390656,8,e,t)}function il(e,t){return Zn(2048,8,e,t)}function Fu(e,t){return Zn(4,2,e,t)}function Iu(e,t){return Zn(4,4,e,t)}function Uu(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Hu(e,t,a){return a=a!=null?a.concat([e]):null,Zn(4,4,Uu.bind(null,t,e),a)}function nl(){}function Wu(e,t){var a=bt();t=t===void 0?null:t;var r=a.memoizedState;return r!==null&&t!==null&&tl(t,r[1])?r[0]:(a.memoizedState=[e,t],e)}function zu(e,t){var a=bt();t=t===void 0?null:t;var r=a.memoizedState;return r!==null&&t!==null&&tl(t,r[1])?r[0]:(e=e(),a.memoizedState=[e,t],e)}function $u(e,t,a){return ir&21?(Pt(a,t)||(a=X0(),be.lanes|=a,nr|=a,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,tt=!0),e.memoizedState=a)}function q3(e,t){var a=pe;pe=a!==0&&4>a?a:4,e(!0);var r=zd.transition;zd.transition={};try{e(!1),t()}finally{pe=a,zd.transition=r}}function Gu(){return bt().memoizedState}function M3(e,t,a){var r=Ca(e);if(a={lane:r,action:a,hasEagerState:!1,eagerState:null,next:null},Yu(e))Qu(t,a);else if(a=Au(e,t,a,r),a!==null){var i=Ge();Rt(a,e,r,i),Ku(a,t,r)}}function j3(e,t,a){var r=Ca(e),i={lane:r,action:a,hasEagerState:!1,eagerState:null,next:null};if(Yu(e))Qu(t,i);else{var n=e.alternate;if(e.lanes===0&&(n===null||n.lanes===0)&&(n=t.lastRenderedReducer,n!==null))try{var d=t.lastRenderedState,p=n(d,a);if(i.hasEagerState=!0,i.eagerState=p,Pt(p,d)){var o=t.interleaved;o===null?(i.next=i,Ko(t)):(i.next=o.next,o.next=i),t.interleaved=i;return}}catch{}finally{}a=Au(e,t,i,r),a!==null&&(i=Ge(),Rt(a,e,r,i),Ku(a,t,r))}}function Yu(e){var t=e.alternate;return e===be||t!==null&&t===be}function Qu(e,t){F1=Rn=!0;var a=e.pending;a===null?t.next=t:(t.next=a.next,a.next=t),e.pending=t}function Ku(e,t,a){if(a&4194240){var r=t.lanes;r&=e.pendingLanes,a|=r,t.lanes=a,Bo(e,a)}}var Pn={readContext:yt,useCallback:Fe,useContext:Fe,useEffect:Fe,useImperativeHandle:Fe,useInsertionEffect:Fe,useLayoutEffect:Fe,useMemo:Fe,useReducer:Fe,useRef:Fe,useState:Fe,useDebugValue:Fe,useDeferredValue:Fe,useTransition:Fe,useMutableSource:Fe,useSyncExternalStore:Fe,useId:Fe,unstable_isNewReconciler:!1},F3={readContext:yt,useCallback:function(e,t){return Ot().memoizedState=[e,t===void 0?null:t],e},useContext:yt,useEffect:qs,useImperativeHandle:function(e,t,a){return a=a!=null?a.concat([e]):null,an(4194308,4,Uu.bind(null,t,e),a)},useLayoutEffect:function(e,t){return an(4194308,4,e,t)},useInsertionEffect:function(e,t){return an(4,2,e,t)},useMemo:function(e,t){var a=Ot();return t=t===void 0?null:t,e=e(),a.memoizedState=[e,t],e},useReducer:function(e,t,a){var r=Ot();return t=a!==void 0?a(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=M3.bind(null,be,e),[r.memoizedState,e]},useRef:function(e){var t=Ot();return e={current:e},t.memoizedState=e},useState:Bs,useDebugValue:nl,useDeferredValue:function(e){return Ot().memoizedState=e},useTransition:function(){var e=Bs(!1),t=e[0];return e=q3.bind(null,e[1]),Ot().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,a){var r=be,i=Ot();if(ve){if(a===void 0)throw Error(k(407));a=a()}else{if(a=t(),ke===null)throw Error(k(349));ir&30||Vu(r,t,a)}i.memoizedState=a;var n={value:a,getSnapshot:t};return i.queue=n,qs(Bu.bind(null,r,n,e),[e]),r.flags|=2048,di(9,Ou.bind(null,r,n,a,t),void 0,null),a},useId:function(){var e=Ot(),t=ke.identifierPrefix;if(ve){var a=Qt,r=Yt;a=(r&~(1<<32-At(r)-1)).toString(32)+a,t=":"+t+"R"+a,a=ii++,0<a&&(t+="H"+a.toString(32)),t+=":"}else a=B3++,t=":"+t+"r"+a.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},I3={readContext:yt,useCallback:Wu,useContext:yt,useEffect:il,useImperativeHandle:Hu,useInsertionEffect:Fu,useLayoutEffect:Iu,useMemo:zu,useReducer:$d,useRef:ju,useState:function(){return $d(ni)},useDebugValue:nl,useDeferredValue:function(e){var t=bt();return $u(t,xe.memoizedState,e)},useTransition:function(){var e=$d(ni)[0],t=bt().memoizedState;return[e,t]},useMutableSource:ku,useSyncExternalStore:Lu,useId:Gu,unstable_isNewReconciler:!1},U3={readContext:yt,useCallback:Wu,useContext:yt,useEffect:il,useImperativeHandle:Hu,useInsertionEffect:Fu,useLayoutEffect:Iu,useMemo:zu,useReducer:Gd,useRef:ju,useState:function(){return Gd(ni)},useDebugValue:nl,useDeferredValue:function(e){var t=bt();return xe===null?t.memoizedState=e:$u(t,xe.memoizedState,e)},useTransition:function(){var e=Gd(ni)[0],t=bt().memoizedState;return[e,t]},useMutableSource:ku,useSyncExternalStore:Lu,useId:Gu,unstable_isNewReconciler:!1};function Et(e,t){if(e&&e.defaultProps){t=we({},t),e=e.defaultProps;for(var a in e)t[a]===void 0&&(t[a]=e[a]);return t}return t}function Gp(e,t,a,r){t=e.memoizedState,a=a(r,t),a=a==null?t:we({},t,a),e.memoizedState=a,e.lanes===0&&(e.updateQueue.baseState=a)}var ed={isMounted:function(e){return(e=e._reactInternals)?ur(e)===e:!1},enqueueSetState:function(e,t,a){e=e._reactInternals;var r=Ge(),i=Ca(e),n=Kt(r,i);n.payload=t,a!=null&&(n.callback=a),t=Ea(e,n,i),t!==null&&(Rt(t,e,i,r),en(t,e,i))},enqueueReplaceState:function(e,t,a){e=e._reactInternals;var r=Ge(),i=Ca(e),n=Kt(r,i);n.tag=1,n.payload=t,a!=null&&(n.callback=a),t=Ea(e,n,i),t!==null&&(Rt(t,e,i,r),en(t,e,i))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var a=Ge(),r=Ca(e),i=Kt(a,r);i.tag=2,t!=null&&(i.callback=t),t=Ea(e,i,r),t!==null&&(Rt(t,e,r,a),en(t,e,r))}};function Ms(e,t,a,r,i,n,d){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,n,d):t.prototype&&t.prototype.isPureReactComponent?!J1(a,r)||!J1(i,n):!0}function Xu(e,t,a){var r=!1,i=Aa,n=t.contextType;return typeof n=="object"&&n!==null?n=yt(n):(i=rt(t)?ar:He.current,r=t.contextTypes,n=(r=r!=null)?Gr(e,i):Aa),t=new t(a,n),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=ed,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=n),t}function js(e,t,a,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(a,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(a,r),t.state!==e&&ed.enqueueReplaceState(t,t.state,null)}function Yp(e,t,a,r){var i=e.stateNode;i.props=a,i.state=e.memoizedState,i.refs={},Xo(e);var n=t.contextType;typeof n=="object"&&n!==null?i.context=yt(n):(n=rt(t)?ar:He.current,i.context=Gr(e,n)),i.state=e.memoizedState,n=t.getDerivedStateFromProps,typeof n=="function"&&(Gp(e,t,n,a),i.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(t=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),t!==i.state&&ed.enqueueReplaceState(i,i.state,null),xn(e,a,i,r),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308)}function Xr(e,t){try{var a="",r=t;do a+=vc(r),r=r.return;while(r);var i=a}catch(n){i=`
Error generating stack: `+n.message+`
`+n.stack}return{value:e,source:t,stack:i,digest:null}}function Yd(e,t,a){return{value:e,source:null,stack:a??null,digest:t??null}}function Qp(e,t){try{console.error(t.value)}catch(a){setTimeout(function(){throw a})}}var H3=typeof WeakMap=="function"?WeakMap:Map;function Ju(e,t,a){a=Kt(-1,a),a.tag=3,a.payload={element:null};var r=t.value;return a.callback=function(){Ln||(Ln=!0,no=r),Qp(e,t)},a}function Zu(e,t,a){a=Kt(-1,a),a.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var i=t.value;a.payload=function(){return r(i)},a.callback=function(){Qp(e,t)}}var n=e.stateNode;return n!==null&&typeof n.componentDidCatch=="function"&&(a.callback=function(){Qp(e,t),typeof r!="function"&&(Da===null?Da=new Set([this]):Da.add(this));var d=t.stack;this.componentDidCatch(t.value,{componentStack:d!==null?d:""})}),a}function Fs(e,t,a){var r=e.pingCache;if(r===null){r=e.pingCache=new H3;var i=new Set;r.set(t,i)}else i=r.get(t),i===void 0&&(i=new Set,r.set(t,i));i.has(a)||(i.add(a),e=r9.bind(null,e,t,a),t.then(e,e))}function Is(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Us(e,t,a,r,i){return e.mode&1?(e.flags|=65536,e.lanes=i,e):(e===t?e.flags|=65536:(e.flags|=128,a.flags|=131072,a.flags&=-52805,a.tag===1&&(a.alternate===null?a.tag=17:(t=Kt(-1,1),t.tag=2,Ea(a,t,1))),a.lanes|=1),e)}var W3=ra.ReactCurrentOwner,tt=!1;function $e(e,t,a,r){t.child=e===null?xu(t,null,a,r):Qr(t,e.child,a,r)}function Hs(e,t,a,r,i){a=a.render;var n=t.ref;return Hr(t,i),r=al(e,t,a,r,n,i),a=rl(),e!==null&&!tt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,ta(e,t,i)):(ve&&a&&Wo(t),t.flags|=1,$e(e,t,r,i),t.child)}function Ws(e,t,a,r,i){if(e===null){var n=a.type;return typeof n=="function"&&!cl(n)&&n.defaultProps===void 0&&a.compare===null&&a.defaultProps===void 0?(t.tag=15,t.type=n,e6(e,t,n,r,i)):(e=pn(a.type,null,r,t,t.mode,i),e.ref=t.ref,e.return=t,t.child=e)}if(n=e.child,!(e.lanes&i)){var d=n.memoizedProps;if(a=a.compare,a=a!==null?a:J1,a(d,r)&&e.ref===t.ref)return ta(e,t,i)}return t.flags|=1,e=Na(n,r),e.ref=t.ref,e.return=t,t.child=e}function e6(e,t,a,r,i){if(e!==null){var n=e.memoizedProps;if(J1(n,r)&&e.ref===t.ref)if(tt=!1,t.pendingProps=r=n,(e.lanes&i)!==0)e.flags&131072&&(tt=!0);else return t.lanes=e.lanes,ta(e,t,i)}return Kp(e,t,a,r,i)}function t6(e,t,a){var r=t.pendingProps,i=r.children,n=e!==null?e.memoizedState:null;if(r.mode==="hidden")if(!(t.mode&1))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},ue(qr,dt),dt|=a;else{if(!(a&1073741824))return e=n!==null?n.baseLanes|a:a,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,ue(qr,dt),dt|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=n!==null?n.baseLanes:a,ue(qr,dt),dt|=r}else n!==null?(r=n.baseLanes|a,t.memoizedState=null):r=a,ue(qr,dt),dt|=r;return $e(e,t,i,a),t.child}function a6(e,t){var a=t.ref;(e===null&&a!==null||e!==null&&e.ref!==a)&&(t.flags|=512,t.flags|=2097152)}function Kp(e,t,a,r,i){var n=rt(a)?ar:He.current;return n=Gr(t,n),Hr(t,i),a=al(e,t,a,r,n,i),r=rl(),e!==null&&!tt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,ta(e,t,i)):(ve&&r&&Wo(t),t.flags|=1,$e(e,t,a,i),t.child)}function zs(e,t,a,r,i){if(rt(a)){var n=!0;Tn(t)}else n=!1;if(Hr(t,i),t.stateNode===null)rn(e,t),Xu(t,a,r),Yp(t,a,r,i),r=!0;else if(e===null){var d=t.stateNode,p=t.memoizedProps;d.props=p;var o=d.context,l=a.contextType;typeof l=="object"&&l!==null?l=yt(l):(l=rt(a)?ar:He.current,l=Gr(t,l));var s=a.getDerivedStateFromProps,u=typeof s=="function"||typeof d.getSnapshotBeforeUpdate=="function";u||typeof d.UNSAFE_componentWillReceiveProps!="function"&&typeof d.componentWillReceiveProps!="function"||(p!==r||o!==l)&&js(t,d,r,l),ca=!1;var m=t.memoizedState;d.state=m,xn(t,r,d,i),o=t.memoizedState,p!==r||m!==o||at.current||ca?(typeof s=="function"&&(Gp(t,a,s,r),o=t.memoizedState),(p=ca||Ms(t,a,p,r,m,o,l))?(u||typeof d.UNSAFE_componentWillMount!="function"&&typeof d.componentWillMount!="function"||(typeof d.componentWillMount=="function"&&d.componentWillMount(),typeof d.UNSAFE_componentWillMount=="function"&&d.UNSAFE_componentWillMount()),typeof d.componentDidMount=="function"&&(t.flags|=4194308)):(typeof d.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=o),d.props=r,d.state=o,d.context=l,r=p):(typeof d.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{d=t.stateNode,Ru(e,t),p=t.memoizedProps,l=t.type===t.elementType?p:Et(t.type,p),d.props=l,u=t.pendingProps,m=d.context,o=a.contextType,typeof o=="object"&&o!==null?o=yt(o):(o=rt(a)?ar:He.current,o=Gr(t,o));var h=a.getDerivedStateFromProps;(s=typeof h=="function"||typeof d.getSnapshotBeforeUpdate=="function")||typeof d.UNSAFE_componentWillReceiveProps!="function"&&typeof d.componentWillReceiveProps!="function"||(p!==u||m!==o)&&js(t,d,r,o),ca=!1,m=t.memoizedState,d.state=m,xn(t,r,d,i);var w=t.memoizedState;p!==u||m!==w||at.current||ca?(typeof h=="function"&&(Gp(t,a,h,r),w=t.memoizedState),(l=ca||Ms(t,a,l,r,m,w,o)||!1)?(s||typeof d.UNSAFE_componentWillUpdate!="function"&&typeof d.componentWillUpdate!="function"||(typeof d.componentWillUpdate=="function"&&d.componentWillUpdate(r,w,o),typeof d.UNSAFE_componentWillUpdate=="function"&&d.UNSAFE_componentWillUpdate(r,w,o)),typeof d.componentDidUpdate=="function"&&(t.flags|=4),typeof d.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof d.componentDidUpdate!="function"||p===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),typeof d.getSnapshotBeforeUpdate!="function"||p===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=w),d.props=r,d.state=w,d.context=o,r=l):(typeof d.componentDidUpdate!="function"||p===e.memoizedProps&&m===e.memoizedState||(t.flags|=4),typeof d.getSnapshotBeforeUpdate!="function"||p===e.memoizedProps&&m===e.memoizedState||(t.flags|=1024),r=!1)}return Xp(e,t,a,r,n,i)}function Xp(e,t,a,r,i,n){a6(e,t);var d=(t.flags&128)!==0;if(!r&&!d)return i&&Rs(t,a,!1),ta(e,t,n);r=t.stateNode,W3.current=t;var p=d&&typeof a.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&d?(t.child=Qr(t,e.child,null,n),t.child=Qr(t,null,p,n)):$e(e,t,p,n),t.memoizedState=r.state,i&&Rs(t,a,!0),t.child}function r6(e){var t=e.stateNode;t.pendingContext?As(e,t.pendingContext,t.pendingContext!==t.context):t.context&&As(e,t.context,!1),Jo(e,t.containerInfo)}function $s(e,t,a,r,i){return Yr(),$o(i),t.flags|=256,$e(e,t,a,r),t.child}var Jp={dehydrated:null,treeContext:null,retryLane:0};function Zp(e){return{baseLanes:e,cachePool:null,transitions:null}}function i6(e,t,a){var r=t.pendingProps,i=ye.current,n=!1,d=(t.flags&128)!==0,p;if((p=d)||(p=e!==null&&e.memoizedState===null?!1:(i&2)!==0),p?(n=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),ue(ye,i&1),e===null)return zp(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?(t.mode&1?e.data==="$!"?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(d=r.children,e=r.fallback,n?(r=t.mode,n=t.child,d={mode:"hidden",children:d},!(r&1)&&n!==null?(n.childLanes=0,n.pendingProps=d):n=rd(d,r,0,null),e=tr(e,r,a,null),n.return=t,e.return=t,n.sibling=e,t.child=n,t.child.memoizedState=Zp(a),t.memoizedState=Jp,e):dl(t,d));if(i=e.memoizedState,i!==null&&(p=i.dehydrated,p!==null))return z3(e,t,d,r,p,i,a);if(n){n=r.fallback,d=t.mode,i=e.child,p=i.sibling;var o={mode:"hidden",children:r.children};return!(d&1)&&t.child!==i?(r=t.child,r.childLanes=0,r.pendingProps=o,t.deletions=null):(r=Na(i,o),r.subtreeFlags=i.subtreeFlags&14680064),p!==null?n=Na(p,n):(n=tr(n,d,a,null),n.flags|=2),n.return=t,r.return=t,r.sibling=n,t.child=r,r=n,n=t.child,d=e.child.memoizedState,d=d===null?Zp(a):{baseLanes:d.baseLanes|a,cachePool:null,transitions:d.transitions},n.memoizedState=d,n.childLanes=e.childLanes&~a,t.memoizedState=Jp,r}return n=e.child,e=n.sibling,r=Na(n,{mode:"visible",children:r.children}),!(t.mode&1)&&(r.lanes=a),r.return=t,r.sibling=null,e!==null&&(a=t.deletions,a===null?(t.deletions=[e],t.flags|=16):a.push(e)),t.child=r,t.memoizedState=null,r}function dl(e,t){return t=rd({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function ji(e,t,a,r){return r!==null&&$o(r),Qr(t,e.child,null,a),e=dl(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function z3(e,t,a,r,i,n,d){if(a)return t.flags&256?(t.flags&=-257,r=Yd(Error(k(422))),ji(e,t,d,r)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(n=r.fallback,i=t.mode,r=rd({mode:"visible",children:r.children},i,0,null),n=tr(n,i,d,null),n.flags|=2,r.return=t,n.return=t,r.sibling=n,t.child=r,t.mode&1&&Qr(t,e.child,null,d),t.child.memoizedState=Zp(d),t.memoizedState=Jp,n);if(!(t.mode&1))return ji(e,t,d,null);if(i.data==="$!"){if(r=i.nextSibling&&i.nextSibling.dataset,r)var p=r.dgst;return r=p,n=Error(k(419)),r=Yd(n,r,void 0),ji(e,t,d,r)}if(p=(d&e.childLanes)!==0,tt||p){if(r=ke,r!==null){switch(d&-d){case 4:i=2;break;case 16:i=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:i=32;break;case 536870912:i=268435456;break;default:i=0}i=i&(r.suspendedLanes|d)?0:i,i!==0&&i!==n.retryLane&&(n.retryLane=i,ea(e,i),Rt(r,e,i,-1))}return ml(),r=Yd(Error(k(421))),ji(e,t,d,r)}return i.data==="$?"?(t.flags|=128,t.child=e.child,t=i9.bind(null,e),i._reactRetry=t,null):(e=n.treeContext,ot=Ta(i.nextSibling),lt=t,ve=!0,Nt=null,e!==null&&(ct[ft++]=Yt,ct[ft++]=Qt,ct[ft++]=rr,Yt=e.id,Qt=e.overflow,rr=t),t=dl(t,r.children),t.flags|=4096,t)}function Gs(e,t,a){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),$p(e.return,t,a)}function Qd(e,t,a,r,i){var n=e.memoizedState;n===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:a,tailMode:i}:(n.isBackwards=t,n.rendering=null,n.renderingStartTime=0,n.last=r,n.tail=a,n.tailMode=i)}function n6(e,t,a){var r=t.pendingProps,i=r.revealOrder,n=r.tail;if($e(e,t,r.children,a),r=ye.current,r&2)r=r&1|2,t.flags|=128;else{if(e!==null&&e.flags&128)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Gs(e,a,t);else if(e.tag===19)Gs(e,a,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ue(ye,r),!(t.mode&1))t.memoizedState=null;else switch(i){case"forwards":for(a=t.child,i=null;a!==null;)e=a.alternate,e!==null&&An(e)===null&&(i=a),a=a.sibling;a=i,a===null?(i=t.child,t.child=null):(i=a.sibling,a.sibling=null),Qd(t,!1,i,a,n);break;case"backwards":for(a=null,i=t.child,t.child=null;i!==null;){if(e=i.alternate,e!==null&&An(e)===null){t.child=i;break}e=i.sibling,i.sibling=a,a=i,i=e}Qd(t,!0,a,null,n);break;case"together":Qd(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function rn(e,t){!(t.mode&1)&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function ta(e,t,a){if(e!==null&&(t.dependencies=e.dependencies),nr|=t.lanes,!(a&t.childLanes))return null;if(e!==null&&t.child!==e.child)throw Error(k(153));if(t.child!==null){for(e=t.child,a=Na(e,e.pendingProps),t.child=a,a.return=t;e.sibling!==null;)e=e.sibling,a=a.sibling=Na(e,e.pendingProps),a.return=t;a.sibling=null}return t.child}function $3(e,t,a){switch(t.tag){case 3:r6(t),Yr();break;case 5:Pu(t);break;case 1:rt(t.type)&&Tn(t);break;case 4:Jo(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;ue(Cn,r._currentValue),r._currentValue=i;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(ue(ye,ye.current&1),t.flags|=128,null):a&t.child.childLanes?i6(e,t,a):(ue(ye,ye.current&1),e=ta(e,t,a),e!==null?e.sibling:null);ue(ye,ye.current&1);break;case 19:if(r=(a&t.childLanes)!==0,e.flags&128){if(r)return n6(e,t,a);t.flags|=128}if(i=t.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),ue(ye,ye.current),r)break;return null;case 22:case 23:return t.lanes=0,t6(e,t,a)}return ta(e,t,a)}var d6,eo,p6,o6;d6=function(e,t){for(var a=t.child;a!==null;){if(a.tag===5||a.tag===6)e.appendChild(a.stateNode);else if(a.tag!==4&&a.child!==null){a.child.return=a,a=a.child;continue}if(a===t)break;for(;a.sibling===null;){if(a.return===null||a.return===t)return;a=a.return}a.sibling.return=a.return,a=a.sibling}};eo=function(){};p6=function(e,t,a,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Ka(jt.current);var n=null;switch(a){case"input":i=_p(e,i),r=_p(e,r),n=[];break;case"select":i=we({},i,{value:void 0}),r=we({},r,{value:void 0}),n=[];break;case"textarea":i=Dp(e,i),r=Dp(e,r),n=[];break;default:typeof i.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=Sn)}Np(a,r);var d;a=null;for(l in i)if(!r.hasOwnProperty(l)&&i.hasOwnProperty(l)&&i[l]!=null)if(l==="style"){var p=i[l];for(d in p)p.hasOwnProperty(d)&&(a||(a={}),a[d]="")}else l!=="dangerouslySetInnerHTML"&&l!=="children"&&l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&l!=="autoFocus"&&(z1.hasOwnProperty(l)?n||(n=[]):(n=n||[]).push(l,null));for(l in r){var o=r[l];if(p=i!=null?i[l]:void 0,r.hasOwnProperty(l)&&o!==p&&(o!=null||p!=null))if(l==="style")if(p){for(d in p)!p.hasOwnProperty(d)||o&&o.hasOwnProperty(d)||(a||(a={}),a[d]="");for(d in o)o.hasOwnProperty(d)&&p[d]!==o[d]&&(a||(a={}),a[d]=o[d])}else a||(n||(n=[]),n.push(l,a)),a=o;else l==="dangerouslySetInnerHTML"?(o=o?o.__html:void 0,p=p?p.__html:void 0,o!=null&&p!==o&&(n=n||[]).push(l,o)):l==="children"?typeof o!="string"&&typeof o!="number"||(n=n||[]).push(l,""+o):l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&(z1.hasOwnProperty(l)?(o!=null&&l==="onScroll"&&ce("scroll",e),n||p===o||(n=[])):(n=n||[]).push(l,o))}a&&(n=n||[]).push("style",a);var l=n;(t.updateQueue=l)&&(t.flags|=4)}};o6=function(e,t,a,r){a!==r&&(t.flags|=4)};function b1(e,t){if(!ve)switch(e.tailMode){case"hidden":t=e.tail;for(var a=null;t!==null;)t.alternate!==null&&(a=t),t=t.sibling;a===null?e.tail=null:a.sibling=null;break;case"collapsed":a=e.tail;for(var r=null;a!==null;)a.alternate!==null&&(r=a),a=a.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ie(e){var t=e.alternate!==null&&e.alternate.child===e.child,a=0,r=0;if(t)for(var i=e.child;i!==null;)a|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)a|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=a,t}function G3(e,t,a){var r=t.pendingProps;switch(zo(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ie(t),null;case 1:return rt(t.type)&&_n(),Ie(t),null;case 3:return r=t.stateNode,Kr(),fe(at),fe(He),el(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(qi(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&!(t.flags&256)||(t.flags|=1024,Nt!==null&&(lo(Nt),Nt=null))),eo(e,t),Ie(t),null;case 5:Zo(t);var i=Ka(ri.current);if(a=t.type,e!==null&&t.stateNode!=null)p6(e,t,a,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(k(166));return Ie(t),null}if(e=Ka(jt.current),qi(t)){r=t.stateNode,a=t.type;var n=t.memoizedProps;switch(r[qt]=t,r[ti]=n,e=(t.mode&1)!==0,a){case"dialog":ce("cancel",r),ce("close",r);break;case"iframe":case"object":case"embed":ce("load",r);break;case"video":case"audio":for(i=0;i<R1.length;i++)ce(R1[i],r);break;case"source":ce("error",r);break;case"img":case"image":case"link":ce("error",r),ce("load",r);break;case"details":ce("toggle",r);break;case"input":as(r,n),ce("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!n.multiple},ce("invalid",r);break;case"textarea":is(r,n),ce("invalid",r)}Np(a,n),i=null;for(var d in n)if(n.hasOwnProperty(d)){var p=n[d];d==="children"?typeof p=="string"?r.textContent!==p&&(n.suppressHydrationWarning!==!0&&Bi(r.textContent,p,e),i=["children",p]):typeof p=="number"&&r.textContent!==""+p&&(n.suppressHydrationWarning!==!0&&Bi(r.textContent,p,e),i=["children",""+p]):z1.hasOwnProperty(d)&&p!=null&&d==="onScroll"&&ce("scroll",r)}switch(a){case"input":xi(r),rs(r,n,!0);break;case"textarea":xi(r),ns(r);break;case"select":case"option":break;default:typeof n.onClick=="function"&&(r.onclick=Sn)}r=i,t.updateQueue=r,r!==null&&(t.flags|=4)}else{d=i.nodeType===9?i:i.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=B0(a)),e==="http://www.w3.org/1999/xhtml"?a==="script"?(e=d.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=d.createElement(a,{is:r.is}):(e=d.createElement(a),a==="select"&&(d=e,r.multiple?d.multiple=!0:r.size&&(d.size=r.size))):e=d.createElementNS(e,a),e[qt]=t,e[ti]=r,d6(e,t,!1,!1),t.stateNode=e;e:{switch(d=xp(a,r),a){case"dialog":ce("cancel",e),ce("close",e),i=r;break;case"iframe":case"object":case"embed":ce("load",e),i=r;break;case"video":case"audio":for(i=0;i<R1.length;i++)ce(R1[i],e);i=r;break;case"source":ce("error",e),i=r;break;case"img":case"image":case"link":ce("error",e),ce("load",e),i=r;break;case"details":ce("toggle",e),i=r;break;case"input":as(e,r),i=_p(e,r),ce("invalid",e);break;case"option":i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=we({},r,{value:void 0}),ce("invalid",e);break;case"textarea":is(e,r),i=Dp(e,r),ce("invalid",e);break;default:i=r}Np(a,i),p=i;for(n in p)if(p.hasOwnProperty(n)){var o=p[n];n==="style"?j0(e,o):n==="dangerouslySetInnerHTML"?(o=o?o.__html:void 0,o!=null&&q0(e,o)):n==="children"?typeof o=="string"?(a!=="textarea"||o!=="")&&$1(e,o):typeof o=="number"&&$1(e,""+o):n!=="suppressContentEditableWarning"&&n!=="suppressHydrationWarning"&&n!=="autoFocus"&&(z1.hasOwnProperty(n)?o!=null&&n==="onScroll"&&ce("scroll",e):o!=null&&Ro(e,n,o,d))}switch(a){case"input":xi(e),rs(e,r,!1);break;case"textarea":xi(e),ns(e);break;case"option":r.value!=null&&e.setAttribute("value",""+xa(r.value));break;case"select":e.multiple=!!r.multiple,n=r.value,n!=null?jr(e,!!r.multiple,n,!1):r.defaultValue!=null&&jr(e,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick=="function"&&(e.onclick=Sn)}switch(a){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return Ie(t),null;case 6:if(e&&t.stateNode!=null)o6(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(k(166));if(a=Ka(ri.current),Ka(jt.current),qi(t)){if(r=t.stateNode,a=t.memoizedProps,r[qt]=t,(n=r.nodeValue!==a)&&(e=lt,e!==null))switch(e.tag){case 3:Bi(r.nodeValue,a,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Bi(r.nodeValue,a,(e.mode&1)!==0)}n&&(t.flags|=4)}else r=(a.nodeType===9?a:a.ownerDocument).createTextNode(r),r[qt]=t,t.stateNode=r}return Ie(t),null;case 13:if(fe(ye),r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(ve&&ot!==null&&t.mode&1&&!(t.flags&128))Cu(),Yr(),t.flags|=98560,n=!1;else if(n=qi(t),r!==null&&r.dehydrated!==null){if(e===null){if(!n)throw Error(k(318));if(n=t.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(k(317));n[qt]=t}else Yr(),!(t.flags&128)&&(t.memoizedState=null),t.flags|=4;Ie(t),n=!1}else Nt!==null&&(lo(Nt),Nt=null),n=!0;if(!n)return t.flags&65536?t:null}return t.flags&128?(t.lanes=a,t):(r=r!==null,r!==(e!==null&&e.memoizedState!==null)&&r&&(t.child.flags|=8192,t.mode&1&&(e===null||ye.current&1?Ae===0&&(Ae=3):ml())),t.updateQueue!==null&&(t.flags|=4),Ie(t),null);case 4:return Kr(),eo(e,t),e===null&&Z1(t.stateNode.containerInfo),Ie(t),null;case 10:return Qo(t.type._context),Ie(t),null;case 17:return rt(t.type)&&_n(),Ie(t),null;case 19:if(fe(ye),n=t.memoizedState,n===null)return Ie(t),null;if(r=(t.flags&128)!==0,d=n.rendering,d===null)if(r)b1(n,!1);else{if(Ae!==0||e!==null&&e.flags&128)for(e=t.child;e!==null;){if(d=An(e),d!==null){for(t.flags|=128,b1(n,!1),r=d.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=a,a=t.child;a!==null;)n=a,e=r,n.flags&=14680066,d=n.alternate,d===null?(n.childLanes=0,n.lanes=e,n.child=null,n.subtreeFlags=0,n.memoizedProps=null,n.memoizedState=null,n.updateQueue=null,n.dependencies=null,n.stateNode=null):(n.childLanes=d.childLanes,n.lanes=d.lanes,n.child=d.child,n.subtreeFlags=0,n.deletions=null,n.memoizedProps=d.memoizedProps,n.memoizedState=d.memoizedState,n.updateQueue=d.updateQueue,n.type=d.type,e=d.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),a=a.sibling;return ue(ye,ye.current&1|2),t.child}e=e.sibling}n.tail!==null&&Ee()>Jr&&(t.flags|=128,r=!0,b1(n,!1),t.lanes=4194304)}else{if(!r)if(e=An(d),e!==null){if(t.flags|=128,r=!0,a=e.updateQueue,a!==null&&(t.updateQueue=a,t.flags|=4),b1(n,!0),n.tail===null&&n.tailMode==="hidden"&&!d.alternate&&!ve)return Ie(t),null}else 2*Ee()-n.renderingStartTime>Jr&&a!==1073741824&&(t.flags|=128,r=!0,b1(n,!1),t.lanes=4194304);n.isBackwards?(d.sibling=t.child,t.child=d):(a=n.last,a!==null?a.sibling=d:t.child=d,n.last=d)}return n.tail!==null?(t=n.tail,n.rendering=t,n.tail=t.sibling,n.renderingStartTime=Ee(),t.sibling=null,a=ye.current,ue(ye,r?a&1|2:a&1),t):(Ie(t),null);case 22:case 23:return ul(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&t.mode&1?dt&1073741824&&(Ie(t),t.subtreeFlags&6&&(t.flags|=8192)):Ie(t),null;case 24:return null;case 25:return null}throw Error(k(156,t.tag))}function Y3(e,t){switch(zo(t),t.tag){case 1:return rt(t.type)&&_n(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return Kr(),fe(at),fe(He),el(),e=t.flags,e&65536&&!(e&128)?(t.flags=e&-65537|128,t):null;case 5:return Zo(t),null;case 13:if(fe(ye),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(k(340));Yr()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return fe(ye),null;case 4:return Kr(),null;case 10:return Qo(t.type._context),null;case 22:case 23:return ul(),null;case 24:return null;default:return null}}var Fi=!1,Ue=!1,Q3=typeof WeakSet=="function"?WeakSet:Set,B=null;function Br(e,t){var a=e.ref;if(a!==null)if(typeof a=="function")try{a(null)}catch(r){Te(e,t,r)}else a.current=null}function to(e,t,a){try{a()}catch(r){Te(e,t,r)}}var Ys=!1;function K3(e,t){if(Mp=yn,e=cu(),Ho(e)){if("selectionStart"in e)var a={start:e.selectionStart,end:e.selectionEnd};else e:{a=(a=e.ownerDocument)&&a.defaultView||window;var r=a.getSelection&&a.getSelection();if(r&&r.rangeCount!==0){a=r.anchorNode;var i=r.anchorOffset,n=r.focusNode;r=r.focusOffset;try{a.nodeType,n.nodeType}catch{a=null;break e}var d=0,p=-1,o=-1,l=0,s=0,u=e,m=null;t:for(;;){for(var h;u!==a||i!==0&&u.nodeType!==3||(p=d+i),u!==n||r!==0&&u.nodeType!==3||(o=d+r),u.nodeType===3&&(d+=u.nodeValue.length),(h=u.firstChild)!==null;)m=u,u=h;for(;;){if(u===e)break t;if(m===a&&++l===i&&(p=d),m===n&&++s===r&&(o=d),(h=u.nextSibling)!==null)break;u=m,m=u.parentNode}u=h}a=p===-1||o===-1?null:{start:p,end:o}}else a=null}a=a||{start:0,end:0}}else a=null;for(jp={focusedElem:e,selectionRange:a},yn=!1,B=t;B!==null;)if(t=B,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,B=e;else for(;B!==null;){t=B;try{var w=t.alternate;if(t.flags&1024)switch(t.tag){case 0:case 11:case 15:break;case 1:if(w!==null){var _=w.memoizedProps,N=w.memoizedState,f=t.stateNode,c=f.getSnapshotBeforeUpdate(t.elementType===t.type?_:Et(t.type,_),N);f.__reactInternalSnapshotBeforeUpdate=c}break;case 3:var v=t.stateNode.containerInfo;v.nodeType===1?v.textContent="":v.nodeType===9&&v.documentElement&&v.removeChild(v.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(k(163))}}catch(D){Te(t,t.return,D)}if(e=t.sibling,e!==null){e.return=t.return,B=e;break}B=t.return}return w=Ys,Ys=!1,w}function I1(e,t,a){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&e)===e){var n=i.destroy;i.destroy=void 0,n!==void 0&&to(t,a,n)}i=i.next}while(i!==r)}}function td(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var a=t=t.next;do{if((a.tag&e)===e){var r=a.create;a.destroy=r()}a=a.next}while(a!==t)}}function ao(e){var t=e.ref;if(t!==null){var a=e.stateNode;switch(e.tag){case 5:e=a;break;default:e=a}typeof t=="function"?t(e):t.current=e}}function l6(e){var t=e.alternate;t!==null&&(e.alternate=null,l6(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[qt],delete t[ti],delete t[Up],delete t[k3],delete t[L3])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function s6(e){return e.tag===5||e.tag===3||e.tag===4}function Qs(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||s6(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function ro(e,t,a){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?a.nodeType===8?a.parentNode.insertBefore(e,t):a.insertBefore(e,t):(a.nodeType===8?(t=a.parentNode,t.insertBefore(e,a)):(t=a,t.appendChild(e)),a=a._reactRootContainer,a!=null||t.onclick!==null||(t.onclick=Sn));else if(r!==4&&(e=e.child,e!==null))for(ro(e,t,a),e=e.sibling;e!==null;)ro(e,t,a),e=e.sibling}function io(e,t,a){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?a.insertBefore(e,t):a.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(io(e,t,a),e=e.sibling;e!==null;)io(e,t,a),e=e.sibling}var Oe=null,Dt=!1;function oa(e,t,a){for(a=a.child;a!==null;)u6(e,t,a),a=a.sibling}function u6(e,t,a){if(Mt&&typeof Mt.onCommitFiberUnmount=="function")try{Mt.onCommitFiberUnmount(Gn,a)}catch{}switch(a.tag){case 5:Ue||Br(a,t);case 6:var r=Oe,i=Dt;Oe=null,oa(e,t,a),Oe=r,Dt=i,Oe!==null&&(Dt?(e=Oe,a=a.stateNode,e.nodeType===8?e.parentNode.removeChild(a):e.removeChild(a)):Oe.removeChild(a.stateNode));break;case 18:Oe!==null&&(Dt?(e=Oe,a=a.stateNode,e.nodeType===8?Ud(e.parentNode,a):e.nodeType===1&&Ud(e,a),K1(e)):Ud(Oe,a.stateNode));break;case 4:r=Oe,i=Dt,Oe=a.stateNode.containerInfo,Dt=!0,oa(e,t,a),Oe=r,Dt=i;break;case 0:case 11:case 14:case 15:if(!Ue&&(r=a.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var n=i,d=n.destroy;n=n.tag,d!==void 0&&(n&2||n&4)&&to(a,t,d),i=i.next}while(i!==r)}oa(e,t,a);break;case 1:if(!Ue&&(Br(a,t),r=a.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=a.memoizedProps,r.state=a.memoizedState,r.componentWillUnmount()}catch(p){Te(a,t,p)}oa(e,t,a);break;case 21:oa(e,t,a);break;case 22:a.mode&1?(Ue=(r=Ue)||a.memoizedState!==null,oa(e,t,a),Ue=r):oa(e,t,a);break;default:oa(e,t,a)}}function Ks(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var a=e.stateNode;a===null&&(a=e.stateNode=new Q3),t.forEach(function(r){var i=n9.bind(null,e,r);a.has(r)||(a.add(r),r.then(i,i))})}}function _t(e,t){var a=t.deletions;if(a!==null)for(var r=0;r<a.length;r++){var i=a[r];try{var n=e,d=t,p=d;e:for(;p!==null;){switch(p.tag){case 5:Oe=p.stateNode,Dt=!1;break e;case 3:Oe=p.stateNode.containerInfo,Dt=!0;break e;case 4:Oe=p.stateNode.containerInfo,Dt=!0;break e}p=p.return}if(Oe===null)throw Error(k(160));u6(n,d,i),Oe=null,Dt=!1;var o=i.alternate;o!==null&&(o.return=null),i.return=null}catch(l){Te(i,t,l)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)m6(t,e),t=t.sibling}function m6(e,t){var a=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(_t(t,e),Vt(e),r&4){try{I1(3,e,e.return),td(3,e)}catch(_){Te(e,e.return,_)}try{I1(5,e,e.return)}catch(_){Te(e,e.return,_)}}break;case 1:_t(t,e),Vt(e),r&512&&a!==null&&Br(a,a.return);break;case 5:if(_t(t,e),Vt(e),r&512&&a!==null&&Br(a,a.return),e.flags&32){var i=e.stateNode;try{$1(i,"")}catch(_){Te(e,e.return,_)}}if(r&4&&(i=e.stateNode,i!=null)){var n=e.memoizedProps,d=a!==null?a.memoizedProps:n,p=e.type,o=e.updateQueue;if(e.updateQueue=null,o!==null)try{p==="input"&&n.type==="radio"&&n.name!=null&&V0(i,n),xp(p,d);var l=xp(p,n);for(d=0;d<o.length;d+=2){var s=o[d],u=o[d+1];s==="style"?j0(i,u):s==="dangerouslySetInnerHTML"?q0(i,u):s==="children"?$1(i,u):Ro(i,s,u,l)}switch(p){case"input":Tp(i,n);break;case"textarea":O0(i,n);break;case"select":var m=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!n.multiple;var h=n.value;h!=null?jr(i,!!n.multiple,h,!1):m!==!!n.multiple&&(n.defaultValue!=null?jr(i,!!n.multiple,n.defaultValue,!0):jr(i,!!n.multiple,n.multiple?[]:"",!1))}i[ti]=n}catch(_){Te(e,e.return,_)}}break;case 6:if(_t(t,e),Vt(e),r&4){if(e.stateNode===null)throw Error(k(162));i=e.stateNode,n=e.memoizedProps;try{i.nodeValue=n}catch(_){Te(e,e.return,_)}}break;case 3:if(_t(t,e),Vt(e),r&4&&a!==null&&a.memoizedState.isDehydrated)try{K1(t.containerInfo)}catch(_){Te(e,e.return,_)}break;case 4:_t(t,e),Vt(e);break;case 13:_t(t,e),Vt(e),i=e.child,i.flags&8192&&(n=i.memoizedState!==null,i.stateNode.isHidden=n,!n||i.alternate!==null&&i.alternate.memoizedState!==null||(ll=Ee())),r&4&&Ks(e);break;case 22:if(s=a!==null&&a.memoizedState!==null,e.mode&1?(Ue=(l=Ue)||s,_t(t,e),Ue=l):_t(t,e),Vt(e),r&8192){if(l=e.memoizedState!==null,(e.stateNode.isHidden=l)&&!s&&e.mode&1)for(B=e,s=e.child;s!==null;){for(u=B=s;B!==null;){switch(m=B,h=m.child,m.tag){case 0:case 11:case 14:case 15:I1(4,m,m.return);break;case 1:Br(m,m.return);var w=m.stateNode;if(typeof w.componentWillUnmount=="function"){r=m,a=m.return;try{t=r,w.props=t.memoizedProps,w.state=t.memoizedState,w.componentWillUnmount()}catch(_){Te(r,a,_)}}break;case 5:Br(m,m.return);break;case 22:if(m.memoizedState!==null){Js(u);continue}}h!==null?(h.return=m,B=h):Js(u)}s=s.sibling}e:for(s=null,u=e;;){if(u.tag===5){if(s===null){s=u;try{i=u.stateNode,l?(n=i.style,typeof n.setProperty=="function"?n.setProperty("display","none","important"):n.display="none"):(p=u.stateNode,o=u.memoizedProps.style,d=o!=null&&o.hasOwnProperty("display")?o.display:null,p.style.display=M0("display",d))}catch(_){Te(e,e.return,_)}}}else if(u.tag===6){if(s===null)try{u.stateNode.nodeValue=l?"":u.memoizedProps}catch(_){Te(e,e.return,_)}}else if((u.tag!==22&&u.tag!==23||u.memoizedState===null||u===e)&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===e)break e;for(;u.sibling===null;){if(u.return===null||u.return===e)break e;s===u&&(s=null),u=u.return}s===u&&(s=null),u.sibling.return=u.return,u=u.sibling}}break;case 19:_t(t,e),Vt(e),r&4&&Ks(e);break;case 21:break;default:_t(t,e),Vt(e)}}function Vt(e){var t=e.flags;if(t&2){try{e:{for(var a=e.return;a!==null;){if(s6(a)){var r=a;break e}a=a.return}throw Error(k(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&($1(i,""),r.flags&=-33);var n=Qs(e);io(e,n,i);break;case 3:case 4:var d=r.stateNode.containerInfo,p=Qs(e);ro(e,p,d);break;default:throw Error(k(161))}}catch(o){Te(e,e.return,o)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function X3(e,t,a){B=e,c6(e)}function c6(e,t,a){for(var r=(e.mode&1)!==0;B!==null;){var i=B,n=i.child;if(i.tag===22&&r){var d=i.memoizedState!==null||Fi;if(!d){var p=i.alternate,o=p!==null&&p.memoizedState!==null||Ue;p=Fi;var l=Ue;if(Fi=d,(Ue=o)&&!l)for(B=i;B!==null;)d=B,o=d.child,d.tag===22&&d.memoizedState!==null?Zs(i):o!==null?(o.return=d,B=o):Zs(i);for(;n!==null;)B=n,c6(n),n=n.sibling;B=i,Fi=p,Ue=l}Xs(e)}else i.subtreeFlags&8772&&n!==null?(n.return=i,B=n):Xs(e)}}function Xs(e){for(;B!==null;){var t=B;if(t.flags&8772){var a=t.alternate;try{if(t.flags&8772)switch(t.tag){case 0:case 11:case 15:Ue||td(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!Ue)if(a===null)r.componentDidMount();else{var i=t.elementType===t.type?a.memoizedProps:Et(t.type,a.memoizedProps);r.componentDidUpdate(i,a.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var n=t.updateQueue;n!==null&&Os(t,n,r);break;case 3:var d=t.updateQueue;if(d!==null){if(a=null,t.child!==null)switch(t.child.tag){case 5:a=t.child.stateNode;break;case 1:a=t.child.stateNode}Os(t,d,a)}break;case 5:var p=t.stateNode;if(a===null&&t.flags&4){a=p;var o=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":o.autoFocus&&a.focus();break;case"img":o.src&&(a.src=o.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var l=t.alternate;if(l!==null){var s=l.memoizedState;if(s!==null){var u=s.dehydrated;u!==null&&K1(u)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(k(163))}Ue||t.flags&512&&ao(t)}catch(m){Te(t,t.return,m)}}if(t===e){B=null;break}if(a=t.sibling,a!==null){a.return=t.return,B=a;break}B=t.return}}function Js(e){for(;B!==null;){var t=B;if(t===e){B=null;break}var a=t.sibling;if(a!==null){a.return=t.return,B=a;break}B=t.return}}function Zs(e){for(;B!==null;){var t=B;try{switch(t.tag){case 0:case 11:case 15:var a=t.return;try{td(4,t)}catch(o){Te(t,a,o)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var i=t.return;try{r.componentDidMount()}catch(o){Te(t,i,o)}}var n=t.return;try{ao(t)}catch(o){Te(t,n,o)}break;case 5:var d=t.return;try{ao(t)}catch(o){Te(t,d,o)}}}catch(o){Te(t,t.return,o)}if(t===e){B=null;break}var p=t.sibling;if(p!==null){p.return=t.return,B=p;break}B=t.return}}var J3=Math.ceil,kn=ra.ReactCurrentDispatcher,pl=ra.ReactCurrentOwner,gt=ra.ReactCurrentBatchConfig,ee=0,ke=null,Ne=null,qe=0,dt=0,qr=Pa(0),Ae=0,pi=null,nr=0,ad=0,ol=0,U1=null,Ze=null,ll=0,Jr=1/0,Wt=null,Ln=!1,no=null,Da=null,Ii=!1,ga=null,Vn=0,H1=0,po=null,nn=-1,dn=0;function Ge(){return ee&6?Ee():nn!==-1?nn:nn=Ee()}function Ca(e){return e.mode&1?ee&2&&qe!==0?qe&-qe:O3.transition!==null?(dn===0&&(dn=X0()),dn):(e=pe,e!==0||(e=window.event,e=e===void 0?16:iu(e.type)),e):1}function Rt(e,t,a,r){if(50<H1)throw H1=0,po=null,Error(k(185));mi(e,a,r),(!(ee&2)||e!==ke)&&(e===ke&&(!(ee&2)&&(ad|=a),Ae===4&&ha(e,qe)),it(e,r),a===1&&ee===0&&!(t.mode&1)&&(Jr=Ee()+500,Jn&&ka()))}function it(e,t){var a=e.callbackNode;Oc(e,t);var r=gn(e,e===ke?qe:0);if(r===0)a!==null&&os(a),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(a!=null&&os(a),t===1)e.tag===0?V3(e2.bind(null,e)):Tu(e2.bind(null,e)),R3(function(){!(ee&6)&&ka()}),a=null;else{switch(J0(r)){case 1:a=Oo;break;case 4:a=Q0;break;case 16:a=vn;break;case 536870912:a=K0;break;default:a=vn}a=S6(a,f6.bind(null,e))}e.callbackPriority=t,e.callbackNode=a}}function f6(e,t){if(nn=-1,dn=0,ee&6)throw Error(k(327));var a=e.callbackNode;if(Wr()&&e.callbackNode!==a)return null;var r=gn(e,e===ke?qe:0);if(r===0)return null;if(r&30||r&e.expiredLanes||t)t=On(e,r);else{t=r;var i=ee;ee|=2;var n=v6();(ke!==e||qe!==t)&&(Wt=null,Jr=Ee()+500,er(e,t));do try{t9();break}catch(p){h6(e,p)}while(!0);Yo(),kn.current=n,ee=i,Ne!==null?t=0:(ke=null,qe=0,t=Ae)}if(t!==0){if(t===2&&(i=Lp(e),i!==0&&(r=i,t=oo(e,i))),t===1)throw a=pi,er(e,0),ha(e,r),it(e,Ee()),a;if(t===6)ha(e,r);else{if(i=e.current.alternate,!(r&30)&&!Z3(i)&&(t=On(e,r),t===2&&(n=Lp(e),n!==0&&(r=n,t=oo(e,n))),t===1))throw a=pi,er(e,0),ha(e,r),it(e,Ee()),a;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(k(345));case 2:Ua(e,Ze,Wt);break;case 3:if(ha(e,r),(r&130023424)===r&&(t=ll+500-Ee(),10<t)){if(gn(e,0)!==0)break;if(i=e.suspendedLanes,(i&r)!==r){Ge(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=Ip(Ua.bind(null,e,Ze,Wt),t);break}Ua(e,Ze,Wt);break;case 4:if(ha(e,r),(r&4194240)===r)break;for(t=e.eventTimes,i=-1;0<r;){var d=31-At(r);n=1<<d,d=t[d],d>i&&(i=d),r&=~n}if(r=i,r=Ee()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*J3(r/1960))-r,10<r){e.timeoutHandle=Ip(Ua.bind(null,e,Ze,Wt),r);break}Ua(e,Ze,Wt);break;case 5:Ua(e,Ze,Wt);break;default:throw Error(k(329))}}}return it(e,Ee()),e.callbackNode===a?f6.bind(null,e):null}function oo(e,t){var a=U1;return e.current.memoizedState.isDehydrated&&(er(e,t).flags|=256),e=On(e,t),e!==2&&(t=Ze,Ze=a,t!==null&&lo(t)),e}function lo(e){Ze===null?Ze=e:Ze.push.apply(Ze,e)}function Z3(e){for(var t=e;;){if(t.flags&16384){var a=t.updateQueue;if(a!==null&&(a=a.stores,a!==null))for(var r=0;r<a.length;r++){var i=a[r],n=i.getSnapshot;i=i.value;try{if(!Pt(n(),i))return!1}catch{return!1}}}if(a=t.child,t.subtreeFlags&16384&&a!==null)a.return=t,t=a;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function ha(e,t){for(t&=~ol,t&=~ad,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var a=31-At(t),r=1<<a;e[a]=-1,t&=~r}}function e2(e){if(ee&6)throw Error(k(327));Wr();var t=gn(e,0);if(!(t&1))return it(e,Ee()),null;var a=On(e,t);if(e.tag!==0&&a===2){var r=Lp(e);r!==0&&(t=r,a=oo(e,r))}if(a===1)throw a=pi,er(e,0),ha(e,t),it(e,Ee()),a;if(a===6)throw Error(k(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Ua(e,Ze,Wt),it(e,Ee()),null}function sl(e,t){var a=ee;ee|=1;try{return e(t)}finally{ee=a,ee===0&&(Jr=Ee()+500,Jn&&ka())}}function dr(e){ga!==null&&ga.tag===0&&!(ee&6)&&Wr();var t=ee;ee|=1;var a=gt.transition,r=pe;try{if(gt.transition=null,pe=1,e)return e()}finally{pe=r,gt.transition=a,ee=t,!(ee&6)&&ka()}}function ul(){dt=qr.current,fe(qr)}function er(e,t){e.finishedWork=null,e.finishedLanes=0;var a=e.timeoutHandle;if(a!==-1&&(e.timeoutHandle=-1,A3(a)),Ne!==null)for(a=Ne.return;a!==null;){var r=a;switch(zo(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&_n();break;case 3:Kr(),fe(at),fe(He),el();break;case 5:Zo(r);break;case 4:Kr();break;case 13:fe(ye);break;case 19:fe(ye);break;case 10:Qo(r.type._context);break;case 22:case 23:ul()}a=a.return}if(ke=e,Ne=e=Na(e.current,null),qe=dt=t,Ae=0,pi=null,ol=ad=nr=0,Ze=U1=null,Qa!==null){for(t=0;t<Qa.length;t++)if(a=Qa[t],r=a.interleaved,r!==null){a.interleaved=null;var i=r.next,n=a.pending;if(n!==null){var d=n.next;n.next=i,r.next=d}a.pending=r}Qa=null}return e}function h6(e,t){do{var a=Ne;try{if(Yo(),tn.current=Pn,Rn){for(var r=be.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}Rn=!1}if(ir=0,Pe=xe=be=null,F1=!1,ii=0,pl.current=null,a===null||a.return===null){Ae=1,pi=t,Ne=null;break}e:{var n=e,d=a.return,p=a,o=t;if(t=qe,p.flags|=32768,o!==null&&typeof o=="object"&&typeof o.then=="function"){var l=o,s=p,u=s.tag;if(!(s.mode&1)&&(u===0||u===11||u===15)){var m=s.alternate;m?(s.updateQueue=m.updateQueue,s.memoizedState=m.memoizedState,s.lanes=m.lanes):(s.updateQueue=null,s.memoizedState=null)}var h=Is(d);if(h!==null){h.flags&=-257,Us(h,d,p,n,t),h.mode&1&&Fs(n,l,t),t=h,o=l;var w=t.updateQueue;if(w===null){var _=new Set;_.add(o),t.updateQueue=_}else w.add(o);break e}else{if(!(t&1)){Fs(n,l,t),ml();break e}o=Error(k(426))}}else if(ve&&p.mode&1){var N=Is(d);if(N!==null){!(N.flags&65536)&&(N.flags|=256),Us(N,d,p,n,t),$o(Xr(o,p));break e}}n=o=Xr(o,p),Ae!==4&&(Ae=2),U1===null?U1=[n]:U1.push(n),n=d;do{switch(n.tag){case 3:n.flags|=65536,t&=-t,n.lanes|=t;var f=Ju(n,o,t);Vs(n,f);break e;case 1:p=o;var c=n.type,v=n.stateNode;if(!(n.flags&128)&&(typeof c.getDerivedStateFromError=="function"||v!==null&&typeof v.componentDidCatch=="function"&&(Da===null||!Da.has(v)))){n.flags|=65536,t&=-t,n.lanes|=t;var D=Zu(n,p,t);Vs(n,D);break e}}n=n.return}while(n!==null)}y6(a)}catch(P){t=P,Ne===a&&a!==null&&(Ne=a=a.return);continue}break}while(!0)}function v6(){var e=kn.current;return kn.current=Pn,e===null?Pn:e}function ml(){(Ae===0||Ae===3||Ae===2)&&(Ae=4),ke===null||!(nr&268435455)&&!(ad&268435455)||ha(ke,qe)}function On(e,t){var a=ee;ee|=2;var r=v6();(ke!==e||qe!==t)&&(Wt=null,er(e,t));do try{e9();break}catch(i){h6(e,i)}while(!0);if(Yo(),ee=a,kn.current=r,Ne!==null)throw Error(k(261));return ke=null,qe=0,Ae}function e9(){for(;Ne!==null;)g6(Ne)}function t9(){for(;Ne!==null&&!Cc();)g6(Ne)}function g6(e){var t=w6(e.alternate,e,dt);e.memoizedProps=e.pendingProps,t===null?y6(e):Ne=t,pl.current=null}function y6(e){var t=e;do{var a=t.alternate;if(e=t.return,t.flags&32768){if(a=Y3(a,t),a!==null){a.flags&=32767,Ne=a;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{Ae=6,Ne=null;return}}else if(a=G3(a,t,dt),a!==null){Ne=a;return}if(t=t.sibling,t!==null){Ne=t;return}Ne=t=e}while(t!==null);Ae===0&&(Ae=5)}function Ua(e,t,a){var r=pe,i=gt.transition;try{gt.transition=null,pe=1,a9(e,t,a,r)}finally{gt.transition=i,pe=r}return null}function a9(e,t,a,r){do Wr();while(ga!==null);if(ee&6)throw Error(k(327));a=e.finishedWork;var i=e.finishedLanes;if(a===null)return null;if(e.finishedWork=null,e.finishedLanes=0,a===e.current)throw Error(k(177));e.callbackNode=null,e.callbackPriority=0;var n=a.lanes|a.childLanes;if(Bc(e,n),e===ke&&(Ne=ke=null,qe=0),!(a.subtreeFlags&2064)&&!(a.flags&2064)||Ii||(Ii=!0,S6(vn,function(){return Wr(),null})),n=(a.flags&15990)!==0,a.subtreeFlags&15990||n){n=gt.transition,gt.transition=null;var d=pe;pe=1;var p=ee;ee|=4,pl.current=null,K3(e,a),m6(a,e),_3(jp),yn=!!Mp,jp=Mp=null,e.current=a,X3(a),Nc(),ee=p,pe=d,gt.transition=n}else e.current=a;if(Ii&&(Ii=!1,ga=e,Vn=i),n=e.pendingLanes,n===0&&(Da=null),Rc(a.stateNode),it(e,Ee()),t!==null)for(r=e.onRecoverableError,a=0;a<t.length;a++)i=t[a],r(i.value,{componentStack:i.stack,digest:i.digest});if(Ln)throw Ln=!1,e=no,no=null,e;return Vn&1&&e.tag!==0&&Wr(),n=e.pendingLanes,n&1?e===po?H1++:(H1=0,po=e):H1=0,ka(),null}function Wr(){if(ga!==null){var e=J0(Vn),t=gt.transition,a=pe;try{if(gt.transition=null,pe=16>e?16:e,ga===null)var r=!1;else{if(e=ga,ga=null,Vn=0,ee&6)throw Error(k(331));var i=ee;for(ee|=4,B=e.current;B!==null;){var n=B,d=n.child;if(B.flags&16){var p=n.deletions;if(p!==null){for(var o=0;o<p.length;o++){var l=p[o];for(B=l;B!==null;){var s=B;switch(s.tag){case 0:case 11:case 15:I1(8,s,n)}var u=s.child;if(u!==null)u.return=s,B=u;else for(;B!==null;){s=B;var m=s.sibling,h=s.return;if(l6(s),s===l){B=null;break}if(m!==null){m.return=h,B=m;break}B=h}}}var w=n.alternate;if(w!==null){var _=w.child;if(_!==null){w.child=null;do{var N=_.sibling;_.sibling=null,_=N}while(_!==null)}}B=n}}if(n.subtreeFlags&2064&&d!==null)d.return=n,B=d;else e:for(;B!==null;){if(n=B,n.flags&2048)switch(n.tag){case 0:case 11:case 15:I1(9,n,n.return)}var f=n.sibling;if(f!==null){f.return=n.return,B=f;break e}B=n.return}}var c=e.current;for(B=c;B!==null;){d=B;var v=d.child;if(d.subtreeFlags&2064&&v!==null)v.return=d,B=v;else e:for(d=c;B!==null;){if(p=B,p.flags&2048)try{switch(p.tag){case 0:case 11:case 15:td(9,p)}}catch(P){Te(p,p.return,P)}if(p===d){B=null;break e}var D=p.sibling;if(D!==null){D.return=p.return,B=D;break e}B=p.return}}if(ee=i,ka(),Mt&&typeof Mt.onPostCommitFiberRoot=="function")try{Mt.onPostCommitFiberRoot(Gn,e)}catch{}r=!0}return r}finally{pe=a,gt.transition=t}}return!1}function t2(e,t,a){t=Xr(a,t),t=Ju(e,t,1),e=Ea(e,t,1),t=Ge(),e!==null&&(mi(e,1,t),it(e,t))}function Te(e,t,a){if(e.tag===3)t2(e,e,a);else for(;t!==null;){if(t.tag===3){t2(t,e,a);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Da===null||!Da.has(r))){e=Xr(a,e),e=Zu(t,e,1),t=Ea(t,e,1),e=Ge(),t!==null&&(mi(t,1,e),it(t,e));break}}t=t.return}}function r9(e,t,a){var r=e.pingCache;r!==null&&r.delete(t),t=Ge(),e.pingedLanes|=e.suspendedLanes&a,ke===e&&(qe&a)===a&&(Ae===4||Ae===3&&(qe&130023424)===qe&&500>Ee()-ll?er(e,0):ol|=a),it(e,t)}function b6(e,t){t===0&&(e.mode&1?(t=Pi,Pi<<=1,!(Pi&130023424)&&(Pi=4194304)):t=1);var a=Ge();e=ea(e,t),e!==null&&(mi(e,t,a),it(e,a))}function i9(e){var t=e.memoizedState,a=0;t!==null&&(a=t.retryLane),b6(e,a)}function n9(e,t){var a=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;i!==null&&(a=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(k(314))}r!==null&&r.delete(t),b6(e,a)}var w6;w6=function(e,t,a){if(e!==null)if(e.memoizedProps!==t.pendingProps||at.current)tt=!0;else{if(!(e.lanes&a)&&!(t.flags&128))return tt=!1,$3(e,t,a);tt=!!(e.flags&131072)}else tt=!1,ve&&t.flags&1048576&&Eu(t,Dn,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;rn(e,t),e=t.pendingProps;var i=Gr(t,He.current);Hr(t,a),i=al(null,t,r,e,i,a);var n=rl();return t.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,rt(r)?(n=!0,Tn(t)):n=!1,t.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,Xo(t),i.updater=ed,t.stateNode=i,i._reactInternals=t,Yp(t,r,e,a),t=Xp(null,t,r,!0,n,a)):(t.tag=0,ve&&n&&Wo(t),$e(null,t,i,a),t=t.child),t;case 16:r=t.elementType;e:{switch(rn(e,t),e=t.pendingProps,i=r._init,r=i(r._payload),t.type=r,i=t.tag=p9(r),e=Et(r,e),i){case 0:t=Kp(null,t,r,e,a);break e;case 1:t=zs(null,t,r,e,a);break e;case 11:t=Hs(null,t,r,e,a);break e;case 14:t=Ws(null,t,r,Et(r.type,e),a);break e}throw Error(k(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Et(r,i),Kp(e,t,r,i,a);case 1:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Et(r,i),zs(e,t,r,i,a);case 3:e:{if(r6(t),e===null)throw Error(k(387));r=t.pendingProps,n=t.memoizedState,i=n.element,Ru(e,t),xn(t,r,null,a);var d=t.memoizedState;if(r=d.element,n.isDehydrated)if(n={element:r,isDehydrated:!1,cache:d.cache,pendingSuspenseBoundaries:d.pendingSuspenseBoundaries,transitions:d.transitions},t.updateQueue.baseState=n,t.memoizedState=n,t.flags&256){i=Xr(Error(k(423)),t),t=$s(e,t,r,a,i);break e}else if(r!==i){i=Xr(Error(k(424)),t),t=$s(e,t,r,a,i);break e}else for(ot=Ta(t.stateNode.containerInfo.firstChild),lt=t,ve=!0,Nt=null,a=xu(t,null,r,a),t.child=a;a;)a.flags=a.flags&-3|4096,a=a.sibling;else{if(Yr(),r===i){t=ta(e,t,a);break e}$e(e,t,r,a)}t=t.child}return t;case 5:return Pu(t),e===null&&zp(t),r=t.type,i=t.pendingProps,n=e!==null?e.memoizedProps:null,d=i.children,Fp(r,i)?d=null:n!==null&&Fp(r,n)&&(t.flags|=32),a6(e,t),$e(e,t,d,a),t.child;case 6:return e===null&&zp(t),null;case 13:return i6(e,t,a);case 4:return Jo(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=Qr(t,null,r,a):$e(e,t,r,a),t.child;case 11:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Et(r,i),Hs(e,t,r,i,a);case 7:return $e(e,t,t.pendingProps,a),t.child;case 8:return $e(e,t,t.pendingProps.children,a),t.child;case 12:return $e(e,t,t.pendingProps.children,a),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,n=t.memoizedProps,d=i.value,ue(Cn,r._currentValue),r._currentValue=d,n!==null)if(Pt(n.value,d)){if(n.children===i.children&&!at.current){t=ta(e,t,a);break e}}else for(n=t.child,n!==null&&(n.return=t);n!==null;){var p=n.dependencies;if(p!==null){d=n.child;for(var o=p.firstContext;o!==null;){if(o.context===r){if(n.tag===1){o=Kt(-1,a&-a),o.tag=2;var l=n.updateQueue;if(l!==null){l=l.shared;var s=l.pending;s===null?o.next=o:(o.next=s.next,s.next=o),l.pending=o}}n.lanes|=a,o=n.alternate,o!==null&&(o.lanes|=a),$p(n.return,a,t),p.lanes|=a;break}o=o.next}}else if(n.tag===10)d=n.type===t.type?null:n.child;else if(n.tag===18){if(d=n.return,d===null)throw Error(k(341));d.lanes|=a,p=d.alternate,p!==null&&(p.lanes|=a),$p(d,a,t),d=n.sibling}else d=n.child;if(d!==null)d.return=n;else for(d=n;d!==null;){if(d===t){d=null;break}if(n=d.sibling,n!==null){n.return=d.return,d=n;break}d=d.return}n=d}$e(e,t,i.children,a),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,Hr(t,a),i=yt(i),r=r(i),t.flags|=1,$e(e,t,r,a),t.child;case 14:return r=t.type,i=Et(r,t.pendingProps),i=Et(r.type,i),Ws(e,t,r,i,a);case 15:return e6(e,t,t.type,t.pendingProps,a);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Et(r,i),rn(e,t),t.tag=1,rt(r)?(e=!0,Tn(t)):e=!1,Hr(t,a),Xu(t,r,i),Yp(t,r,i,a),Xp(null,t,r,!0,e,a);case 19:return n6(e,t,a);case 22:return t6(e,t,a)}throw Error(k(156,t.tag))};function S6(e,t){return Y0(e,t)}function d9(e,t,a,r){this.tag=e,this.key=a,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function vt(e,t,a,r){return new d9(e,t,a,r)}function cl(e){return e=e.prototype,!(!e||!e.isReactComponent)}function p9(e){if(typeof e=="function")return cl(e)?1:0;if(e!=null){if(e=e.$$typeof,e===ko)return 11;if(e===Lo)return 14}return 2}function Na(e,t){var a=e.alternate;return a===null?(a=vt(e.tag,t,e.key,e.mode),a.elementType=e.elementType,a.type=e.type,a.stateNode=e.stateNode,a.alternate=e,e.alternate=a):(a.pendingProps=t,a.type=e.type,a.flags=0,a.subtreeFlags=0,a.deletions=null),a.flags=e.flags&14680064,a.childLanes=e.childLanes,a.lanes=e.lanes,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,t=e.dependencies,a.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},a.sibling=e.sibling,a.index=e.index,a.ref=e.ref,a}function pn(e,t,a,r,i,n){var d=2;if(r=e,typeof e=="function")cl(e)&&(d=1);else if(typeof e=="string")d=5;else e:switch(e){case Nr:return tr(a.children,i,n,t);case Po:d=8,i|=8;break;case yp:return e=vt(12,a,t,i|2),e.elementType=yp,e.lanes=n,e;case bp:return e=vt(13,a,t,i),e.elementType=bp,e.lanes=n,e;case wp:return e=vt(19,a,t,i),e.elementType=wp,e.lanes=n,e;case P0:return rd(a,i,n,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case A0:d=10;break e;case R0:d=9;break e;case ko:d=11;break e;case Lo:d=14;break e;case ma:d=16,r=null;break e}throw Error(k(130,e==null?e:typeof e,""))}return t=vt(d,a,t,i),t.elementType=e,t.type=r,t.lanes=n,t}function tr(e,t,a,r){return e=vt(7,e,r,t),e.lanes=a,e}function rd(e,t,a,r){return e=vt(22,e,r,t),e.elementType=P0,e.lanes=a,e.stateNode={isHidden:!1},e}function Kd(e,t,a){return e=vt(6,e,null,t),e.lanes=a,e}function Xd(e,t,a){return t=vt(4,e.children!==null?e.children:[],e.key,t),t.lanes=a,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function o9(e,t,a,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Pd(0),this.expirationTimes=Pd(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Pd(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function fl(e,t,a,r,i,n,d,p,o){return e=new o9(e,t,a,p,o),t===1?(t=1,n===!0&&(t|=8)):t=0,n=vt(3,null,null,t),e.current=n,n.stateNode=e,n.memoizedState={element:r,isDehydrated:a,cache:null,transitions:null,pendingSuspenseBoundaries:null},Xo(n),e}function l9(e,t,a){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Cr,key:r==null?null:""+r,children:e,containerInfo:t,implementation:a}}function _6(e){if(!e)return Aa;e=e._reactInternals;e:{if(ur(e)!==e||e.tag!==1)throw Error(k(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(rt(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(k(171))}if(e.tag===1){var a=e.type;if(rt(a))return _u(e,a,t)}return t}function T6(e,t,a,r,i,n,d,p,o){return e=fl(a,r,!0,e,i,n,d,p,o),e.context=_6(null),a=e.current,r=Ge(),i=Ca(a),n=Kt(r,i),n.callback=t??null,Ea(a,n,i),e.current.lanes=i,mi(e,i,r),it(e,r),e}function id(e,t,a,r){var i=t.current,n=Ge(),d=Ca(i);return a=_6(a),t.context===null?t.context=a:t.pendingContext=a,t=Kt(n,d),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),e=Ea(i,t,d),e!==null&&(Rt(e,i,d,n),en(e,i,d)),d}function Bn(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function a2(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var a=e.retryLane;e.retryLane=a!==0&&a<t?a:t}}function hl(e,t){a2(e,t),(e=e.alternate)&&a2(e,t)}function s9(){return null}var E6=typeof reportError=="function"?reportError:function(e){console.error(e)};function vl(e){this._internalRoot=e}nd.prototype.render=vl.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(k(409));id(e,t,null,null)};nd.prototype.unmount=vl.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;dr(function(){id(null,e,null,null)}),t[Zt]=null}};function nd(e){this._internalRoot=e}nd.prototype.unstable_scheduleHydration=function(e){if(e){var t=tu();e={blockedOn:null,target:e,priority:t};for(var a=0;a<fa.length&&t!==0&&t<fa[a].priority;a++);fa.splice(a,0,e),a===0&&ru(e)}};function gl(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function dd(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function r2(){}function u9(e,t,a,r,i){if(i){if(typeof r=="function"){var n=r;r=function(){var l=Bn(d);n.call(l)}}var d=T6(t,r,e,0,null,!1,!1,"",r2);return e._reactRootContainer=d,e[Zt]=d.current,Z1(e.nodeType===8?e.parentNode:e),dr(),d}for(;i=e.lastChild;)e.removeChild(i);if(typeof r=="function"){var p=r;r=function(){var l=Bn(o);p.call(l)}}var o=fl(e,0,!1,null,null,!1,!1,"",r2);return e._reactRootContainer=o,e[Zt]=o.current,Z1(e.nodeType===8?e.parentNode:e),dr(function(){id(t,o,a,r)}),o}function pd(e,t,a,r,i){var n=a._reactRootContainer;if(n){var d=n;if(typeof i=="function"){var p=i;i=function(){var o=Bn(d);p.call(o)}}id(t,d,e,i)}else d=u9(a,t,e,i,r);return Bn(d)}Z0=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var a=A1(t.pendingLanes);a!==0&&(Bo(t,a|1),it(t,Ee()),!(ee&6)&&(Jr=Ee()+500,ka()))}break;case 13:dr(function(){var r=ea(e,1);if(r!==null){var i=Ge();Rt(r,e,1,i)}}),hl(e,1)}};qo=function(e){if(e.tag===13){var t=ea(e,134217728);if(t!==null){var a=Ge();Rt(t,e,134217728,a)}hl(e,134217728)}};eu=function(e){if(e.tag===13){var t=Ca(e),a=ea(e,t);if(a!==null){var r=Ge();Rt(a,e,t,r)}hl(e,t)}};tu=function(){return pe};au=function(e,t){var a=pe;try{return pe=e,t()}finally{pe=a}};Rp=function(e,t,a){switch(t){case"input":if(Tp(e,a),t=a.name,a.type==="radio"&&t!=null){for(a=e;a.parentNode;)a=a.parentNode;for(a=a.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<a.length;t++){var r=a[t];if(r!==e&&r.form===e.form){var i=Xn(r);if(!i)throw Error(k(90));L0(r),Tp(r,i)}}}break;case"textarea":O0(e,a);break;case"select":t=a.value,t!=null&&jr(e,!!a.multiple,t,!1)}};U0=sl;H0=dr;var m9={usingClientEntryPoint:!1,Events:[fi,Pr,Xn,F0,I0,sl]},w1={findFiberByHostInstance:Ya,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},c9={bundleType:w1.bundleType,version:w1.version,rendererPackageName:w1.rendererPackageName,rendererConfig:w1.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=$0(e),e===null?null:e.stateNode},findFiberByHostInstance:w1.findFiberByHostInstance||s9,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Ui=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ui.isDisabled&&Ui.supportsFiber)try{Gn=Ui.inject(c9),Mt=Ui}catch{}}ut.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=m9;ut.createPortal=function(e,t){var a=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!gl(t))throw Error(k(200));return l9(e,t,null,a)};ut.createRoot=function(e,t){if(!gl(e))throw Error(k(299));var a=!1,r="",i=E6;return t!=null&&(t.unstable_strictMode===!0&&(a=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),t=fl(e,1,!1,null,null,a,!1,r,i),e[Zt]=t.current,Z1(e.nodeType===8?e.parentNode:e),new vl(t)};ut.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(k(188)):(e=Object.keys(e).join(","),Error(k(268,e)));return e=$0(t),e=e===null?null:e.stateNode,e};ut.flushSync=function(e){return dr(e)};ut.hydrate=function(e,t,a){if(!dd(t))throw Error(k(200));return pd(null,e,t,!0,a)};ut.hydrateRoot=function(e,t,a){if(!gl(e))throw Error(k(405));var r=a!=null&&a.hydratedSources||null,i=!1,n="",d=E6;if(a!=null&&(a.unstable_strictMode===!0&&(i=!0),a.identifierPrefix!==void 0&&(n=a.identifierPrefix),a.onRecoverableError!==void 0&&(d=a.onRecoverableError)),t=T6(t,null,e,1,a??null,i,!1,n,d),e[Zt]=t.current,Z1(e),r)for(e=0;e<r.length;e++)a=r[e],i=a._getVersion,i=i(a._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[a,i]:t.mutableSourceEagerHydrationData.push(a,i);return new nd(t)};ut.render=function(e,t,a){if(!dd(t))throw Error(k(200));return pd(null,e,t,!1,a)};ut.unmountComponentAtNode=function(e){if(!dd(e))throw Error(k(40));return e._reactRootContainer?(dr(function(){pd(null,null,e,!1,function(){e._reactRootContainer=null,e[Zt]=null})}),!0):!1};ut.unstable_batchedUpdates=sl;ut.unstable_renderSubtreeIntoContainer=function(e,t,a,r){if(!dd(a))throw Error(k(200));if(e==null||e._reactInternals===void 0)throw Error(k(38));return pd(e,t,a,!1,r)};ut.version="18.3.1-next-f1338f8080-20240426";function D6(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(D6)}catch(e){console.error(e)}}D6(),D0.exports=ut;var yl=D0.exports;const f9=m0(yl),h9=u0({__proto__:null,default:f9},[yl]);var C6,i2=yl;C6=i2.createRoot,i2.hydrateRoot;/**
 * @remix-run/router v1.21.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function he(){return he=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},he.apply(this,arguments)}var Ce;(function(e){e.Pop="POP",e.Push="PUSH",e.Replace="REPLACE"})(Ce||(Ce={}));const n2="popstate";function v9(e){e===void 0&&(e={});function t(i,n){let{pathname:d="/",search:p="",hash:o=""}=ia(i.location.hash.substr(1));return!d.startsWith("/")&&!d.startsWith(".")&&(d="/"+d),oi("",{pathname:d,search:p,hash:o},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}function a(i,n){let d=i.document.querySelector("base"),p="";if(d&&d.getAttribute("href")){let o=i.location.href,l=o.indexOf("#");p=l===-1?o:o.slice(0,l)}return p+"#"+(typeof n=="string"?n:or(n))}function r(i,n){pr(i.pathname.charAt(0)==="/","relative pathnames are not supported in hash history.push("+JSON.stringify(n)+")")}return y9(t,a,r,e)}function X(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function pr(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function g9(){return Math.random().toString(36).substr(2,8)}function d2(e,t){return{usr:e.state,key:e.key,idx:t}}function oi(e,t,a,r){return a===void 0&&(a=null),he({pathname:typeof e=="string"?e:e.pathname,search:"",hash:""},typeof t=="string"?ia(t):t,{state:a,key:t&&t.key||r||g9()})}function or(e){let{pathname:t="/",search:a="",hash:r=""}=e;return a&&a!=="?"&&(t+=a.charAt(0)==="?"?a:"?"+a),r&&r!=="#"&&(t+=r.charAt(0)==="#"?r:"#"+r),t}function ia(e){let t={};if(e){let a=e.indexOf("#");a>=0&&(t.hash=e.substr(a),e=e.substr(0,a));let r=e.indexOf("?");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function y9(e,t,a,r){r===void 0&&(r={});let{window:i=document.defaultView,v5Compat:n=!1}=r,d=i.history,p=Ce.Pop,o=null,l=s();l==null&&(l=0,d.replaceState(he({},d.state,{idx:l}),""));function s(){return(d.state||{idx:null}).idx}function u(){p=Ce.Pop;let N=s(),f=N==null?null:N-l;l=N,o&&o({action:p,location:_.location,delta:f})}function m(N,f){p=Ce.Push;let c=oi(_.location,N,f);a&&a(c,N),l=s()+1;let v=d2(c,l),D=_.createHref(c);try{d.pushState(v,"",D)}catch(P){if(P instanceof DOMException&&P.name==="DataCloneError")throw P;i.location.assign(D)}n&&o&&o({action:p,location:_.location,delta:1})}function h(N,f){p=Ce.Replace;let c=oi(_.location,N,f);a&&a(c,N),l=s();let v=d2(c,l),D=_.createHref(c);d.replaceState(v,"",D),n&&o&&o({action:p,location:_.location,delta:0})}function w(N){let f=i.location.origin!=="null"?i.location.origin:i.location.href,c=typeof N=="string"?N:or(N);return c=c.replace(/ $/,"%20"),X(f,"No window.location.(origin|href) available to create URL for href: "+c),new URL(c,f)}let _={get action(){return p},get location(){return e(i,d)},listen(N){if(o)throw new Error("A history only accepts one active listener");return i.addEventListener(n2,u),o=N,()=>{i.removeEventListener(n2,u),o=null}},createHref(N){return t(i,N)},createURL:w,encodeLocation(N){let f=w(N);return{pathname:f.pathname,search:f.search,hash:f.hash}},push:m,replace:h,go(N){return d.go(N)}};return _}var oe;(function(e){e.data="data",e.deferred="deferred",e.redirect="redirect",e.error="error"})(oe||(oe={}));const b9=new Set(["lazy","caseSensitive","path","id","index","children"]);function w9(e){return e.index===!0}function qn(e,t,a,r){return a===void 0&&(a=[]),r===void 0&&(r={}),e.map((i,n)=>{let d=[...a,String(n)],p=typeof i.id=="string"?i.id:d.join("-");if(X(i.index!==!0||!i.children,"Cannot specify children on an index route"),X(!r[p],'Found a route id collision on id "'+p+`".  Route id's must be globally unique within Data Router usages`),w9(i)){let o=he({},i,t(i),{id:p});return r[p]=o,o}else{let o=he({},i,t(i),{id:p,children:void 0});return r[p]=o,i.children&&(o.children=qn(i.children,t,d,r)),o}})}function Wa(e,t,a){return a===void 0&&(a="/"),on(e,t,a,!1)}function on(e,t,a,r){let i=typeof t=="string"?ia(t):t,n=i1(i.pathname||"/",a);if(n==null)return null;let d=N6(e);_9(d);let p=null;for(let o=0;p==null&&o<d.length;++o){let l=L9(n);p=P9(d[o],l,r)}return p}function S9(e,t){let{route:a,pathname:r,params:i}=e;return{id:a.id,pathname:r,params:i,data:t[a.id],handle:a.handle}}function N6(e,t,a,r){t===void 0&&(t=[]),a===void 0&&(a=[]),r===void 0&&(r="");let i=(n,d,p)=>{let o={relativePath:p===void 0?n.path||"":p,caseSensitive:n.caseSensitive===!0,childrenIndex:d,route:n};o.relativePath.startsWith("/")&&(X(o.relativePath.startsWith(r),'Absolute route path "'+o.relativePath+'" nested under path '+('"'+r+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),o.relativePath=o.relativePath.slice(r.length));let l=Xt([r,o.relativePath]),s=a.concat(o);n.children&&n.children.length>0&&(X(n.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+l+'".')),N6(n.children,t,s,l)),!(n.path==null&&!n.index)&&t.push({path:l,score:A9(l,n.index),routesMeta:s})};return e.forEach((n,d)=>{var p;if(n.path===""||!((p=n.path)!=null&&p.includes("?")))i(n,d);else for(let o of x6(n.path))i(n,d,o)}),t}function x6(e){let t=e.split("/");if(t.length===0)return[];let[a,...r]=t,i=a.endsWith("?"),n=a.replace(/\?$/,"");if(r.length===0)return i?[n,""]:[n];let d=x6(r.join("/")),p=[];return p.push(...d.map(o=>o===""?n:[n,o].join("/"))),i&&p.push(...d),p.map(o=>e.startsWith("/")&&o===""?"/":o)}function _9(e){e.sort((t,a)=>t.score!==a.score?a.score-t.score:R9(t.routesMeta.map(r=>r.childrenIndex),a.routesMeta.map(r=>r.childrenIndex)))}const T9=/^:[\w-]+$/,E9=3,D9=2,C9=1,N9=10,x9=-2,p2=e=>e==="*";function A9(e,t){let a=e.split("/"),r=a.length;return a.some(p2)&&(r+=x9),t&&(r+=D9),a.filter(i=>!p2(i)).reduce((i,n)=>i+(T9.test(n)?E9:n===""?C9:N9),r)}function R9(e,t){return e.length===t.length&&e.slice(0,-1).every((r,i)=>r===t[i])?e[e.length-1]-t[t.length-1]:0}function P9(e,t,a){a===void 0&&(a=!1);let{routesMeta:r}=e,i={},n="/",d=[];for(let p=0;p<r.length;++p){let o=r[p],l=p===r.length-1,s=n==="/"?t:t.slice(n.length)||"/",u=o2({path:o.relativePath,caseSensitive:o.caseSensitive,end:l},s),m=o.route;if(!u&&l&&a&&!r[r.length-1].route.index&&(u=o2({path:o.relativePath,caseSensitive:o.caseSensitive,end:!1},s)),!u)return null;Object.assign(i,u.params),d.push({params:i,pathname:Xt([n,u.pathname]),pathnameBase:B9(Xt([n,u.pathnameBase])),route:m}),u.pathnameBase!=="/"&&(n=Xt([n,u.pathnameBase]))}return d}function o2(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[a,r]=k9(e.path,e.caseSensitive,e.end),i=t.match(a);if(!i)return null;let n=i[0],d=n.replace(/(.)\/+$/,"$1"),p=i.slice(1);return{params:r.reduce((l,s,u)=>{let{paramName:m,isOptional:h}=s;if(m==="*"){let _=p[u]||"";d=n.slice(0,n.length-_.length).replace(/(.)\/+$/,"$1")}const w=p[u];return h&&!w?l[m]=void 0:l[m]=(w||"").replace(/%2F/g,"/"),l},{}),pathname:n,pathnameBase:d,pattern:e}}function k9(e,t,a){t===void 0&&(t=!1),a===void 0&&(a=!0),pr(e==="*"||!e.endsWith("*")||e.endsWith("/*"),'Route path "'+e+'" will be treated as if it were '+('"'+e.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+e.replace(/\*$/,"/*")+'".'));let r=[],i="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(d,p,o)=>(r.push({paramName:p,isOptional:o!=null}),o?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(r.push({paramName:"*"}),i+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):a?i+="\\/*$":e!==""&&e!=="/"&&(i+="(?:(?=\\/|$))"),[new RegExp(i,t?void 0:"i"),r]}function L9(e){try{return e.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(t){return pr(!1,'The URL path "'+e+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+t+").")),e}}function i1(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let a=t.endsWith("/")?t.length-1:t.length,r=e.charAt(a);return r&&r!=="/"?null:e.slice(a)||"/"}function V9(e,t){t===void 0&&(t="/");let{pathname:a,search:r="",hash:i=""}=typeof e=="string"?ia(e):e;return{pathname:a?a.startsWith("/")?a:O9(a,t):t,search:q9(r),hash:M9(i)}}function O9(e,t){let a=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(i=>{i===".."?a.length>1&&a.pop():i!=="."&&a.push(i)}),a.length>1?a.join("/"):"/"}function Jd(e,t,a,r){return"Cannot include a '"+e+"' character in a manually specified "+("`to."+t+"` field ["+JSON.stringify(r)+"].  Please separate it out to the ")+("`to."+a+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function A6(e){return e.filter((t,a)=>a===0||t.route.path&&t.route.path.length>0)}function bl(e,t){let a=A6(e);return t?a.map((r,i)=>i===a.length-1?r.pathname:r.pathnameBase):a.map(r=>r.pathnameBase)}function wl(e,t,a,r){r===void 0&&(r=!1);let i;typeof e=="string"?i=ia(e):(i=he({},e),X(!i.pathname||!i.pathname.includes("?"),Jd("?","pathname","search",i)),X(!i.pathname||!i.pathname.includes("#"),Jd("#","pathname","hash",i)),X(!i.search||!i.search.includes("#"),Jd("#","search","hash",i)));let n=e===""||i.pathname==="",d=n?"/":i.pathname,p;if(d==null)p=a;else{let u=t.length-1;if(!r&&d.startsWith("..")){let m=d.split("/");for(;m[0]==="..";)m.shift(),u-=1;i.pathname=m.join("/")}p=u>=0?t[u]:"/"}let o=V9(i,p),l=d&&d!=="/"&&d.endsWith("/"),s=(n||d===".")&&a.endsWith("/");return!o.pathname.endsWith("/")&&(l||s)&&(o.pathname+="/"),o}const Xt=e=>e.join("/").replace(/\/\/+/g,"/"),B9=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),q9=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,M9=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;class Mn{constructor(t,a,r,i){i===void 0&&(i=!1),this.status=t,this.statusText=a||"",this.internal=i,r instanceof Error?(this.data=r.toString(),this.error=r):this.data=r}}function od(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}const R6=["post","put","patch","delete"],j9=new Set(R6),F9=["get",...R6],I9=new Set(F9),U9=new Set([301,302,303,307,308]),H9=new Set([307,308]),Zd={state:"idle",location:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},W9={state:"idle",data:void 0,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0},S1={state:"unblocked",proceed:void 0,reset:void 0,location:void 0},Sl=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,z9=e=>({hasErrorBoundary:!!e.hasErrorBoundary}),P6="remix-router-transitions";function $9(e){const t=e.window?e.window:typeof window<"u"?window:void 0,a=typeof t<"u"&&typeof t.document<"u"&&typeof t.document.createElement<"u",r=!a;X(e.routes.length>0,"You must provide a non-empty routes array to createRouter");let i;if(e.mapRouteProperties)i=e.mapRouteProperties;else if(e.detectErrorBoundary){let g=e.detectErrorBoundary;i=T=>({hasErrorBoundary:g(T)})}else i=z9;let n={},d=qn(e.routes,i,void 0,n),p,o=e.basename||"/",l=e.dataStrategy||K9,s=e.patchRoutesOnNavigation,u=he({v7_fetcherPersist:!1,v7_normalizeFormMethod:!1,v7_partialHydration:!1,v7_prependBasename:!1,v7_relativeSplatPath:!1,v7_skipActionErrorRevalidation:!1},e.future),m=null,h=new Set,w=null,_=null,N=null,f=e.hydrationData!=null,c=Wa(d,e.history.location,o),v=null;if(c==null&&!s){let g=Xe(404,{pathname:e.history.location.pathname}),{matches:T,route:E}=b2(d);c=T,v={[E.id]:g}}c&&!e.hydrationData&&_i(c,d,e.history.location.pathname).active&&(c=null);let D;if(c)if(c.some(g=>g.route.lazy))D=!1;else if(!c.some(g=>g.route.loader))D=!0;else if(u.v7_partialHydration){let g=e.hydrationData?e.hydrationData.loaderData:null,T=e.hydrationData?e.hydrationData.errors:null;if(T){let E=c.findIndex(A=>T[A.route.id]!==void 0);D=c.slice(0,E+1).every(A=>!uo(A.route,g,T))}else D=c.every(E=>!uo(E.route,g,T))}else D=e.hydrationData!=null;else if(D=!1,c=[],u.v7_partialHydration){let g=_i(null,d,e.history.location.pathname);g.active&&g.matches&&(c=g.matches)}let P,S={historyAction:e.history.action,location:e.history.location,matches:c,initialized:D,navigation:Zd,restoreScrollPosition:e.hydrationData!=null?!1:null,preventScrollReset:!1,revalidation:"idle",loaderData:e.hydrationData&&e.hydrationData.loaderData||{},actionData:e.hydrationData&&e.hydrationData.actionData||null,errors:e.hydrationData&&e.hydrationData.errors||v,fetchers:new Map,blockers:new Map},L=Ce.Pop,x=!1,R,C=!1,V=new Map,W=null,J=!1,de=!1,nt=[],wt=new Set,ne=new Map,O=0,z=-1,$=new Map,re=new Set,me=new Map,kt=new Map,Le=new Set,St=new Map,We=new Map,It;function Dm(){if(m=e.history.listen(g=>{let{action:T,location:E,delta:A}=g;if(It){It(),It=void 0;return}pr(We.size===0||A!=null,"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");let q=$l({currentLocation:S.location,nextLocation:E,historyAction:T});if(q&&A!=null){let U=new Promise(G=>{It=G});e.history.go(A*-1),Si(q,{state:"blocked",location:E,proceed(){Si(q,{state:"proceeding",proceed:void 0,reset:void 0,location:E}),U.then(()=>e.history.go(A))},reset(){let G=new Map(S.blockers);G.set(q,S1),ze({blockers:G})}});return}return qa(T,E)}),a){s5(t,V);let g=()=>u5(t,V);t.addEventListener("pagehide",g),W=()=>t.removeEventListener("pagehide",g)}return S.initialized||qa(Ce.Pop,S.location,{initialHydration:!0}),P}function Cm(){m&&m(),W&&W(),h.clear(),R&&R.abort(),S.fetchers.forEach((g,T)=>wi(T)),S.blockers.forEach((g,T)=>zl(T))}function Nm(g){return h.add(g),()=>h.delete(g)}function ze(g,T){T===void 0&&(T={}),S=he({},S,g);let E=[],A=[];u.v7_fetcherPersist&&S.fetchers.forEach((q,U)=>{q.state==="idle"&&(Le.has(U)?A.push(U):E.push(U))}),[...h].forEach(q=>q(S,{deletedFetchers:A,viewTransitionOpts:T.viewTransitionOpts,flushSync:T.flushSync===!0})),u.v7_fetcherPersist&&(E.forEach(q=>S.fetchers.delete(q)),A.forEach(q=>wi(q)))}function fr(g,T,E){var A,q;let{flushSync:U}=E===void 0?{}:E,G=S.actionData!=null&&S.navigation.formMethod!=null&&Ct(S.navigation.formMethod)&&S.navigation.state==="loading"&&((A=g.state)==null?void 0:A._isRedirect)!==!0,j;T.actionData?Object.keys(T.actionData).length>0?j=T.actionData:j=null:G?j=S.actionData:j=null;let F=T.loaderData?g2(S.loaderData,T.loaderData,T.matches||[],T.errors):S.loaderData,M=S.blockers;M.size>0&&(M=new Map(M),M.forEach((Z,Ve)=>M.set(Ve,S1)));let H=x===!0||S.navigation.formMethod!=null&&Ct(S.navigation.formMethod)&&((q=g.state)==null?void 0:q._isRedirect)!==!0;p&&(d=p,p=void 0),J||L===Ce.Pop||(L===Ce.Push?e.history.push(g,g.state):L===Ce.Replace&&e.history.replace(g,g.state));let Q;if(L===Ce.Pop){let Z=V.get(S.location.pathname);Z&&Z.has(g.pathname)?Q={currentLocation:S.location,nextLocation:g}:V.has(g.pathname)&&(Q={currentLocation:g,nextLocation:S.location})}else if(C){let Z=V.get(S.location.pathname);Z?Z.add(g.pathname):(Z=new Set([g.pathname]),V.set(S.location.pathname,Z)),Q={currentLocation:S.location,nextLocation:g}}ze(he({},T,{actionData:j,loaderData:F,historyAction:L,location:g,initialized:!0,navigation:Zd,revalidation:"idle",restoreScrollPosition:Yl(g,T.matches||S.matches),preventScrollReset:H,blockers:M}),{viewTransitionOpts:Q,flushSync:U===!0}),L=Ce.Pop,x=!1,C=!1,J=!1,de=!1,nt=[]}async function Ml(g,T){if(typeof g=="number"){e.history.go(g);return}let E=so(S.location,S.matches,o,u.v7_prependBasename,g,u.v7_relativeSplatPath,T==null?void 0:T.fromRouteId,T==null?void 0:T.relative),{path:A,submission:q,error:U}=l2(u.v7_normalizeFormMethod,!1,E,T),G=S.location,j=oi(S.location,A,T&&T.state);j=he({},j,e.history.encodeLocation(j));let F=T&&T.replace!=null?T.replace:void 0,M=Ce.Push;F===!0?M=Ce.Replace:F===!1||q!=null&&Ct(q.formMethod)&&q.formAction===S.location.pathname+S.location.search&&(M=Ce.Replace);let H=T&&"preventScrollReset"in T?T.preventScrollReset===!0:void 0,Q=(T&&T.flushSync)===!0,Z=$l({currentLocation:G,nextLocation:j,historyAction:M});if(Z){Si(Z,{state:"blocked",location:j,proceed(){Si(Z,{state:"proceeding",proceed:void 0,reset:void 0,location:j}),Ml(g,T)},reset(){let Ve=new Map(S.blockers);Ve.set(Z,S1),ze({blockers:Ve})}});return}return await qa(M,j,{submission:q,pendingError:U,preventScrollReset:H,replace:T&&T.replace,enableViewTransition:T&&T.viewTransition,flushSync:Q})}function xm(){if(_d(),ze({revalidation:"loading"}),S.navigation.state!=="submitting"){if(S.navigation.state==="idle"){qa(S.historyAction,S.location,{startUninterruptedRevalidation:!0});return}qa(L||S.historyAction,S.navigation.location,{overrideNavigation:S.navigation,enableViewTransition:C===!0})}}async function qa(g,T,E){R&&R.abort(),R=null,L=g,J=(E&&E.startUninterruptedRevalidation)===!0,Mm(S.location,S.matches),x=(E&&E.preventScrollReset)===!0,C=(E&&E.enableViewTransition)===!0;let A=p||d,q=E&&E.overrideNavigation,U=Wa(A,T,o),G=(E&&E.flushSync)===!0,j=_i(U,A,T.pathname);if(j.active&&j.matches&&(U=j.matches),!U){let{error:se,notFoundMatches:ie,route:Se}=Td(T.pathname);fr(T,{matches:ie,loaderData:{},errors:{[Se.id]:se}},{flushSync:G});return}if(S.initialized&&!de&&a5(S.location,T)&&!(E&&E.submission&&Ct(E.submission.formMethod))){fr(T,{matches:U},{flushSync:G});return}R=new AbortController;let F=br(e.history,T,R.signal,E&&E.submission),M;if(E&&E.pendingError)M=[za(U).route.id,{type:oe.error,error:E.pendingError}];else if(E&&E.submission&&Ct(E.submission.formMethod)){let se=await Am(F,T,E.submission,U,j.active,{replace:E.replace,flushSync:G});if(se.shortCircuited)return;if(se.pendingActionResult){let[ie,Se]=se.pendingActionResult;if(pt(Se)&&od(Se.error)&&Se.error.status===404){R=null,fr(T,{matches:se.matches,loaderData:{},errors:{[ie]:Se.error}});return}}U=se.matches||U,M=se.pendingActionResult,q=ep(T,E.submission),G=!1,j.active=!1,F=br(e.history,F.url,F.signal)}let{shortCircuited:H,matches:Q,loaderData:Z,errors:Ve}=await Rm(F,T,U,j.active,q,E&&E.submission,E&&E.fetcherSubmission,E&&E.replace,E&&E.initialHydration===!0,G,M);H||(R=null,fr(T,he({matches:Q||U},y2(M),{loaderData:Z,errors:Ve})))}async function Am(g,T,E,A,q,U){U===void 0&&(U={}),_d();let G=o5(T,E);if(ze({navigation:G},{flushSync:U.flushSync===!0}),q){let M=await Ti(A,T.pathname,g.signal);if(M.type==="aborted")return{shortCircuited:!0};if(M.type==="error"){let H=za(M.partialMatches).route.id;return{matches:M.partialMatches,pendingActionResult:[H,{type:oe.error,error:M.error}]}}else if(M.matches)A=M.matches;else{let{notFoundMatches:H,error:Q,route:Z}=Td(T.pathname);return{matches:H,pendingActionResult:[Z.id,{type:oe.error,error:Q}]}}}let j,F=P1(A,T);if(!F.route.action&&!F.route.lazy)j={type:oe.error,error:Xe(405,{method:g.method,pathname:T.pathname,routeId:F.route.id})};else if(j=(await l1("action",S,g,[F],A,null))[F.route.id],g.signal.aborted)return{shortCircuited:!0};if(Xa(j)){let M;return U&&U.replace!=null?M=U.replace:M=f2(j.response.headers.get("Location"),new URL(g.url),o)===S.location.pathname+S.location.search,await Ma(g,j,!0,{submission:E,replace:M}),{shortCircuited:!0}}if(ya(j))throw Xe(400,{type:"defer-action"});if(pt(j)){let M=za(A,F.route.id);return(U&&U.replace)!==!0&&(L=Ce.Push),{matches:A,pendingActionResult:[M.route.id,j]}}return{matches:A,pendingActionResult:[F.route.id,j]}}async function Rm(g,T,E,A,q,U,G,j,F,M,H){let Q=q||ep(T,U),Z=U||G||S2(Q),Ve=!J&&(!u.v7_partialHydration||!F);if(A){if(Ve){let _e=jl(H);ze(he({navigation:Q},_e!==void 0?{actionData:_e}:{}),{flushSync:M})}let ae=await Ti(E,T.pathname,g.signal);if(ae.type==="aborted")return{shortCircuited:!0};if(ae.type==="error"){let _e=za(ae.partialMatches).route.id;return{matches:ae.partialMatches,loaderData:{},errors:{[_e]:ae.error}}}else if(ae.matches)E=ae.matches;else{let{error:_e,notFoundMatches:vr,route:m1}=Td(T.pathname);return{matches:vr,loaderData:{},errors:{[m1.id]:_e}}}}let se=p||d,[ie,Se]=u2(e.history,S,E,Z,T,u.v7_partialHydration&&F===!0,u.v7_skipActionErrorRevalidation,de,nt,wt,Le,me,re,se,o,H);if(Ed(ae=>!(E&&E.some(_e=>_e.route.id===ae))||ie&&ie.some(_e=>_e.route.id===ae)),z=++O,ie.length===0&&Se.length===0){let ae=Hl();return fr(T,he({matches:E,loaderData:{},errors:H&&pt(H[1])?{[H[0]]:H[1].error}:null},y2(H),ae?{fetchers:new Map(S.fetchers)}:{}),{flushSync:M}),{shortCircuited:!0}}if(Ve){let ae={};if(!A){ae.navigation=Q;let _e=jl(H);_e!==void 0&&(ae.actionData=_e)}Se.length>0&&(ae.fetchers=Pm(Se)),ze(ae,{flushSync:M})}Se.forEach(ae=>{pa(ae.key),ae.controller&&ne.set(ae.key,ae.controller)});let hr=()=>Se.forEach(ae=>pa(ae.key));R&&R.signal.addEventListener("abort",hr);let{loaderResults:s1,fetcherResults:Ht}=await Fl(S,E,ie,Se,g);if(g.signal.aborted)return{shortCircuited:!0};R&&R.signal.removeEventListener("abort",hr),Se.forEach(ae=>ne.delete(ae.key));let Lt=Hi(s1);if(Lt)return await Ma(g,Lt.result,!0,{replace:j}),{shortCircuited:!0};if(Lt=Hi(Ht),Lt)return re.add(Lt.key),await Ma(g,Lt.result,!0,{replace:j}),{shortCircuited:!0};let{loaderData:Dd,errors:u1}=v2(S,E,s1,H,Se,Ht,St);St.forEach((ae,_e)=>{ae.subscribe(vr=>{(vr||ae.done)&&St.delete(_e)})}),u.v7_partialHydration&&F&&S.errors&&(u1=he({},S.errors,u1));let ja=Hl(),Ei=Wl(z),Di=ja||Ei||Se.length>0;return he({matches:E,loaderData:Dd,errors:u1},Di?{fetchers:new Map(S.fetchers)}:{})}function jl(g){if(g&&!pt(g[1]))return{[g[0]]:g[1].data};if(S.actionData)return Object.keys(S.actionData).length===0?null:S.actionData}function Pm(g){return g.forEach(T=>{let E=S.fetchers.get(T.key),A=_1(void 0,E?E.data:void 0);S.fetchers.set(T.key,A)}),new Map(S.fetchers)}function km(g,T,E,A){if(r)throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");pa(g);let q=(A&&A.flushSync)===!0,U=p||d,G=so(S.location,S.matches,o,u.v7_prependBasename,E,u.v7_relativeSplatPath,T,A==null?void 0:A.relative),j=Wa(U,G,o),F=_i(j,U,G);if(F.active&&F.matches&&(j=F.matches),!j){Ut(g,T,Xe(404,{pathname:G}),{flushSync:q});return}let{path:M,submission:H,error:Q}=l2(u.v7_normalizeFormMethod,!0,G,A);if(Q){Ut(g,T,Q,{flushSync:q});return}let Z=P1(j,M),Ve=(A&&A.preventScrollReset)===!0;if(H&&Ct(H.formMethod)){Lm(g,T,M,Z,j,F.active,q,Ve,H);return}me.set(g,{routeId:T,path:M}),Vm(g,T,M,Z,j,F.active,q,Ve,H)}async function Lm(g,T,E,A,q,U,G,j,F){_d(),me.delete(g);function M(De){if(!De.route.action&&!De.route.lazy){let gr=Xe(405,{method:F.formMethod,pathname:E,routeId:T});return Ut(g,T,gr,{flushSync:G}),!0}return!1}if(!U&&M(A))return;let H=S.fetchers.get(g);da(g,l5(F,H),{flushSync:G});let Q=new AbortController,Z=br(e.history,E,Q.signal,F);if(U){let De=await Ti(q,E,Z.signal);if(De.type==="aborted")return;if(De.type==="error"){Ut(g,T,De.error,{flushSync:G});return}else if(De.matches){if(q=De.matches,A=P1(q,E),M(A))return}else{Ut(g,T,Xe(404,{pathname:E}),{flushSync:G});return}}ne.set(g,Q);let Ve=O,ie=(await l1("action",S,Z,[A],q,g))[A.route.id];if(Z.signal.aborted){ne.get(g)===Q&&ne.delete(g);return}if(u.v7_fetcherPersist&&Le.has(g)){if(Xa(ie)||pt(ie)){da(g,sa(void 0));return}}else{if(Xa(ie))if(ne.delete(g),z>Ve){da(g,sa(void 0));return}else return re.add(g),da(g,_1(F)),Ma(Z,ie,!1,{fetcherSubmission:F,preventScrollReset:j});if(pt(ie)){Ut(g,T,ie.error);return}}if(ya(ie))throw Xe(400,{type:"defer-action"});let Se=S.navigation.location||S.location,hr=br(e.history,Se,Q.signal),s1=p||d,Ht=S.navigation.state!=="idle"?Wa(s1,S.navigation.location,o):S.matches;X(Ht,"Didn't find any matches after fetcher action");let Lt=++O;$.set(g,Lt);let Dd=_1(F,ie.data);S.fetchers.set(g,Dd);let[u1,ja]=u2(e.history,S,Ht,F,Se,!1,u.v7_skipActionErrorRevalidation,de,nt,wt,Le,me,re,s1,o,[A.route.id,ie]);ja.filter(De=>De.key!==g).forEach(De=>{let gr=De.key,Ql=S.fetchers.get(gr),Im=_1(void 0,Ql?Ql.data:void 0);S.fetchers.set(gr,Im),pa(gr),De.controller&&ne.set(gr,De.controller)}),ze({fetchers:new Map(S.fetchers)});let Ei=()=>ja.forEach(De=>pa(De.key));Q.signal.addEventListener("abort",Ei);let{loaderResults:Di,fetcherResults:ae}=await Fl(S,Ht,u1,ja,hr);if(Q.signal.aborted)return;Q.signal.removeEventListener("abort",Ei),$.delete(g),ne.delete(g),ja.forEach(De=>ne.delete(De.key));let _e=Hi(Di);if(_e)return Ma(hr,_e.result,!1,{preventScrollReset:j});if(_e=Hi(ae),_e)return re.add(_e.key),Ma(hr,_e.result,!1,{preventScrollReset:j});let{loaderData:vr,errors:m1}=v2(S,Ht,Di,void 0,ja,ae,St);if(S.fetchers.has(g)){let De=sa(ie.data);S.fetchers.set(g,De)}Wl(Lt),S.navigation.state==="loading"&&Lt>z?(X(L,"Expected pending action"),R&&R.abort(),fr(S.navigation.location,{matches:Ht,loaderData:vr,errors:m1,fetchers:new Map(S.fetchers)})):(ze({errors:m1,loaderData:g2(S.loaderData,vr,Ht,m1),fetchers:new Map(S.fetchers)}),de=!1)}async function Vm(g,T,E,A,q,U,G,j,F){let M=S.fetchers.get(g);da(g,_1(F,M?M.data:void 0),{flushSync:G});let H=new AbortController,Q=br(e.history,E,H.signal);if(U){let ie=await Ti(q,E,Q.signal);if(ie.type==="aborted")return;if(ie.type==="error"){Ut(g,T,ie.error,{flushSync:G});return}else if(ie.matches)q=ie.matches,A=P1(q,E);else{Ut(g,T,Xe(404,{pathname:E}),{flushSync:G});return}}ne.set(g,H);let Z=O,se=(await l1("loader",S,Q,[A],q,g))[A.route.id];if(ya(se)&&(se=await _l(se,Q.signal,!0)||se),ne.get(g)===H&&ne.delete(g),!Q.signal.aborted){if(Le.has(g)){da(g,sa(void 0));return}if(Xa(se))if(z>Z){da(g,sa(void 0));return}else{re.add(g),await Ma(Q,se,!1,{preventScrollReset:j});return}if(pt(se)){Ut(g,T,se.error);return}X(!ya(se),"Unhandled fetcher deferred data"),da(g,sa(se.data))}}async function Ma(g,T,E,A){let{submission:q,fetcherSubmission:U,preventScrollReset:G,replace:j}=A===void 0?{}:A;T.response.headers.has("X-Remix-Revalidate")&&(de=!0);let F=T.response.headers.get("Location");X(F,"Expected a Location header on the redirect Response"),F=f2(F,new URL(g.url),o);let M=oi(S.location,F,{_isRedirect:!0});if(a){let ie=!1;if(T.response.headers.has("X-Remix-Reload-Document"))ie=!0;else if(Sl.test(F)){const Se=e.history.createURL(F);ie=Se.origin!==t.location.origin||i1(Se.pathname,o)==null}if(ie){j?t.location.replace(F):t.location.assign(F);return}}R=null;let H=j===!0||T.response.headers.has("X-Remix-Replace")?Ce.Replace:Ce.Push,{formMethod:Q,formAction:Z,formEncType:Ve}=S.navigation;!q&&!U&&Q&&Z&&Ve&&(q=S2(S.navigation));let se=q||U;if(H9.has(T.response.status)&&se&&Ct(se.formMethod))await qa(H,M,{submission:he({},se,{formAction:F}),preventScrollReset:G||x,enableViewTransition:E?C:void 0});else{let ie=ep(M,q);await qa(H,M,{overrideNavigation:ie,fetcherSubmission:U,preventScrollReset:G||x,enableViewTransition:E?C:void 0})}}async function l1(g,T,E,A,q,U){let G,j={};try{G=await X9(l,g,T,E,A,q,U,n,i)}catch(F){return A.forEach(M=>{j[M.route.id]={type:oe.error,error:F}}),j}for(let[F,M]of Object.entries(G))if(r5(M)){let H=M.result;j[F]={type:oe.redirect,response:e5(H,E,F,q,o,u.v7_relativeSplatPath)}}else j[F]=await Z9(M);return j}async function Fl(g,T,E,A,q){let U=g.matches,G=l1("loader",g,q,E,T,null),j=Promise.all(A.map(async H=>{if(H.matches&&H.match&&H.controller){let Z=(await l1("loader",g,br(e.history,H.path,H.controller.signal),[H.match],H.matches,H.key))[H.match.route.id];return{[H.key]:Z}}else return Promise.resolve({[H.key]:{type:oe.error,error:Xe(404,{pathname:H.path})}})})),F=await G,M=(await j).reduce((H,Q)=>Object.assign(H,Q),{});return await Promise.all([d5(T,F,q.signal,U,g.loaderData),p5(T,M,A)]),{loaderResults:F,fetcherResults:M}}function _d(){de=!0,nt.push(...Ed()),me.forEach((g,T)=>{ne.has(T)&&wt.add(T),pa(T)})}function da(g,T,E){E===void 0&&(E={}),S.fetchers.set(g,T),ze({fetchers:new Map(S.fetchers)},{flushSync:(E&&E.flushSync)===!0})}function Ut(g,T,E,A){A===void 0&&(A={});let q=za(S.matches,T);wi(g),ze({errors:{[q.route.id]:E},fetchers:new Map(S.fetchers)},{flushSync:(A&&A.flushSync)===!0})}function Il(g){return u.v7_fetcherPersist&&(kt.set(g,(kt.get(g)||0)+1),Le.has(g)&&Le.delete(g)),S.fetchers.get(g)||W9}function wi(g){let T=S.fetchers.get(g);ne.has(g)&&!(T&&T.state==="loading"&&$.has(g))&&pa(g),me.delete(g),$.delete(g),re.delete(g),Le.delete(g),wt.delete(g),S.fetchers.delete(g)}function Om(g){if(u.v7_fetcherPersist){let T=(kt.get(g)||0)-1;T<=0?(kt.delete(g),Le.add(g)):kt.set(g,T)}else wi(g);ze({fetchers:new Map(S.fetchers)})}function pa(g){let T=ne.get(g);T&&(T.abort(),ne.delete(g))}function Ul(g){for(let T of g){let E=Il(T),A=sa(E.data);S.fetchers.set(T,A)}}function Hl(){let g=[],T=!1;for(let E of re){let A=S.fetchers.get(E);X(A,"Expected fetcher: "+E),A.state==="loading"&&(re.delete(E),g.push(E),T=!0)}return Ul(g),T}function Wl(g){let T=[];for(let[E,A]of $)if(A<g){let q=S.fetchers.get(E);X(q,"Expected fetcher: "+E),q.state==="loading"&&(pa(E),$.delete(E),T.push(E))}return Ul(T),T.length>0}function Bm(g,T){let E=S.blockers.get(g)||S1;return We.get(g)!==T&&We.set(g,T),E}function zl(g){S.blockers.delete(g),We.delete(g)}function Si(g,T){let E=S.blockers.get(g)||S1;X(E.state==="unblocked"&&T.state==="blocked"||E.state==="blocked"&&T.state==="blocked"||E.state==="blocked"&&T.state==="proceeding"||E.state==="blocked"&&T.state==="unblocked"||E.state==="proceeding"&&T.state==="unblocked","Invalid blocker state transition: "+E.state+" -> "+T.state);let A=new Map(S.blockers);A.set(g,T),ze({blockers:A})}function $l(g){let{currentLocation:T,nextLocation:E,historyAction:A}=g;if(We.size===0)return;We.size>1&&pr(!1,"A router only supports one blocker at a time");let q=Array.from(We.entries()),[U,G]=q[q.length-1],j=S.blockers.get(U);if(!(j&&j.state==="proceeding")&&G({currentLocation:T,nextLocation:E,historyAction:A}))return U}function Td(g){let T=Xe(404,{pathname:g}),E=p||d,{matches:A,route:q}=b2(E);return Ed(),{notFoundMatches:A,route:q,error:T}}function Ed(g){let T=[];return St.forEach((E,A)=>{(!g||g(A))&&(E.cancel(),T.push(A),St.delete(A))}),T}function qm(g,T,E){if(w=g,N=T,_=E||null,!f&&S.navigation===Zd){f=!0;let A=Yl(S.location,S.matches);A!=null&&ze({restoreScrollPosition:A})}return()=>{w=null,N=null,_=null}}function Gl(g,T){return _&&_(g,T.map(A=>S9(A,S.loaderData)))||g.key}function Mm(g,T){if(w&&N){let E=Gl(g,T);w[E]=N()}}function Yl(g,T){if(w){let E=Gl(g,T),A=w[E];if(typeof A=="number")return A}return null}function _i(g,T,E){if(s)if(g){if(Object.keys(g[0].params).length>0)return{active:!0,matches:on(T,E,o,!0)}}else return{active:!0,matches:on(T,E,o,!0)||[]};return{active:!1,matches:null}}async function Ti(g,T,E){if(!s)return{type:"success",matches:g};let A=g;for(;;){let q=p==null,U=p||d,G=n;try{await s({path:T,matches:A,patch:(M,H)=>{E.aborted||c2(M,H,U,G,i)}})}catch(M){return{type:"error",error:M,partialMatches:A}}finally{q&&!E.aborted&&(d=[...d])}if(E.aborted)return{type:"aborted"};let j=Wa(U,T,o);if(j)return{type:"success",matches:j};let F=on(U,T,o,!0);if(!F||A.length===F.length&&A.every((M,H)=>M.route.id===F[H].route.id))return{type:"success",matches:null};A=F}}function jm(g){n={},p=qn(g,i,void 0,n)}function Fm(g,T){let E=p==null;c2(g,T,p||d,n,i),E&&(d=[...d],ze({}))}return P={get basename(){return o},get future(){return u},get state(){return S},get routes(){return d},get window(){return t},initialize:Dm,subscribe:Nm,enableScrollRestoration:qm,navigate:Ml,fetch:km,revalidate:xm,createHref:g=>e.history.createHref(g),encodeLocation:g=>e.history.encodeLocation(g),getFetcher:Il,deleteFetcher:Om,dispose:Cm,getBlocker:Bm,deleteBlocker:zl,patchRoutes:Fm,_internalFetchControllers:ne,_internalActiveDeferreds:St,_internalSetRoutes:jm},P}function G9(e){return e!=null&&("formData"in e&&e.formData!=null||"body"in e&&e.body!==void 0)}function so(e,t,a,r,i,n,d,p){let o,l;if(d){o=[];for(let u of t)if(o.push(u),u.route.id===d){l=u;break}}else o=t,l=t[t.length-1];let s=wl(i||".",bl(o,n),i1(e.pathname,a)||e.pathname,p==="path");if(i==null&&(s.search=e.search,s.hash=e.hash),(i==null||i===""||i===".")&&l){let u=Tl(s.search);if(l.route.index&&!u)s.search=s.search?s.search.replace(/^\?/,"?index&"):"?index";else if(!l.route.index&&u){let m=new URLSearchParams(s.search),h=m.getAll("index");m.delete("index"),h.filter(_=>_).forEach(_=>m.append("index",_));let w=m.toString();s.search=w?"?"+w:""}}return r&&a!=="/"&&(s.pathname=s.pathname==="/"?a:Xt([a,s.pathname])),or(s)}function l2(e,t,a,r){if(!r||!G9(r))return{path:a};if(r.formMethod&&!n5(r.formMethod))return{path:a,error:Xe(405,{method:r.formMethod})};let i=()=>({path:a,error:Xe(400,{type:"invalid-body"})}),n=r.formMethod||"get",d=e?n.toUpperCase():n.toLowerCase(),p=V6(a);if(r.body!==void 0){if(r.formEncType==="text/plain"){if(!Ct(d))return i();let m=typeof r.body=="string"?r.body:r.body instanceof FormData||r.body instanceof URLSearchParams?Array.from(r.body.entries()).reduce((h,w)=>{let[_,N]=w;return""+h+_+"="+N+`
`},""):String(r.body);return{path:a,submission:{formMethod:d,formAction:p,formEncType:r.formEncType,formData:void 0,json:void 0,text:m}}}else if(r.formEncType==="application/json"){if(!Ct(d))return i();try{let m=typeof r.body=="string"?JSON.parse(r.body):r.body;return{path:a,submission:{formMethod:d,formAction:p,formEncType:r.formEncType,formData:void 0,json:m,text:void 0}}}catch{return i()}}}X(typeof FormData=="function","FormData is not available in this environment");let o,l;if(r.formData)o=mo(r.formData),l=r.formData;else if(r.body instanceof FormData)o=mo(r.body),l=r.body;else if(r.body instanceof URLSearchParams)o=r.body,l=h2(o);else if(r.body==null)o=new URLSearchParams,l=new FormData;else try{o=new URLSearchParams(r.body),l=h2(o)}catch{return i()}let s={formMethod:d,formAction:p,formEncType:r&&r.formEncType||"application/x-www-form-urlencoded",formData:l,json:void 0,text:void 0};if(Ct(s.formMethod))return{path:a,submission:s};let u=ia(a);return t&&u.search&&Tl(u.search)&&o.append("index",""),u.search="?"+o,{path:or(u),submission:s}}function s2(e,t,a){a===void 0&&(a=!1);let r=e.findIndex(i=>i.route.id===t);return r>=0?e.slice(0,a?r+1:r):e}function u2(e,t,a,r,i,n,d,p,o,l,s,u,m,h,w,_){let N=_?pt(_[1])?_[1].error:_[1].data:void 0,f=e.createURL(t.location),c=e.createURL(i),v=a;n&&t.errors?v=s2(a,Object.keys(t.errors)[0],!0):_&&pt(_[1])&&(v=s2(a,_[0]));let D=_?_[1].statusCode:void 0,P=d&&D&&D>=400,S=v.filter((x,R)=>{let{route:C}=x;if(C.lazy)return!0;if(C.loader==null)return!1;if(n)return uo(C,t.loaderData,t.errors);if(Y9(t.loaderData,t.matches[R],x)||o.some(J=>J===x.route.id))return!0;let V=t.matches[R],W=x;return m2(x,he({currentUrl:f,currentParams:V.params,nextUrl:c,nextParams:W.params},r,{actionResult:N,actionStatus:D,defaultShouldRevalidate:P?!1:p||f.pathname+f.search===c.pathname+c.search||f.search!==c.search||k6(V,W)}))}),L=[];return u.forEach((x,R)=>{if(n||!a.some(de=>de.route.id===x.routeId)||s.has(R))return;let C=Wa(h,x.path,w);if(!C){L.push({key:R,routeId:x.routeId,path:x.path,matches:null,match:null,controller:null});return}let V=t.fetchers.get(R),W=P1(C,x.path),J=!1;m.has(R)?J=!1:l.has(R)?(l.delete(R),J=!0):V&&V.state!=="idle"&&V.data===void 0?J=p:J=m2(W,he({currentUrl:f,currentParams:t.matches[t.matches.length-1].params,nextUrl:c,nextParams:a[a.length-1].params},r,{actionResult:N,actionStatus:D,defaultShouldRevalidate:P?!1:p})),J&&L.push({key:R,routeId:x.routeId,path:x.path,matches:C,match:W,controller:new AbortController})}),[S,L]}function uo(e,t,a){if(e.lazy)return!0;if(!e.loader)return!1;let r=t!=null&&t[e.id]!==void 0,i=a!=null&&a[e.id]!==void 0;return!r&&i?!1:typeof e.loader=="function"&&e.loader.hydrate===!0?!0:!r&&!i}function Y9(e,t,a){let r=!t||a.route.id!==t.route.id,i=e[a.route.id]===void 0;return r||i}function k6(e,t){let a=e.route.path;return e.pathname!==t.pathname||a!=null&&a.endsWith("*")&&e.params["*"]!==t.params["*"]}function m2(e,t){if(e.route.shouldRevalidate){let a=e.route.shouldRevalidate(t);if(typeof a=="boolean")return a}return t.defaultShouldRevalidate}function c2(e,t,a,r,i){var n;let d;if(e){let l=r[e];X(l,"No route found to patch children into: routeId = "+e),l.children||(l.children=[]),d=l.children}else d=a;let p=t.filter(l=>!d.some(s=>L6(l,s))),o=qn(p,i,[e||"_","patch",String(((n=d)==null?void 0:n.length)||"0")],r);d.push(...o)}function L6(e,t){return"id"in e&&"id"in t&&e.id===t.id?!0:e.index===t.index&&e.path===t.path&&e.caseSensitive===t.caseSensitive?(!e.children||e.children.length===0)&&(!t.children||t.children.length===0)?!0:e.children.every((a,r)=>{var i;return(i=t.children)==null?void 0:i.some(n=>L6(a,n))}):!1}async function Q9(e,t,a){if(!e.lazy)return;let r=await e.lazy();if(!e.lazy)return;let i=a[e.id];X(i,"No route found in manifest");let n={};for(let d in r){let o=i[d]!==void 0&&d!=="hasErrorBoundary";pr(!o,'Route "'+i.id+'" has a static property "'+d+'" defined but its lazy function is also returning a value for this property. '+('The lazy route property "'+d+'" will be ignored.')),!o&&!b9.has(d)&&(n[d]=r[d])}Object.assign(i,n),Object.assign(i,he({},t(i),{lazy:void 0}))}async function K9(e){let{matches:t}=e,a=t.filter(i=>i.shouldLoad);return(await Promise.all(a.map(i=>i.resolve()))).reduce((i,n,d)=>Object.assign(i,{[a[d].route.id]:n}),{})}async function X9(e,t,a,r,i,n,d,p,o,l){let s=n.map(h=>h.route.lazy?Q9(h.route,o,p):void 0),u=n.map((h,w)=>{let _=s[w],N=i.some(c=>c.route.id===h.route.id);return he({},h,{shouldLoad:N,resolve:async c=>(c&&r.method==="GET"&&(h.route.lazy||h.route.loader)&&(N=!0),N?J9(t,r,h,_,c,l):Promise.resolve({type:oe.data,result:void 0}))})}),m=await e({matches:u,request:r,params:n[0].params,fetcherKey:d,context:l});try{await Promise.all(s)}catch{}return m}async function J9(e,t,a,r,i,n){let d,p,o=l=>{let s,u=new Promise((w,_)=>s=_);p=()=>s(),t.signal.addEventListener("abort",p);let m=w=>typeof l!="function"?Promise.reject(new Error("You cannot call the handler for a route which defines a boolean "+('"'+e+'" [routeId: '+a.route.id+"]"))):l({request:t,params:a.params,context:n},...w!==void 0?[w]:[]),h=(async()=>{try{return{type:"data",result:await(i?i(_=>m(_)):m())}}catch(w){return{type:"error",result:w}}})();return Promise.race([h,u])};try{let l=a.route[e];if(r)if(l){let s,[u]=await Promise.all([o(l).catch(m=>{s=m}),r]);if(s!==void 0)throw s;d=u}else if(await r,l=a.route[e],l)d=await o(l);else if(e==="action"){let s=new URL(t.url),u=s.pathname+s.search;throw Xe(405,{method:t.method,pathname:u,routeId:a.route.id})}else return{type:oe.data,result:void 0};else if(l)d=await o(l);else{let s=new URL(t.url),u=s.pathname+s.search;throw Xe(404,{pathname:u})}X(d.result!==void 0,"You defined "+(e==="action"?"an action":"a loader")+" for route "+('"'+a.route.id+"\" but didn't return anything from your `"+e+"` ")+"function. Please return a value or `null`.")}catch(l){return{type:oe.error,result:l}}finally{p&&t.signal.removeEventListener("abort",p)}return d}async function Z9(e){let{result:t,type:a}=e;if(O6(t)){let l;try{let s=t.headers.get("Content-Type");s&&/\bapplication\/json\b/.test(s)?t.body==null?l=null:l=await t.json():l=await t.text()}catch(s){return{type:oe.error,error:s}}return a===oe.error?{type:oe.error,error:new Mn(t.status,t.statusText,l),statusCode:t.status,headers:t.headers}:{type:oe.data,data:l,statusCode:t.status,headers:t.headers}}if(a===oe.error){if(w2(t)){var r;if(t.data instanceof Error){var i;return{type:oe.error,error:t.data,statusCode:(i=t.init)==null?void 0:i.status}}t=new Mn(((r=t.init)==null?void 0:r.status)||500,void 0,t.data)}return{type:oe.error,error:t,statusCode:od(t)?t.status:void 0}}if(i5(t)){var n,d;return{type:oe.deferred,deferredData:t,statusCode:(n=t.init)==null?void 0:n.status,headers:((d=t.init)==null?void 0:d.headers)&&new Headers(t.init.headers)}}if(w2(t)){var p,o;return{type:oe.data,data:t.data,statusCode:(p=t.init)==null?void 0:p.status,headers:(o=t.init)!=null&&o.headers?new Headers(t.init.headers):void 0}}return{type:oe.data,data:t}}function e5(e,t,a,r,i,n){let d=e.headers.get("Location");if(X(d,"Redirects returned/thrown from loaders/actions must have a Location header"),!Sl.test(d)){let p=r.slice(0,r.findIndex(o=>o.route.id===a)+1);d=so(new URL(t.url),p,i,!0,d,n),e.headers.set("Location",d)}return e}function f2(e,t,a){if(Sl.test(e)){let r=e,i=r.startsWith("//")?new URL(t.protocol+r):new URL(r),n=i1(i.pathname,a)!=null;if(i.origin===t.origin&&n)return i.pathname+i.search+i.hash}return e}function br(e,t,a,r){let i=e.createURL(V6(t)).toString(),n={signal:a};if(r&&Ct(r.formMethod)){let{formMethod:d,formEncType:p}=r;n.method=d.toUpperCase(),p==="application/json"?(n.headers=new Headers({"Content-Type":p}),n.body=JSON.stringify(r.json)):p==="text/plain"?n.body=r.text:p==="application/x-www-form-urlencoded"&&r.formData?n.body=mo(r.formData):n.body=r.formData}return new Request(i,n)}function mo(e){let t=new URLSearchParams;for(let[a,r]of e.entries())t.append(a,typeof r=="string"?r:r.name);return t}function h2(e){let t=new FormData;for(let[a,r]of e.entries())t.append(a,r);return t}function t5(e,t,a,r,i){let n={},d=null,p,o=!1,l={},s=a&&pt(a[1])?a[1].error:void 0;return e.forEach(u=>{if(!(u.route.id in t))return;let m=u.route.id,h=t[m];if(X(!Xa(h),"Cannot handle redirect results in processLoaderData"),pt(h)){let w=h.error;s!==void 0&&(w=s,s=void 0),d=d||{};{let _=za(e,m);d[_.route.id]==null&&(d[_.route.id]=w)}n[m]=void 0,o||(o=!0,p=od(h.error)?h.error.status:500),h.headers&&(l[m]=h.headers)}else ya(h)?(r.set(m,h.deferredData),n[m]=h.deferredData.data,h.statusCode!=null&&h.statusCode!==200&&!o&&(p=h.statusCode),h.headers&&(l[m]=h.headers)):(n[m]=h.data,h.statusCode&&h.statusCode!==200&&!o&&(p=h.statusCode),h.headers&&(l[m]=h.headers))}),s!==void 0&&a&&(d={[a[0]]:s},n[a[0]]=void 0),{loaderData:n,errors:d,statusCode:p||200,loaderHeaders:l}}function v2(e,t,a,r,i,n,d){let{loaderData:p,errors:o}=t5(t,a,r,d);return i.forEach(l=>{let{key:s,match:u,controller:m}=l,h=n[s];if(X(h,"Did not find corresponding fetcher result"),!(m&&m.signal.aborted))if(pt(h)){let w=za(e.matches,u==null?void 0:u.route.id);o&&o[w.route.id]||(o=he({},o,{[w.route.id]:h.error})),e.fetchers.delete(s)}else if(Xa(h))X(!1,"Unhandled fetcher revalidation redirect");else if(ya(h))X(!1,"Unhandled fetcher deferred data");else{let w=sa(h.data);e.fetchers.set(s,w)}}),{loaderData:p,errors:o}}function g2(e,t,a,r){let i=he({},t);for(let n of a){let d=n.route.id;if(t.hasOwnProperty(d)?t[d]!==void 0&&(i[d]=t[d]):e[d]!==void 0&&n.route.loader&&(i[d]=e[d]),r&&r.hasOwnProperty(d))break}return i}function y2(e){return e?pt(e[1])?{actionData:{}}:{actionData:{[e[0]]:e[1].data}}:{}}function za(e,t){return(t?e.slice(0,e.findIndex(r=>r.route.id===t)+1):[...e]).reverse().find(r=>r.route.hasErrorBoundary===!0)||e[0]}function b2(e){let t=e.length===1?e[0]:e.find(a=>a.index||!a.path||a.path==="/")||{id:"__shim-error-route__"};return{matches:[{params:{},pathname:"",pathnameBase:"",route:t}],route:t}}function Xe(e,t){let{pathname:a,routeId:r,method:i,type:n,message:d}=t===void 0?{}:t,p="Unknown Server Error",o="Unknown @remix-run/router error";return e===400?(p="Bad Request",i&&a&&r?o="You made a "+i+' request to "'+a+'" but '+('did not provide a `loader` for route "'+r+'", ')+"so there is no way to handle the request.":n==="defer-action"?o="defer() is not supported in actions":n==="invalid-body"&&(o="Unable to encode submission body")):e===403?(p="Forbidden",o='Route "'+r+'" does not match URL "'+a+'"'):e===404?(p="Not Found",o='No route matches URL "'+a+'"'):e===405&&(p="Method Not Allowed",i&&a&&r?o="You made a "+i.toUpperCase()+' request to "'+a+'" but '+('did not provide an `action` for route "'+r+'", ')+"so there is no way to handle the request.":i&&(o='Invalid request method "'+i.toUpperCase()+'"')),new Mn(e||500,p,new Error(o),!0)}function Hi(e){let t=Object.entries(e);for(let a=t.length-1;a>=0;a--){let[r,i]=t[a];if(Xa(i))return{key:r,result:i}}}function V6(e){let t=typeof e=="string"?ia(e):e;return or(he({},t,{hash:""}))}function a5(e,t){return e.pathname!==t.pathname||e.search!==t.search?!1:e.hash===""?t.hash!=="":e.hash===t.hash?!0:t.hash!==""}function r5(e){return O6(e.result)&&U9.has(e.result.status)}function ya(e){return e.type===oe.deferred}function pt(e){return e.type===oe.error}function Xa(e){return(e&&e.type)===oe.redirect}function w2(e){return typeof e=="object"&&e!=null&&"type"in e&&"data"in e&&"init"in e&&e.type==="DataWithResponseInit"}function i5(e){let t=e;return t&&typeof t=="object"&&typeof t.data=="object"&&typeof t.subscribe=="function"&&typeof t.cancel=="function"&&typeof t.resolveData=="function"}function O6(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.headers=="object"&&typeof e.body<"u"}function n5(e){return I9.has(e.toLowerCase())}function Ct(e){return j9.has(e.toLowerCase())}async function d5(e,t,a,r,i){let n=Object.entries(t);for(let d=0;d<n.length;d++){let[p,o]=n[d],l=e.find(m=>(m==null?void 0:m.route.id)===p);if(!l)continue;let s=r.find(m=>m.route.id===l.route.id),u=s!=null&&!k6(s,l)&&(i&&i[l.route.id])!==void 0;ya(o)&&u&&await _l(o,a,!1).then(m=>{m&&(t[p]=m)})}}async function p5(e,t,a){for(let r=0;r<a.length;r++){let{key:i,routeId:n,controller:d}=a[r],p=t[i];e.find(l=>(l==null?void 0:l.route.id)===n)&&ya(p)&&(X(d,"Expected an AbortController for revalidating fetcher deferred result"),await _l(p,d.signal,!0).then(l=>{l&&(t[i]=l)}))}}async function _l(e,t,a){if(a===void 0&&(a=!1),!await e.deferredData.resolveData(t)){if(a)try{return{type:oe.data,data:e.deferredData.unwrappedData}}catch(i){return{type:oe.error,error:i}}return{type:oe.data,data:e.deferredData.data}}}function Tl(e){return new URLSearchParams(e).getAll("index").some(t=>t==="")}function P1(e,t){let a=typeof t=="string"?ia(t).search:t.search;if(e[e.length-1].route.index&&Tl(a||""))return e[e.length-1];let r=A6(e);return r[r.length-1]}function S2(e){let{formMethod:t,formAction:a,formEncType:r,text:i,formData:n,json:d}=e;if(!(!t||!a||!r)){if(i!=null)return{formMethod:t,formAction:a,formEncType:r,formData:void 0,json:void 0,text:i};if(n!=null)return{formMethod:t,formAction:a,formEncType:r,formData:n,json:void 0,text:void 0};if(d!==void 0)return{formMethod:t,formAction:a,formEncType:r,formData:void 0,json:d,text:void 0}}}function ep(e,t){return t?{state:"loading",location:e,formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text}:{state:"loading",location:e,formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0}}function o5(e,t){return{state:"submitting",location:e,formMethod:t.formMethod,formAction:t.formAction,formEncType:t.formEncType,formData:t.formData,json:t.json,text:t.text}}function _1(e,t){return e?{state:"loading",formMethod:e.formMethod,formAction:e.formAction,formEncType:e.formEncType,formData:e.formData,json:e.json,text:e.text,data:t}:{state:"loading",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:t}}function l5(e,t){return{state:"submitting",formMethod:e.formMethod,formAction:e.formAction,formEncType:e.formEncType,formData:e.formData,json:e.json,text:e.text,data:t?t.data:void 0}}function sa(e){return{state:"idle",formMethod:void 0,formAction:void 0,formEncType:void 0,formData:void 0,json:void 0,text:void 0,data:e}}function s5(e,t){try{let a=e.sessionStorage.getItem(P6);if(a){let r=JSON.parse(a);for(let[i,n]of Object.entries(r||{}))n&&Array.isArray(n)&&t.set(i,new Set(n||[]))}}catch{}}function u5(e,t){if(t.size>0){let a={};for(let[r,i]of t)a[r]=[...i];try{e.sessionStorage.setItem(P6,JSON.stringify(a))}catch(r){pr(!1,"Failed to save applied view transitions in sessionStorage ("+r+").")}}}/**
 * React Router v6.28.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function jn(){return jn=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},jn.apply(this,arguments)}const ld=y.createContext(null),B6=y.createContext(null),mr=y.createContext(null),El=y.createContext(null),La=y.createContext({outlet:null,matches:[],isDataRoute:!1}),q6=y.createContext(null);function m5(e,t){let{relative:a}=t===void 0?{}:t;vi()||X(!1);let{basename:r,navigator:i}=y.useContext(mr),{hash:n,pathname:d,search:p}=j6(e,{relative:a}),o=d;return r!=="/"&&(o=d==="/"?r:Xt([r,d])),i.createHref({pathname:o,search:p,hash:n})}function vi(){return y.useContext(El)!=null}function sd(){return vi()||X(!1),y.useContext(El).location}function M6(e){y.useContext(mr).static||y.useLayoutEffect(e)}function c5(){let{isDataRoute:e}=y.useContext(La);return e?N5():f5()}function f5(){vi()||X(!1);let e=y.useContext(ld),{basename:t,future:a,navigator:r}=y.useContext(mr),{matches:i}=y.useContext(La),{pathname:n}=sd(),d=JSON.stringify(bl(i,a.v7_relativeSplatPath)),p=y.useRef(!1);return M6(()=>{p.current=!0}),y.useCallback(function(l,s){if(s===void 0&&(s={}),!p.current)return;if(typeof l=="number"){r.go(l);return}let u=wl(l,JSON.parse(d),n,s.relative==="path");e==null&&t!=="/"&&(u.pathname=u.pathname==="/"?t:Xt([t,u.pathname])),(s.replace?r.replace:r.push)(u,s.state,s)},[t,r,d,n,e])}const h5=y.createContext(null);function v5(e){let t=y.useContext(La).outlet;return t&&y.createElement(h5.Provider,{value:e},t)}function j6(e,t){let{relative:a}=t===void 0?{}:t,{future:r}=y.useContext(mr),{matches:i}=y.useContext(La),{pathname:n}=sd(),d=JSON.stringify(bl(i,r.v7_relativeSplatPath));return y.useMemo(()=>wl(e,JSON.parse(d),n,a==="path"),[e,d,n,a])}function g5(e,t,a,r){vi()||X(!1);let{navigator:i}=y.useContext(mr),{matches:n}=y.useContext(La),d=n[n.length-1],p=d?d.params:{};d&&d.pathname;let o=d?d.pathnameBase:"/";d&&d.route;let l=sd(),s;s=l;let u=s.pathname||"/",m=u;if(o!=="/"){let _=o.replace(/^\//,"").split("/");m="/"+u.replace(/^\//,"").split("/").slice(_.length).join("/")}let h=Wa(e,{pathname:m});return _5(h&&h.map(_=>Object.assign({},_,{params:Object.assign({},p,_.params),pathname:Xt([o,i.encodeLocation?i.encodeLocation(_.pathname).pathname:_.pathname]),pathnameBase:_.pathnameBase==="/"?o:Xt([o,i.encodeLocation?i.encodeLocation(_.pathnameBase).pathname:_.pathnameBase])})),n,a,r)}function y5(){let e=C5(),t=od(e)?e.status+" "+e.statusText:e instanceof Error?e.message:JSON.stringify(e),a=e instanceof Error?e.stack:null,i={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"};return y.createElement(y.Fragment,null,y.createElement("h2",null,"Unexpected Application Error!"),y.createElement("h3",{style:{fontStyle:"italic"}},t),a?y.createElement("pre",{style:i},a):null,null)}const b5=y.createElement(y5,null);class w5 extends y.Component{constructor(t){super(t),this.state={location:t.location,revalidation:t.revalidation,error:t.error}}static getDerivedStateFromError(t){return{error:t}}static getDerivedStateFromProps(t,a){return a.location!==t.location||a.revalidation!=="idle"&&t.revalidation==="idle"?{error:t.error,location:t.location,revalidation:t.revalidation}:{error:t.error!==void 0?t.error:a.error,location:a.location,revalidation:t.revalidation||a.revalidation}}componentDidCatch(t,a){console.error("React Router caught the following error during render",t,a)}render(){return this.state.error!==void 0?y.createElement(La.Provider,{value:this.props.routeContext},y.createElement(q6.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function S5(e){let{routeContext:t,match:a,children:r}=e,i=y.useContext(ld);return i&&i.static&&i.staticContext&&(a.route.errorElement||a.route.ErrorBoundary)&&(i.staticContext._deepestRenderedBoundaryId=a.route.id),y.createElement(La.Provider,{value:t},r)}function _5(e,t,a,r){var i;if(t===void 0&&(t=[]),a===void 0&&(a=null),r===void 0&&(r=null),e==null){var n;if(!a)return null;if(a.errors)e=a.matches;else if((n=r)!=null&&n.v7_partialHydration&&t.length===0&&!a.initialized&&a.matches.length>0)e=a.matches;else return null}let d=e,p=(i=a)==null?void 0:i.errors;if(p!=null){let s=d.findIndex(u=>u.route.id&&(p==null?void 0:p[u.route.id])!==void 0);s>=0||X(!1),d=d.slice(0,Math.min(d.length,s+1))}let o=!1,l=-1;if(a&&r&&r.v7_partialHydration)for(let s=0;s<d.length;s++){let u=d[s];if((u.route.HydrateFallback||u.route.hydrateFallbackElement)&&(l=s),u.route.id){let{loaderData:m,errors:h}=a,w=u.route.loader&&m[u.route.id]===void 0&&(!h||h[u.route.id]===void 0);if(u.route.lazy||w){o=!0,l>=0?d=d.slice(0,l+1):d=[d[0]];break}}}return d.reduceRight((s,u,m)=>{let h,w=!1,_=null,N=null;a&&(h=p&&u.route.id?p[u.route.id]:void 0,_=u.route.errorElement||b5,o&&(l<0&&m===0?(w=!0,N=null):l===m&&(w=!0,N=u.route.hydrateFallbackElement||null)));let f=t.concat(d.slice(0,m+1)),c=()=>{let v;return h?v=_:w?v=N:u.route.Component?v=y.createElement(u.route.Component,null):u.route.element?v=u.route.element:v=s,y.createElement(S5,{match:u,routeContext:{outlet:s,matches:f,isDataRoute:a!=null},children:v})};return a&&(u.route.ErrorBoundary||u.route.errorElement||m===0)?y.createElement(w5,{location:a.location,revalidation:a.revalidation,component:_,error:h,children:c(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):c()},null)}var F6=function(e){return e.UseBlocker="useBlocker",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e}(F6||{}),Fn=function(e){return e.UseBlocker="useBlocker",e.UseLoaderData="useLoaderData",e.UseActionData="useActionData",e.UseRouteError="useRouteError",e.UseNavigation="useNavigation",e.UseRouteLoaderData="useRouteLoaderData",e.UseMatches="useMatches",e.UseRevalidator="useRevalidator",e.UseNavigateStable="useNavigate",e.UseRouteId="useRouteId",e}(Fn||{});function T5(e){let t=y.useContext(ld);return t||X(!1),t}function E5(e){let t=y.useContext(B6);return t||X(!1),t}function D5(e){let t=y.useContext(La);return t||X(!1),t}function I6(e){let t=D5(),a=t.matches[t.matches.length-1];return a.route.id||X(!1),a.route.id}function C5(){var e;let t=y.useContext(q6),a=E5(Fn.UseRouteError),r=I6(Fn.UseRouteError);return t!==void 0?t:(e=a.errors)==null?void 0:e[r]}function N5(){let{router:e}=T5(F6.UseNavigateStable),t=I6(Fn.UseNavigateStable),a=y.useRef(!1);return M6(()=>{a.current=!0}),y.useCallback(function(i,n){n===void 0&&(n={}),a.current&&(typeof i=="number"?e.navigate(i):e.navigate(i,jn({fromRouteId:t},n)))},[e,t])}const _2={};function x5(e,t){_2[t]||(_2[t]=!0,console.warn(t))}const wr=(e,t,a)=>x5(e,"⚠️ React Router Future Flag Warning: "+t+". "+("You can use the `"+e+"` future flag to opt-in early. ")+("For more information, see "+a+"."));function A5(e,t){e!=null&&e.v7_startTransition||wr("v7_startTransition","React Router will begin wrapping state updates in `React.startTransition` in v7","https://reactrouter.com/v6/upgrading/future#v7_starttransition"),!(e!=null&&e.v7_relativeSplatPath)&&(!t||!t.v7_relativeSplatPath)&&wr("v7_relativeSplatPath","Relative route resolution within Splat routes is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_relativesplatpath"),t&&(t.v7_fetcherPersist||wr("v7_fetcherPersist","The persistence behavior of fetchers is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_fetcherpersist"),t.v7_normalizeFormMethod||wr("v7_normalizeFormMethod","Casing of `formMethod` fields is being normalized to uppercase in v7","https://reactrouter.com/v6/upgrading/future#v7_normalizeformmethod"),t.v7_partialHydration||wr("v7_partialHydration","`RouterProvider` hydration behavior is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_partialhydration"),t.v7_skipActionErrorRevalidation||wr("v7_skipActionErrorRevalidation","The revalidation behavior after 4xx/5xx `action` responses is changing in v7","https://reactrouter.com/v6/upgrading/future#v7_skipactionerrorrevalidation"))}function R5(e){return v5(e.context)}function P5(e){let{basename:t="/",children:a=null,location:r,navigationType:i=Ce.Pop,navigator:n,static:d=!1,future:p}=e;vi()&&X(!1);let o=t.replace(/^\/*/,"/"),l=y.useMemo(()=>({basename:o,navigator:n,static:d,future:jn({v7_relativeSplatPath:!1},p)}),[o,p,n,d]);typeof r=="string"&&(r=ia(r));let{pathname:s="/",search:u="",hash:m="",state:h=null,key:w="default"}=r,_=y.useMemo(()=>{let N=i1(s,o);return N==null?null:{location:{pathname:N,search:u,hash:m,state:h,key:w},navigationType:i}},[o,s,u,m,h,w,i]);return _==null?null:y.createElement(mr.Provider,{value:l},y.createElement(El.Provider,{children:a,value:_}))}new Promise(()=>{});function k5(e){let t={hasErrorBoundary:e.ErrorBoundary!=null||e.errorElement!=null};return e.Component&&Object.assign(t,{element:y.createElement(e.Component),Component:void 0}),e.HydrateFallback&&Object.assign(t,{hydrateFallbackElement:y.createElement(e.HydrateFallback),HydrateFallback:void 0}),e.ErrorBoundary&&Object.assign(t,{errorElement:y.createElement(e.ErrorBoundary),ErrorBoundary:void 0}),t}/**
 * React Router DOM v6.28.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function li(){return li=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},li.apply(this,arguments)}function L5(e,t){if(e==null)return{};var a={},r=Object.keys(e),i,n;for(n=0;n<r.length;n++)i=r[n],!(t.indexOf(i)>=0)&&(a[i]=e[i]);return a}function V5(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function O5(e,t){return e.button===0&&(!t||t==="_self")&&!V5(e)}const B5=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset","viewTransition"],q5="6";try{window.__reactRouterVersion=q5}catch{}function M5(e,t){return $9({basename:void 0,future:li({},void 0,{v7_prependBasename:!0}),history:v9({window:void 0}),hydrationData:j5(),routes:e,mapRouteProperties:k5,dataStrategy:void 0,patchRoutesOnNavigation:void 0,window:void 0}).initialize()}function j5(){var e;let t=(e=window)==null?void 0:e.__staticRouterHydrationData;return t&&t.errors&&(t=li({},t,{errors:F5(t.errors)})),t}function F5(e){if(!e)return null;let t=Object.entries(e),a={};for(let[r,i]of t)if(i&&i.__type==="RouteErrorResponse")a[r]=new Mn(i.status,i.statusText,i.data,i.internal===!0);else if(i&&i.__type==="Error"){if(i.__subType){let n=window[i.__subType];if(typeof n=="function")try{let d=new n(i.message);d.stack="",a[r]=d}catch{}}if(a[r]==null){let n=new Error(i.message);n.stack="",a[r]=n}}else a[r]=i;return a}const I5=y.createContext({isTransitioning:!1}),U5=y.createContext(new Map),H5="startTransition",T2=rc[H5],W5="flushSync",E2=h9[W5];function z5(e){T2?T2(e):e()}function T1(e){E2?E2(e):e()}class $5{constructor(){this.status="pending",this.promise=new Promise((t,a)=>{this.resolve=r=>{this.status==="pending"&&(this.status="resolved",t(r))},this.reject=r=>{this.status==="pending"&&(this.status="rejected",a(r))}})}}function G5(e){let{fallbackElement:t,router:a,future:r}=e,[i,n]=y.useState(a.state),[d,p]=y.useState(),[o,l]=y.useState({isTransitioning:!1}),[s,u]=y.useState(),[m,h]=y.useState(),[w,_]=y.useState(),N=y.useRef(new Map),{v7_startTransition:f}=r||{},c=y.useCallback(x=>{f?z5(x):x()},[f]),v=y.useCallback((x,R)=>{let{deletedFetchers:C,flushSync:V,viewTransitionOpts:W}=R;C.forEach(de=>N.current.delete(de)),x.fetchers.forEach((de,nt)=>{de.data!==void 0&&N.current.set(nt,de.data)});let J=a.window==null||a.window.document==null||typeof a.window.document.startViewTransition!="function";if(!W||J){V?T1(()=>n(x)):c(()=>n(x));return}if(V){T1(()=>{m&&(s&&s.resolve(),m.skipTransition()),l({isTransitioning:!0,flushSync:!0,currentLocation:W.currentLocation,nextLocation:W.nextLocation})});let de=a.window.document.startViewTransition(()=>{T1(()=>n(x))});de.finished.finally(()=>{T1(()=>{u(void 0),h(void 0),p(void 0),l({isTransitioning:!1})})}),T1(()=>h(de));return}m?(s&&s.resolve(),m.skipTransition(),_({state:x,currentLocation:W.currentLocation,nextLocation:W.nextLocation})):(p(x),l({isTransitioning:!0,flushSync:!1,currentLocation:W.currentLocation,nextLocation:W.nextLocation}))},[a.window,m,s,N,c]);y.useLayoutEffect(()=>a.subscribe(v),[a,v]),y.useEffect(()=>{o.isTransitioning&&!o.flushSync&&u(new $5)},[o]),y.useEffect(()=>{if(s&&d&&a.window){let x=d,R=s.promise,C=a.window.document.startViewTransition(async()=>{c(()=>n(x)),await R});C.finished.finally(()=>{u(void 0),h(void 0),p(void 0),l({isTransitioning:!1})}),h(C)}},[c,d,s,a.window]),y.useEffect(()=>{s&&d&&i.location.key===d.location.key&&s.resolve()},[s,m,i.location,d]),y.useEffect(()=>{!o.isTransitioning&&w&&(p(w.state),l({isTransitioning:!0,flushSync:!1,currentLocation:w.currentLocation,nextLocation:w.nextLocation}),_(void 0))},[o.isTransitioning,w]),y.useEffect(()=>{},[]);let D=y.useMemo(()=>({createHref:a.createHref,encodeLocation:a.encodeLocation,go:x=>a.navigate(x),push:(x,R,C)=>a.navigate(x,{state:R,preventScrollReset:C==null?void 0:C.preventScrollReset}),replace:(x,R,C)=>a.navigate(x,{replace:!0,state:R,preventScrollReset:C==null?void 0:C.preventScrollReset})}),[a]),P=a.basename||"/",S=y.useMemo(()=>({router:a,navigator:D,static:!1,basename:P}),[a,D,P]),L=y.useMemo(()=>({v7_relativeSplatPath:a.future.v7_relativeSplatPath}),[a.future.v7_relativeSplatPath]);return y.useEffect(()=>A5(r,a.future),[r,a.future]),y.createElement(y.Fragment,null,y.createElement(ld.Provider,{value:S},y.createElement(B6.Provider,{value:i},y.createElement(U5.Provider,{value:N.current},y.createElement(I5.Provider,{value:o},y.createElement(P5,{basename:P,location:i.location,navigationType:i.historyAction,navigator:D,future:L},i.initialized||a.future.v7_partialHydration?y.createElement(Y5,{routes:a.routes,future:a.future,state:i}):t))))),null)}const Y5=y.memo(Q5);function Q5(e){let{routes:t,future:a,state:r}=e;return g5(t,void 0,r,a)}const K5=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u",X5=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Ja=y.forwardRef(function(t,a){let{onClick:r,relative:i,reloadDocument:n,replace:d,state:p,target:o,to:l,preventScrollReset:s,viewTransition:u}=t,m=L5(t,B5),{basename:h}=y.useContext(mr),w,_=!1;if(typeof l=="string"&&X5.test(l)&&(w=l,K5))try{let v=new URL(window.location.href),D=l.startsWith("//")?new URL(v.protocol+l):new URL(l),P=i1(D.pathname,h);D.origin===v.origin&&P!=null?l=P+D.search+D.hash:_=!0}catch{}let N=m5(l,{relative:i}),f=J5(l,{replace:d,state:p,target:o,preventScrollReset:s,relative:i,viewTransition:u});function c(v){r&&r(v),v.defaultPrevented||f(v)}return y.createElement("a",li({},m,{href:w||N,onClick:_||n?r:c,ref:a,target:o}))});var D2;(function(e){e.UseScrollRestoration="useScrollRestoration",e.UseSubmit="useSubmit",e.UseSubmitFetcher="useSubmitFetcher",e.UseFetcher="useFetcher",e.useViewTransitionState="useViewTransitionState"})(D2||(D2={}));var C2;(function(e){e.UseFetcher="useFetcher",e.UseFetchers="useFetchers",e.UseScrollRestoration="useScrollRestoration"})(C2||(C2={}));function J5(e,t){let{target:a,replace:r,state:i,preventScrollReset:n,relative:d,viewTransition:p}=t===void 0?{}:t,o=c5(),l=sd(),s=j6(e,{relative:d});return y.useCallback(u=>{if(O5(u,a)){u.preventDefault();let m=r!==void 0?r:or(l)===or(s);o(e,{replace:m,state:i,preventScrollReset:n,relative:d,viewTransition:p})}},[l,o,s,r,i,a,e,n,d,p])}function In(e){return typeof e=="object"&&e!=null&&!Array.isArray(e)}var Z5=e=>typeof e=="object"&&e!==null;function Va(e){return Object.fromEntries(Object.entries(e??{}).filter(([t,a])=>a!==void 0))}var e8=e=>e==="base";function t8(e){return e.slice().filter(t=>!e8(t))}function N2(e){return String.fromCharCode(e+(e>25?39:97))}function a8(e){let t="",a;for(a=Math.abs(e);a>52;a=a/52|0)t=N2(a%52)+t;return N2(a%52)+t}function r8(e,t){let a=t.length;for(;a;)e=e*33^t.charCodeAt(--a);return e}function i8(e){return a8(r8(5381,e)>>>0)}var U6=/\s*!(important)?/i;function n8(e){return typeof e=="string"?U6.test(e):!1}function d8(e){return typeof e=="string"?e.replace(U6,"").trim():e}function Dl(e){return typeof e=="string"?e.replaceAll(" ","_"):e}var Ke=e=>{const t=new Map;return(...r)=>{const i=JSON.stringify(r);if(t.has(i))return t.get(i);const n=e(...r);return t.set(i,n),n}};function Cl(...e){return e.reduce((t,a)=>(a&&Object.keys(a).forEach(r=>{const i=t[r],n=a[r];In(i)&&In(n)?t[r]=Cl(i,n):t[r]=n}),t),{})}var p8=e=>e!=null;function Nl(e,t,a={}){const{stop:r,getKey:i}=a;function n(d,p=[]){if(Z5(d)){const o={};for(const[l,s]of Object.entries(d)){const u=(i==null?void 0:i(l,s))??l,m=[...p,u];if(r!=null&&r(d,m))return t(d,p);const h=n(s,m);p8(h)&&(o[u]=h)}return o}return t(d,p)}return n(e)}function o8(e,t){return Array.isArray(e)?e.map(a=>t(a)):In(e)?Nl(e,a=>t(a)):t(e)}function l8(e,t){return e.reduce((a,r,i)=>{const n=t[i];return r!=null&&(a[n]=r),a},{})}function H6(e,t,a=!0){const{utility:r,conditions:i}=t,{hasShorthand:n,resolveShorthand:d}=r;return Nl(e,p=>Array.isArray(p)?l8(p,i.breakpoints.keys):p,{stop:p=>Array.isArray(p),getKey:a?p=>n?d(p):p:void 0})}var s8={shift:e=>e,finalize:e=>e,breakpoints:{keys:[]}},u8=e=>typeof e=="string"?e.replaceAll(/[\n\s]+/g," "):e;function W6(e){const{utility:t,hash:a,conditions:r=s8}=e,i=d=>[t.prefix,d].filter(Boolean).join("-"),n=(d,p)=>{let o;if(a){const l=[...r.finalize(d),p];o=i(t.toHash(l,i8))}else o=[...r.finalize(d),i(p)].join(":");return o};return Ke(({base:d,...p}={})=>{const o=Object.assign(p,d),l=H6(o,e),s=new Set;return Nl(l,(u,m)=>{if(u==null)return;const h=n8(u),[w,..._]=r.shift(m),N=t8(_),f=t.transform(w,d8(u8(u)));let c=n(N,f.className);h&&(c=`${c}!`),s.add(c)}),Array.from(s).join(" ")})}function m8(...e){return e.flat().filter(t=>In(t)&&Object.keys(Va(t)).length>0)}function c8(e){function t(i){const n=m8(...i);return n.length===1?n:n.map(d=>H6(d,e))}function a(...i){return Cl(...t(i))}function r(...i){return Object.assign({},...t(i))}return{mergeCss:Ke(a),assignCss:r}}var f8=/([A-Z])/g,h8=/^ms-/,v8=Ke(e=>e.startsWith("--")?e:e.replace(f8,"-$1").replace(h8,"-ms-").toLowerCase()),g8=["min","max","clamp","calc"],y8=new RegExp(`^(${g8.join("|")})\\(.*\\)`),b8=e=>typeof e=="string"&&y8.test(e),w8="cm,mm,Q,in,pc,pt,px,em,ex,ch,rem,lh,rlh,vw,vh,vmin,vmax,vb,vi,svw,svh,lvw,lvh,dvw,dvh,cqw,cqh,cqi,cqb,cqmin,cqmax,%",S8=`(?:${w8.split(",").join("|")})`,_8=new RegExp(`^[+-]?[0-9]*.?[0-9]+(?:[eE][+-]?[0-9]+)?${S8}$`),T8=e=>typeof e=="string"&&_8.test(e),E8=e=>typeof e=="string"&&/^var\(--.+\)$/.test(e),n1={map:o8,isCssFunction:b8,isCssVar:E8,isCssUnit:T8},d1=(e,t)=>{if(!(e!=null&&e.defaultValues))return t;const a=typeof e.defaultValues=="function"?e.defaultValues(t):e.defaultValues;return Object.assign({},a,Va(t))},ud=(e,t)=>e.filter(a=>a.css[t]).map(a=>({...a,css:a.css[t]}));function Re(e,...t){const a=Object.getOwnPropertyDescriptors(e),r=Object.keys(a),i=d=>{const p={};for(let o=0;o<d.length;o++){const l=d[o];a[l]&&(Object.defineProperty(p,l,a[l]),delete a[l])}return p},n=d=>i(Array.isArray(d)?d:r.filter(d));return t.map(n).concat(i(r))}var co=(...e)=>{const t=e.reduce((a,r)=>(r&&r.forEach(i=>a.add(i)),a),new Set([]));return Array.from(t)},z6=["htmlSize","htmlTranslate","htmlWidth","htmlHeight"];function D8(e){return z6.includes(e)?e.replace("html","").toLowerCase():e}function fo(e){return Object.fromEntries(Object.entries(e).map(([t,a])=>[D8(t),a]))}fo.keys=z6;const C8="_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_starting,_collapsed,_current,_hidden,_off,_on,_today,_underValue,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,base",$6=new Set(C8.split(",")),N8=/^@|&|&$/;function x2(e){return $6.has(e)||N8.test(e)}const x8=/^_/,A8=/&|@/;function G6(e){return e.map(t=>$6.has(t)?t.replace(x8,""):A8.test(t)?`[${Dl(t.trim())}]`:t)}function Y6(e){return e.sort((t,a)=>{const r=x2(t),i=x2(a);return r&&!i?1:!r&&i?-1:0})}const R8="aspectRatio:asp,boxDecorationBreak:bx-db,zIndex:z,boxSizing:bx-s,objectPosition:obj-p,objectFit:obj-f,overscrollBehavior:ovs-b,overscrollBehaviorX:ovs-bx,overscrollBehaviorY:ovs-by,position:pos/1,top:top,left:left,inset:inset,insetInline:inset-x/insetX,insetBlock:inset-y/insetY,insetBlockEnd:inset-be,insetBlockStart:inset-bs,insetInlineEnd:inset-e/insetEnd/end,insetInlineStart:inset-s/insetStart/start,right:right,bottom:bottom,float:float,visibility:vis,display:d,hideFrom:hide,hideBelow:show,flexBasis:flex-b,flex:flex,flexDirection:flex-d/flexDir,flexGrow:flex-g,flexShrink:flex-sh,gridTemplateColumns:grid-tc,gridTemplateRows:grid-tr,gridColumn:grid-c,gridRow:grid-r,gridColumnStart:grid-cs,gridColumnEnd:grid-ce,gridAutoFlow:grid-af,gridAutoColumns:grid-ac,gridAutoRows:grid-ar,gap:gap,gridGap:grid-g,gridRowGap:grid-rg,gridColumnGap:grid-cg,rowGap:rg,columnGap:cg,justifyContent:jc,alignContent:ac,alignItems:ai,alignSelf:as,padding:p/1,paddingLeft:pl/1,paddingRight:pr/1,paddingTop:pt/1,paddingBottom:pb/1,paddingBlock:py/1/paddingY,paddingBlockEnd:pbe,paddingBlockStart:pbs,paddingInline:px/paddingX/1,paddingInlineEnd:pe/1/paddingEnd,paddingInlineStart:ps/1/paddingStart,marginLeft:ml/1,marginRight:mr/1,marginTop:mt/1,marginBottom:mb/1,margin:m/1,marginBlock:my/1/marginY,marginBlockEnd:mbe,marginBlockStart:mbs,marginInline:mx/1/marginX,marginInlineEnd:me/1/marginEnd,marginInlineStart:ms/1/marginStart,spaceX:sx,spaceY:sy,outlineWidth:ring-w/ringWidth,outlineColor:ring-c/ringColor,outline:ring/1,outlineOffset:ring-o/ringOffset,divideX:dvd-x,divideY:dvd-y,divideColor:dvd-c,divideStyle:dvd-s,width:w/1,inlineSize:w-is,minWidth:min-w/minW,minInlineSize:min-w-is,maxWidth:max-w/maxW,maxInlineSize:max-w-is,height:h/1,blockSize:h-bs,minHeight:min-h/minH,minBlockSize:min-h-bs,maxHeight:max-h/maxH,maxBlockSize:max-b,color:c,fontFamily:ff,fontSize:fs,fontSizeAdjust:fs-a,fontPalette:fp,fontKerning:fk,fontFeatureSettings:ff-s,fontWeight:fw,fontSmoothing:fsmt,fontVariant:fv,fontVariantAlternates:fv-alt,fontVariantCaps:fv-caps,fontVariationSettings:fv-s,fontVariantNumeric:fv-num,letterSpacing:ls,lineHeight:lh,textAlign:ta,textDecoration:td,textDecorationColor:td-c,textEmphasisColor:te-c,textDecorationStyle:td-s,textDecorationThickness:td-t,textUnderlineOffset:tu-o,textTransform:tt,textIndent:ti,textShadow:tsh,textShadowColor:tsh-c/textShadowColor,textOverflow:tov,verticalAlign:va,wordBreak:wb,textWrap:tw,truncate:trunc,lineClamp:lc,listStyleType:li-t,listStylePosition:li-pos,listStyleImage:li-img,listStyle:li-s,backgroundPosition:bg-p/bgPosition,backgroundPositionX:bg-p-x/bgPositionX,backgroundPositionY:bg-p-y/bgPositionY,backgroundAttachment:bg-a/bgAttachment,backgroundClip:bg-cp/bgClip,background:bg/1,backgroundColor:bg-c/bgColor,backgroundOrigin:bg-o/bgOrigin,backgroundImage:bg-i/bgImage,backgroundRepeat:bg-r/bgRepeat,backgroundBlendMode:bg-bm/bgBlendMode,backgroundSize:bg-s/bgSize,backgroundGradient:bg-grad/bgGradient,textGradient:txt-grad,gradientFromPosition:grad-from-pos,gradientToPosition:grad-to-pos,gradientFrom:grad-from,gradientTo:grad-to,gradientVia:grad-via,gradientViaPosition:grad-via-pos,borderRadius:bdr/rounded,borderTopLeftRadius:bdr-tl/roundedTopLeft,borderTopRightRadius:bdr-tr/roundedTopRight,borderBottomRightRadius:bdr-br/roundedBottomRight,borderBottomLeftRadius:bdr-bl/roundedBottomLeft,borderTopRadius:bdr-t/roundedTop,borderRightRadius:bdr-r/roundedRight,borderBottomRadius:bdr-b/roundedBottom,borderLeftRadius:bdr-l/roundedLeft,borderStartStartRadius:bdr-ss/roundedStartStart,borderStartEndRadius:bdr-se/roundedStartEnd,borderStartRadius:bdr-s/roundedStart,borderEndStartRadius:bdr-es/roundedEndStart,borderEndEndRadius:bdr-ee/roundedEndEnd,borderEndRadius:bdr-e/roundedEnd,border:bd,borderWidth:bd-w,borderTopWidth:bd-t-w,borderLeftWidth:bd-l-w,borderRightWidth:bd-r-w,borderBottomWidth:bd-b-w,borderColor:bd-c,borderInline:bd-x/borderX,borderInlineWidth:bd-x-w/borderXWidth,borderInlineColor:bd-x-c/borderXColor,borderBlock:bd-y/borderY,borderBlockWidth:bd-y-w/borderYWidth,borderBlockColor:bd-y-c/borderYColor,borderLeft:bd-l,borderLeftColor:bd-l-c,borderInlineStart:bd-s/borderStart,borderInlineStartWidth:bd-s-w/borderStartWidth,borderInlineStartColor:bd-s-c/borderStartColor,borderRight:bd-r,borderRightColor:bd-r-c,borderInlineEnd:bd-e/borderEnd,borderInlineEndWidth:bd-e-w/borderEndWidth,borderInlineEndColor:bd-e-c/borderEndColor,borderTop:bd-t,borderTopColor:bd-t-c,borderBottom:bd-b,borderBottomColor:bd-b-c,borderBlockEnd:bd-be,borderBlockEndColor:bd-be-c,borderBlockStart:bd-bs,borderBlockStartColor:bd-bs-c,opacity:op,boxShadow:bx-sh/shadow,boxShadowColor:bx-sh-c/shadowColor,mixBlendMode:mix-bm,filter:filter,brightness:brightness,contrast:contrast,grayscale:grayscale,hueRotate:hue-rotate,invert:invert,saturate:saturate,sepia:sepia,dropShadow:drop-shadow,blur:blur,backdropFilter:bkdp,backdropBlur:bkdp-blur,backdropBrightness:bkdp-brightness,backdropContrast:bkdp-contrast,backdropGrayscale:bkdp-grayscale,backdropHueRotate:bkdp-hue-rotate,backdropInvert:bkdp-invert,backdropOpacity:bkdp-opacity,backdropSaturate:bkdp-saturate,backdropSepia:bkdp-sepia,borderCollapse:bd-cl,borderSpacing:bd-sp,borderSpacingX:bd-sx,borderSpacingY:bd-sy,tableLayout:tbl,transitionTimingFunction:trs-tmf,transitionDelay:trs-dly,transitionDuration:trs-dur,transitionProperty:trs-prop,transition:trs,animation:anim,animationName:anim-n,animationTimingFunction:anim-tmf,animationDuration:anim-dur,animationDelay:anim-dly,animationPlayState:anim-ps,animationComposition:anim-comp,animationFillMode:anim-fm,animationDirection:anim-dir,animationIterationCount:anim-ic,animationRange:anim-r,animationState:anim-s,animationRangeStart:anim-rs,animationRangeEnd:anim-re,animationTimeline:anim-tl,transformOrigin:trf-o,transformBox:trf-b,transformStyle:trf-s,transform:trf,rotate:rotate,rotateX:rotate-x,rotateY:rotate-y,rotateZ:rotate-z,scale:scale,scaleX:scale-x,scaleY:scale-y,translate:translate,translateX:translate-x/x,translateY:translate-y/y,translateZ:translate-z/z,accentColor:ac-c,caretColor:ca-c,scrollBehavior:scr-bhv,scrollbar:scr-bar,scrollbarColor:scr-bar-c,scrollbarGutter:scr-bar-g,scrollbarWidth:scr-bar-w,scrollMargin:scr-m,scrollMarginLeft:scr-ml,scrollMarginRight:scr-mr,scrollMarginTop:scr-mt,scrollMarginBottom:scr-mb,scrollMarginBlock:scr-my/scrollMarginY,scrollMarginBlockEnd:scr-mbe,scrollMarginBlockStart:scr-mbt,scrollMarginInline:scr-mx/scrollMarginX,scrollMarginInlineEnd:scr-me,scrollMarginInlineStart:scr-ms,scrollPadding:scr-p,scrollPaddingBlock:scr-py/scrollPaddingY,scrollPaddingBlockStart:scr-pbs,scrollPaddingBlockEnd:scr-pbe,scrollPaddingInline:scr-px/scrollPaddingX,scrollPaddingInlineEnd:scr-pe,scrollPaddingInlineStart:scr-ps,scrollPaddingLeft:scr-pl,scrollPaddingRight:scr-pr,scrollPaddingTop:scr-pt,scrollPaddingBottom:scr-pb,scrollSnapAlign:scr-sa,scrollSnapStop:scrs-s,scrollSnapType:scrs-t,scrollSnapStrictness:scrs-strt,scrollSnapMargin:scrs-m,scrollSnapMarginTop:scrs-mt,scrollSnapMarginBottom:scrs-mb,scrollSnapMarginLeft:scrs-ml,scrollSnapMarginRight:scrs-mr,scrollSnapCoordinate:scrs-c,scrollSnapDestination:scrs-d,scrollSnapPointsX:scrs-px,scrollSnapPointsY:scrs-py,scrollSnapTypeX:scrs-tx,scrollSnapTypeY:scrs-ty,scrollTimeline:scrtl,scrollTimelineAxis:scrtl-a,scrollTimelineName:scrtl-n,touchAction:tch-a,userSelect:us,overflow:ov,overflowWrap:ov-wrap,overflowX:ov-x,overflowY:ov-y,overflowAnchor:ov-a,overflowBlock:ov-b,overflowInline:ov-i,overflowClipBox:ovcp-bx,overflowClipMargin:ovcp-m,overscrollBehaviorBlock:ovs-bb,overscrollBehaviorInline:ovs-bi,fill:fill,stroke:stk,strokeWidth:stk-w,strokeDasharray:stk-dsh,strokeDashoffset:stk-do,strokeLinecap:stk-lc,strokeLinejoin:stk-lj,strokeMiterlimit:stk-ml,strokeOpacity:stk-op,srOnly:sr,debug:debug,appearance:ap,backfaceVisibility:bfv,clipPath:cp-path,hyphens:hy,mask:msk,maskImage:msk-i,maskSize:msk-s,textSizeAdjust:txt-adj,container:cq,containerName:cq-n,containerType:cq-t,textStyle:textStyle",Q6=new Map,K6=new Map;R8.split(",").forEach(e=>{const[t,a]=e.split(":"),[r,...i]=a.split("/");Q6.set(t,r),i.length&&i.forEach(n=>{K6.set(n==="1"?r:n,t)})});const A2=e=>K6.get(e)||e,X6={conditions:{shift:Y6,finalize:G6,breakpoints:{keys:["base","sm","md","lg","xl","2xl"]}},utility:{transform:(e,t)=>{const a=A2(e);return{className:`${Q6.get(a)||v8(a)}_${Dl(t)}`}},hasShorthand:!0,toHash:(e,t)=>t(e.join(":")),resolveShorthand:A2}},P8=W6(X6),si=(...e)=>P8(Za(...e));si.raw=(...e)=>Za(...e);const{mergeCss:Za,assignCss:Rv}=c8(X6);function Zr(){let e="",t=0,a;for(;t<arguments.length;)(a=arguments[t++])&&typeof a=="string"&&(e&&(e+=" "),e+=a);return e}const R2=e=>({base:{},variants:{},defaultVariants:{},compoundVariants:[],...e});function J6(e){const{base:t,variants:a,defaultVariants:r,compoundVariants:i}=R2(e),n=m=>({...r,...Va(m)});function d(m={}){var N;const h=n(m);let w={...t};for(const[f,c]of Object.entries(h))(N=a[f])!=null&&N[c]&&(w=Za(w,a[f][c]));const _=ho(i,h);return Za(w,_)}function p(m){const h=R2(m.config),w=co(m.variantKeys,Object.keys(a));return J6({base:Za(t,h.base),variants:Object.fromEntries(w.map(_=>[_,Za(a[_],h.variants[_])])),defaultVariants:Cl(r,h.defaultVariants),compoundVariants:[...i,...h.compoundVariants]})}function o(m){return si(d(m))}const l=Object.keys(a);function s(m){return Re(m,l)}const u=Object.fromEntries(Object.entries(a).map(([m,h])=>[m,Object.keys(h)]));return Object.assign(Ke(o),{__cva__:!0,variantMap:u,variantKeys:l,raw:d,config:e,merge:p,splitVariantProps:s,getVariantProps:n})}function ho(e,t){let a={};return e.forEach(r=>{Object.entries(r).every(([n,d])=>n==="css"?!0:(Array.isArray(d)?d:[d]).some(o=>t[n]===o))&&(a=Za(a,r.css))}),a}function k8(e,t,a,r){if(t.length>0&&typeof(a==null?void 0:a[r])=="object")throw new Error(`[recipe:${e}:${r}] Conditions are not supported when using compound variants.`)}var L8="css,pos,insetX,insetY,insetEnd,end,insetStart,start,flexDir,p,pl,pr,pt,pb,py,paddingY,paddingX,px,pe,paddingEnd,ps,paddingStart,ml,mr,mt,mb,m,my,marginY,mx,marginX,me,marginEnd,ms,marginStart,ringWidth,ringColor,ring,ringOffset,w,minW,maxW,h,minH,maxH,textShadowColor,bgPosition,bgPositionX,bgPositionY,bgAttachment,bgClip,bg,bgColor,bgOrigin,bgImage,bgRepeat,bgBlendMode,bgSize,bgGradient,rounded,roundedTopLeft,roundedTopRight,roundedBottomRight,roundedBottomLeft,roundedTop,roundedRight,roundedBottom,roundedLeft,roundedStartStart,roundedStartEnd,roundedStart,roundedEndStart,roundedEndEnd,roundedEnd,borderX,borderXWidth,borderXColor,borderY,borderYWidth,borderYColor,borderStart,borderStartWidth,borderStartColor,borderEnd,borderEndWidth,borderEndColor,shadow,shadowColor,x,y,z,scrollMarginY,scrollMarginX,scrollPaddingY,scrollPaddingX,aspectRatio,boxDecorationBreak,zIndex,boxSizing,objectPosition,objectFit,overscrollBehavior,overscrollBehaviorX,overscrollBehaviorY,position,top,left,inset,insetInline,insetBlock,insetBlockEnd,insetBlockStart,insetInlineEnd,insetInlineStart,right,bottom,float,visibility,display,hideFrom,hideBelow,flexBasis,flex,flexDirection,flexGrow,flexShrink,gridTemplateColumns,gridTemplateRows,gridColumn,gridRow,gridColumnStart,gridColumnEnd,gridAutoFlow,gridAutoColumns,gridAutoRows,gap,gridGap,gridRowGap,gridColumnGap,rowGap,columnGap,justifyContent,alignContent,alignItems,alignSelf,padding,paddingLeft,paddingRight,paddingTop,paddingBottom,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingInline,paddingInlineEnd,paddingInlineStart,marginLeft,marginRight,marginTop,marginBottom,margin,marginBlock,marginBlockEnd,marginBlockStart,marginInline,marginInlineEnd,marginInlineStart,spaceX,spaceY,outlineWidth,outlineColor,outline,outlineOffset,divideX,divideY,divideColor,divideStyle,width,inlineSize,minWidth,minInlineSize,maxWidth,maxInlineSize,height,blockSize,minHeight,minBlockSize,maxHeight,maxBlockSize,color,fontFamily,fontSize,fontSizeAdjust,fontPalette,fontKerning,fontFeatureSettings,fontWeight,fontSmoothing,fontVariant,fontVariantAlternates,fontVariantCaps,fontVariationSettings,fontVariantNumeric,letterSpacing,lineHeight,textAlign,textDecoration,textDecorationColor,textEmphasisColor,textDecorationStyle,textDecorationThickness,textUnderlineOffset,textTransform,textIndent,textShadow,textOverflow,verticalAlign,wordBreak,textWrap,truncate,lineClamp,listStyleType,listStylePosition,listStyleImage,listStyle,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundAttachment,backgroundClip,background,backgroundColor,backgroundOrigin,backgroundImage,backgroundRepeat,backgroundBlendMode,backgroundSize,backgroundGradient,textGradient,gradientFromPosition,gradientToPosition,gradientFrom,gradientTo,gradientVia,gradientViaPosition,borderRadius,borderTopLeftRadius,borderTopRightRadius,borderBottomRightRadius,borderBottomLeftRadius,borderTopRadius,borderRightRadius,borderBottomRadius,borderLeftRadius,borderStartStartRadius,borderStartEndRadius,borderStartRadius,borderEndStartRadius,borderEndEndRadius,borderEndRadius,border,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,borderColor,borderInline,borderInlineWidth,borderInlineColor,borderBlock,borderBlockWidth,borderBlockColor,borderLeft,borderLeftColor,borderInlineStart,borderInlineStartWidth,borderInlineStartColor,borderRight,borderRightColor,borderInlineEnd,borderInlineEndWidth,borderInlineEndColor,borderTop,borderTopColor,borderBottom,borderBottomColor,borderBlockEnd,borderBlockEndColor,borderBlockStart,borderBlockStartColor,opacity,boxShadow,boxShadowColor,mixBlendMode,filter,brightness,contrast,grayscale,hueRotate,invert,saturate,sepia,dropShadow,blur,backdropFilter,backdropBlur,backdropBrightness,backdropContrast,backdropGrayscale,backdropHueRotate,backdropInvert,backdropOpacity,backdropSaturate,backdropSepia,borderCollapse,borderSpacing,borderSpacingX,borderSpacingY,tableLayout,transitionTimingFunction,transitionDelay,transitionDuration,transitionProperty,transition,animation,animationName,animationTimingFunction,animationDuration,animationDelay,animationPlayState,animationComposition,animationFillMode,animationDirection,animationIterationCount,animationRange,animationState,animationRangeStart,animationRangeEnd,animationTimeline,transformOrigin,transformBox,transformStyle,transform,rotate,rotateX,rotateY,rotateZ,scale,scaleX,scaleY,translate,translateX,translateY,translateZ,accentColor,caretColor,scrollBehavior,scrollbar,scrollbarColor,scrollbarGutter,scrollbarWidth,scrollMargin,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollMarginBottom,scrollMarginBlock,scrollMarginBlockEnd,scrollMarginBlockStart,scrollMarginInline,scrollMarginInlineEnd,scrollMarginInlineStart,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingInline,scrollPaddingInlineEnd,scrollPaddingInlineStart,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollPaddingBottom,scrollSnapAlign,scrollSnapStop,scrollSnapType,scrollSnapStrictness,scrollSnapMargin,scrollSnapMarginTop,scrollSnapMarginBottom,scrollSnapMarginLeft,scrollSnapMarginRight,scrollSnapCoordinate,scrollSnapDestination,scrollSnapPointsX,scrollSnapPointsY,scrollSnapTypeX,scrollSnapTypeY,scrollTimeline,scrollTimelineAxis,scrollTimelineName,touchAction,userSelect,overflow,overflowWrap,overflowX,overflowY,overflowAnchor,overflowBlock,overflowInline,overflowClipBox,overflowClipMargin,overscrollBehaviorBlock,overscrollBehaviorInline,fill,stroke,strokeWidth,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,srOnly,debug,appearance,backfaceVisibility,clipPath,hyphens,mask,maskImage,maskSize,textSizeAdjust,container,containerName,containerType,colorPalette,_hover,_focus,_focusWithin,_focusVisible,_disabled,_active,_visited,_target,_readOnly,_readWrite,_empty,_checked,_enabled,_expanded,_highlighted,_before,_after,_firstLetter,_firstLine,_marker,_selection,_file,_backdrop,_first,_last,_only,_even,_odd,_firstOfType,_lastOfType,_onlyOfType,_peerFocus,_peerHover,_peerActive,_peerFocusWithin,_peerFocusVisible,_peerDisabled,_peerChecked,_peerInvalid,_peerExpanded,_peerPlaceholderShown,_groupFocus,_groupHover,_groupActive,_groupFocusWithin,_groupFocusVisible,_groupDisabled,_groupChecked,_groupExpanded,_groupInvalid,_indeterminate,_required,_valid,_invalid,_autofill,_inRange,_outOfRange,_placeholder,_placeholderShown,_pressed,_selected,_default,_optional,_open,_closed,_fullscreen,_loading,_currentPage,_currentStep,_motionReduce,_motionSafe,_print,_landscape,_portrait,_dark,_light,_osDark,_osLight,_highContrast,_lessContrast,_moreContrast,_ltr,_rtl,_scrollbar,_scrollbarThumb,_scrollbarTrack,_horizontal,_vertical,_starting,_collapsed,_current,_hidden,_off,_on,_today,_underValue,sm,smOnly,smDown,md,mdOnly,mdDown,lg,lgOnly,lgDown,xl,xlOnly,xlDown,2xl,2xlOnly,2xlDown,smToMd,smToLg,smToXl,smTo2xl,mdToLg,mdToXl,mdTo2xl,lgToXl,lgTo2xl,xlTo2xl,textStyle",V8=L8.split(","),O8="WebkitAppearance,WebkitBorderBefore,WebkitBorderBeforeColor,WebkitBorderBeforeStyle,WebkitBorderBeforeWidth,WebkitBoxReflect,WebkitLineClamp,WebkitMask,WebkitMaskAttachment,WebkitMaskClip,WebkitMaskComposite,WebkitMaskImage,WebkitMaskOrigin,WebkitMaskPosition,WebkitMaskPositionX,WebkitMaskPositionY,WebkitMaskRepeat,WebkitMaskRepeatX,WebkitMaskRepeatY,WebkitMaskSize,WebkitOverflowScrolling,WebkitTapHighlightColor,WebkitTextFillColor,WebkitTextStroke,WebkitTextStrokeColor,WebkitTextStrokeWidth,WebkitTouchCallout,WebkitUserModify,accentColor,alignContent,alignItems,alignSelf,alignTracks,all,animation,animationComposition,animationDelay,animationDirection,animationDuration,animationFillMode,animationIterationCount,animationName,animationPlayState,animationRange,animationRangeEnd,animationRangeStart,animationTimingFunction,animationTimeline,appearance,aspectRatio,azimuth,backdropFilter,backfaceVisibility,background,backgroundAttachment,backgroundBlendMode,backgroundClip,backgroundColor,backgroundImage,backgroundOrigin,backgroundPosition,backgroundPositionX,backgroundPositionY,backgroundRepeat,backgroundSize,blockSize,border,borderBlock,borderBlockColor,borderBlockStyle,borderBlockWidth,borderBlockEnd,borderBlockEndColor,borderBlockEndStyle,borderBlockEndWidth,borderBlockStart,borderBlockStartColor,borderBlockStartStyle,borderBlockStartWidth,borderBottom,borderBottomColor,borderBottomLeftRadius,borderBottomRightRadius,borderBottomStyle,borderBottomWidth,borderCollapse,borderColor,borderEndEndRadius,borderEndStartRadius,borderImage,borderImageOutset,borderImageRepeat,borderImageSlice,borderImageSource,borderImageWidth,borderInline,borderInlineEnd,borderInlineColor,borderInlineStyle,borderInlineWidth,borderInlineEndColor,borderInlineEndStyle,borderInlineEndWidth,borderInlineStart,borderInlineStartColor,borderInlineStartStyle,borderInlineStartWidth,borderLeft,borderLeftColor,borderLeftStyle,borderLeftWidth,borderRadius,borderRight,borderRightColor,borderRightStyle,borderRightWidth,borderSpacing,borderStartEndRadius,borderStartStartRadius,borderStyle,borderTop,borderTopColor,borderTopLeftRadius,borderTopRightRadius,borderTopStyle,borderTopWidth,borderWidth,bottom,boxAlign,boxDecorationBreak,boxDirection,boxFlex,boxFlexGroup,boxLines,boxOrdinalGroup,boxOrient,boxPack,boxShadow,boxSizing,breakAfter,breakBefore,breakInside,captionSide,caret,caretColor,caretShape,clear,clip,clipPath,color,colorScheme,columnCount,columnFill,columnGap,columnRule,columnRuleColor,columnRuleStyle,columnRuleWidth,columnSpan,columnWidth,columns,contain,containIntrinsicSize,containIntrinsicBlockSize,containIntrinsicHeight,containIntrinsicInlineSize,containIntrinsicWidth,container,containerName,containerType,content,contentVisibility,counterIncrement,counterReset,counterSet,cursor,direction,display,emptyCells,filter,flex,flexBasis,flexDirection,flexFlow,flexGrow,flexShrink,flexWrap,float,font,fontFamily,fontFeatureSettings,fontKerning,fontLanguageOverride,fontOpticalSizing,fontPalette,fontVariationSettings,fontSize,fontSizeAdjust,fontSmooth,fontStretch,fontStyle,fontSynthesis,fontSynthesisPosition,fontSynthesisSmallCaps,fontSynthesisStyle,fontSynthesisWeight,fontVariant,fontVariantAlternates,fontVariantCaps,fontVariantEastAsian,fontVariantEmoji,fontVariantLigatures,fontVariantNumeric,fontVariantPosition,fontWeight,forcedColorAdjust,gap,grid,gridArea,gridAutoColumns,gridAutoFlow,gridAutoRows,gridColumn,gridColumnEnd,gridColumnGap,gridColumnStart,gridGap,gridRow,gridRowEnd,gridRowGap,gridRowStart,gridTemplate,gridTemplateAreas,gridTemplateColumns,gridTemplateRows,hangingPunctuation,height,hyphenateCharacter,hyphenateLimitChars,hyphens,imageOrientation,imageRendering,imageResolution,imeMode,initialLetter,initialLetterAlign,inlineSize,inputSecurity,inset,insetBlock,insetBlockEnd,insetBlockStart,insetInline,insetInlineEnd,insetInlineStart,isolation,justifyContent,justifyItems,justifySelf,justifyTracks,left,letterSpacing,lineBreak,lineClamp,lineHeight,lineHeightStep,listStyle,listStyleImage,listStylePosition,listStyleType,margin,marginBlock,marginBlockEnd,marginBlockStart,marginBottom,marginInline,marginInlineEnd,marginInlineStart,marginLeft,marginRight,marginTop,marginTrim,mask,maskBorder,maskBorderMode,maskBorderOutset,maskBorderRepeat,maskBorderSlice,maskBorderSource,maskBorderWidth,maskClip,maskComposite,maskImage,maskMode,maskOrigin,maskPosition,maskRepeat,maskSize,maskType,masonryAutoFlow,mathDepth,mathShift,mathStyle,maxBlockSize,maxHeight,maxInlineSize,maxLines,maxWidth,minBlockSize,minHeight,minInlineSize,minWidth,mixBlendMode,objectFit,objectPosition,offset,offsetAnchor,offsetDistance,offsetPath,offsetPosition,offsetRotate,opacity,order,orphans,outline,outlineColor,outlineOffset,outlineStyle,outlineWidth,overflow,overflowAnchor,overflowBlock,overflowClipBox,overflowClipMargin,overflowInline,overflowWrap,overflowX,overflowY,overlay,overscrollBehavior,overscrollBehaviorBlock,overscrollBehaviorInline,overscrollBehaviorX,overscrollBehaviorY,padding,paddingBlock,paddingBlockEnd,paddingBlockStart,paddingBottom,paddingInline,paddingInlineEnd,paddingInlineStart,paddingLeft,paddingRight,paddingTop,page,pageBreakAfter,pageBreakBefore,pageBreakInside,paintOrder,perspective,perspectiveOrigin,placeContent,placeItems,placeSelf,pointerEvents,position,printColorAdjust,quotes,resize,right,rotate,rowGap,rubyAlign,rubyMerge,rubyPosition,scale,scrollbarColor,scrollbarGutter,scrollbarWidth,scrollBehavior,scrollMargin,scrollMarginBlock,scrollMarginBlockStart,scrollMarginBlockEnd,scrollMarginBottom,scrollMarginInline,scrollMarginInlineStart,scrollMarginInlineEnd,scrollMarginLeft,scrollMarginRight,scrollMarginTop,scrollPadding,scrollPaddingBlock,scrollPaddingBlockStart,scrollPaddingBlockEnd,scrollPaddingBottom,scrollPaddingInline,scrollPaddingInlineStart,scrollPaddingInlineEnd,scrollPaddingLeft,scrollPaddingRight,scrollPaddingTop,scrollSnapAlign,scrollSnapCoordinate,scrollSnapDestination,scrollSnapPointsX,scrollSnapPointsY,scrollSnapStop,scrollSnapType,scrollSnapTypeX,scrollSnapTypeY,scrollTimeline,scrollTimelineAxis,scrollTimelineName,shapeImageThreshold,shapeMargin,shapeOutside,tabSize,tableLayout,textAlign,textAlignLast,textCombineUpright,textDecoration,textDecorationColor,textDecorationLine,textDecorationSkip,textDecorationSkipInk,textDecorationStyle,textDecorationThickness,textEmphasis,textEmphasisColor,textEmphasisPosition,textEmphasisStyle,textIndent,textJustify,textOrientation,textOverflow,textRendering,textShadow,textSizeAdjust,textTransform,textUnderlineOffset,textUnderlinePosition,textWrap,timelineScope,top,touchAction,transform,transformBox,transformOrigin,transformStyle,transition,transitionBehavior,transitionDelay,transitionDuration,transitionProperty,transitionTimingFunction,translate,unicodeBidi,userSelect,verticalAlign,viewTimeline,viewTimelineAxis,viewTimelineInset,viewTimelineName,viewTransitionName,visibility,whiteSpace,whiteSpaceCollapse,widows,width,willChange,wordBreak,wordSpacing,wordWrap,writingMode,zIndex,zoom,alignmentBaseline,baselineShift,clipRule,colorInterpolation,colorRendering,dominantBaseline,fill,fillOpacity,fillRule,floodColor,floodOpacity,glyphOrientationVertical,lightingColor,marker,markerEnd,markerMid,markerStart,shapeRendering,stopColor,stopOpacity,stroke,strokeDasharray,strokeDashoffset,strokeLinecap,strokeLinejoin,strokeMiterlimit,strokeOpacity,strokeWidth,textAnchor,vectorEffect",B8=O8.split(",").concat(V8),q8=new Map(B8.map(e=>[e,!0])),M8=/&|@/,xl=Ke(e=>q8.has(e)||e.startsWith("--")||M8.test(e));const j8=(e,t)=>!t.includes(e)&&!xl(e),F8=(e,t)=>e.__shouldForwardProps__&&t?a=>e.__shouldForwardProps__(a)&&t(a):t,I8=(e,t)=>{var r;if(e&&!t)return e;if(!e&&t)return t;if(e.__cva__&&t.__cva__||e.__recipe__&&t.__recipe__)return e.merge(t);const a=new TypeError("Cannot merge cva with recipe. Please use either cva or recipe.");throw(r=TypeError.captureStackTrace)==null||r.call(TypeError,a),a},U8=e=>typeof e=="string"?e:(e==null?void 0:e.displayName)||(e==null?void 0:e.name)||"Component";function tp(e,t={},a={}){const r=t.__cva__||t.__recipe__?t:J6(t),i=a.shouldForwardProp||j8,n=m=>i(m,r.variantKeys),d=Object.assign(a.dataAttr&&t.__name__?{"data-recipe":t.__name__}:{},a.defaultProps),p=I8(e.__cva__,r),o=F8(e,n),l=e.__base__||e,s=y.forwardRef(function(h,w){const{as:_=l,children:N,...f}=h,c=y.useMemo(()=>Object.assign({},d,f),[f]),[v,D,P,S,L]=y.useMemo(()=>Re(c,fo.keys,o,p.variantKeys,xl),[c]);function x(){var de;const{css:V,...W}=S,J=(de=p.__getCompoundVariantCss__)==null?void 0:de.call(p,P);return Zr(p(P,!1),si(J,W,V),c.className)}function R(){const{css:V,...W}=S,J=p.raw(P);return Zr(si(J,W,V),c.className)}const C=t.__recipe__?x:R;return y.createElement(_,{ref:w,...D,...L,...fo(v),className:C()},c.children??N)}),u=U8(l);return s.displayName=`styled.${u}`,s.__cva__=p,s.__base__=l,s.__shouldForwardProps__=n,s}function H8(){const e=new Map;return new Proxy(tp,{apply(t,a,r){return tp(...r)},get(t,a){return e.has(a)||e.set(a,tp(a)),e.get(a)}})}const je=H8(),P2={transform(e){return e}},W8=(e={})=>{const t=d1(P2,e);return P2.transform(t,n1)},z8=y.forwardRef(function(t,a){const[r,i]=Re(t,[]),n=W8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),k2={transform(e){const{align:t,justify:a,direction:r,gap:i,...n}=e;return{display:"flex",flexDirection:r,alignItems:t,justifyContent:a,gap:i,...n}},defaultValues:{direction:"column",gap:"10px"}},$8=(e={})=>{const t=d1(k2,e);return k2.transform(t,n1)},Je=y.forwardRef(function(t,a){const[r,i]=Re(t,["align","justify","direction","gap"]),n=$8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),L2={transform(e){const{justify:t,gap:a,...r}=e;return{display:"flex",alignItems:"center",justifyContent:t,gap:a,flexDirection:"column",...r}},defaultValues:{gap:"10px"}},G8=(e={})=>{const t=d1(L2,e);return L2.transform(t,n1)},Z6=y.forwardRef(function(t,a){const[r,i]=Re(t,["justify","gap"]),n=G8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),V2={transform(e){const{justify:t,gap:a,...r}=e;return{display:"flex",alignItems:"center",justifyContent:t,gap:a,flexDirection:"row",...r}},defaultValues:{gap:"10px"}},Y8=(e={})=>{const t=d1(V2,e);return V2.transform(t,n1)},md=y.forwardRef(function(t,a){const[r,i]=Re(t,["justify","gap"]),n=Y8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),O2={transform(e){const{inline:t,...a}=e;return{display:t?"inline-flex":"flex",alignItems:"center",justifyContent:"center",...a}}},Q8=(e={})=>{const t=d1(O2,e);return O2.transform(t,n1)},K8=y.forwardRef(function(t,a){const[r,i]=Re(t,["inline"]),n=Q8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),B2={transform(e){return{position:"relative",maxWidth:"8xl",mx:"auto",px:{base:"4",md:"6",lg:"8"},...e}}},X8=(e={})=>{const t=d1(B2,e);return B2.transform(t,n1)},cd=y.forwardRef(function(t,a){const[r,i]=Re(t,[]),n=X8(r),d={ref:a,...n,...i};return y.createElement(je.div,d)}),J8=Symbol(),Al=Symbol(),k1="a",e4="f",q2="p",t4="c",a4="t",ap="n",rp="g",r4="h",ln="w",i4="o",n4="k";let Z8=(e,t)=>new Proxy(e,t);const vo=Object.getPrototypeOf,go=new WeakMap,d4=e=>e&&(go.has(e)?go.get(e):vo(e)===Object.prototype||vo(e)===Array.prototype),M2=e=>typeof e=="object"&&e!==null,e7=e=>Object.values(Object.getOwnPropertyDescriptors(e)).some(t=>!t.configurable&&!t.writable),t7=e=>{if(Array.isArray(e))return Array.from(e);const t=Object.getOwnPropertyDescriptors(e);return Object.values(t).forEach(a=>{a.configurable=!0}),Object.create(vo(e),t)},a7=(e,t)=>{const a={[e4]:t};let r=!1;const i=(p,o)=>{if(!r){let l=a[k1].get(e);if(l||(l={},a[k1].set(e,l)),p===ln)l[ln]=!0;else{let s=l[p];s||(s=new Set,l[p]=s),s.add(o)}}},n=()=>{r=!0,a[k1].delete(e)},d={get(p,o){return o===Al?e:(i(n4,o),o4(Reflect.get(p,o),a[k1],a[t4],a[a4]))},has(p,o){return o===J8?(n(),!0):(i(r4,o),Reflect.has(p,o))},getOwnPropertyDescriptor(p,o){return i(i4,o),Reflect.getOwnPropertyDescriptor(p,o)},ownKeys(p){return i(ln),Reflect.ownKeys(p)}};return t&&(d.set=d.deleteProperty=()=>!1),[d,a]},p4=e=>e[Al]||e,o4=(e,t,a,r)=>{if(!d4(e))return e;let i=r&&r.get(e);if(!i){const o=p4(e);e7(o)?i=[o,t7(o)]:i=[o],r==null||r.set(e,i)}const[n,d]=i;let p=a&&a.get(n);return(!p||p[1][e4]!==!!d)&&(p=a7(n,!!d),p[1][q2]=Z8(d||n,p[0]),a&&a.set(n,p)),p[1][k1]=t,p[1][t4]=a,p[1][a4]=r,p[1][q2]},r7=(e,t)=>{const a=Reflect.ownKeys(e),r=Reflect.ownKeys(t);return a.length!==r.length||a.some((i,n)=>i!==r[n])},l4=(e,t,a,r,i=Object.is)=>{if(i(e,t))return!1;if(!M2(e)||!M2(t))return!0;const n=a.get(p4(e));if(!n)return!0;if(r){const p=r.get(e);if(p&&p[ap]===t)return p[rp];r.set(e,{[ap]:t,[rp]:!1})}let d=null;try{for(const p of n[r4]||[])if(d=Reflect.has(e,p)!==Reflect.has(t,p),d)return d;if(n[ln]===!0){if(d=r7(e,t),d)return d}else for(const p of n[i4]||[]){const o=!!Reflect.getOwnPropertyDescriptor(e,p),l=!!Reflect.getOwnPropertyDescriptor(t,p);if(d=o!==l,d)return d}for(const p of n[n4]||[])if(d=l4(e[p],t[p],a,r,i),d)return d;return d===null&&(d=!0),d}finally{r&&r.set(e,{[ap]:t,[rp]:d})}},i7=e=>d4(e)&&e[Al]||null,j2=(e,t=!0)=>{go.set(e,t)};function n7(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global}function Rl(e,t){const a=n7();return a?(a[e]||(a[e]=t()),a[e]):t()}var ip=e=>typeof e=="object"&&e!==null,$a=Rl("__zag__proxyStateMap",()=>new WeakMap),L1=Rl("__zag__refSet",()=>new WeakSet),d7=e=>typeof e=="object"&&e!==null&&"$$typeof"in e,p7=e=>typeof e=="object"&&e!==null&&"__v_isVNode"in e,o7=e=>typeof e=="object"&&e!==null&&"nodeType"in e&&typeof e.nodeName=="string",l7=e=>d7(e)||p7(e)||o7(e),s7=(e=Object.is,t=(l,s)=>new Proxy(l,s),a=l=>ip(l)&&!L1.has(l)&&(Array.isArray(l)||!(Symbol.iterator in l))&&!l7(l)&&!(l instanceof WeakMap)&&!(l instanceof WeakSet)&&!(l instanceof Error)&&!(l instanceof Number)&&!(l instanceof Date)&&!(l instanceof String)&&!(l instanceof RegExp)&&!(l instanceof ArrayBuffer),r=l=>{switch(l.status){case"fulfilled":return l.value;case"rejected":throw l.reason;default:throw l}},i=new WeakMap,n=(l,s,u=r)=>{const m=i.get(l);if((m==null?void 0:m[0])===s)return m[1];const h=Array.isArray(l)?[]:Object.create(Object.getPrototypeOf(l));return j2(h,!0),i.set(l,[s,h]),Reflect.ownKeys(l).forEach(w=>{const _=Reflect.get(l,w);L1.has(_)?(j2(_,!1),h[w]=_):_ instanceof Promise?Object.defineProperty(h,w,{get(){return u(_)}}):$a.has(_)?h[w]=ba(_,u):h[w]=_}),Object.freeze(h)},d=new WeakMap,p=[1,1],o=l=>{if(!ip(l))throw new Error("object required");const s=d.get(l);if(s)return s;let u=p[0];const m=new Set,h=(R,C=++p[0])=>{u!==C&&(u=C,m.forEach(V=>V(R,C)))};let w=p[1];const _=(R=++p[1])=>(w!==R&&!m.size&&(w=R,f.forEach(([C])=>{const V=C[1](R);V>u&&(u=V)})),u),N=R=>(C,V)=>{const W=[...C];W[1]=[R,...W[1]],h(W,V)},f=new Map,c=(R,C)=>{if(m.size){const V=C[3](N(R));f.set(R,[C,V])}else f.set(R,[C])},v=R=>{var V;const C=f.get(R);C&&(f.delete(R),(V=C[1])==null||V.call(C))},D=R=>(m.add(R),m.size===1&&f.forEach(([V,W],J)=>{const de=V[3](N(J));f.set(J,[V,de])}),()=>{m.delete(R),m.size===0&&f.forEach(([V,W],J)=>{W&&(W(),f.set(J,[V]))})}),P=Array.isArray(l)?[]:Object.create(Object.getPrototypeOf(l)),L=t(P,{deleteProperty(R,C){const V=Reflect.get(R,C);v(C);const W=Reflect.deleteProperty(R,C);return W&&h(["delete",[C],V]),W},set(R,C,V,W){var wt;const J=Reflect.has(R,C),de=Reflect.get(R,C,W);if(J&&(e(de,V)||d.has(V)&&e(de,d.get(V))))return!0;v(C),ip(V)&&(V=i7(V)||V);let nt=V;if(!((wt=Object.getOwnPropertyDescriptor(R,C))!=null&&wt.set))if(V instanceof Promise)V.then(ne=>{Object.assign(V,{status:"fulfilled",value:ne}),h(["resolve",[C],ne])}).catch(ne=>{Object.assign(V,{status:"rejected",reason:ne}),h(["reject",[C],ne])});else{!$a.has(V)&&a(V)&&(nt=Pl(V));const ne=!L1.has(nt)&&$a.get(nt);ne&&c(C,ne)}return Reflect.set(R,C,nt,W),h(["set",[C],V,de]),!0}});d.set(l,L);const x=[P,_,n,D];return $a.set(L,x),Reflect.ownKeys(l).forEach(R=>{const C=Object.getOwnPropertyDescriptor(l,R);C.get||C.set?Object.defineProperty(P,R,C):L[R]=l[R]}),L})=>[o,$a,L1,e,t,a,r,i,n,d,p],[u7]=s7();function Pl(e={}){return u7(e)}function yo(e,t,a){const r=$a.get(e);let i;const n=[],d=r[3];let p=!1;const l=d(s=>{if(n.push(s),a){t(n.splice(0));return}i||(i=Promise.resolve().then(()=>{i=void 0,p&&t(n.splice(0))}))});return p=!0,()=>{p=!1,l()}}function ba(e,t){const a=$a.get(e),[r,i,n]=a;return n(r,i(),t)}function F2(e){return L1.add(e),e}function m7(e,t){Object.keys(t).forEach(i=>{if(Object.getOwnPropertyDescriptor(e,i))throw new Error("object property already defined");const n=t[i],{get:d,set:p}=typeof n=="function"?{get:n}:n,o={};o.get=()=>d(ba(r)),p&&(o.set=l=>p(r,l)),Object.defineProperty(e,i,o)});const r=Pl(e);return r}function c7(e){for(;e.length>0;)e.pop();return e}var I2=e=>(e==null?void 0:e.constructor.name)==="Array",f7=(e,t)=>{if(e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(!fd(e[a],t[a]))return!1;return!0},fd=(e,t)=>{if(Object.is(e,t))return!0;if(e==null&&t!=null||e!=null&&t==null)return!1;if(typeof(e==null?void 0:e.isEqual)=="function"&&typeof(t==null?void 0:t.isEqual)=="function")return e.isEqual(t);if(typeof e=="function"&&typeof t=="function")return e.toString()===t.toString();if(I2(e)&&I2(t))return f7(Array.from(e),Array.from(t));if(typeof e!="object"||typeof t!="object")return!1;const a=Object.keys(t??Object.create(null)),r=a.length;for(let i=0;i<r;i++)if(!Reflect.has(e,a[i]))return!1;for(let i=0;i<r;i++){const n=a[i];if(!fd(e[n],t[n]))return!1}return!0},U2=(e,...t)=>(typeof e=="function"?e(...t):e)??void 0,Gt=e=>e,h7=()=>{},v7=(...e)=>(...t)=>{e.forEach(function(a){a==null||a(...t)})},H2=(()=>{let e=0;return()=>(e++,e.toString(36))})(),Un=e=>Array.isArray(e),s4=e=>e!=null&&typeof e=="object",sn=e=>s4(e)&&!Un(e),g7=e=>typeof e=="number"&&!Number.isNaN(e),et=e=>typeof e=="string",Hn=e=>typeof e=="function",u4=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),y7=e=>Object.prototype.toString.call(e),m4=Function.prototype.toString,b7=m4.call(Object),w7=e=>{if(!s4(e)||y7(e)!="[object Object]")return!1;const t=Object.getPrototypeOf(e);if(t===null)return!0;const a=u4(t,"constructor")&&t.constructor;return typeof a=="function"&&a instanceof a&&m4.call(a)==b7};function e1(e){if(!S7(e)||e===void 0)return e;const t=Reflect.ownKeys(e).filter(r=>typeof r=="string"),a={};for(const r of t){const i=e[r];i!==void 0&&(a[r]=e1(i))}return a}var S7=e=>e&&typeof e=="object"&&e.constructor===Object;function np(...e){const t=e.length===1?e[0]:e[1],a=e.length===2?e[0]:!0}function un(...e){const t=e.length===1?e[0]:e[1],a=e.length===2?e[0]:!0}function W2(e,t,a){typeof a.value=="object"&&(a.value=Mr(a.value)),!a.enumerable||a.get||a.set||!a.configurable||!a.writable||t==="__proto__"?Object.defineProperty(e,t,a):e[t]=a.value}function Mr(e){if(typeof e!="object")return e;var t=0,a,r,i,n=Object.prototype.toString.call(e);if(n==="[object Object]"?i=Object.create(e.__proto__||null):n==="[object Array]"?i=Array(e.length):n==="[object Set]"?(i=new Set,e.forEach(function(d){i.add(Mr(d))})):n==="[object Map]"?(i=new Map,e.forEach(function(d,p){i.set(Mr(p),Mr(d))})):n==="[object Date]"?i=new Date(+e):n==="[object RegExp]"?i=new RegExp(e.source,e.flags):n==="[object DataView]"?i=new e.constructor(Mr(e.buffer)):n==="[object ArrayBuffer]"?i=e.slice(0):n.slice(-6)==="Array]"&&(i=new e.constructor(e)),i){for(r=Object.getOwnPropertySymbols(e);t<r.length;t++)W2(i,r[t],Object.getOwnPropertyDescriptor(e,r[t]));for(t=0,r=Object.getOwnPropertyNames(e);t<r.length;t++)Object.hasOwnProperty.call(i,a=r[t])&&i[a]===e[a]||W2(i,a,Object.getOwnPropertyDescriptor(e,a))}return i||e}var _7=Object.defineProperty,T7=(e,t,a)=>t in e?_7(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,I=(e,t,a)=>T7(e,typeof t!="symbol"?t+"":t,a);function c4(e,...t){for(const a of t){const r=e1(a);for(const i in r)w7(a[i])?(e[i]||(e[i]={}),c4(e[i],a[i])):e[i]=a[i]}return e}function z2(e){return Mr(e)}function Tt(e){return et(e)?{type:e}:e}function ua(e){return e?Un(e)?e.slice():[e]:[]}function f4(e){return sn(e)&&e.predicate!=null}var E7=()=>!0;function kl(e,t,a,r){return i=>{var n;return et(i)?!!((n=e[i])!=null&&n.call(e,t,a,r)):Hn(i)?i(t,a,r):i.predicate(e)(t,a,r)}}function D7(...e){return{predicate:t=>(a,r,i)=>e.map(kl(t,a,r,i)).some(Boolean)}}function C7(...e){return{predicate:t=>(a,r,i)=>e.map(kl(t,a,r,i)).every(Boolean)}}function N7(e){return{predicate:t=>(a,r,i)=>!kl(t,a,r,i)(e)}}function x7(...e){return(t,a,r)=>r.state.matches(...e)}var h4={or:D7,and:C7,not:N7,stateIn:x7};function v4(e,t){return e=e??E7,(a,r,i)=>{if(et(e)){const n=t[e];return Hn(n)?n(a,r,i):n}return f4(e)?e.predicate(t)(a,r,i):e==null?void 0:e(a,r,i)}}function dp(e,t){return(a,r,i)=>f4(e)?e.predicate(t)(a,r,i):e}function A7(e){var n,d;const t=e.computed??Gt({}),a=e.context??Gt({}),r=e.initial?(d=(n=e.states)==null?void 0:n[e.initial])==null?void 0:d.tags:[],i=Pl({value:e.initial??"",previousValue:"",event:Gt({}),previousEvent:Gt({}),context:m7(a,t),done:!1,tags:r??[],hasTag(p){return this.tags.includes(p)},matches(...p){return p.includes(this.value)},can(p){return Gt(this).nextEvents.includes(p)},get nextEvents(){var l,s;const p=((s=(l=e.states)==null?void 0:l[this.value])==null?void 0:s.on)??{},o=(e==null?void 0:e.on)??{};return Object.keys({...p,...o})},get changed(){return this.event.value==="machine.init"||!this.previousValue?!1:this.value!==this.previousValue}});return Gt(i)}function E1(e,t){return(a,r)=>{if(g7(e))return e;if(Hn(e))return e(a,r);if(et(e)){const i=Number.parseFloat(e);if(!Number.isNaN(i))return i;if(t){const n=t==null?void 0:t[e];return un(n==null,`[@zag-js/core > determine-delay] Cannot determine delay for \`${e}\`. It doesn't exist in \`options.delays\``),Hn(n)?n(a,r):n}}}}function R7(e){return et(e)?{target:e}:e}function P7(e,t){return(a,r,i)=>ua(e).map(R7).find(n=>v4(n.guard,t)(a,r,i)??n.target??n.actions)}var k7=class{constructor(e,t){var a,r,i,n,d;I(this,"status","Not Started"),I(this,"state"),I(this,"initialState"),I(this,"initialContext"),I(this,"id"),I(this,"type","machine"),I(this,"activityEvents",new Map),I(this,"delayedEvents",new Map),I(this,"stateListeners",new Set),I(this,"doneListeners",new Set),I(this,"contextWatchers",new Set),I(this,"removeStateListener",h7),I(this,"parent"),I(this,"children",new Map),I(this,"guardMap"),I(this,"actionMap"),I(this,"delayMap"),I(this,"activityMap"),I(this,"sync"),I(this,"options"),I(this,"config"),I(this,"_created",()=>{var o;const p=Tt("machine.created");this.executeActions((o=this.config)==null?void 0:o.created,p)}),I(this,"start",p=>{if(this.state.value="",this.state.tags=[],this.status==="Running")return this;this.status="Running",this.removeStateListener=yo(this.state,()=>{this.stateListeners.forEach(h=>{h(this.stateSnapshot)})},this.sync),this.setupContextWatchers(),this.executeActivities(Tt("machine.start"),ua(this.config.activities),"machine.start"),this.executeActions(this.config.entry,Tt("machine.start"));const o=Tt("machine.init"),l=sn(p)?p.value:p,s=sn(p)?p.context:void 0;s&&this.setContext(s);const u={target:l??this.config.initial},m=this.getNextStateInfo(u,o);return this.initialState=m,this.performStateChangeEffects(this.state.value,m,o),this}),I(this,"setupContextWatchers",()=>{const{watch:p}=this.config;if(!p)return;let o=ba(this.state.context);const l=yo(this.state.context,()=>{var u;const s=ba(this.state.context);for(const[m,h]of Object.entries(p))(((u=this.options.compareFns)==null?void 0:u[m])??Object.is)(o[m],s[m])||this.executeActions(h,this.state.event);o=s});this.contextWatchers.add(l)}),I(this,"stop",()=>{if(this.status!=="Stopped")return this.performExitEffects(this.state.value,Tt("machine.stop")),this.executeActions(this.config.exit,Tt("machine.stop")),this.setState(""),this.setEvent("machine.stop"),this.stopStateListeners(),this.stopChildren(),this.stopActivities(),this.stopDelayedEvents(),this.stopContextWatchers(),this.status="Stopped",this}),I(this,"stopStateListeners",()=>{this.removeStateListener(),this.stateListeners.clear()}),I(this,"stopContextWatchers",()=>{this.contextWatchers.forEach(p=>p()),this.contextWatchers.clear()}),I(this,"stopDelayedEvents",()=>{this.delayedEvents.forEach(p=>{p.forEach(o=>o())}),this.delayedEvents.clear()}),I(this,"stopActivities",p=>{var o,l;p?((o=this.activityEvents.get(p))==null||o.forEach(s=>s()),(l=this.activityEvents.get(p))==null||l.clear(),this.activityEvents.delete(p)):(this.activityEvents.forEach(s=>{s.forEach(u=>u()),s.clear()}),this.activityEvents.clear())}),I(this,"sendChild",(p,o)=>{const l=Tt(p),s=U2(o,this.contextSnapshot),u=this.children.get(s);u||un(`[@zag-js/core] Cannot send '${l.type}' event to unknown child`),u.send(l)}),I(this,"stopChild",p=>{this.children.has(p)||un(`[@zag-js/core > stop-child] Cannot stop unknown child ${p}`),this.children.get(p).stop(),this.children.delete(p)}),I(this,"removeChild",p=>{this.children.delete(p)}),I(this,"stopChildren",()=>{this.children.forEach(p=>p.stop()),this.children.clear()}),I(this,"setParent",p=>{this.parent=p}),I(this,"spawn",(p,o)=>{const l=U2(p);return o&&(l.id=o),l.type="machine.actor",l.setParent(this),this.children.set(l.id,Gt(l)),l.onDone(()=>{this.removeChild(l.id)}).start(),Gt(F2(l))}),I(this,"stopActivity",p=>{var l;if(!this.state.value)return;const o=this.activityEvents.get(this.state.value);(l=o==null?void 0:o.get(p))==null||l(),o==null||o.delete(p)}),I(this,"addActivityCleanup",(p,o,l)=>{var s;p&&(this.activityEvents.has(p)?(s=this.activityEvents.get(p))==null||s.set(o,l):this.activityEvents.set(p,new Map([[o,l]])))}),I(this,"setState",p=>{this.state.previousValue=this.state.value,this.state.value=p;const o=this.getStateNode(p);p==null?c7(this.state.tags):this.state.tags=ua(o==null?void 0:o.tags)}),I(this,"setContext",p=>{p&&c4(this.state.context,e1(p))}),I(this,"setOptions",p=>{const o=e1(p);this.actionMap={...this.actionMap,...o.actions},this.delayMap={...this.delayMap,...o.delays},this.activityMap={...this.activityMap,...o.activities},this.guardMap={...this.guardMap,...o.guards}}),I(this,"getStateNode",p=>{var o;if(p)return(o=this.config.states)==null?void 0:o[p]}),I(this,"getNextStateInfo",(p,o)=>{const l=this.determineTransition(p,o),s=!(l!=null&&l.target),u=(l==null?void 0:l.target)??this.state.value,m=this.state.value!==u,h=this.getStateNode(u),_={reenter:!s&&!m&&!(l!=null&&l.internal),transition:l,stateNode:h,target:u,changed:m};return this.log("NextState:",`[${o.type}]`,this.state.value,"---->",_.target),_}),I(this,"getAfterActions",(p,o)=>{let l;const s=this.state.value;return{entry:()=>{l=globalThis.setTimeout(()=>{const u=this.getNextStateInfo(p,this.state.event);this.performStateChangeEffects(s,u,this.state.event)},o)},exit:()=>{globalThis.clearTimeout(l)}}}),I(this,"getDelayedEventActions",p=>{const o=this.getStateNode(p),l=this.state.event;if(!o||!o.after)return;const s=[],u=[];if(Un(o.after)){const m=this.determineTransition(o.after,l);if(!m)return;if(!u4(m,"delay"))throw new Error(`[@zag-js/core > after] Delay is required for after transition: ${JSON.stringify(m)}`);const w=E1(m.delay,this.delayMap)(this.contextSnapshot,l),_=this.getAfterActions(m,w);return s.push(_.entry),u.push(_.exit),{entries:s,exits:u}}if(sn(o.after))for(const m in o.after){const h=o.after[m],_=E1(m,this.delayMap)(this.contextSnapshot,l),N=this.getAfterActions(h,_);s.push(N.entry),u.push(N.exit)}return{entries:s,exits:u}}),I(this,"executeActions",(p,o)=>{var s;const l=dp(p,this.guardMap)(this.contextSnapshot,o,this.guardMeta);for(const u of ua(l)){const m=et(u)?(s=this.actionMap)==null?void 0:s[u]:u;np(et(u)&&!m,`[@zag-js/core > execute-actions] No implementation found for action: \`${u}\``),m==null||m(this.state.context,o,this.meta)}}),I(this,"executeActivities",(p,o,l)=>{var s;for(const u of o){const m=et(u)?(s=this.activityMap)==null?void 0:s[u]:u;if(!m){np(`[@zag-js/core > execute-activity] No implementation found for activity: \`${u}\``);continue}const h=m(this.state.context,p,this.meta);if(h){const w=et(u)?u:u.name||H2();this.addActivityCleanup(l??this.state.value,w,h)}}}),I(this,"createEveryActivities",(p,o)=>{if(p)if(Un(p)){const l=ua(p).find(h=>{const w=h.delay,N=E1(w,this.delayMap)(this.contextSnapshot,this.state.event);return v4(h.guard,this.guardMap)(this.contextSnapshot,this.state.event,this.guardMeta)??N!=null});if(!l)return;const u=E1(l.delay,this.delayMap)(this.contextSnapshot,this.state.event);o(()=>{const h=globalThis.setInterval(()=>{this.executeActions(l.actions,this.state.event)},u);return()=>{globalThis.clearInterval(h)}})}else for(const l in p){const s=p==null?void 0:p[l],m=E1(l,this.delayMap)(this.contextSnapshot,this.state.event);o(()=>{const w=globalThis.setInterval(()=>{this.executeActions(s,this.state.event)},m);return()=>{globalThis.clearInterval(w)}})}}),I(this,"setEvent",p=>{this.state.previousEvent=this.state.event,this.state.event=F2(Tt(p))}),I(this,"performExitEffects",(p,o)=>{const l=this.state.value;if(l==="")return;const s=p?this.getStateNode(p):void 0;this.stopActivities(l);const u=dp(s==null?void 0:s.exit,this.guardMap)(this.contextSnapshot,o,this.guardMeta),m=ua(u),h=this.delayedEvents.get(l);h&&m.push(...h),this.executeActions(m,o),this.delayedEvents.delete(l)}),I(this,"performEntryEffects",(p,o)=>{const l=this.getStateNode(p),s=ua(l==null?void 0:l.activities);this.createEveryActivities(l==null?void 0:l.every,w=>{s.unshift(w)}),s.length>0&&this.executeActivities(o,s);const u=dp(l==null?void 0:l.entry,this.guardMap)(this.contextSnapshot,o,this.guardMeta),m=ua(u),h=this.getDelayedEventActions(p);l!=null&&l.after&&h&&(this.delayedEvents.set(p,h==null?void 0:h.exits),m.push(...h.entries)),this.executeActions(m,o),(l==null?void 0:l.type)==="final"&&(this.state.done=!0,this.doneListeners.forEach(w=>{w(this.stateSnapshot)}),this.stop())}),I(this,"performTransitionEffects",(p,o)=>{const l=this.determineTransition(p,o);this.executeActions(l==null?void 0:l.actions,o)}),I(this,"performStateChangeEffects",(p,o,l)=>{this.setEvent(l);const s=o.changed||o.reenter;s&&this.performExitEffects(p,l),this.performTransitionEffects(o.transition,l),this.setState(o.target),s&&this.performEntryEffects(o.target,l)}),I(this,"determineTransition",(p,o)=>{const l=P7(p,this.guardMap);return l==null?void 0:l(this.contextSnapshot,o,this.guardMeta)}),I(this,"sendParent",p=>{var l;this.parent||un("[@zag-js/core > send-parent] Cannot send event to an unknown parent");const o=Tt(p);(l=this.parent)==null||l.send(o)}),I(this,"log",(...p)=>{}),I(this,"send",p=>{const o=Tt(p);this.transition(this.state.value,o)}),I(this,"transition",(p,o)=>{var h,w;const l=et(p)?this.getStateNode(p):p==null?void 0:p.stateNode,s=Tt(o);if(!l&&!this.config.on){const _=this.status==="Stopped"?"[@zag-js/core > transition] Cannot transition a stopped machine":`[@zag-js/core > transition] State does not have a definition for \`state\`: ${p}, \`event\`: ${s.type}`;np(_);return}const u=((h=l==null?void 0:l.on)==null?void 0:h[s.type])??((w=this.config.on)==null?void 0:w[s.type]),m=this.getNextStateInfo(u,s);return this.performStateChangeEffects(this.state.value,m,s),m.stateNode}),I(this,"subscribe",p=>(this.stateListeners.add(p),this.status==="Running"&&p(this.stateSnapshot),()=>{this.stateListeners.delete(p)})),I(this,"onDone",p=>(this.doneListeners.add(p),this)),I(this,"onTransition",p=>(this.stateListeners.add(p),this.status==="Running"&&p(this.stateSnapshot),this)),this.config=z2(e),this.options=z2(t??{}),this.id=this.config.id??`machine-${H2()}`,this.guardMap=((a=this.options)==null?void 0:a.guards)??{},this.actionMap=((r=this.options)==null?void 0:r.actions)??{},this.delayMap=((i=this.options)==null?void 0:i.delays)??{},this.activityMap=((n=this.options)==null?void 0:n.activities)??{},this.sync=((d=this.options)==null?void 0:d.sync)??!1,this.state=A7(this.config),this.initialContext=ba(this.state.context)}get stateSnapshot(){return Gt(ba(this.state))}getState(){return this.stateSnapshot}get contextSnapshot(){return this.stateSnapshot.context}get self(){const e=this;return{id:this.id,send:this.send.bind(this),sendParent:this.sendParent.bind(this),sendChild:this.sendChild.bind(this),stop:this.stop.bind(this),stopChild:this.stopChild.bind(this),spawn:this.spawn.bind(this),stopActivity:this.stopActivity.bind(this),get state(){return e.stateSnapshot},get initialContext(){return e.initialContext},get initialState(){var t;return((t=e.initialState)==null?void 0:t.target)??""}}}get meta(){var e;return{state:this.stateSnapshot,guards:this.guardMap,send:this.send.bind(this),self:this.self,initialContext:this.initialContext,initialState:((e=this.initialState)==null?void 0:e.target)??"",getState:()=>this.stateSnapshot,getAction:t=>this.actionMap[t],getGuard:t=>this.guardMap[t]}}get guardMeta(){return{state:this.stateSnapshot}}get[Symbol.toStringTag](){return"Machine"}getHydrationState(){const e=this.getState();return{value:e.value,tags:e.tags}}},g4=(e,t)=>new k7(e,t),L7=(...e)=>e.map(t=>{var a;return(a=t==null?void 0:t.trim)==null?void 0:a.call(t)}).filter(Boolean).join(" "),V7=/((?:--)?(?:\w+-?)+)\s*:\s*([^;]*)/g,$2=e=>{const t={};let a;for(;a=V7.exec(e);)t[a[1]]=a[2];return t},O7=(e,t)=>{if(et(e)){if(et(t))return`${e};${t}`;e=$2(e)}else et(t)&&(t=$2(t));return Object.assign({},e??{},t??{})};function ge(...e){let t={};for(let a of e){for(let r in t){if(r.startsWith("on")&&typeof t[r]=="function"&&typeof a[r]=="function"){t[r]=v7(a[r],t[r]);continue}if(r==="className"||r==="class"){t[r]=L7(t[r],a[r]);continue}if(r==="style"){t[r]=O7(t[r],a[r]);continue}t[r]=a[r]!==void 0?a[r]:t[r]}for(let r in a)t[r]===void 0&&(t[r]=a[r])}return t}function B7(e,t){typeof e=="function"?e(t):e!=null&&(e.current=t)}function Ll(...e){return t=>{for(const a of e)B7(a,t)}}function q7(e){var r,i;let t=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,a=t&&"isReactWarning"in t&&t.isReactWarning;return a?e.ref:(t=(i=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:i.get,a=t&&"isReactWarning"in t&&t.isReactWarning,a?e.props.ref:e.props.ref||e.ref)}const pp=e=>{const t=y.memo(y.forwardRef((a,r)=>{const{asChild:i,children:n,...d}=a;if(!i)return y.createElement(e,{...d,ref:r},n);const p=y.Children.only(n);if(!y.isValidElement(p))return null;const o=q7(p);return y.cloneElement(p,{...ge(d,p.props),ref:r?Ll(r,o):o})}));return t.displayName=e.displayName||e.name,t},M7=()=>{const e=new Map;return new Proxy(pp,{apply(t,a,r){return pp(r[0])},get(t,a){const r=a;return e.has(r)||e.set(r,pp(r)),e.get(r)}})},te=M7(),Ft=(e,t,a)=>{const r=n=>({[e]:"__ignore__",...t,...Va(n)});return{recipeFn:(n,d=!0)=>{const o=W6({conditions:{shift:Y6,finalize:G6,breakpoints:{keys:["base","sm","md","lg","xl","2xl"]}},utility:{toHash:(s,u)=>u(s.join(":")),transform:(s,u)=>(k8(e,a,n,s),u==="__ignore__"?{className:e}:(u=Dl(u),{className:`${e}--${s}_${u}`}))}}),l=r(n);if(d){const s=ho(a,l);return Zr(o(l),si(s))}return o(l)},getVariantProps:r,__getCompoundVariantCss__:n=>ho(a,r(n))}},p1=(e,t)=>{if(e&&!t)return e;if(!e&&t)return t;const a=(...n)=>Zr(e(...n),t(...n)),r=co(e.variantKeys,t.variantKeys),i=r.reduce((n,d)=>(n[d]=co(e.variantMap[d],t.variantMap[d]),n),{});return Object.assign(a,{__recipe__:!0,__name__:`${e.__name__} ${t.__name__}`,raw:n=>n,variantKeys:r,variantMap:i,splitVariantProps(n){return Re(n,r)}})},op=Ft("button",{variant:"solid",size:"md"},[]),y4={variant:["solid","outline","ghost","link","subtle"],size:["xs","sm","md","lg","xl","2xl"]},G2=Object.keys(y4),j7=Object.assign(Ke(op.recipeFn),{__recipe__:!0,__name__:"button",__getCompoundVariantCss__:op.__getCompoundVariantCss__,raw:e=>e,variantKeys:G2,variantMap:y4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,G2)},getVariantProps:op.getVariantProps}),lp=Ft("input",{size:"md"},[]),b4={size:["2xs","xs","sm","md","lg","xl","2xl"]},Y2=Object.keys(b4),F7=Object.assign(Ke(lp.recipeFn),{__recipe__:!0,__name__:"input",__getCompoundVariantCss__:lp.__getCompoundVariantCss__,raw:e=>e,variantKeys:Y2,variantMap:b4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,Y2)},getVariantProps:lp.getVariantProps}),sp=Ft("link",{},[]),w4={},Q2=Object.keys(w4),I7=Object.assign(Ke(sp.recipeFn),{__recipe__:!0,__name__:"link",__getCompoundVariantCss__:sp.__getCompoundVariantCss__,raw:e=>e,variantKeys:Q2,variantMap:w4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,Q2)},getVariantProps:sp.getVariantProps}),up=Ft("spinner",{size:"md"},[]),S4={size:["xs","sm","md","lg","xl"]},K2=Object.keys(S4),U7=Object.assign(Ke(up.recipeFn),{__recipe__:!0,__name__:"spinner",__getCompoundVariantCss__:up.__getCompoundVariantCss__,raw:e=>e,variantKeys:K2,variantMap:S4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,K2)},getVariantProps:up.getVariantProps}),mp=Ft("textarea",{size:"md"},[]),_4={size:["sm","md","lg","xl"]},X2=Object.keys(_4),H7=Object.assign(Ke(mp.recipeFn),{__recipe__:!0,__name__:"textarea",__getCompoundVariantCss__:mp.__getCompoundVariantCss__,raw:e=>e,variantKeys:X2,variantMap:_4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,X2)},getVariantProps:mp.getVariantProps}),cp=Ft("text",{},[]),T4={size:["xs","sm","md","lg","xl","2xl","3xl","4xl","5xl","6xl","7xl"],variant:["heading","column"]},J2=Object.keys(T4),W7=Object.assign(Ke(cp.recipeFn),{__recipe__:!0,__name__:"text",__getCompoundVariantCss__:cp.__getCompoundVariantCss__,raw:e=>e,variantKeys:J2,variantMap:T4,merge(e){return p1(this,e)},splitVariantProps(e){return Re(e,J2)},getVariantProps:cp.getVariantProps}),E4={size:"md"},z7=[],$7=[["root","checkbox__root"],["label","checkbox__label"],["control","checkbox__control"],["indicator","checkbox__indicator"],["group","checkbox__group"],["root","checkbox__root"],["label","checkbox__label"],["control","checkbox__control"],["indicator","checkbox__indicator"],["group","checkbox__group"]],G7=$7.map(([e,t])=>[e,Ft(t,E4,ud(z7,e))]),Y7=Ke((e={})=>Object.fromEntries(G7.map(([t,a])=>[t,a.recipeFn(e)]))),Z2=["size"],Q7=e=>({...E4,...Va(e)}),K7=Object.assign(Y7,{__recipe__:!1,__name__:"checkbox",raw:e=>e,variantKeys:Z2,variantMap:{size:["sm","md","lg"]},splitVariantProps(e){return Re(e,Z2)},getVariantProps:Q7}),D4={},X7=[],J7=[["root","field__root"],["errorText","field__errorText"],["helperText","field__helperText"],["input","field__input"],["label","field__label"],["select","field__select"],["textarea","field__textarea"],["root","field__root"],["errorText","field__errorText"],["helperText","field__helperText"],["input","field__input"],["label","field__label"],["select","field__select"],["textarea","field__textarea"]],Z7=J7.map(([e,t])=>[e,Ft(t,D4,ud(X7,e))]),ef=Ke((e={})=>Object.fromEntries(Z7.map(([t,a])=>[t,a.recipeFn(e)]))),e0=[],tf=e=>({...D4,...Va(e)}),af=Object.assign(ef,{__recipe__:!1,__name__:"field",raw:e=>e,variantKeys:e0,variantMap:{},splitVariantProps(e){return Re(e,e0)},getVariantProps:tf}),C4={size:"md"},rf=[],nf=[["root","radioGroup__root"],["label","radioGroup__label"],["item","radioGroup__item"],["itemText","radioGroup__itemText"],["itemControl","radioGroup__itemControl"],["indicator","radioGroup__indicator"],["root","radioGroup__root"],["label","radioGroup__label"],["item","radioGroup__item"],["itemText","radioGroup__itemText"],["itemControl","radioGroup__itemControl"],["indicator","radioGroup__indicator"]],df=nf.map(([e,t])=>[e,Ft(t,C4,ud(rf,e))]),pf=Ke((e={})=>Object.fromEntries(df.map(([t,a])=>[t,a.recipeFn(e)]))),t0=["size"],of=e=>({...C4,...Va(e)}),lf=Object.assign(pf,{__recipe__:!1,__name__:"radioGroup",raw:e=>e,variantKeys:t0,variantMap:{size:["sm","md","lg"]},splitVariantProps(e){return Re(e,t0)},getVariantProps:of}),N4={},sf=[],uf=[["root","card__root"],["header","card__header"],["body","card__body"],["footer","card__footer"],["title","card__title"],["description","card__description"],["root","card__root"],["header","card__header"],["body","card__body"],["footer","card__footer"],["title","card__title"],["description","card__description"]],mf=uf.map(([e,t])=>[e,Ft(t,N4,ud(sf,e))]),cf=Ke((e={})=>Object.fromEntries(mf.map(([t,a])=>[t,a.recipeFn(e)]))),a0=["variant"],ff=e=>({...N4,...Va(e)}),hf=Object.assign(cf,{__recipe__:!1,__name__:"card",raw:e=>e,variantKeys:a0,variantMap:{variant:["outline"]},splitVariantProps(e){return Re(e,a0)},getVariantProps:ff}),vf=je(te.div,U7),x4=y.forwardRef((e,t)=>{const{label:a="Loading...",...r}=e;return b.jsx(vf,{ref:t,borderBottomColor:"transparent",borderLeftColor:"transparent",...r,children:a&&b.jsx(je.span,{srOnly:!0,children:a})})});x4.displayName="Spinner";const gf=je(te.button,j7),xt=y.forwardRef((e,t)=>{const{loading:a,disabled:r,loadingText:i,children:n,...d}=e,p=a||r;return b.jsx(gf,{disabled:p,ref:t,...d,children:a&&!i?b.jsxs(b.Fragment,{children:[b.jsx(yf,{}),b.jsx(je.span,{opacity:0,children:n})]}):i||n})});xt.displayName="Button";const yf=()=>b.jsx(K8,{inline:!0,position:"absolute",transform:"translate(-50%, -50%)",top:"50%",insetStart:"50%",children:b.jsx(x4,{width:"1.1em",height:"1.1em",borderWidth:"1.5px",borderTopColor:"fg.disabled",borderRightColor:"fg.disabled"})}),bf=()=>b.jsx(cd,{maxW:"2xl",children:b.jsxs(md,{gap:"4",children:[b.jsx(xt,{mt:"4",flex:"1",h:"sm",asChild:!0,children:b.jsx(Ja,{to:"/tmdb",children:"The Movie Database"})}),b.jsx(xt,{mt:"4",flex:"1",h:"sm",asChild:!0,children:b.jsx(Ja,{to:"/sport",children:"Sport"})})]})}),Ga=je(te.a,I7);function wf(e,t){return`${e} returned \`undefined\`. Seems you forgot to wrap component within ${t}`}function na(e={}){const{name:t,strict:a=!0,hookName:r="useContext",providerName:i="Provider",errorMessage:n,defaultValue:d}=e,p=y.createContext(d);p.displayName=t;function o(){var s;const l=y.useContext(p);if(!l&&a){const u=new Error(n??wf(r,i));throw u.name="ContextError",(s=Error.captureStackTrace)==null||s.call(Error,u,o),u}return l}return[p.Provider,o,p]}var zr=(e,t=[])=>({parts:(...a)=>{if(Sf(t))return zr(e,a);throw new Error("createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?")},extendWith:(...a)=>zr(e,[...t,...a]),rename:a=>zr(a,t),keys:()=>t,build:()=>[...new Set(t)].reduce((a,r)=>Object.assign(a,{[r]:{selector:[`&[data-scope="${Sr(e)}"][data-part="${Sr(r)}"]`,`& [data-scope="${Sr(e)}"][data-part="${Sr(r)}"]`].join(", "),attrs:{"data-scope":Sr(e),"data-part":Sr(r)}}}),{})}),Sr=e=>e.replace(/([A-Z])([A-Z])/g,"$1-$2").replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase(),Sf=e=>e.length===0,le=e=>e?"":void 0,_f=e=>e?"true":void 0,Tf=1,Ef=9,Df=11,hd=e=>typeof e=="object"&&e!==null,bo=e=>hd(e)&&e.nodeType===Tf&&typeof e.nodeName=="string",A4=e=>hd(e)&&e.nodeType===Ef,Cf=e=>hd(e)&&e===e.window,Nf=e=>hd(e)&&e.nodeType!==void 0,xf=e=>Nf(e)&&e.nodeType===Df&&"host"in e;function Af(e,t){return!e||!t||!bo(e)||!bo(t)?!1:e===t||e.contains(t)}function gi(e){return A4(e)?e:Cf(e)?e.document:(e==null?void 0:e.ownerDocument)??document}function aa(e){var t;return xf(e)?aa(e.host):A4(e)?e.defaultView??window:bo(e)?((t=e.ownerDocument)==null?void 0:t.defaultView)??window:window}function Rf(e){let t=e.activeElement;for(;t!=null&&t.shadowRoot;){const a=t.shadowRoot.activeElement;if(a===t)break;t=a}return t}var Pf=()=>typeof document<"u";function kf(){const e=navigator.userAgentData;return(e==null?void 0:e.platform)??navigator.platform}var Lf=e=>Pf()&&e.test(kf()),Vf=()=>Lf(/^Mac/);function Of(e){var t,a,r;return((t=e.composedPath)==null?void 0:t.call(e))??((r=(a=e.nativeEvent)==null?void 0:a.composedPath)==null?void 0:r.call(a))}function vd(e){const t=Of(e);return(t==null?void 0:t[0])??e.target}var fp=new WeakMap;function Bf(e){return fp.has(e)||fp.set(e,aa(e).getComputedStyle(e)),fp.get(e)}function qf(e){const t=new Set;function a(r){const i=globalThis.requestAnimationFrame(r);t.add(()=>globalThis.cancelAnimationFrame(i))}return a(()=>a(e)),function(){t.forEach(i=>i())}}function Mf(e,t){return Array.from((e==null?void 0:e.querySelectorAll(t))??[])}function R4(e){const t={getRootNode:a=>{var r;return((r=a.getRootNode)==null?void 0:r.call(a))??document},getDoc:a=>gi(t.getRootNode(a)),getWin:a=>t.getDoc(a).defaultView??window,getActiveElement:a=>Rf(t.getRootNode(a)),isActiveElement:(a,r)=>r===t.getActiveElement(a),getById:(a,r)=>t.getRootNode(a).getElementById(r),setValue:(a,r)=>{if(a==null||r==null)return;const i=r.toString();a.value!==i&&(a.value=r.toString())}};return{...t,...e}}var P4={border:"0",clip:"rect(0 0 0 0)",height:"1px",margin:"-1px",overflow:"hidden",padding:"0",position:"absolute",width:"1px",whiteSpace:"nowrap",wordWrap:"normal"},Fa=(e,t,a,r)=>{const i=typeof e=="function"?e():e;return i==null||i.addEventListener(t,a,r),()=>{i==null||i.removeEventListener(t,a,r)}};function jf(e,t="client"){const a=e.touches[0]||e.changedTouches[0];return{x:a[`${t}X`],y:a[`${t}Y`]}}function Ff(e,t="client"){return{x:e[`${t}X`],y:e[`${t}Y`]}}var If=e=>"touches"in e&&e.touches.length>0;function Uf(e,t="client"){return If(e)?jf(e,t):Ff(e,t)}var hp=(...e)=>t=>e.reduce((a,r)=>r(a),t),Wi=()=>{};function Hf(e){const{pointerNode:t,keyboardNode:a=t,onPress:r,onPressStart:i,onPressEnd:n,isValidKey:d=v=>v.key==="Enter"}=e;if(!t)return Wi;const p=aa(t),o=gi(t);let l=Wi,s=Wi,u=Wi;const m=v=>({point:Uf(v),event:v});function h(v){i==null||i(m(v))}function w(v){n==null||n(m(v))}const N=Fa(t,"pointerdown",v=>{s();const P=Fa(p,"pointerup",L=>{const x=vd(L);Af(t,x)?r==null||r(m(L)):n==null||n(m(L))},{passive:!r}),S=Fa(p,"pointercancel",w,{passive:!n});s=hp(P,S),o.activeElement===a&&v.pointerType==="mouse"&&v.preventDefault(),h(v)},{passive:!i}),f=Fa(a,"focus",c);l=hp(N,f);function c(){const v=L=>{if(!d(L))return;const x=C=>{if(!d(C))return;const V=new p.PointerEvent("pointerup"),W=m(V);r==null||r(W),n==null||n(W)};s(),s=Fa(a,"keyup",x);const R=new p.PointerEvent("pointerdown");h(R)},D=()=>{const L=new p.PointerEvent("pointercancel");w(L)},P=Fa(a,"keydown",v),S=Fa(a,"blur",D);u=hp(P,S)}return function(){l(),s(),u()}}function Wf(e){return new Proxy({},{get(){return e}})}var Vl=()=>e=>Array.from(new Set(e)),k4=Wf(e=>e),r0=e=>(e==null?void 0:e.constructor.name)==="Array",zf=(e,t)=>{if(e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(!Ol(e[a],t[a]))return!1;return!0},Ol=(e,t)=>{if(Object.is(e,t))return!0;if(e==null&&t!=null||e!=null&&t==null)return!1;if(typeof(e==null?void 0:e.isEqual)=="function"&&typeof(t==null?void 0:t.isEqual)=="function")return e.isEqual(t);if(typeof e=="function"&&typeof t=="function")return e.toString()===t.toString();if(r0(e)&&r0(t))return zf(Array.from(e),Array.from(t));if(typeof e!="object"||typeof t!="object")return!1;const a=Object.keys(t??Object.create(null)),r=a.length;for(let i=0;i<r;i++)if(!Reflect.has(e,a[i]))return!1;for(let i=0;i<r;i++){const n=a[i];if(!Ol(e[n],t[n]))return!1}return!0},$f=Function.prototype.toString;$f.call(Object);function L4(e){if(!Gf(e)||e===void 0)return e;const t=Reflect.ownKeys(e).filter(r=>typeof r=="string"),a={};for(const r of t){const i=e[r];i!==void 0&&(a[r]=L4(i))}return a}var Gf=e=>e&&typeof e=="object"&&e.constructor===Object;function Yf(e,t){const a=y.useRef(!1),r=y.useRef(!1);y.useEffect(()=>{if(a.current&&r.current)return e();r.current=!0},t),y.useEffect(()=>(a.current=!0,()=>{a.current=!1}),[])}var{use:i0}=T0,Qf=Rl("__zag__targetCache",()=>new WeakMap);function Kf(e,t){const{actions:a,context:r,sync:i}=t??{},n=y.useRef(),d=y.useRef(),p=y.useSyncExternalStore(y.useCallback(u=>yo(e.state,u,i),[i]),()=>{const u=ba(e.state,i0);try{if(n.current&&d.current&&!l4(n.current,u,d.current,new WeakMap))return n.current}catch{}return u},()=>ba(e.state,i0));e.setOptions({actions:a});const o=y.useMemo(()=>L4(r??{}),[r]);Yf(()=>{const u=Object.entries(o),m=e.contextSnapshot??{};u.map(([_,N])=>({key:_,curr:N,prev:m[_],equal:Ol(m[_],N)})).every(({equal:_})=>_)||e.setContext(o)},[o]);const l=new WeakMap;y.useEffect(()=>{n.current=p,d.current=l});const s=y.useMemo(()=>new WeakMap,[]);return o4(p,l,s,Qf)}function Xf(e){const t=y.useRef();return t.current||(t.current={v:e()}),t.current.v}var Jf=typeof document<"u"?y.useLayoutEffect:y.useEffect;function Zf(e,t){const{state:a,context:r}=t??{},i=Xf(()=>{const d=typeof e=="function"?e():e;return r&&d.setContext(r),d._created(),d}),n=y.useRef();return Jf(()=>{const d=a??n.current;return i.start(d),()=>{i.stop()}},[]),i}function V4(e,t){const a=Zf(e,t);return[Kf(a,t),a.send,a]}const Oa=()=>(e,t)=>t.reduce((a,r)=>{const[i,n]=a,d=r;return n[d]!==void 0&&(i[d]=n[d]),delete n[d],[i,n]},[{},{...e}]),[Pv,O4]=na({name:"EnvironmentContext",hookName:"useEnvironmentContext",providerName:"<EnvironmentProvider />",strict:!1,defaultValue:{getRootNode:()=>document,getDocument:()=>document,getWindow:()=>window}}),[kv,B4]=na({name:"LocaleContext",hookName:"useLocaleContext",providerName:"<LocaleProvider />",strict:!1,defaultValue:{dir:"ltr",locale:"en-US"}});function Bl(e,t={}){const{sync:a=!1}=t,r=eh(e);return y.useCallback((...i)=>{var n;return a?queueMicrotask(()=>{var d;return(d=r.current)==null?void 0:d.call(r,...i)}):(n=r.current)==null?void 0:n.call(r,...i)},[a,r])}function eh(e){const t=y.useRef(e);return t.current=e,t}var q4=e=>e.ownerDocument.defaultView||window;function th(e,t){const{type:a="HTMLInputElement",property:r="value"}=t,i=q4(e)[a].prototype;return Object.getOwnPropertyDescriptor(i,r)??{}}function M4(e,t){var r;(r=th(e,{type:"HTMLInputElement",property:"checked"}).set)==null||r.call(e,t),t?e.setAttribute("checked",""):e.removeAttribute("checked")}function j4(e,t){const{checked:a,bubbles:r=!0}=t;if(!e)return;const i=q4(e);e instanceof i.HTMLInputElement&&(M4(e,a),e.dispatchEvent(new i.Event("click",{bubbles:r})))}function ah(e){return rh(e)?e.form:e.closest("form")}function rh(e){return e.matches("textarea, input, select, button")}function ih(e,t){if(!e)return;const a=ah(e);return a==null||a.addEventListener("reset",t,{passive:!0}),()=>{a==null||a.removeEventListener("reset",t)}}function nh(e,t){const a=e==null?void 0:e.closest("fieldset");if(!a)return;t(a.disabled);const r=a.ownerDocument.defaultView||window,i=new r.MutationObserver(()=>t(a.disabled));return i.observe(a,{attributes:!0,attributeFilter:["disabled"]}),()=>i.disconnect()}function F4(e,t){if(!e)return;const{onFieldsetDisabledChange:a,onFormReset:r}=t,i=[ih(e,r),nh(e,a)];return()=>{i.forEach(n=>n==null?void 0:n())}}const[I4,gd]=na({name:"CheckboxContext",hookName:"useCheckboxContext",providerName:"<CheckboxProvider />"}),U4=y.forwardRef((e,t)=>{const a=gd(),r=ge(a.getControlProps(),e);return b.jsx(te.div,{...r,ref:t})});U4.displayName="CheckboxControl";function dh(e){return e.mozInputSource===0&&e.isTrusted?!0:e.detail===0&&!e.pointerType}function ph(e){return!(e.metaKey||!Vf()&&e.altKey||e.ctrlKey||e.key==="Control"||e.key==="Shift"||e.key==="Meta")}var oh=new Set(["checkbox","radio","range","color","file","image","button","submit","reset"]);function lh(e,t,a){const r=a?vd(a):null,i=aa(r);return e=e||r instanceof i.HTMLInputElement&&!oh.has(r==null?void 0:r.type)||r instanceof i.HTMLTextAreaElement||r instanceof i.HTMLElement&&r.isContentEditable,!(e&&t==="keyboard"&&a instanceof i.KeyboardEvent&&!Reflect.has(sh,a.key))}var cr=null,wo=new Set,W1=new Map,lr=!1,So=!1,sh={Tab:!0,Escape:!0};function yd(e,t){for(let a of wo)a(e,t)}function Wn(e){lr=!0,ph(e)&&(cr="keyboard",yd("keyboard",e))}function ht(e){cr="pointer",(e.type==="mousedown"||e.type==="pointerdown")&&(lr=!0,yd("pointer",e))}function H4(e){dh(e)&&(lr=!0,cr="virtual")}function W4(e){const t=vd(e);t===aa(t)||t===gi(t)||(!lr&&!So&&(cr="virtual",yd("virtual",e)),lr=!1,So=!1)}function z4(){lr=!1,So=!0}function uh(e){if(typeof window>"u"||W1.get(aa(e)))return;const t=aa(e),a=gi(e);let r=t.HTMLElement.prototype.focus;t.HTMLElement.prototype.focus=function(){cr="virtual",yd("virtual",null),lr=!0,r.apply(this,arguments)},a.addEventListener("keydown",Wn,!0),a.addEventListener("keyup",Wn,!0),a.addEventListener("click",H4,!0),t.addEventListener("focus",W4,!0),t.addEventListener("blur",z4,!1),typeof t.PointerEvent<"u"?(a.addEventListener("pointerdown",ht,!0),a.addEventListener("pointermove",ht,!0),a.addEventListener("pointerup",ht,!0)):(a.addEventListener("mousedown",ht,!0),a.addEventListener("mousemove",ht,!0),a.addEventListener("mouseup",ht,!0)),t.addEventListener("beforeunload",()=>{mh(e)},{once:!0}),W1.set(t,{focus:r})}var mh=(e,t)=>{const a=aa(e),r=gi(e);W1.has(a)&&(a.HTMLElement.prototype.focus=W1.get(a).focus,r.removeEventListener("keydown",Wn,!0),r.removeEventListener("keyup",Wn,!0),r.removeEventListener("click",H4,!0),a.removeEventListener("focus",W4,!0),a.removeEventListener("blur",z4,!1),typeof a.PointerEvent<"u"?(r.removeEventListener("pointerdown",ht,!0),r.removeEventListener("pointermove",ht,!0),r.removeEventListener("pointerup",ht,!0)):(r.removeEventListener("mousedown",ht,!0),r.removeEventListener("mousemove",ht,!0),r.removeEventListener("mouseup",ht,!0)),W1.delete(a))};function zn(){return cr==="keyboard"}function $4(e={}){const{isTextInput:t,autoFocus:a,onChange:r,root:i}=e;uh(i),r==null||r({isFocusVisible:a||zn(),modality:cr});const n=(d,p)=>{lh(!!t,d,p)&&(r==null||r({isFocusVisible:zn(),modality:d}))};return wo.add(n),()=>{wo.delete(n)}}var G4=zr("checkbox").parts("root","label","control","indicator"),zi=G4.build(),Be=R4({getRootId:e=>{var t;return((t=e.ids)==null?void 0:t.root)??`checkbox:${e.id}`},getLabelId:e=>{var t;return((t=e.ids)==null?void 0:t.label)??`checkbox:${e.id}:label`},getControlId:e=>{var t;return((t=e.ids)==null?void 0:t.control)??`checkbox:${e.id}:control`},getHiddenInputId:e=>{var t;return((t=e.ids)==null?void 0:t.hiddenInput)??`checkbox:${e.id}:input`},getRootEl:e=>Be.getById(e,Be.getRootId(e)),getHiddenInputEl:e=>Be.getById(e,Be.getHiddenInputId(e))});function ch(e,t,a){const r=e.context.isDisabled,i=e.context.readOnly,n=!r&&e.context.focused,d=!r&&e.context.focusVisible,p=e.context.isChecked,o=e.context.isIndeterminate,l={"data-active":le(e.context.active),"data-focus":le(n),"data-focus-visible":le(d),"data-readonly":le(i),"data-hover":le(e.context.hovered),"data-disabled":le(r),"data-state":o?"indeterminate":e.context.checked?"checked":"unchecked","data-invalid":le(e.context.invalid)};return{checked:p,disabled:r,indeterminate:o,focused:n,checkedState:e.context.checked,setChecked(s){t({type:"CHECKED.SET",checked:s,isTrusted:!1})},toggleChecked(){t({type:"CHECKED.TOGGLE",checked:p,isTrusted:!1})},getRootProps(){return a.label({...zi.root.attrs,...l,dir:e.context.dir,id:Be.getRootId(e.context),htmlFor:Be.getHiddenInputId(e.context),onPointerMove(){r||t({type:"CONTEXT.SET",context:{hovered:!0}})},onPointerLeave(){r||t({type:"CONTEXT.SET",context:{hovered:!1}})},onClick(s){vd(s)===Be.getHiddenInputEl(e.context)&&s.stopPropagation()}})},getLabelProps(){return a.element({...zi.label.attrs,...l,dir:e.context.dir,id:Be.getLabelId(e.context)})},getControlProps(){return a.element({...zi.control.attrs,...l,dir:e.context.dir,id:Be.getControlId(e.context),"aria-hidden":!0})},getIndicatorProps(){return a.element({...zi.indicator.attrs,...l,dir:e.context.dir,hidden:!o&&!e.context.checked})},getHiddenInputProps(){return a.input({id:Be.getHiddenInputId(e.context),type:"checkbox",required:e.context.required,defaultChecked:p,disabled:r,"aria-labelledby":Be.getLabelId(e.context),"aria-invalid":e.context.invalid,name:e.context.name,form:e.context.form,value:e.context.value,style:P4,onFocus(){const s=zn();t({type:"CONTEXT.SET",context:{focused:!0,focusVisible:s}})},onBlur(){t({type:"CONTEXT.SET",context:{focused:!1,focusVisible:!1}})},onClick(s){if(i){s.preventDefault();return}const u=s.currentTarget.checked;t({type:"CHECKED.SET",checked:u,isTrusted:!0})}})}}}var{not:n0}=h4;function fh(e){const t=e1(e);return g4({id:"checkbox",initial:"ready",context:{checked:!1,value:"on",disabled:!1,...t,fieldsetDisabled:!1,focusVisible:!1},watch:{disabled:"removeFocusIfNeeded",checked:"syncInputElement"},activities:["trackFormControlState","trackPressEvent","trackFocusVisible"],on:{"CHECKED.TOGGLE":[{guard:n0("isTrusted"),actions:["toggleChecked","dispatchChangeEvent"]},{actions:["toggleChecked"]}],"CHECKED.SET":[{guard:n0("isTrusted"),actions:["setChecked","dispatchChangeEvent"]},{actions:["setChecked"]}],"CONTEXT.SET":{actions:["setContext"]}},computed:{isIndeterminate:a=>_o(a.checked),isChecked:a=>d0(a.checked),isDisabled:a=>!!a.disabled||a.fieldsetDisabled},states:{ready:{}}},{guards:{isTrusted:(a,r)=>!!r.isTrusted},activities:{trackPressEvent(a){if(!a.isDisabled)return Hf({pointerNode:Be.getRootEl(a),keyboardNode:Be.getHiddenInputEl(a),isValidKey:r=>r.key===" ",onPress:()=>a.active=!1,onPressStart:()=>a.active=!0,onPressEnd:()=>a.active=!1})},trackFocusVisible(a){if(!a.isDisabled)return $4({root:Be.getRootNode(a)})},trackFormControlState(a,r,{send:i,initialContext:n}){return F4(Be.getHiddenInputEl(a),{onFieldsetDisabledChange(d){a.fieldsetDisabled=d},onFormReset(){i({type:"CHECKED.SET",checked:!!n.checked})}})}},actions:{setContext(a,r){Object.assign(a,r.context)},syncInputElement(a){const r=Be.getHiddenInputEl(a);r&&(M4(r,a.isChecked),r.indeterminate=a.isIndeterminate)},removeFocusIfNeeded(a){a.disabled&&a.focused&&(a.focused=!1,a.focusVisible=!1)},setChecked(a,r){p0.checked(a,r.checked)},toggleChecked(a){const r=_o(a.checked)?!0:!a.checked;p0.checked(a,r)},dispatchChangeEvent(a){const r=Be.getHiddenInputEl(a);j4(r,{checked:d0(a.checked)})}}})}function _o(e){return e==="indeterminate"}function d0(e){return _o(e)?!1:!!e}var hh={change:e=>{var t;(t=e.onCheckedChange)==null||t.call(e,{checked:e.checked})}},p0={checked:(e,t)=>{fd(e.checked,t)||(e.checked=t,hh.change(e))}};Vl()(["checked","dir","disabled","form","getRootNode","id","ids","invalid","name","onCheckedChange","readOnly","required","value"]);const vh=G4.extendWith("group");function gh(e){const{value:t,onChange:a,defaultValue:r}=e,[i,n]=y.useState(r),d=t!==void 0,p=d?t:i,o=y.useCallback(l=>(d||n(l),a==null?void 0:a(l)),[d,a]);return[p,o]}function yh(e={}){const{defaultValue:t,value:a,onValueChange:r,disabled:i,readOnly:n,name:d,invalid:p}=e,o=!(i||n),l=Bl(r,{sync:!0}),[s,u]=gh({value:a,defaultValue:t||[],onChange:l}),m=f=>s.some(c=>String(c)===String(f)),h=f=>{m(f)?_(f):w(f)},w=f=>{o&&(m(f)||u(s.concat(f)))},_=f=>{o&&u(s.filter(c=>String(c)!==String(f)))};return{isChecked:m,value:s,name:d,disabled:!!i,readOnly:!!n,invalid:!!p,setValue:u,addValue:w,toggleValue:h,getItemProps:f=>({checked:f.value!=null?m(f.value):void 0,onCheckedChange(){f.value!=null&&h(f.value)},name:d,disabled:i,readOnly:n,invalid:p})}}const[bh,wh]=na({name:"CheckboxGroupContext",hookName:"useCheckboxGroupContext",providerName:"<CheckboxGroupProvider />",strict:!1}),Y4=y.forwardRef((e,t)=>{const[a,r]=Oa()(e,["defaultValue","value","onValueChange","disabled","invalid","readOnly","name"]),i=yh(a);return b.jsx(bh,{value:i,children:b.jsx(te.div,{ref:t,role:"group",...r,...vh.build().group.attrs})})});Y4.displayName="CheckboxGroup";const[Q4,Ba]=na({name:"FieldContext",hookName:"useFieldContext",providerName:"<FieldProvider />",strict:!1}),K4=y.forwardRef((e,t)=>{const a=gd(),r=ge(a.getHiddenInputProps(),e),i=Ba();return b.jsx(te.input,{"aria-describedby":i==null?void 0:i.ariaDescribedby,...r,ref:t})});K4.displayName="CheckboxHiddenInput";const X4=y.forwardRef((e,t)=>{const{indeterminate:a,...r}=e,i=gd(),n=ge(i.getIndicatorProps(),r),d=a?i.indeterminate:i.checked;return b.jsx(te.div,{...n,hidden:!d,ref:t})});X4.displayName="CheckboxIndicator";const J4=y.forwardRef((e,t)=>{const a=gd(),r=ge(a.getLabelProps(),e);return b.jsx(te.span,{...r,ref:t})});J4.displayName="CheckboxLabel";const Sh=(e={})=>{const t=wh(),a=Ba(),r=y.useMemo(()=>ge(e,(t==null?void 0:t.getItemProps({value:e.value}))??{}),[e,t]),{getRootNode:i}=O4(),{dir:n}=B4(),d={id:y.useId(),ids:{label:a==null?void 0:a.ids.label,hiddenInput:a==null?void 0:a.ids.control},dir:n,disabled:a==null?void 0:a.disabled,readOnly:a==null?void 0:a.readOnly,invalid:a==null?void 0:a.invalid,required:a==null?void 0:a.required,getRootNode:i,checked:r.defaultChecked,...r},p={...d,checked:r.checked,onCheckedChange:Bl(r.onCheckedChange,{sync:!0})},[o,l]=V4(fh(d),{context:p});return ch(o,l,k4)},Z4=y.forwardRef((e,t)=>{const[a,r]=Oa()(e,["checked","defaultChecked","disabled","form","id","ids","invalid","name","onCheckedChange","readOnly","required","value"]),i=Sh(a),n=ge(i.getRootProps(),r);return b.jsx(I4,{value:i,children:b.jsx(te.label,{...n,ref:t})})});Z4.displayName="CheckboxRoot";const em=y.forwardRef((e,t)=>{const[{value:a},r]=Oa()(e,["value"]),i=ge(a.getRootProps(),r);return b.jsx(I4,{value:a,children:b.jsx(te.label,{...i,ref:t})})});em.displayName="CheckboxRootProvider";const tm=y.forwardRef((e,t)=>{const a=Ba(),r=ge(a.getErrorTextProps(),e);return a!=null&&a.invalid?b.jsx(te.span,{...r,ref:t}):null});tm.displayName="FieldErrorText";const am=y.forwardRef((e,t)=>{const a=Ba(),r=ge(a==null?void 0:a.getHelperTextProps(),e);return b.jsx(te.span,{...r,ref:t})});am.displayName="FieldHelperText";const rm=y.forwardRef((e,t)=>{const a=Ba(),r=ge(a==null?void 0:a.getInputProps(),e);return b.jsx(te.input,{...r,ref:t})});rm.displayName="FieldInput";const im=y.forwardRef((e,t)=>{const a=Ba(),r=ge(a==null?void 0:a.getLabelProps(),e);return b.jsx(te.label,{...r,ref:t})});im.displayName="FieldLabel";const _h=typeof window<"u"?y.useLayoutEffect:y.useEffect,[Lv,Th]=na({name:"FieldsetContext",hookName:"useFieldsetContext",providerName:"<FieldsetProvider />",strict:!1}),Eh=zr("field").parts("root","errorText","helperText","input","label","select","textarea","requiredIndicator"),la=Eh.build(),Dh=e=>{const t=Th(),{ids:a,disabled:r=!!(t!=null&&t.disabled),invalid:i=!1,readOnly:n=!1,required:d=!1}=e,p=y.useRef(!1),o=y.useRef(!1),l=e.id??y.useId(),s=y.useRef(null),u=(a==null?void 0:a.control)??`field::${l}`,m=(a==null?void 0:a.errorText)??`field::${l}::error-text`,h=(a==null?void 0:a.helperText)??`field::${l}::helper-text`,w=(a==null?void 0:a.label)??`field::${l}::label`;_h(()=>{const R=s.current;if(!R)return;const C=aa(R),V=C.document,W=()=>{p.current=!!V.getElementById(m),o.current=!!V.getElementById(h)};W();const J=new C.MutationObserver(W);return J.observe(R,{childList:!0,subtree:!0}),()=>J.disconnect()},[m,h]);const _=y.useMemo(()=>{const R=[];return p.current&&i&&R.push(m),o.current&&R.push(h),R.join(" ")||void 0},[i,m,h]),N=y.useMemo(()=>()=>({...la.root.attrs,id:u,ref:s,role:"group","data-disabled":le(r),"data-invalid":le(i),"data-readonly":le(n)}),[r,i,n,u]),f=y.useMemo(()=>()=>({...la.label.attrs,id:w,"data-disabled":le(r),"data-invalid":le(i),"data-readonly":le(n),htmlFor:l}),[r,i,n,l,w]),c=y.useMemo(()=>()=>({"aria-describedby":_,"aria-invalid":_f(i),"data-invalid":le(i),"data-required":le(d),"data-readonly":le(n),id:l,required:d,disabled:r,readOnly:n}),[_,i,d,n,l,r]),v=y.useMemo(()=>()=>({...c(),...la.input.attrs}),[c]),D=y.useMemo(()=>()=>({...c(),...la.textarea.attrs}),[c]),P=y.useMemo(()=>()=>({...c(),...la.select.attrs}),[c]),S=y.useMemo(()=>()=>({id:h,...la.helperText.attrs}),[h]),L=y.useMemo(()=>()=>({id:m,...la.errorText.attrs,"aria-live":"polite"}),[m]),x=y.useMemo(()=>()=>({"aria-hidden":!0,...la.requiredIndicator.attrs}),[]);return{ariaDescribedby:_,ids:{root:u,control:l,label:w,errorText:m,helperText:h},refs:{rootRef:s},disabled:r,invalid:i,readOnly:n,required:d,getLabelProps:f,getRootProps:N,getInputProps:v,getTextareaProps:D,getSelectProps:P,getHelperTextProps:S,getErrorTextProps:L,getRequiredIndicatorProps:x}},nm=y.forwardRef((e,t)=>{const[a,r]=Oa()(e,["id","ids","disabled","invalid","readOnly","required"]),i=Dh(a),n=ge(i.getRootProps(),r);return b.jsx(Q4,{value:i,children:b.jsx(te.div,{...n,ref:Ll(t,i.refs.rootRef)})})});nm.displayName="FieldRoot";const dm=y.forwardRef((e,t)=>{const[{value:a},r]=Oa()(e,["value"]),i=ge(a.getRootProps(),r);return b.jsx(Q4,{value:a,children:b.jsx(te.div,{...i,ref:t})})});dm.displayName="FieldRootProvider";const pm=y.forwardRef((e,t)=>{const a=Ba(),r=ge(a==null?void 0:a.getSelectProps(),e);return b.jsx(te.select,{...r,ref:t})});pm.displayName="FieldSelect";var Ch=e=>{if(!e)return;const t=Bf(e),a=e.ownerDocument.defaultView||window,r=()=>{e.style.height="auto";const p=parseInt(t.borderTopWidth,10),o=parseInt(t.borderBottomWidth,10);e.style.height=`${e.scrollHeight+p+o}px`};e.addEventListener("input",r);const i=Object.getPrototypeOf(e),n=Object.getOwnPropertyDescriptor(i,"value");return Object.defineProperty(e,"value",{...n,set(){var p;(p=n==null?void 0:n.set)==null||p.apply(this,arguments),r()}}),new a.ResizeObserver(()=>r()).observe(e),()=>{e.removeEventListener("input",r)}};const om=y.forwardRef((e,t)=>{const{autoresize:a,...r}=e,i=y.useRef(null),n=Ba(),d=ge(n==null?void 0:n.getTextareaProps(),{style:{resize:a?"none":void 0}},r);return y.useEffect(()=>{if(a)return Ch(i.current)},[a]),b.jsx(te.textarea,{...d,ref:Ll(t,i)})});om.displayName="FieldTextarea";const[lm,o1]=na({name:"RadioGroupContext",hookName:"useRadioGroupContext",providerName:"<RadioGroupProvider />"}),sm=y.forwardRef((e,t)=>{const a=o1(),r=ge(a.getIndicatorProps(),e);return b.jsx(te.div,{...r,ref:t})});sm.displayName="RadioGroupIndicator";const[Nh,Vv]=na({name:"RadioGroupItemContext",hookName:"useRadioGroupItemContext",providerName:"<RadioGroupItemProvider />"}),[xh,ql]=na({name:"RadioGroupItemPropsContext",hookName:"useRadioGroupItemPropsContext",providerName:"<RadioGroupItemPropsProvider />"}),um=y.forwardRef((e,t)=>{const[a,r]=Oa()(e,["value","disabled","invalid"]),i=o1(),n=ge(i.getItemProps(a),r),d=i.getItemState(a);return b.jsx(Nh,{value:d,children:b.jsx(xh,{value:a,children:b.jsx(te.label,{...n,ref:t})})})});um.displayName="RadioGroupItem";const mm=y.forwardRef((e,t)=>{const a=o1(),r=ql(),i=ge(a.getItemControlProps(r),e);return b.jsx(te.div,{...i,ref:t})});mm.displayName="RadioGroupItemControl";const V1=y.forwardRef((e,t)=>{const a=o1(),r=ql(),i=ge(a.getItemHiddenInputProps(r),e);return b.jsx(te.input,{...i,ref:t})});V1.displayName="RadioGroupItemHiddenInput";const cm=y.forwardRef((e,t)=>{const a=o1(),r=ql(),i=ge(a.getItemTextProps(r),e);return b.jsx(te.span,{...i,ref:t})});cm.displayName="RadioGroupItemText";const fm=y.forwardRef((e,t)=>{const a=o1(),r=ge(a.getLabelProps(),e);return b.jsx(te.label,{...r,ref:t})});fm.displayName="RadioGroupLabel";var To,Ha=new Map,Ah=e=>e.getBoundingClientRect();function Rh(e,t){const{scope:a="rect",getRect:r=Ah,onChange:i}=t,n=Ph({scope:a,getRect:r}),d=Ha.get(e);return d?(d.callbacks.push(i),i(r(e))):(Ha.set(e,{rect:{},callbacks:[i]}),Ha.size===1&&(To=requestAnimationFrame(n))),function(){const o=Ha.get(e);if(!o)return;const l=o.callbacks.indexOf(i);l>-1&&o.callbacks.splice(l,1),o.callbacks.length===0&&(Ha.delete(e),Ha.size===0&&cancelAnimationFrame(To))}}function Ph(e){const{scope:t,getRect:a}=e,r=Lh(t);return function i(){const n=[];Ha.forEach((d,p)=>{const o=a(p);r(d.rect,o)||(d.rect=o,n.push(d))}),n.forEach(d=>{d.callbacks.forEach(p=>p(d.rect))}),To=requestAnimationFrame(i)}}var hm=(e,t)=>e.width===t.width&&e.height===t.height,vm=(e,t)=>e.top===t.top&&e.left===t.left,kh=(e,t)=>hm(e,t)&&vm(e,t);function Lh(e){return e==="size"?hm:e==="position"?vm:kh}var Vh=zr("radio-group").parts("root","label","item","itemText","itemControl","indicator"),_r=Vh.build(),K=R4({getRootId:e=>{var t;return((t=e.ids)==null?void 0:t.root)??`radio-group:${e.id}`},getLabelId:e=>{var t;return((t=e.ids)==null?void 0:t.label)??`radio-group:${e.id}:label`},getItemId:(e,t)=>{var a,r;return((r=(a=e.ids)==null?void 0:a.item)==null?void 0:r.call(a,t))??`radio-group:${e.id}:radio:${t}`},getItemHiddenInputId:(e,t)=>{var a,r;return((r=(a=e.ids)==null?void 0:a.itemHiddenInput)==null?void 0:r.call(a,t))??`radio-group:${e.id}:radio:input:${t}`},getItemControlId:(e,t)=>{var a,r;return((r=(a=e.ids)==null?void 0:a.itemControl)==null?void 0:r.call(a,t))??`radio-group:${e.id}:radio:control:${t}`},getItemLabelId:(e,t)=>{var a,r;return((r=(a=e.ids)==null?void 0:a.itemLabel)==null?void 0:r.call(a,t))??`radio-group:${e.id}:radio:label:${t}`},getIndicatorId:e=>{var t;return((t=e.ids)==null?void 0:t.indicator)??`radio-group:${e.id}:indicator`},getRootEl:e=>K.getById(e,K.getRootId(e)),getItemHiddenInputEl:(e,t)=>K.getById(e,K.getItemHiddenInputId(e,t)),getIndicatorEl:e=>K.getById(e,K.getIndicatorId(e)),getFirstEnabledInputEl:e=>{var t;return(t=K.getRootEl(e))==null?void 0:t.querySelector("input:not(:disabled)")},getFirstEnabledAndCheckedInputEl:e=>{var t;return(t=K.getRootEl(e))==null?void 0:t.querySelector("input:not(:disabled):checked")},getInputEls:e=>{const a=`input[type=radio][data-ownedby='${CSS.escape(K.getRootId(e))}']:not([disabled])`;return Mf(K.getRootEl(e),a)},getActiveRadioEl:e=>{if(e.value)return K.getById(e,K.getItemId(e,e.value))},getOffsetRect:e=>({left:(e==null?void 0:e.offsetLeft)??0,top:(e==null?void 0:e.offsetTop)??0,width:(e==null?void 0:e.offsetWidth)??0,height:(e==null?void 0:e.offsetHeight)??0}),getRectById:(e,t)=>{const a=K.getById(e,K.getItemId(e,t));if(a)return K.resolveRect(K.getOffsetRect(a))},resolveRect:e=>({width:`${e.width}px`,height:`${e.height}px`,left:`${e.left}px`,top:`${e.top}px`})});function Oh(e,t,a){const r=e.context.isDisabled,i=e.context.readOnly;function n(o){return{invalid:!!o.invalid,disabled:!!o.disabled||r,checked:e.context.value===o.value,focused:e.context.focusedValue===o.value,hovered:e.context.hoveredValue===o.value,active:e.context.activeValue===o.value}}function d(o){const l=n(o);return{"data-focus":le(l.focused),"data-focus-visible":le(l.focused&&e.context.focusVisible),"data-disabled":le(l.disabled),"data-readonly":le(i),"data-state":l.checked?"checked":"unchecked","data-hover":le(l.hovered),"data-invalid":le(l.invalid),"data-orientation":e.context.orientation,"data-ssr":le(e.context.ssr)}}const p=()=>{const o=K.getFirstEnabledAndCheckedInputEl(e.context);if(o){o.focus();return}const l=K.getFirstEnabledInputEl(e.context);l==null||l.focus()};return{focus:p,value:e.context.value,setValue(o){t({type:"SET_VALUE",value:o,isTrusted:!1})},clearValue(){t({type:"SET_VALUE",value:null,isTrusted:!1})},getRootProps(){return a.element({..._r.root.attrs,role:"radiogroup",id:K.getRootId(e.context),"aria-labelledby":K.getLabelId(e.context),"data-orientation":e.context.orientation,"data-disabled":le(r),"aria-orientation":e.context.orientation,dir:e.context.dir,style:{position:"relative"}})},getLabelProps(){return a.element({..._r.label.attrs,dir:e.context.dir,"data-orientation":e.context.orientation,"data-disabled":le(r),id:K.getLabelId(e.context),onClick:p})},getItemState:n,getItemProps(o){const l=n(o);return a.label({..._r.item.attrs,dir:e.context.dir,id:K.getItemId(e.context,o.value),htmlFor:K.getItemHiddenInputId(e.context,o.value),...d(o),onPointerMove(){l.disabled||l.hovered||t({type:"SET_HOVERED",value:o.value,hovered:!0})},onPointerLeave(){l.disabled||t({type:"SET_HOVERED",value:null})},onPointerDown(s){l.disabled||(l.focused&&s.pointerType==="mouse"&&s.preventDefault(),t({type:"SET_ACTIVE",value:o.value,active:!0}))},onPointerUp(){l.disabled||t({type:"SET_ACTIVE",value:null})}})},getItemTextProps(o){return a.element({..._r.itemText.attrs,dir:e.context.dir,id:K.getItemLabelId(e.context,o.value),...d(o)})},getItemControlProps(o){const l=n(o);return a.element({..._r.itemControl.attrs,dir:e.context.dir,id:K.getItemControlId(e.context,o.value),"data-active":le(l.active),"aria-hidden":!0,...d(o)})},getItemHiddenInputProps(o){const l=n(o);return a.input({"data-ownedby":K.getRootId(e.context),id:K.getItemHiddenInputId(e.context,o.value),type:"radio",name:e.context.name||e.context.id,form:e.context.form,value:o.value,onClick(s){if(i){s.preventDefault();return}s.currentTarget.checked&&t({type:"SET_VALUE",value:o.value,isTrusted:!0})},onBlur(){t({type:"SET_FOCUSED",value:null,focused:!1,focusVisible:!1})},onFocus(){const s=zn();t({type:"SET_FOCUSED",value:o.value,focused:!0,focusVisible:s})},onKeyDown(s){s.defaultPrevented||s.key===" "&&t({type:"SET_ACTIVE",value:o.value,active:!0})},onKeyUp(s){s.defaultPrevented||s.key===" "&&t({type:"SET_ACTIVE",value:null})},disabled:l.disabled,defaultChecked:l.checked,style:P4})},getIndicatorProps(){var o,l,s,u;return a.element({id:K.getIndicatorId(e.context),..._r.indicator.attrs,dir:e.context.dir,hidden:e.context.value==null,"data-disabled":le(r),"data-orientation":e.context.orientation,style:{"--transition-property":"left, top, width, height","--left":(o=e.context.indicatorRect)==null?void 0:o.left,"--top":(l=e.context.indicatorRect)==null?void 0:l.top,"--width":(s=e.context.indicatorRect)==null?void 0:s.width,"--height":(u=e.context.indicatorRect)==null?void 0:u.height,position:"absolute",willChange:"var(--transition-property)",transitionProperty:"var(--transition-property)",transitionDuration:e.context.canIndicatorTransition?"var(--transition-duration, 150ms)":"0ms",transitionTimingFunction:"var(--transition-timing-function)",[e.context.orientation==="horizontal"?"left":"top"]:e.context.orientation==="horizontal"?"var(--left)":"var(--top)"}})}}}var{not:Bh}=h4;function qh(e){const t=e1(e);return g4({id:"radio",initial:"idle",context:{value:null,activeValue:null,focusedValue:null,hoveredValue:null,disabled:!1,orientation:"vertical",...t,indicatorRect:{},canIndicatorTransition:!1,fieldsetDisabled:!1,focusVisible:!1,ssr:!0},computed:{isDisabled:a=>!!a.disabled||a.fieldsetDisabled},entry:["syncIndicatorRect","syncSsr"],exit:["cleanupObserver"],activities:["trackFormControlState","trackFocusVisible"],watch:{value:["setIndicatorTransition","syncIndicatorRect","syncInputElements"]},on:{SET_VALUE:[{guard:Bh("isTrusted"),actions:["setValue","dispatchChangeEvent"]},{actions:["setValue"]}],SET_HOVERED:{actions:"setHovered"},SET_ACTIVE:{actions:"setActive"},SET_FOCUSED:{actions:"setFocused"}},states:{idle:{}}},{guards:{isTrusted:(a,r)=>!!r.isTrusted},activities:{trackFormControlState(a,r,{send:i,initialContext:n}){return F4(K.getRootEl(a),{onFieldsetDisabledChange(d){a.fieldsetDisabled=d},onFormReset(){i({type:"SET_VALUE",value:n.value})}})},trackFocusVisible(a){return $4({root:K.getRootNode(a)})}},actions:{setValue(a,r){jh.value(a,r.value)},setHovered(a,r){a.hoveredValue=r.value},setActive(a,r){a.activeValue=r.value},setFocused(a,r){a.focusedValue=r.value,a.focusVisible=r.focusVisible},syncInputElements(a){K.getInputEls(a).forEach(i=>{i.checked=i.value===a.value})},setIndicatorTransition(a){a.canIndicatorTransition=et(a.value)},cleanupObserver(a){var r;(r=a.indicatorCleanup)==null||r.call(a)},syncSsr(a){a.ssr=!1},syncIndicatorRect(a){var n;if((n=a.indicatorCleanup)==null||n.call(a),!K.getIndicatorEl(a))return;const r=a.value,i=K.getActiveRadioEl(a);if(r==null||!i){a.indicatorRect={};return}a.indicatorCleanup=Rh(i,{getRect(d){return K.getOffsetRect(d)},onChange(d){a.indicatorRect=K.resolveRect(d),qf(()=>{a.canIndicatorTransition=!1})}})},dispatchChangeEvent(a){K.getInputEls(a).forEach(i=>{const n=i.value===a.value;n!==i.checked&&j4(i,{checked:n})})}}})}var Mh={change:e=>{var t;e.value!=null&&((t=e.onValueChange)==null||t.call(e,{value:e.value}))}},jh={value:(e,t)=>{fd(e.value,t)||(e.value=t,Mh.change(e))}};Vl()(["dir","disabled","form","getRootNode","id","ids","name","onValueChange","orientation","readOnly","value"]);Vl()(["value","disabled","invalid"]);const Fh=(e={})=>{const{getRootNode:t}=O4(),{dir:a}=B4(),r={id:y.useId(),dir:a,getRootNode:t,value:e.defaultValue,...e},i={...r,value:e.value,onValueChange:Bl(e.onValueChange,{sync:!0})},[n,d]=V4(qh(r),{context:i});return Oh(n,d,k4)},gm=y.forwardRef((e,t)=>{const[a,r]=Oa()(e,["defaultValue","disabled","form","id","ids","name","onValueChange","orientation","readOnly","value"]),i=Fh(a),n=ge(i.getRootProps(),r);return b.jsx(lm,{value:i,children:b.jsx(te.div,{...n,ref:t})})});gm.displayName="RadioGroupRoot";const ym=y.forwardRef((e,t)=>{const[{value:a},r]=Oa()(e,["value"]),i=ge(a.getRootProps(),r);return b.jsx(lm,{value:a,children:b.jsx(te.div,{...i,ref:t})})});ym.displayName="RadioGroupRootProvider";const Ih=je(te.img,{}),Bt=y.forwardRef((e,t)=>b.jsx(Ih,{ref:t,...e}));Bt.displayName="Image";const Uh=()=>b.jsxs(md,{w:"full",h:"16",p:"4",gap:"6",bg:"red.9",justifyContent:"center",children:[b.jsx(Ja,{to:"/",children:b.jsx(Ga,{children:"Home"})}),b.jsx(Ja,{to:"/docs",children:b.jsx(Ga,{children:"Tutorial"})}),b.jsx(Ja,{to:"/tmdb",children:b.jsx(Ga,{children:"TMDB"})}),b.jsx(Ja,{to:"/configuration",children:b.jsx(Ga,{children:"SPORT"})}),b.jsx(Ga,{href:"https://github.com/androidplayer1/tmdb-ui",target:"_blank",children:b.jsx(Bt,{src:"./github.png",h:"8",w:"8"})})]}),Hh=()=>b.jsxs(Z6,{w:"full",h:"full",gap:"0",children:[b.jsx(Uh,{}),b.jsx(z8,{w:"full",h:"full",overflow:"auto",p:"4",children:b.jsx(R5,{})})]}),zt=je("p",W7),Wh=()=>b.jsxs(cd,{maxW:"2xl",children:[b.jsx(zt,{fontSize:"2xl",fontWeight:"bold",mb:"4",children:"Installing TMDB"}),b.jsxs(Je,{gap:"12",children:[b.jsxs(Je,{gap:"4",children:[b.jsx(xt,{variant:"outline",asChild:!0,children:b.jsx(Ga,{href:"https://play.google.com/store/apps/details?id=com.xeinebiu.anplayer",target:"_blank",children:"Download AN Player from PlayStore"})}),b.jsx(Bt,{src:"./tutorial/1.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsx(zt,{children:"Accept terms and conditions of the app"}),b.jsx(Bt,{src:"./tutorial/2.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsxs(Je,{children:[b.jsx(zt,{children:"After the application has been installed and terms have been accepted, visit"}),b.jsx(xt,{variant:"outline",asChild:!0,children:b.jsx(Ga,{href:"https://androidplayer1.github.io/tmdb-ui/",target:"_blank",children:"URL"})})]}),b.jsx(Bt,{src:"./tutorial/3.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsx(zt,{children:"On the configuration page, we have to fill the form. Write the Real Debrid API Key and press Install. You may be prompted to open a link with AN Player, please accept it. Otherwise, you may download the configured plugin and install it manually through the application."}),b.jsx(Bt,{src:"./tutorial/4.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsx(zt,{children:"AN Player is installing our plugin. Open the application manually when the installation is done."}),b.jsx(Bt,{src:"./tutorial/5.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsx(zt,{children:"On the home page of the application, we can already see our installed plugin."}),b.jsx(Bt,{src:"./tutorial/6.jpg"})]}),b.jsxs(Je,{gap:"4",children:[b.jsx(zt,{children:"Configurations can be modified at any time through the application by going to Settings/Plugins/tmdb/Configuration"}),b.jsx(Bt,{src:"./tutorial/7.jpg"}),b.jsx(Bt,{src:"./tutorial/8.jpg"})]})]})]}),zh="tmdb",$h="The Movie Database",Gh="TMDb: Your go-to for movies and TV info. Details, reviews, trailers, and more in one place. ",Yh="",Qh="https://androidplayer1.github.io/tmdb-ui/#/configuration",Kh=11,Xh="1.4.1",Jh="2.0.0",Zh="https://androidplayer1.github.io/tmdb-ui/",ev="",tv="https://androidplayer1.github.io/tmdb-ui/assets/tmdb.json",av='(()=>{var __webpack_modules__={5437:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(1189),r)},5733:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},1176:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.ContentType=void 0;var a;(function(t){t["media"]="media";t["mediaDetail"]="media_detail";t["author"]="author";t["authorDetail"]="author_detail";t["album"]="album";t["albumDetail"]="album_detail";t["category"]="category";t["comment"]="comment";t["streamDirect"]="stream_direct";t["streamDescription"]="stream_description";t["streamWebPlayer"]="stream_web_player"})(a||(r.ContentType=a={}))},8835:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(9756),r);n(a(1176),r)},9756:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.MediaFormat=void 0;class MediaFormat{constructor(t,r,a,i){this.id=t;this.name=r;this.suffix=a;this.mimeType=i}}r.MediaFormat=MediaFormat;MediaFormat.MPEG_4=new MediaFormat(0,"MPEG-4","mp4","video/mp4");MediaFormat.V3GPP=new MediaFormat(16,"3GPP","3gp","video/3gpp");MediaFormat.WEBM=new MediaFormat(32,"WebM","webm","video/webm");MediaFormat.M4A=new MediaFormat(256,"m4a","m4a","audio/mp4");MediaFormat.WEBMA=new MediaFormat(512,"WebM","webm","audio/webm");MediaFormat.MP3=new MediaFormat(768,"MP3","mp3","audio/mpeg");MediaFormat.OPUS=new MediaFormat(1024,"opus","opus","audio/opus");MediaFormat.OGG=new MediaFormat(1280,"ogg","ogg","audio/ogg");MediaFormat.WEBMA_OPUS=new MediaFormat(512,"WebM Opus","webm","audio/webm");MediaFormat.VTT=new MediaFormat(4096,"WebVTT","vtt","text/vtt");MediaFormat.TTML=new MediaFormat(8192,"Timed Text Markup Language","ttml","application/ttml+xml");MediaFormat.TRANSCRIPT1=new MediaFormat(12288,"TranScript v1","srv1","text/xml");MediaFormat.TRANSCRIPT2=new MediaFormat(16384,"TranScript v2","srv2","text/xml");MediaFormat.TRANSCRIPT3=new MediaFormat(20480,"TranScript v3","srv3","text/xml");MediaFormat.SRT=new MediaFormat(24576,"SubRip file format","srt","text/srt")},3582:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.AlbumNotFoundError=void 0;class AlbumNotFoundError extends Error{constructor(t){super(t.toString());this.album=t}}r.AlbumNotFoundError=AlbumNotFoundError},8628:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.AuthorNotFoundError=void 0;class AuthorNotFoundError extends Error{constructor(t){super(t.toString());this.author=t}}r.AuthorNotFoundError=AuthorNotFoundError},2863:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.CategoryNotFoundError=void 0;class CategoryNotFoundError extends Error{constructor(t){super(t.toString());this.category=t}}r.CategoryNotFoundError=CategoryNotFoundError},1449:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.ExtractorNotImplementedError=void 0;class ExtractorNotImplementedError extends Error{constructor(){super("")}}r.ExtractorNotImplementedError=ExtractorNotImplementedError},1e3:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(1987),r);n(a(3582),r);n(a(61),r);n(a(8628),r);n(a(5455),r);n(a(3283),r);n(a(3508),r);n(a(1449),r);n(a(2863),r);n(a(192),r)},61:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.MediaNotFoundError=void 0;class MediaNotFoundError extends Error{constructor(t){super(t.toString());this.media=t}}r.MediaNotFoundError=MediaNotFoundError},3283:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.NotAuthenticatedError=void 0;class NotAuthenticatedError extends Error{constructor(t){super(t)}}r.NotAuthenticatedError=NotAuthenticatedError},192:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.StreamDescriptionNotFoundError=void 0;class StreamDescriptionNotFoundError extends Error{constructor(t){super(t.toString());this.streamDescription=t}}r.StreamDescriptionNotFoundError=StreamDescriptionNotFoundError},1987:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.StreamParsingError=void 0;class StreamParsingError extends Error{constructor(t,r){super(`${t}, ${r}`);this.media=t;this.stream=r}}r.StreamParsingError=StreamParsingError},5455:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.SubtitleParsingError=void 0;class SubtitleParsingError extends Error{constructor(t,r){super(`${t}, ${r}`);this.media=t;this.subtitle=r}}r.SubtitleParsingError=SubtitleParsingError},3508:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.UserInputRequiredError=void 0;class UserInputRequiredError extends Error{constructor(t,r){super("");this.uri=t;this.headers=r}}r.UserInputRequiredError=UserInputRequiredError},6707:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},8855:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},8574:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},3889:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},9024:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},5042:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},5170:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},1658:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},9282:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},8242:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},8918:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(9282),r);n(a(8242),r);n(a(8855),r);n(a(8952),r);n(a(3889),r);n(a(8078),r);n(a(6707),r);n(a(1658),r);n(a(5042),r);n(a(9024),r);n(a(8574),r);n(a(5170),r);n(a(974),r)},8952:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},8078:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},974:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},1189:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(8835),r);n(a(1e3),r);n(a(8918),r);n(a(7847),r);n(a(5733),r);n(a(358),r)},358:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(8884),r)},8884:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},9787:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createAlbumDetail=void 0;const i=a(8835);function createAlbumDetail(t){return Object.assign(Object.assign({},t),{type:i.ContentType.albumDetail})}r.createAlbumDetail=createAlbumDetail},2579:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createAlbum=void 0;const i=a(8835);function createAlbum(t){return Object.assign(Object.assign({},t),{type:i.ContentType.album})}r.createAlbum=createAlbum},6263:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createAuthorDetail=void 0;const i=a(8835);function createAuthorDetail(t){return Object.assign(Object.assign({},t),{type:i.ContentType.authorDetail})}r.createAuthorDetail=createAuthorDetail},2447:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createAuthor=void 0;const i=a(8835);function createAuthor(t){return Object.assign(Object.assign({},t),{type:i.ContentType.author})}r.createAuthor=createAuthor},5504:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createCategory=void 0;const i=a(8835);function createCategory(t){return Object.assign(Object.assign({},t),{type:i.ContentType.category})}r.createCategory=createCategory},6181:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createComment=void 0;const i=a(8835);function createComment(t){return Object.assign(Object.assign({},t),{type:i.ContentType.comment})}r.createComment=createComment},7388:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createDirectStream=void 0;const i=a(8835);function createDirectStream(t){return Object.assign(Object.assign({},t),{type:i.ContentType.streamDirect})}r.createDirectStream=createDirectStream},7847:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(2579),r);n(a(9732),r);n(a(2447),r);n(a(6181),r);n(a(5504),r);n(a(8276),r);n(a(9052),r);n(a(9787),r);n(a(2998),r);n(a(6263),r);n(a(7388),r);n(a(7727),r);n(a(6970),r);n(a(2599),r);n(a(2423),r)},2998:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createMediaDetail=void 0;const i=a(8835);function createMediaDetail(t){return Object.assign(Object.assign({},t),{type:i.ContentType.mediaDetail})}r.createMediaDetail=createMediaDetail},9732:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createMedia=void 0;const i=a(8835);function createMedia(t){return Object.assign(Object.assign({},t),{type:i.ContentType.media})}r.createMedia=createMedia},2423:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createStreamDescription=void 0;const i=a(8835);function createStreamDescription(t){return Object.assign(Object.assign({},t),{type:i.ContentType.streamDescription})}r.createStreamDescription=createStreamDescription},8276:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},7727:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},6970:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},9052:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},2599:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.createWebPlayerStream=void 0;const i=a(8835);function createWebPlayerStream(t){return Object.assign(Object.assign({},t),{type:i.ContentType.streamWebPlayer})}r.createWebPlayerStream=createWebPlayerStream},1034:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(4335),r);n(a(3931),r)},7129:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r._1337XScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function getCategoryFromType(t){switch(t){case"movie":case"series":return"Movies";case"tv":return"TV";case"music":return"Music";case"anime":return"Anime"}return""}function _1337XScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,type:a,page:n})=>i(this,void 0,void 0,(function*(){try{const i=a?getCategoryFromType(a):undefined;const l=encodeURIComponent(r);const s=`${t}/${i?"category-search":"search"}/${l}/${i?i+"/":""}${n}/`;const u=yield(0,o.default)(s,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const c=(0,d.default)(u).querySelectorAll(".table-list tbody tr");const m=[];for(const r of c){try{const a=r.querySelectorAll(".name a")[1];const i=r.querySelectorAll(".seeds")[0].text;const n=r.querySelectorAll(".leeches")[0].text;const o=r.querySelectorAll("td.coll-4")[0].childNodes[0].text;const d=r.querySelectorAll("td.coll-date")[0].text;const l=r.querySelectorAll("td.coll-5")[0].text;m.push({name:a.text.replace("⭐","").trim(),seeder:Number(i),leecher:Number(n),uploadedDate:d,uploader:l,size:(0,p.unhumanizeSize)(o),url:t+a.attributes.href,provider:"1337x"})}catch(t){}}return m}catch(t){console.error(t);return[]}}))}}r._1337XScrapper=_1337XScrapper},6758:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.EzTvScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function EzTvScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r})=>i(this,void 0,void 0,(function*(){try{const a=r.split(" ").join("-");const i=t+"/search/"+a;const n=yield(0,o.default)(i,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(n).querySelectorAll("tr.forum_header_border");const s=[];for(const t of l){try{const r=t.querySelectorAll("a.epinfo")[0].text;const a=t.querySelectorAll("a.magnet")[0].attributes.href;const i=t.querySelectorAll("td.forum_thread_post_end")[0].text;const n=t.querySelectorAll("td.forum_thread_post");const o=n[3].text;s.push({name:r,seeder:Number(i),leecher:0,uploadedDate:n[4].text,size:(0,p.unhumanizeSize)(o),url:a,uploader:"",provider:"eztv"})}catch(t){}}return s}catch(t){console.error(t);return[]}}))}}r.EzTvScrapper=EzTvScrapper},3931:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(6758),r);n(a(7129),r);n(a(1488),r);n(a(921),r);n(a(4057),r);n(a(1835),r);n(a(135),r);n(a(8790),r)},1488:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.KickassScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function getCategoryFromType(t){switch(t){case"movie":case"series":return"movies";case"tv":return"tv";case"music":return"music";case"anime":return"anime"}return""}function KickassScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"].kaGiantButton\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"].kaGiantButton\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,page:a,type:n})=>i(this,void 0,void 0,(function*(){try{const i=n?getCategoryFromType(n):undefined;const l=i?`${t}/search/${encodeURIComponent(r)}/${a!==null&&a!==void 0?a:1}/category/${i}/`:`${t}/search/${encodeURIComponent(r)}/${a!==null&&a!==void 0?a:1}`;const s=yield(0,o.default)(l,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const u=(0,d.default)(s).querySelectorAll(".data.frontPageWidget tr");const c=[];for(const r of u){try{const a=r.querySelector(".markeredBlock.torType.filmType .cellMainLink");if(!a){continue}const i=a.text.trim();const n=a.getAttribute("href");const o=t+n;const d=r.querySelectorAll("td")[1].innerText.trim();const l=r.querySelectorAll("td")[2].innerText.trim();const s=r.querySelectorAll("td")[3].innerText.trim();const u=r.querySelectorAll("td")[4].innerText.trim();const m=r.querySelectorAll("td")[5].innerText.trim();c.push({name:i,seeder:Number(u),leecher:Number(m),uploadedDate:s,uploader:l,size:(0,p.unhumanizeSize)(d),url:o,provider:"kickass"})}catch(t){}}return c}catch(t){console.error(t);return[]}}))}}r.KickassScrapper=KickassScrapper},921:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.LimeTorrentsScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function getCategoryFromType(t){switch(t){case"movie":case"series":return"Movies";case"tv":return"TV-shows";case"music":return"Music";case"anime":return"Anime"}return"all"}function LimeTorrentsScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,type:a,page:n})=>i(this,void 0,void 0,(function*(){var i,l,s,u,c,m,h,v;try{const g=a?getCategoryFromType(a):"all";const b=r.split(" ").join("-");const y=`${t}/search/${g}/${b}/${n!==null&&n!==void 0?n:1}/`;const w=yield(0,o.default)(y,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const S=(0,d.default)(w).querySelectorAll(".table2 tr");S.shift();const _=[];for(const t of S){try{if(!t)continue;const r=(i=t.querySelector(".tdleft"))===null||i===void 0?void 0:i.text;const a=(s=(l=t.querySelector(".tt-name a"))===null||l===void 0?void 0:l.attributes.href)!==null&&s!==void 0?s:"";const n=(u=t.querySelector("td.tdseed"))===null||u===void 0?void 0:u.text;const o=(c=t.querySelector("td.tdleech"))===null||c===void 0?void 0:c.text;const d=t.querySelectorAll("td.tdnormal");const g=d[1].text;_.push({name:r!==null&&r!==void 0?r:"",seeder:Number((m=n===null||n===void 0?void 0:n.replace(",",""))!==null&&m!==void 0?m:"0"),leecher:Number((h=o===null||o===void 0?void 0:o.replace(",",""))!==null&&h!==void 0?h:"0"),uploadedDate:(v=d[0].text.split(" -")[0])!==null&&v!==void 0?v:"",size:(0,p.unhumanizeSize)(g),url:a,uploader:"",provider:"limetorrents"})}catch(t){console.error(t)}}return _}catch(t){console.error(t);return[]}}))}}r.LimeTorrentsScrapper=LimeTorrentsScrapper},135:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.MagnetdlScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function MagnetdlScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'dd > a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8","Accept-Language":"en-GB,en;q=0.5","Alt-Used":"www.magnetdl.com","Upgrade-Insecure-Requests":"1","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Sec-Fetch-Site":"same-origin","Sec-Fetch-User":"?1"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'dd > a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,page:a})=>i(this,void 0,void 0,(function*(){var i;try{const n=r.split(" ").join("-").toLowerCase();const l=a?`${t}/f/${n}/${a}`:`${t}/f/${n}`;const s=yield(0,o.default)(l,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0",Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8","Accept-Language":"en-GB,en;q=0.5","Alt-Used":"www.magnetdl.com","Upgrade-Insecure-Requests":"1","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Sec-Fetch-Site":"same-origin","Sec-Fetch-User":"?1"}}).then((t=>t.text()));const u=(0,d.default)(s).querySelectorAll("table.download tr");const c=[];for(const t of u){try{const r=t.querySelectorAll("td");const a=(i=r[0].querySelector("a"))===null||i===void 0?void 0:i.getAttribute("href");const n=r[1].innerText.trim();const o=r[2].innerText.trim();const d=r[5].innerText.trim();const l=r[6].innerText.trim();const s=r[7].innerText.trim();c.push({name:n,seeder:Number(l),leecher:Number(s),uploadedDate:o,uploader:"",size:(0,p.unhumanizeSize)(d),url:a!==null&&a!==void 0?a:"",provider:"magnetdl"})}catch(t){}}return c}catch(t){console.error(t);return[]}}))}}r.MagnetdlScrapper=MagnetdlScrapper},1835:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.NyaaSiScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function NyaaSiScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,page:a})=>i(this,void 0,void 0,(function*(){var i;try{const n=r.split(" ").join("+").toLowerCase();const l=a?`${t}/?f=0&c=0_0&q=${n}&p=${a}`:`${t}/?f=0&c=0_0&q=${n}`;const s=yield(0,o.default)(l,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const u=(0,d.default)(s).querySelectorAll("table.table tr");const c=[];for(const t of u){try{const r=t.querySelectorAll("td");const a=r[1].innerText.trim();const n=(i=r[2].querySelectorAll("a")[1])===null||i===void 0?void 0:i.getAttribute("href");const o=r[3].innerText.trim();const d=r[4].innerText.trim();const l=r[5].innerText.trim();const s=r[6].innerText.trim();c.push({name:a,seeder:Number(l),leecher:Number(s),uploadedDate:d,uploader:"",size:(0,p.unhumanizeSize)(o),url:n!==null&&n!==void 0?n:"",provider:"nyaa"})}catch(t){}}return c}catch(t){console.error(t);return[]}}))}}r.NyaaSiScrapper=NyaaSiScrapper},4057:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.ThepiratebayScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function ThepiratebayScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"]\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"]\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,page:a})=>i(this,void 0,void 0,(function*(){try{const i=`${t}/search/${encodeURIComponent(r)}/${a!==null&&a!==void 0?a:1}/99/0`;const n=yield(0,o.default)(i,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(n).querySelectorAll("tr");l.shift();l.pop();const s=[];for(const t of l){try{const r=t.querySelectorAll("a");const a=t.querySelectorAll("td");const i=t.querySelectorAll(".detDesc")[0].text.split(" ");const n=i[3].replace(",","");s.push({name:r[2].text,seeder:Number(a[2].text),leecher:Number(a[3].text),uploadedDate:i[1].split(" ").join("-").replace(",",""),uploader:i[7],size:(0,p.unhumanizeSize)(n),url:r[3].attributes.href,provider:"thepiratebay"})}catch(t){}}return s}catch(t){console.error(t);return[]}}))}}r.ThepiratebayScrapper=ThepiratebayScrapper},8790:function(t,r,a){"use strict";var i=this&&this.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.TorrentGalaxyScrapper=void 0;const o=n(a(6705));const d=n(a(3203));const p=a(5243);function TorrentGalaxyScrapper(t){return{url:t,getMagnet({url:t,html:r}){var a,n,p;return i(this,void 0,void 0,(function*(){if(r){const t=(0,d.default)(r);const i=(a=t.querySelector(\'a[href^="magnet:"].btn\'))===null||a===void 0?void 0:a.getAttribute("href");if(i)return i}if(!t)return"";if(t.startsWith("magnet:"))return t;const i=yield(0,o.default)(t,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(i);return(p=(n=l.querySelector(\'a[href^="magnet:"].btn\'))===null||n===void 0?void 0:n.getAttribute("href"))!==null&&p!==void 0?p:""}))},search:({query:r,page:a})=>i(this,void 0,void 0,(function*(){try{const i=`${t}/torrents.php?search=${encodeURIComponent(r)}&sort=id&page=${a!==null&&a!==void 0?a:1}&sort=id&order=desc`;const n=yield(0,o.default)(i,{headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0"}}).then((t=>t.text()));const l=(0,d.default)(n).querySelectorAll(".tgxtablerow");const s=[];for(const t of l){try{const r=t.querySelectorAll("> div");const a=r[3].innerText.trim().replace("&nbsp","");const i=r[4].querySelectorAll("a")[1].getAttribute("href");const n=r[6].innerText.trim();const o=r[7].innerText.trim();const d=r[10].innerText.trim().replace("[","").replace("]","").split("/");const l=d[0];const u=d[1];const c=r[11].innerText;s.push({name:a,seeder:Number(l),leecher:Number(u),uploadedDate:c,uploader:n,size:(0,p.unhumanizeSize)(o),url:i!==null&&i!==void 0?i:"",provider:"torrentgalaxy"})}catch(t){}}return s}catch(t){console.error(t);return[]}}))}}r.TorrentGalaxyScrapper=TorrentGalaxyScrapper},4335:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(674),r);n(a(130),r);n(a(2550),r)},130:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},2550:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},674:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true})},5243:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});n(a(8893),r)},8893:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.unhumanizeSize=void 0;const a={k:1,m:2,g:3,t:4};const i=/(\\d+(?:\\.\\d+)?)\\s?(k|m|g|t)?b?/i;function unhumanizeSize(t){const r=i.exec(t);if(!r||!r[2]){return 0}return parseInt(r[1],10)*Math.pow(1024,a[r[2].toLowerCase()])}r.unhumanizeSize=unhumanizeSize},5265:t=>{t.exports={trueFunc:function trueFunc(){return true},falseFunc:function falseFunc(){return false}}},5353:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.attributeRules=void 0;var n=i(a(5265));var o=/[-[\\]{}()*+?.,\\\\^$|#\\s]/g;function escapeRegex(t){return t.replace(o,"\\\\$&")}var d=new Set(["accept","accept-charset","align","alink","axis","bgcolor","charset","checked","clear","codetype","color","compact","declare","defer","dir","direction","disabled","enctype","face","frame","hreflang","http-equiv","lang","language","link","media","method","multiple","nohref","noresize","noshade","nowrap","readonly","rel","rev","rules","scope","scrolling","selected","shape","target","text","type","valign","valuetype","vlink"]);function shouldIgnoreCase(t,r){return typeof t.ignoreCase==="boolean"?t.ignoreCase:t.ignoreCase==="quirks"?!!r.quirksMode:!r.xmlMode&&d.has(t.name)}r.attributeRules={equals:function(t,r,a){var i=a.adapter;var n=r.name;var o=r.value;if(shouldIgnoreCase(r,a)){o=o.toLowerCase();return function(r){var a=i.getAttributeValue(r,n);return a!=null&&a.length===o.length&&a.toLowerCase()===o&&t(r)}}return function(r){return i.getAttributeValue(r,n)===o&&t(r)}},hyphen:function(t,r,a){var i=a.adapter;var n=r.name;var o=r.value;var d=o.length;if(shouldIgnoreCase(r,a)){o=o.toLowerCase();return function hyphenIC(r){var a=i.getAttributeValue(r,n);return a!=null&&(a.length===d||a.charAt(d)==="-")&&a.substr(0,d).toLowerCase()===o&&t(r)}}return function hyphen(r){var a=i.getAttributeValue(r,n);return a!=null&&(a.length===d||a.charAt(d)==="-")&&a.substr(0,d)===o&&t(r)}},element:function(t,r,a){var i=a.adapter;var o=r.name,d=r.value;if(/\\s/.test(d)){return n.default.falseFunc}var p=new RegExp("(?:^|\\\\s)".concat(escapeRegex(d),"(?:$|\\\\s)"),shouldIgnoreCase(r,a)?"i":"");return function element(r){var a=i.getAttributeValue(r,o);return a!=null&&a.length>=d.length&&p.test(a)&&t(r)}},exists:function(t,r,a){var i=r.name;var n=a.adapter;return function(r){return n.hasAttrib(r,i)&&t(r)}},start:function(t,r,a){var i=a.adapter;var o=r.name;var d=r.value;var p=d.length;if(p===0){return n.default.falseFunc}if(shouldIgnoreCase(r,a)){d=d.toLowerCase();return function(r){var a=i.getAttributeValue(r,o);return a!=null&&a.length>=p&&a.substr(0,p).toLowerCase()===d&&t(r)}}return function(r){var a;return!!((a=i.getAttributeValue(r,o))===null||a===void 0?void 0:a.startsWith(d))&&t(r)}},end:function(t,r,a){var i=a.adapter;var o=r.name;var d=r.value;var p=-d.length;if(p===0){return n.default.falseFunc}if(shouldIgnoreCase(r,a)){d=d.toLowerCase();return function(r){var a;return((a=i.getAttributeValue(r,o))===null||a===void 0?void 0:a.substr(p).toLowerCase())===d&&t(r)}}return function(r){var a;return!!((a=i.getAttributeValue(r,o))===null||a===void 0?void 0:a.endsWith(d))&&t(r)}},any:function(t,r,a){var i=a.adapter;var o=r.name,d=r.value;if(d===""){return n.default.falseFunc}if(shouldIgnoreCase(r,a)){var p=new RegExp(escapeRegex(d),"i");return function anyIC(r){var a=i.getAttributeValue(r,o);return a!=null&&a.length>=d.length&&p.test(a)&&t(r)}}return function(r){var a;return!!((a=i.getAttributeValue(r,o))===null||a===void 0?void 0:a.includes(d))&&t(r)}},not:function(t,r,a){var i=a.adapter;var n=r.name;var o=r.value;if(o===""){return function(r){return!!i.getAttributeValue(r,n)&&t(r)}}else if(shouldIgnoreCase(r,a)){o=o.toLowerCase();return function(r){var a=i.getAttributeValue(r,n);return(a==null||a.length!==o.length||a.toLowerCase()!==o)&&t(r)}}return function(r){return i.getAttributeValue(r,n)!==o&&t(r)}}}},5599:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__setModuleDefault||(Object.create?function(t,r){Object.defineProperty(t,"default",{enumerable:true,value:r})}:function(t,r){t["default"]=r});var o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var r={};if(t!=null)for(var a in t)if(a!=="default"&&Object.prototype.hasOwnProperty.call(t,a))i(r,t,a);n(r,t);return r};var d=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.compileToken=r.compileUnsafe=r.compile=void 0;var p=a(5667);var l=d(a(5265));var s=o(a(4040));var u=a(634);var c=a(2287);function compile(t,r,a){var i=compileUnsafe(t,r,a);return(0,c.ensureIsTag)(i,r.adapter)}r.compile=compile;function compileUnsafe(t,r,a){var i=typeof t==="string"?(0,p.parse)(t):t;return compileToken(i,r,a)}r.compileUnsafe=compileUnsafe;function includesScopePseudo(t){return t.type===p.SelectorType.Pseudo&&(t.name==="scope"||Array.isArray(t.data)&&t.data.some((function(t){return t.some(includesScopePseudo)})))}var m={type:p.SelectorType.Descendant};var h={type:"_flexibleDescendant"};var v={type:p.SelectorType.Pseudo,name:"scope",data:null};function absolutize(t,r,a){var i=r.adapter;var n=!!(a===null||a===void 0?void 0:a.every((function(t){var r=i.isTag(t)&&i.getParent(t);return t===c.PLACEHOLDER_ELEMENT||r&&i.isTag(r)})));for(var o=0,d=t;o<d.length;o++){var l=d[o];if(l.length>0&&(0,s.isTraversal)(l[0])&&l[0].type!==p.SelectorType.Descendant){}else if(n&&!l.some(includesScopePseudo)){l.unshift(m)}else{continue}l.unshift(v)}}function compileToken(t,r,a){var i;t.forEach(s.default);a=(i=r.context)!==null&&i!==void 0?i:a;var n=Array.isArray(a);var o=a&&(Array.isArray(a)?a:[a]);if(r.relativeSelector!==false){absolutize(t,r,o)}else if(t.some((function(t){return t.length>0&&(0,s.isTraversal)(t[0])}))){throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled")}var d=false;var u=t.map((function(t){if(t.length>=2){var a=t[0],i=t[1];if(a.type!==p.SelectorType.Pseudo||a.name!=="scope"){}else if(n&&i.type===p.SelectorType.Descendant){t[1]=h}else if(i.type===p.SelectorType.Adjacent||i.type===p.SelectorType.Sibling){d=true}}return compileRules(t,r,o)})).reduce(reduceRules,l.default.falseFunc);u.shouldTestNextSiblings=d;return u}r.compileToken=compileToken;function compileRules(t,r,a){var i;return t.reduce((function(t,i){return t===l.default.falseFunc?l.default.falseFunc:(0,u.compileGeneralSelector)(t,i,r,a,compileToken)}),(i=r.rootFunc)!==null&&i!==void 0?i:l.default.trueFunc)}function reduceRules(t,r){if(r===l.default.falseFunc||t===l.default.trueFunc){return t}if(t===l.default.falseFunc||r===l.default.trueFunc){return r}return function combine(a){return t(a)||r(a)}}},634:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.compileGeneralSelector=void 0;var i=a(5353);var n=a(718);var o=a(5667);function getElementParent(t,r){var a=r.getParent(t);if(a&&r.isTag(a)){return a}return null}function compileGeneralSelector(t,r,a,d,p){var l=a.adapter,s=a.equals;switch(r.type){case o.SelectorType.PseudoElement:{throw new Error("Pseudo-elements are not supported by css-select")}case o.SelectorType.ColumnCombinator:{throw new Error("Column combinators are not yet supported by css-select")}case o.SelectorType.Attribute:{if(r.namespace!=null){throw new Error("Namespaced attributes are not yet supported by css-select")}if(!a.xmlMode||a.lowerCaseAttributeNames){r.name=r.name.toLowerCase()}return i.attributeRules[r.action](t,r,a)}case o.SelectorType.Pseudo:{return(0,n.compilePseudoSelector)(t,r,a,d,p)}case o.SelectorType.Tag:{if(r.namespace!=null){throw new Error("Namespaced tag names are not yet supported by css-select")}var u=r.name;if(!a.xmlMode||a.lowerCaseTags){u=u.toLowerCase()}return function tag(r){return l.getName(r)===u&&t(r)}}case o.SelectorType.Descendant:{if(a.cacheResults===false||typeof WeakSet==="undefined"){return function descendant(r){var a=r;while(a=getElementParent(a,l)){if(t(a)){return true}}return false}}var c=new WeakSet;return function cachedDescendant(r){var a=r;while(a=getElementParent(a,l)){if(!c.has(a)){if(l.isTag(a)&&t(a)){return true}c.add(a)}}return false}}case"_flexibleDescendant":{return function flexibleDescendant(r){var a=r;do{if(t(a))return true}while(a=getElementParent(a,l));return false}}case o.SelectorType.Parent:{return function parent(r){return l.getChildren(r).some((function(r){return l.isTag(r)&&t(r)}))}}case o.SelectorType.Child:{return function child(r){var a=l.getParent(r);return a!=null&&l.isTag(a)&&t(a)}}case o.SelectorType.Sibling:{return function sibling(r){var a=l.getSiblings(r);for(var i=0;i<a.length;i++){var n=a[i];if(s(r,n))break;if(l.isTag(n)&&t(n)){return true}}return false}}case o.SelectorType.Adjacent:{if(l.prevElementSibling){return function adjacent(r){var a=l.prevElementSibling(r);return a!=null&&t(a)}}return function adjacent(r){var a=l.getSiblings(r);var i;for(var n=0;n<a.length;n++){var o=a[n];if(s(r,o))break;if(l.isTag(o)){i=o}}return!!i&&t(i)}}case o.SelectorType.Universal:{if(r.namespace!=null&&r.namespace!=="*"){throw new Error("Namespaced universal selectors are not yet supported by css-select")}return t}}}r.compileGeneralSelector=compileGeneralSelector},2842:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__setModuleDefault||(Object.create?function(t,r){Object.defineProperty(t,"default",{enumerable:true,value:r})}:function(t,r){t["default"]=r});var o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var r={};if(t!=null)for(var a in t)if(a!=="default"&&Object.prototype.hasOwnProperty.call(t,a))i(r,t,a);n(r,t);return r};var d=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.aliases=r.pseudos=r.filters=r.is=r.selectOne=r.selectAll=r.prepareContext=r._compileToken=r._compileUnsafe=r.compile=void 0;var p=o(a(2357));var l=d(a(5265));var s=a(5599);var u=a(2287);var defaultEquals=function(t,r){return t===r};var c={adapter:p,equals:defaultEquals};function convertOptionFormats(t){var r,a,i,n;var o=t!==null&&t!==void 0?t:c;(r=o.adapter)!==null&&r!==void 0?r:o.adapter=p;(a=o.equals)!==null&&a!==void 0?a:o.equals=(n=(i=o.adapter)===null||i===void 0?void 0:i.equals)!==null&&n!==void 0?n:defaultEquals;return o}function wrapCompile(t){return function addAdapter(r,a,i){var n=convertOptionFormats(a);return t(r,n,i)}}r.compile=wrapCompile(s.compile);r._compileUnsafe=wrapCompile(s.compileUnsafe);r._compileToken=wrapCompile(s.compileToken);function getSelectorFunc(t){return function select(r,a,i){var n=convertOptionFormats(i);if(typeof r!=="function"){r=(0,s.compileUnsafe)(r,n,a)}var o=prepareContext(a,n.adapter,r.shouldTestNextSiblings);return t(r,o,n)}}function prepareContext(t,r,a){if(a===void 0){a=false}if(a){t=appendNextSiblings(t,r)}return Array.isArray(t)?r.removeSubsets(t):r.getChildren(t)}r.prepareContext=prepareContext;function appendNextSiblings(t,r){var a=Array.isArray(t)?t.slice(0):[t];var i=a.length;for(var n=0;n<i;n++){var o=(0,u.getNextSiblings)(a[n],r);a.push.apply(a,o)}return a}r.selectAll=getSelectorFunc((function(t,r,a){return t===l.default.falseFunc||!r||r.length===0?[]:a.adapter.findAll(t,r)}));r.selectOne=getSelectorFunc((function(t,r,a){return t===l.default.falseFunc||!r||r.length===0?null:a.adapter.findOne(t,r)}));function is(t,r,a){var i=convertOptionFormats(a);return(typeof r==="function"?r:(0,s.compile)(r,i))(t)}r.is=is;r["default"]=r.selectAll;var m=a(718);Object.defineProperty(r,"filters",{enumerable:true,get:function(){return m.filters}});Object.defineProperty(r,"pseudos",{enumerable:true,get:function(){return m.pseudos}});Object.defineProperty(r,"aliases",{enumerable:true,get:function(){return m.aliases}})},4998:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.aliases=void 0;r.aliases={"any-link":":is(a, area, link)[href]",link:":any-link:not(:visited)",disabled:":is(\\n        :is(button, input, select, textarea, optgroup, option)[disabled],\\n        optgroup[disabled] > option,\\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\\n    )",enabled:":not(:disabled)",checked:":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",required:":is(input, select, textarea)[required]",optional:":is(input, select, textarea):not([required])",selected:"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",checkbox:"[type=checkbox]",file:"[type=file]",password:"[type=password]",radio:"[type=radio]",reset:"[type=reset]",image:"[type=image]",submit:"[type=submit]",parent:":not(:empty)",header:":is(h1, h2, h3, h4, h5, h6)",button:":is(button, input[type=button])",input:":is(input, textarea, select, button)",text:"input:is(:not([type!=\'\']), [type=text])"}},1625:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.filters=void 0;var n=i(a(187));var o=i(a(5265));function getChildFunc(t,r){return function(a){var i=r.getParent(a);return i!=null&&r.isTag(i)&&t(a)}}r.filters={contains:function(t,r,a){var i=a.adapter;return function contains(a){return t(a)&&i.getText(a).includes(r)}},icontains:function(t,r,a){var i=a.adapter;var n=r.toLowerCase();return function icontains(r){return t(r)&&i.getText(r).toLowerCase().includes(n)}},"nth-child":function(t,r,a){var i=a.adapter,d=a.equals;var p=(0,n.default)(r);if(p===o.default.falseFunc)return o.default.falseFunc;if(p===o.default.trueFunc)return getChildFunc(t,i);return function nthChild(r){var a=i.getSiblings(r);var n=0;for(var o=0;o<a.length;o++){if(d(r,a[o]))break;if(i.isTag(a[o])){n++}}return p(n)&&t(r)}},"nth-last-child":function(t,r,a){var i=a.adapter,d=a.equals;var p=(0,n.default)(r);if(p===o.default.falseFunc)return o.default.falseFunc;if(p===o.default.trueFunc)return getChildFunc(t,i);return function nthLastChild(r){var a=i.getSiblings(r);var n=0;for(var o=a.length-1;o>=0;o--){if(d(r,a[o]))break;if(i.isTag(a[o])){n++}}return p(n)&&t(r)}},"nth-of-type":function(t,r,a){var i=a.adapter,d=a.equals;var p=(0,n.default)(r);if(p===o.default.falseFunc)return o.default.falseFunc;if(p===o.default.trueFunc)return getChildFunc(t,i);return function nthOfType(r){var a=i.getSiblings(r);var n=0;for(var o=0;o<a.length;o++){var l=a[o];if(d(r,l))break;if(i.isTag(l)&&i.getName(l)===i.getName(r)){n++}}return p(n)&&t(r)}},"nth-last-of-type":function(t,r,a){var i=a.adapter,d=a.equals;var p=(0,n.default)(r);if(p===o.default.falseFunc)return o.default.falseFunc;if(p===o.default.trueFunc)return getChildFunc(t,i);return function nthLastOfType(r){var a=i.getSiblings(r);var n=0;for(var o=a.length-1;o>=0;o--){var l=a[o];if(d(r,l))break;if(i.isTag(l)&&i.getName(l)===i.getName(r)){n++}}return p(n)&&t(r)}},root:function(t,r,a){var i=a.adapter;return function(r){var a=i.getParent(r);return(a==null||!i.isTag(a))&&t(r)}},scope:function(t,a,i,n){var o=i.equals;if(!n||n.length===0){return r.filters["root"](t,a,i)}if(n.length===1){return function(r){return o(n[0],r)&&t(r)}}return function(r){return n.includes(r)&&t(r)}},hover:dynamicStatePseudo("isHovered"),visited:dynamicStatePseudo("isVisited"),active:dynamicStatePseudo("isActive")};function dynamicStatePseudo(t){return function dynamicPseudo(r,a,i){var n=i.adapter;var d=n[t];if(typeof d!=="function"){return o.default.falseFunc}return function active(t){return d(t)&&r(t)}}}},718:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.compilePseudoSelector=r.aliases=r.pseudos=r.filters=void 0;var i=a(5667);var n=a(1625);Object.defineProperty(r,"filters",{enumerable:true,get:function(){return n.filters}});var o=a(609);Object.defineProperty(r,"pseudos",{enumerable:true,get:function(){return o.pseudos}});var d=a(4998);Object.defineProperty(r,"aliases",{enumerable:true,get:function(){return d.aliases}});var p=a(2287);function compilePseudoSelector(t,r,a,l,s){var u;var c=r.name,m=r.data;if(Array.isArray(m)){if(!(c in p.subselects)){throw new Error("Unknown pseudo-class :".concat(c,"(").concat(m,")"))}return p.subselects[c](t,m,a,l,s)}var h=(u=a.pseudos)===null||u===void 0?void 0:u[c];var v=typeof h==="string"?h:d.aliases[c];if(typeof v==="string"){if(m!=null){throw new Error("Pseudo ".concat(c," doesn\'t have any arguments"))}var g=(0,i.parse)(v);return p.subselects["is"](t,g,a,l,s)}if(typeof h==="function"){(0,o.verifyPseudoArgs)(h,c,m,1);return function(r){return h(r,m)&&t(r)}}if(c in n.filters){return n.filters[c](t,m,a,l)}if(c in o.pseudos){var b=o.pseudos[c];(0,o.verifyPseudoArgs)(b,c,m,2);return function(r){return b(r,a,m)&&t(r)}}throw new Error("Unknown pseudo-class :".concat(c))}r.compilePseudoSelector=compilePseudoSelector},609:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.verifyPseudoArgs=r.pseudos=void 0;r.pseudos={empty:function(t,r){var a=r.adapter;return!a.getChildren(t).some((function(t){return a.isTag(t)||a.getText(t)!==""}))},"first-child":function(t,r){var a=r.adapter,i=r.equals;if(a.prevElementSibling){return a.prevElementSibling(t)==null}var n=a.getSiblings(t).find((function(t){return a.isTag(t)}));return n!=null&&i(t,n)},"last-child":function(t,r){var a=r.adapter,i=r.equals;var n=a.getSiblings(t);for(var o=n.length-1;o>=0;o--){if(i(t,n[o]))return true;if(a.isTag(n[o]))break}return false},"first-of-type":function(t,r){var a=r.adapter,i=r.equals;var n=a.getSiblings(t);var o=a.getName(t);for(var d=0;d<n.length;d++){var p=n[d];if(i(t,p))return true;if(a.isTag(p)&&a.getName(p)===o){break}}return false},"last-of-type":function(t,r){var a=r.adapter,i=r.equals;var n=a.getSiblings(t);var o=a.getName(t);for(var d=n.length-1;d>=0;d--){var p=n[d];if(i(t,p))return true;if(a.isTag(p)&&a.getName(p)===o){break}}return false},"only-of-type":function(t,r){var a=r.adapter,i=r.equals;var n=a.getName(t);return a.getSiblings(t).every((function(r){return i(t,r)||!a.isTag(r)||a.getName(r)!==n}))},"only-child":function(t,r){var a=r.adapter,i=r.equals;return a.getSiblings(t).every((function(r){return i(t,r)||!a.isTag(r)}))}};function verifyPseudoArgs(t,r,a,i){if(a===null){if(t.length>i){throw new Error("Pseudo-class :".concat(r," requires an argument"))}}else if(t.length===i){throw new Error("Pseudo-class :".concat(r," doesn\'t have any arguments"))}}r.verifyPseudoArgs=verifyPseudoArgs},2287:function(t,r,a){"use strict";var i=this&&this.__spreadArray||function(t,r,a){if(a||arguments.length===2)for(var i=0,n=r.length,o;i<n;i++){if(o||!(i in r)){if(!o)o=Array.prototype.slice.call(r,0,i);o[i]=r[i]}}return t.concat(o||Array.prototype.slice.call(r))};var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.subselects=r.getNextSiblings=r.ensureIsTag=r.PLACEHOLDER_ELEMENT=void 0;var o=n(a(5265));var d=a(4040);r.PLACEHOLDER_ELEMENT={};function ensureIsTag(t,r){if(t===o.default.falseFunc)return o.default.falseFunc;return function(a){return r.isTag(a)&&t(a)}}r.ensureIsTag=ensureIsTag;function getNextSiblings(t,r){var a=r.getSiblings(t);if(a.length<=1)return[];var i=a.indexOf(t);if(i<0||i===a.length-1)return[];return a.slice(i+1).filter(r.isTag)}r.getNextSiblings=getNextSiblings;function copyOptions(t){return{xmlMode:!!t.xmlMode,lowerCaseAttributeNames:!!t.lowerCaseAttributeNames,lowerCaseTags:!!t.lowerCaseTags,quirksMode:!!t.quirksMode,cacheResults:!!t.cacheResults,pseudos:t.pseudos,adapter:t.adapter,equals:t.equals}}var is=function(t,r,a,i,n){var d=n(r,copyOptions(a),i);return d===o.default.trueFunc?t:d===o.default.falseFunc?o.default.falseFunc:function(r){return d(r)&&t(r)}};r.subselects={is:is,matches:is,where:is,not:function(t,r,a,i,n){var d=n(r,copyOptions(a),i);return d===o.default.falseFunc?t:d===o.default.trueFunc?o.default.falseFunc:function(r){return!d(r)&&t(r)}},has:function(t,a,n,p,l){var s=n.adapter;var u=copyOptions(n);u.relativeSelector=true;var c=a.some((function(t){return t.some(d.isTraversal)}))?[r.PLACEHOLDER_ELEMENT]:undefined;var m=l(a,u,c);if(m===o.default.falseFunc)return o.default.falseFunc;var h=ensureIsTag(m,s);if(c&&m!==o.default.trueFunc){var v=m.shouldTestNextSiblings,g=v===void 0?false:v;return function(r){if(!t(r))return false;c[0]=r;var a=s.getChildren(r);var n=g?i(i([],a,true),getNextSiblings(r,s),true):a;return s.existsOne(h,n)}}return function(r){return t(r)&&s.existsOne(h,s.getChildren(r))}}}},4040:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.isTraversal=void 0;var i=a(5667);var n=new Map([[i.SelectorType.Universal,50],[i.SelectorType.Tag,30],[i.SelectorType.Attribute,1],[i.SelectorType.Pseudo,0]]);function isTraversal(t){return!n.has(t.type)}r.isTraversal=isTraversal;var o=new Map([[i.AttributeAction.Exists,10],[i.AttributeAction.Equals,8],[i.AttributeAction.Not,7],[i.AttributeAction.Start,6],[i.AttributeAction.End,6],[i.AttributeAction.Any,5]]);function sortByProcedure(t){var r=t.map(getProcedure);for(var a=1;a<t.length;a++){var i=r[a];if(i<0)continue;for(var n=a-1;n>=0&&i<r[n];n--){var o=t[n+1];t[n+1]=t[n];t[n]=o;r[n+1]=r[n];r[n]=i}}}r["default"]=sortByProcedure;function getProcedure(t){var r,a;var d=(r=n.get(t.type))!==null&&r!==void 0?r:-1;if(t.type===i.SelectorType.Attribute){d=(a=o.get(t.action))!==null&&a!==void 0?a:4;if(t.action===i.AttributeAction.Equals&&t.name==="id"){d=9}if(t.ignoreCase){d>>=1}}else if(t.type===i.SelectorType.Pseudo){if(!t.data){d=3}else if(t.name==="has"||t.name==="contains"){d=0}else if(Array.isArray(t.data)){d=Math.min.apply(Math,t.data.map((function(t){return Math.min.apply(Math,t.map(getProcedure))})));if(d<0){d=0}}else{d=2}}return d}},5667:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});r.stringify=r.parse=r.isTraversal=void 0;n(a(4738),r);var o=a(748);Object.defineProperty(r,"isTraversal",{enumerable:true,get:function(){return o.isTraversal}});Object.defineProperty(r,"parse",{enumerable:true,get:function(){return o.parse}});var d=a(9154);Object.defineProperty(r,"stringify",{enumerable:true,get:function(){return d.stringify}})},748:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.parse=r.isTraversal=void 0;var i=a(4738);var n=/^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;var o=/\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;var d=new Map([[126,i.AttributeAction.Element],[94,i.AttributeAction.Start],[36,i.AttributeAction.End],[42,i.AttributeAction.Any],[33,i.AttributeAction.Not],[124,i.AttributeAction.Hyphen]]);var p=new Set(["has","not","matches","is","where","host","host-context"]);function isTraversal(t){switch(t.type){case i.SelectorType.Adjacent:case i.SelectorType.Child:case i.SelectorType.Descendant:case i.SelectorType.Parent:case i.SelectorType.Sibling:case i.SelectorType.ColumnCombinator:return true;default:return false}}r.isTraversal=isTraversal;var l=new Set(["contains","icontains"]);function funescape(t,r,a){var i=parseInt(r,16)-65536;return i!==i||a?r:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,i&1023|56320)}function unescapeCSS(t){return t.replace(o,funescape)}function isQuote(t){return t===39||t===34}function isWhitespace(t){return t===32||t===9||t===10||t===12||t===13}function parse(t){var r=[];var a=parseSelector(r,"".concat(t),0);if(a<t.length){throw new Error("Unmatched selector: ".concat(t.slice(a)))}return r}r.parse=parse;function parseSelector(t,r,a){var o=[];function getName(t){var i=r.slice(a+t).match(n);if(!i){throw new Error("Expected name, found ".concat(r.slice(a)))}var o=i[0];a+=t+o.length;return unescapeCSS(o)}function stripWhitespace(t){a+=t;while(a<r.length&&isWhitespace(r.charCodeAt(a))){a++}}function readValueWithParenthesis(){a+=1;var t=a;var i=1;for(;i>0&&a<r.length;a++){if(r.charCodeAt(a)===40&&!isEscaped(a)){i++}else if(r.charCodeAt(a)===41&&!isEscaped(a)){i--}}if(i){throw new Error("Parenthesis not matched")}return unescapeCSS(r.slice(t,a-1))}function isEscaped(t){var a=0;while(r.charCodeAt(--t)===92)a++;return(a&1)===1}function ensureNotTraversal(){if(o.length>0&&isTraversal(o[o.length-1])){throw new Error("Did not expect successive traversals.")}}function addTraversal(t){if(o.length>0&&o[o.length-1].type===i.SelectorType.Descendant){o[o.length-1].type=t;return}ensureNotTraversal();o.push({type:t})}function addSpecialAttribute(t,r){o.push({type:i.SelectorType.Attribute,name:t,action:r,value:getName(1),namespace:null,ignoreCase:"quirks"})}function finalizeSubselector(){if(o.length&&o[o.length-1].type===i.SelectorType.Descendant){o.pop()}if(o.length===0){throw new Error("Empty sub-selector")}t.push(o)}stripWhitespace(0);if(r.length===a){return a}e:while(a<r.length){var s=r.charCodeAt(a);switch(s){case 32:case 9:case 10:case 12:case 13:{if(o.length===0||o[0].type!==i.SelectorType.Descendant){ensureNotTraversal();o.push({type:i.SelectorType.Descendant})}stripWhitespace(1);break}case 62:{addTraversal(i.SelectorType.Child);stripWhitespace(1);break}case 60:{addTraversal(i.SelectorType.Parent);stripWhitespace(1);break}case 126:{addTraversal(i.SelectorType.Sibling);stripWhitespace(1);break}case 43:{addTraversal(i.SelectorType.Adjacent);stripWhitespace(1);break}case 46:{addSpecialAttribute("class",i.AttributeAction.Element);break}case 35:{addSpecialAttribute("id",i.AttributeAction.Equals);break}case 91:{stripWhitespace(1);var u=void 0;var c=null;if(r.charCodeAt(a)===124){u=getName(1)}else if(r.startsWith("*|",a)){c="*";u=getName(2)}else{u=getName(0);if(r.charCodeAt(a)===124&&r.charCodeAt(a+1)!==61){c=u;u=getName(1)}}stripWhitespace(0);var m=i.AttributeAction.Exists;var h=d.get(r.charCodeAt(a));if(h){m=h;if(r.charCodeAt(a+1)!==61){throw new Error("Expected `=`")}stripWhitespace(2)}else if(r.charCodeAt(a)===61){m=i.AttributeAction.Equals;stripWhitespace(1)}var v="";var g=null;if(m!=="exists"){if(isQuote(r.charCodeAt(a))){var b=r.charCodeAt(a);var y=a+1;while(y<r.length&&(r.charCodeAt(y)!==b||isEscaped(y))){y+=1}if(r.charCodeAt(y)!==b){throw new Error("Attribute value didn\'t end")}v=unescapeCSS(r.slice(a+1,y));a=y+1}else{var w=a;while(a<r.length&&(!isWhitespace(r.charCodeAt(a))&&r.charCodeAt(a)!==93||isEscaped(a))){a+=1}v=unescapeCSS(r.slice(w,a))}stripWhitespace(0);var S=r.charCodeAt(a)|32;if(S===115){g=false;stripWhitespace(1)}else if(S===105){g=true;stripWhitespace(1)}}if(r.charCodeAt(a)!==93){throw new Error("Attribute selector didn\'t terminate")}a+=1;var _={type:i.SelectorType.Attribute,name:u,action:m,value:v,namespace:c,ignoreCase:g};o.push(_);break}case 58:{if(r.charCodeAt(a+1)===58){o.push({type:i.SelectorType.PseudoElement,name:getName(2).toLowerCase(),data:r.charCodeAt(a)===40?readValueWithParenthesis():null});continue}var T=getName(1).toLowerCase();var C=null;if(r.charCodeAt(a)===40){if(p.has(T)){if(isQuote(r.charCodeAt(a+1))){throw new Error("Pseudo-selector ".concat(T," cannot be quoted"))}C=[];a=parseSelector(C,r,a+1);if(r.charCodeAt(a)!==41){throw new Error("Missing closing parenthesis in :".concat(T," (").concat(r,")"))}a+=1}else{C=readValueWithParenthesis();if(l.has(T)){var D=C.charCodeAt(0);if(D===C.charCodeAt(C.length-1)&&isQuote(D)){C=C.slice(1,-1)}}C=unescapeCSS(C)}}o.push({type:i.SelectorType.Pseudo,name:T,data:C});break}case 44:{finalizeSubselector();o=[];stripWhitespace(1);break}default:{if(r.startsWith("/*",a)){var R=r.indexOf("*/",a+2);if(R<0){throw new Error("Comment was not terminated")}a=R+2;if(o.length===0){stripWhitespace(0)}break}var c=null;var E=void 0;if(s===42){a+=1;E="*"}else if(s===124){E="";if(r.charCodeAt(a+1)===124){addTraversal(i.SelectorType.ColumnCombinator);stripWhitespace(2);break}}else if(n.test(r.slice(a))){E=getName(0)}else{break e}if(r.charCodeAt(a)===124&&r.charCodeAt(a+1)!==124){c=E;if(r.charCodeAt(a+1)===42){E="*";a+=2}else{E=getName(1)}}o.push(E==="*"?{type:i.SelectorType.Universal,namespace:c}:{type:i.SelectorType.Tag,name:E,namespace:c})}}}finalizeSubselector();return a}},9154:function(t,r,a){"use strict";var i=this&&this.__spreadArray||function(t,r,a){if(a||arguments.length===2)for(var i=0,n=r.length,o;i<n;i++){if(o||!(i in r)){if(!o)o=Array.prototype.slice.call(r,0,i);o[i]=r[i]}}return t.concat(o||Array.prototype.slice.call(r))};Object.defineProperty(r,"__esModule",{value:true});r.stringify=void 0;var n=a(4738);var o=["\\\\",\'"\'];var d=i(i([],o,true),["(",")"],false);var p=new Set(o.map((function(t){return t.charCodeAt(0)})));var l=new Set(d.map((function(t){return t.charCodeAt(0)})));var s=new Set(i(i([],d,true),["~","^","$","*","+","!","|",":","[","]"," ","."],false).map((function(t){return t.charCodeAt(0)})));function stringify(t){return t.map((function(t){return t.map(stringifyToken).join("")})).join(", ")}r.stringify=stringify;function stringifyToken(t,r,a){switch(t.type){case n.SelectorType.Child:return r===0?"> ":" > ";case n.SelectorType.Parent:return r===0?"< ":" < ";case n.SelectorType.Sibling:return r===0?"~ ":" ~ ";case n.SelectorType.Adjacent:return r===0?"+ ":" + ";case n.SelectorType.Descendant:return" ";case n.SelectorType.ColumnCombinator:return r===0?"|| ":" || ";case n.SelectorType.Universal:return t.namespace==="*"&&r+1<a.length&&"name"in a[r+1]?"":"".concat(getNamespace(t.namespace),"*");case n.SelectorType.Tag:return getNamespacedName(t);case n.SelectorType.PseudoElement:return"::".concat(escapeName(t.name,s)).concat(t.data===null?"":"(".concat(escapeName(t.data,l),")"));case n.SelectorType.Pseudo:return":".concat(escapeName(t.name,s)).concat(t.data===null?"":"(".concat(typeof t.data==="string"?escapeName(t.data,l):stringify(t.data),")"));case n.SelectorType.Attribute:{if(t.name==="id"&&t.action===n.AttributeAction.Equals&&t.ignoreCase==="quirks"&&!t.namespace){return"#".concat(escapeName(t.value,s))}if(t.name==="class"&&t.action===n.AttributeAction.Element&&t.ignoreCase==="quirks"&&!t.namespace){return".".concat(escapeName(t.value,s))}var i=getNamespacedName(t);if(t.action===n.AttributeAction.Exists){return"[".concat(i,"]")}return"[".concat(i).concat(getActionValue(t.action),\'="\').concat(escapeName(t.value,p),\'"\').concat(t.ignoreCase===null?"":t.ignoreCase?" i":" s","]")}}}function getActionValue(t){switch(t){case n.AttributeAction.Equals:return"";case n.AttributeAction.Element:return"~";case n.AttributeAction.Start:return"^";case n.AttributeAction.End:return"$";case n.AttributeAction.Any:return"*";case n.AttributeAction.Not:return"!";case n.AttributeAction.Hyphen:return"|";case n.AttributeAction.Exists:throw new Error("Shouldn\'t be here")}}function getNamespacedName(t){return"".concat(getNamespace(t.namespace)).concat(escapeName(t.name,s))}function getNamespace(t){return t!==null?"".concat(t==="*"?"*":escapeName(t,s),"|"):""}function escapeName(t,r){var a=0;var i="";for(var n=0;n<t.length;n++){if(r.has(t.charCodeAt(n))){i+="".concat(t.slice(a,n),"\\\\").concat(t.charAt(n));a=n+1}}return i.length>0?i+t.slice(a):t}},4738:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.AttributeAction=r.IgnoreCaseMode=r.SelectorType=void 0;var a;(function(t){t["Attribute"]="attribute";t["Pseudo"]="pseudo";t["PseudoElement"]="pseudo-element";t["Tag"]="tag";t["Universal"]="universal";t["Adjacent"]="adjacent";t["Child"]="child";t["Descendant"]="descendant";t["Parent"]="parent";t["Sibling"]="sibling";t["ColumnCombinator"]="column-combinator"})(a=r.SelectorType||(r.SelectorType={}));r.IgnoreCaseMode={Unknown:null,QuirksMode:"quirks",IgnoreCase:true,CaseSensitive:false};var i;(function(t){t["Any"]="any";t["Element"]="element";t["End"]="end";t["Equals"]="equals";t["Exists"]="exists";t["Hyphen"]="hyphen";t["Not"]="not";t["Start"]="start"})(i=r.AttributeAction||(r.AttributeAction={}))},5803:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.attributeNames=r.elementNames=void 0;r.elementNames=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map((function(t){return[t.toLowerCase(),t]})));r.attributeNames=new Map(["definitionURL","attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map((function(t){return[t.toLowerCase(),t]})))},9943:function(t,r,a){"use strict";var i=this&&this.__assign||function(){i=Object.assign||function(t){for(var r,a=1,i=arguments.length;a<i;a++){r=arguments[a];for(var n in r)if(Object.prototype.hasOwnProperty.call(r,n))t[n]=r[n]}return t};return i.apply(this,arguments)};var n=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var o=this&&this.__setModuleDefault||(Object.create?function(t,r){Object.defineProperty(t,"default",{enumerable:true,value:r})}:function(t,r){t["default"]=r});var d=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var r={};if(t!=null)for(var a in t)if(a!=="default"&&Object.prototype.hasOwnProperty.call(t,a))n(r,t,a);o(r,t);return r};Object.defineProperty(r,"__esModule",{value:true});r.render=void 0;var p=d(a(1108));var l=a(8467);var s=a(5803);var u=new Set(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function replaceQuotes(t){return t.replace(/"/g,"&quot;")}function formatAttributes(t,r){var a;if(!t)return;var i=((a=r.encodeEntities)!==null&&a!==void 0?a:r.decodeEntities)===false?replaceQuotes:r.xmlMode||r.encodeEntities!=="utf8"?l.encodeXML:l.escapeAttribute;return Object.keys(t).map((function(a){var n,o;var d=(n=t[a])!==null&&n!==void 0?n:"";if(r.xmlMode==="foreign"){a=(o=s.attributeNames.get(a))!==null&&o!==void 0?o:a}if(!r.emptyAttrs&&!r.xmlMode&&d===""){return a}return"".concat(a,\'="\').concat(i(d),\'"\')})).join(" ")}var c=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);function render(t,r){if(r===void 0){r={}}var a="length"in t?t:[t];var i="";for(var n=0;n<a.length;n++){i+=renderNode(a[n],r)}return i}r.render=render;r["default"]=render;function renderNode(t,r){switch(t.type){case p.Root:return render(t.children,r);case p.Doctype:case p.Directive:return renderDirective(t);case p.Comment:return renderComment(t);case p.CDATA:return renderCdata(t);case p.Script:case p.Style:case p.Tag:return renderTag(t,r);case p.Text:return renderText(t,r)}}var m=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]);var h=new Set(["svg","math"]);function renderTag(t,r){var a;if(r.xmlMode==="foreign"){t.name=(a=s.elementNames.get(t.name))!==null&&a!==void 0?a:t.name;if(t.parent&&m.has(t.parent.name)){r=i(i({},r),{xmlMode:false})}}if(!r.xmlMode&&h.has(t.name)){r=i(i({},r),{xmlMode:"foreign"})}var n="<".concat(t.name);var o=formatAttributes(t.attribs,r);if(o){n+=" ".concat(o)}if(t.children.length===0&&(r.xmlMode?r.selfClosingTags!==false:r.selfClosingTags&&c.has(t.name))){if(!r.xmlMode)n+=" ";n+="/>"}else{n+=">";if(t.children.length>0){n+=render(t.children,r)}if(r.xmlMode||!c.has(t.name)){n+="</".concat(t.name,">")}}return n}function renderDirective(t){return"<".concat(t.data,">")}function renderText(t,r){var a;var i=t.data||"";if(((a=r.encodeEntities)!==null&&a!==void 0?a:r.decodeEntities)!==false&&!(!r.xmlMode&&t.parent&&u.has(t.parent.name))){i=r.xmlMode||r.encodeEntities!=="utf8"?(0,l.encodeXML)(i):(0,l.escapeText)(i)}return i}function renderCdata(t){return"<![CDATA[".concat(t.children[0].data,"]]>")}function renderComment(t){return"\\x3c!--".concat(t.data,"--\\x3e")}},1108:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.Doctype=r.CDATA=r.Tag=r.Style=r.Script=r.Comment=r.Directive=r.Text=r.Root=r.isTag=r.ElementType=void 0;var a;(function(t){t["Root"]="root";t["Text"]="text";t["Directive"]="directive";t["Comment"]="comment";t["Script"]="script";t["Style"]="style";t["Tag"]="tag";t["CDATA"]="cdata";t["Doctype"]="doctype"})(a=r.ElementType||(r.ElementType={}));function isTag(t){return t.type===a.Tag||t.type===a.Script||t.type===a.Style}r.isTag=isTag;r.Root=a.Root;r.Text=a.Text;r.Directive=a.Directive;r.Comment=a.Comment;r.Script=a.Script;r.Style=a.Style;r.Tag=a.Tag;r.CDATA=a.CDATA;r.Doctype=a.Doctype},7792:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});r.DomHandler=void 0;var o=a(1108);var d=a(2446);n(a(2446),r);var p={withStartIndices:false,withEndIndices:false,xmlMode:false};var l=function(){function DomHandler(t,r,a){this.dom=[];this.root=new d.Document(this.dom);this.done=false;this.tagStack=[this.root];this.lastNode=null;this.parser=null;if(typeof r==="function"){a=r;r=p}if(typeof t==="object"){r=t;t=undefined}this.callback=t!==null&&t!==void 0?t:null;this.options=r!==null&&r!==void 0?r:p;this.elementCB=a!==null&&a!==void 0?a:null}DomHandler.prototype.onparserinit=function(t){this.parser=t};DomHandler.prototype.onreset=function(){this.dom=[];this.root=new d.Document(this.dom);this.done=false;this.tagStack=[this.root];this.lastNode=null;this.parser=null};DomHandler.prototype.onend=function(){if(this.done)return;this.done=true;this.parser=null;this.handleCallback(null)};DomHandler.prototype.onerror=function(t){this.handleCallback(t)};DomHandler.prototype.onclosetag=function(){this.lastNode=null;var t=this.tagStack.pop();if(this.options.withEndIndices){t.endIndex=this.parser.endIndex}if(this.elementCB)this.elementCB(t)};DomHandler.prototype.onopentag=function(t,r){var a=this.options.xmlMode?o.ElementType.Tag:undefined;var i=new d.Element(t,r,undefined,a);this.addNode(i);this.tagStack.push(i)};DomHandler.prototype.ontext=function(t){var r=this.lastNode;if(r&&r.type===o.ElementType.Text){r.data+=t;if(this.options.withEndIndices){r.endIndex=this.parser.endIndex}}else{var a=new d.Text(t);this.addNode(a);this.lastNode=a}};DomHandler.prototype.oncomment=function(t){if(this.lastNode&&this.lastNode.type===o.ElementType.Comment){this.lastNode.data+=t;return}var r=new d.Comment(t);this.addNode(r);this.lastNode=r};DomHandler.prototype.oncommentend=function(){this.lastNode=null};DomHandler.prototype.oncdatastart=function(){var t=new d.Text("");var r=new d.CDATA([t]);this.addNode(r);t.parent=r;this.lastNode=t};DomHandler.prototype.oncdataend=function(){this.lastNode=null};DomHandler.prototype.onprocessinginstruction=function(t,r){var a=new d.ProcessingInstruction(t,r);this.addNode(a)};DomHandler.prototype.handleCallback=function(t){if(typeof this.callback==="function"){this.callback(t,this.dom)}else if(t){throw t}};DomHandler.prototype.addNode=function(t){var r=this.tagStack[this.tagStack.length-1];var a=r.children[r.children.length-1];if(this.options.withStartIndices){t.startIndex=this.parser.startIndex}if(this.options.withEndIndices){t.endIndex=this.parser.endIndex}r.children.push(t);if(a){t.prev=a;a.next=t}t.parent=r;this.lastNode=null};return DomHandler}();r.DomHandler=l;r["default"]=l},2446:function(t,r,a){"use strict";var i=this&&this.__extends||function(){var extendStatics=function(t,r){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var a in r)if(Object.prototype.hasOwnProperty.call(r,a))t[a]=r[a]};return extendStatics(t,r)};return function(t,r){if(typeof r!=="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");extendStatics(t,r);function __(){this.constructor=t}t.prototype=r===null?Object.create(r):(__.prototype=r.prototype,new __)}}();var n=this&&this.__assign||function(){n=Object.assign||function(t){for(var r,a=1,i=arguments.length;a<i;a++){r=arguments[a];for(var n in r)if(Object.prototype.hasOwnProperty.call(r,n))t[n]=r[n]}return t};return n.apply(this,arguments)};Object.defineProperty(r,"__esModule",{value:true});r.cloneNode=r.hasChildren=r.isDocument=r.isDirective=r.isComment=r.isText=r.isCDATA=r.isTag=r.Element=r.Document=r.CDATA=r.NodeWithChildren=r.ProcessingInstruction=r.Comment=r.Text=r.DataNode=r.Node=void 0;var o=a(1108);var d=function(){function Node(){this.parent=null;this.prev=null;this.next=null;this.startIndex=null;this.endIndex=null}Object.defineProperty(Node.prototype,"parentNode",{get:function(){return this.parent},set:function(t){this.parent=t},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"previousSibling",{get:function(){return this.prev},set:function(t){this.prev=t},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"nextSibling",{get:function(){return this.next},set:function(t){this.next=t},enumerable:false,configurable:true});Node.prototype.cloneNode=function(t){if(t===void 0){t=false}return cloneNode(this,t)};return Node}();r.Node=d;var p=function(t){i(DataNode,t);function DataNode(r){var a=t.call(this)||this;a.data=r;return a}Object.defineProperty(DataNode.prototype,"nodeValue",{get:function(){return this.data},set:function(t){this.data=t},enumerable:false,configurable:true});return DataNode}(d);r.DataNode=p;var l=function(t){i(Text,t);function Text(){var r=t!==null&&t.apply(this,arguments)||this;r.type=o.ElementType.Text;return r}Object.defineProperty(Text.prototype,"nodeType",{get:function(){return 3},enumerable:false,configurable:true});return Text}(p);r.Text=l;var s=function(t){i(Comment,t);function Comment(){var r=t!==null&&t.apply(this,arguments)||this;r.type=o.ElementType.Comment;return r}Object.defineProperty(Comment.prototype,"nodeType",{get:function(){return 8},enumerable:false,configurable:true});return Comment}(p);r.Comment=s;var u=function(t){i(ProcessingInstruction,t);function ProcessingInstruction(r,a){var i=t.call(this,a)||this;i.name=r;i.type=o.ElementType.Directive;return i}Object.defineProperty(ProcessingInstruction.prototype,"nodeType",{get:function(){return 1},enumerable:false,configurable:true});return ProcessingInstruction}(p);r.ProcessingInstruction=u;var c=function(t){i(NodeWithChildren,t);function NodeWithChildren(r){var a=t.call(this)||this;a.children=r;return a}Object.defineProperty(NodeWithChildren.prototype,"firstChild",{get:function(){var t;return(t=this.children[0])!==null&&t!==void 0?t:null},enumerable:false,configurable:true});Object.defineProperty(NodeWithChildren.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:false,configurable:true});Object.defineProperty(NodeWithChildren.prototype,"childNodes",{get:function(){return this.children},set:function(t){this.children=t},enumerable:false,configurable:true});return NodeWithChildren}(d);r.NodeWithChildren=c;var m=function(t){i(CDATA,t);function CDATA(){var r=t!==null&&t.apply(this,arguments)||this;r.type=o.ElementType.CDATA;return r}Object.defineProperty(CDATA.prototype,"nodeType",{get:function(){return 4},enumerable:false,configurable:true});return CDATA}(c);r.CDATA=m;var h=function(t){i(Document,t);function Document(){var r=t!==null&&t.apply(this,arguments)||this;r.type=o.ElementType.Root;return r}Object.defineProperty(Document.prototype,"nodeType",{get:function(){return 9},enumerable:false,configurable:true});return Document}(c);r.Document=h;var v=function(t){i(Element,t);function Element(r,a,i,n){if(i===void 0){i=[]}if(n===void 0){n=r==="script"?o.ElementType.Script:r==="style"?o.ElementType.Style:o.ElementType.Tag}var d=t.call(this,i)||this;d.name=r;d.attribs=a;d.type=n;return d}Object.defineProperty(Element.prototype,"nodeType",{get:function(){return 1},enumerable:false,configurable:true});Object.defineProperty(Element.prototype,"tagName",{get:function(){return this.name},set:function(t){this.name=t},enumerable:false,configurable:true});Object.defineProperty(Element.prototype,"attributes",{get:function(){var t=this;return Object.keys(this.attribs).map((function(r){var a,i;return{name:r,value:t.attribs[r],namespace:(a=t["x-attribsNamespace"])===null||a===void 0?void 0:a[r],prefix:(i=t["x-attribsPrefix"])===null||i===void 0?void 0:i[r]}}))},enumerable:false,configurable:true});return Element}(c);r.Element=v;function isTag(t){return(0,o.isTag)(t)}r.isTag=isTag;function isCDATA(t){return t.type===o.ElementType.CDATA}r.isCDATA=isCDATA;function isText(t){return t.type===o.ElementType.Text}r.isText=isText;function isComment(t){return t.type===o.ElementType.Comment}r.isComment=isComment;function isDirective(t){return t.type===o.ElementType.Directive}r.isDirective=isDirective;function isDocument(t){return t.type===o.ElementType.Root}r.isDocument=isDocument;function hasChildren(t){return Object.prototype.hasOwnProperty.call(t,"children")}r.hasChildren=hasChildren;function cloneNode(t,r){if(r===void 0){r=false}var a;if(isText(t)){a=new l(t.data)}else if(isComment(t)){a=new s(t.data)}else if(isTag(t)){var i=r?cloneChildren(t.children):[];var o=new v(t.name,n({},t.attribs),i);i.forEach((function(t){return t.parent=o}));if(t.namespace!=null){o.namespace=t.namespace}if(t["x-attribsNamespace"]){o["x-attribsNamespace"]=n({},t["x-attribsNamespace"])}if(t["x-attribsPrefix"]){o["x-attribsPrefix"]=n({},t["x-attribsPrefix"])}a=o}else if(isCDATA(t)){var i=r?cloneChildren(t.children):[];var d=new m(i);i.forEach((function(t){return t.parent=d}));a=d}else if(isDocument(t)){var i=r?cloneChildren(t.children):[];var p=new h(i);i.forEach((function(t){return t.parent=p}));if(t["x-mode"]){p["x-mode"]=t["x-mode"]}a=p}else if(isDirective(t)){var c=new u(t.name,t.data);if(t["x-name"]!=null){c["x-name"]=t["x-name"];c["x-publicId"]=t["x-publicId"];c["x-systemId"]=t["x-systemId"]}a=c}else{throw new Error("Not implemented yet: ".concat(t.type))}a.startIndex=t.startIndex;a.endIndex=t.endIndex;if(t.sourceCodeLocation!=null){a.sourceCodeLocation=t.sourceCodeLocation}return a}r.cloneNode=cloneNode;function cloneChildren(t){var r=t.map((function(t){return cloneNode(t,true)}));for(var a=1;a<r.length;a++){r[a].prev=r[a-1];r[a-1].next=r[a]}return r}},2260:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.getFeed=void 0;var i=a(7252);var n=a(2262);function getFeed(t){var r=getOneElement(isValidFeed,t);return!r?null:r.name==="feed"?getAtomFeed(r):getRssFeed(r)}r.getFeed=getFeed;function getAtomFeed(t){var r;var a=t.children;var i={type:"atom",items:(0,n.getElementsByTagName)("entry",a).map((function(t){var r;var a=t.children;var i={media:getMediaElements(a)};addConditionally(i,"id","id",a);addConditionally(i,"title","title",a);var n=(r=getOneElement("link",a))===null||r===void 0?void 0:r.attribs["href"];if(n){i.link=n}var o=fetch("summary",a)||fetch("content",a);if(o){i.description=o}var d=fetch("updated",a);if(d){i.pubDate=new Date(d)}return i}))};addConditionally(i,"id","id",a);addConditionally(i,"title","title",a);var o=(r=getOneElement("link",a))===null||r===void 0?void 0:r.attribs["href"];if(o){i.link=o}addConditionally(i,"description","subtitle",a);var d=fetch("updated",a);if(d){i.updated=new Date(d)}addConditionally(i,"author","email",a,true);return i}function getRssFeed(t){var r,a;var i=(a=(r=getOneElement("channel",t.children))===null||r===void 0?void 0:r.children)!==null&&a!==void 0?a:[];var o={type:t.name.substr(0,3),id:"",items:(0,n.getElementsByTagName)("item",t.children).map((function(t){var r=t.children;var a={media:getMediaElements(r)};addConditionally(a,"id","guid",r);addConditionally(a,"title","title",r);addConditionally(a,"link","link",r);addConditionally(a,"description","description",r);var i=fetch("pubDate",r)||fetch("dc:date",r);if(i)a.pubDate=new Date(i);return a}))};addConditionally(o,"title","title",i);addConditionally(o,"link","link",i);addConditionally(o,"description","description",i);var d=fetch("lastBuildDate",i);if(d){o.updated=new Date(d)}addConditionally(o,"author","managingEditor",i,true);return o}var o=["url","type","lang"];var d=["fileSize","bitrate","framerate","samplingrate","channels","duration","height","width"];function getMediaElements(t){return(0,n.getElementsByTagName)("media:content",t).map((function(t){var r=t.attribs;var a={medium:r["medium"],isDefault:!!r["isDefault"]};for(var i=0,n=o;i<n.length;i++){var p=n[i];if(r[p]){a[p]=r[p]}}for(var l=0,s=d;l<s.length;l++){var p=s[l];if(r[p]){a[p]=parseInt(r[p],10)}}if(r["expression"]){a.expression=r["expression"]}return a}))}function getOneElement(t,r){return(0,n.getElementsByTagName)(t,r,true,1)[0]}function fetch(t,r,a){if(a===void 0){a=false}return(0,i.textContent)((0,n.getElementsByTagName)(t,r,a,1)).trim()}function addConditionally(t,r,a,i,n){if(n===void 0){n=false}var o=fetch(a,i,n);if(o)t[r]=o}function isValidFeed(t){return t==="rss"||t==="feed"||t==="rdf:RDF"}},7776:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.uniqueSort=r.compareDocumentPosition=r.DocumentPosition=r.removeSubsets=void 0;var i=a(7792);function removeSubsets(t){var r=t.length;while(--r>=0){var a=t[r];if(r>0&&t.lastIndexOf(a,r-1)>=0){t.splice(r,1);continue}for(var i=a.parent;i;i=i.parent){if(t.includes(i)){t.splice(r,1);break}}}return t}r.removeSubsets=removeSubsets;var n;(function(t){t[t["DISCONNECTED"]=1]="DISCONNECTED";t[t["PRECEDING"]=2]="PRECEDING";t[t["FOLLOWING"]=4]="FOLLOWING";t[t["CONTAINS"]=8]="CONTAINS";t[t["CONTAINED_BY"]=16]="CONTAINED_BY"})(n=r.DocumentPosition||(r.DocumentPosition={}));function compareDocumentPosition(t,r){var a=[];var o=[];if(t===r){return 0}var d=(0,i.hasChildren)(t)?t:t.parent;while(d){a.unshift(d);d=d.parent}d=(0,i.hasChildren)(r)?r:r.parent;while(d){o.unshift(d);d=d.parent}var p=Math.min(a.length,o.length);var l=0;while(l<p&&a[l]===o[l]){l++}if(l===0){return n.DISCONNECTED}var s=a[l-1];var u=s.children;var c=a[l];var m=o[l];if(u.indexOf(c)>u.indexOf(m)){if(s===r){return n.FOLLOWING|n.CONTAINED_BY}return n.FOLLOWING}if(s===t){return n.PRECEDING|n.CONTAINS}return n.PRECEDING}r.compareDocumentPosition=compareDocumentPosition;function uniqueSort(t){t=t.filter((function(t,r,a){return!a.includes(t,r+1)}));t.sort((function(t,r){var a=compareDocumentPosition(t,r);if(a&n.PRECEDING){return-1}else if(a&n.FOLLOWING){return 1}return 0}));return t}r.uniqueSort=uniqueSort},2357:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__exportStar||function(t,r){for(var a in t)if(a!=="default"&&!Object.prototype.hasOwnProperty.call(r,a))i(r,t,a)};Object.defineProperty(r,"__esModule",{value:true});r.hasChildren=r.isDocument=r.isComment=r.isText=r.isCDATA=r.isTag=void 0;n(a(7252),r);n(a(9667),r);n(a(4456),r);n(a(7433),r);n(a(2262),r);n(a(7776),r);n(a(2260),r);var o=a(7792);Object.defineProperty(r,"isTag",{enumerable:true,get:function(){return o.isTag}});Object.defineProperty(r,"isCDATA",{enumerable:true,get:function(){return o.isCDATA}});Object.defineProperty(r,"isText",{enumerable:true,get:function(){return o.isText}});Object.defineProperty(r,"isComment",{enumerable:true,get:function(){return o.isComment}});Object.defineProperty(r,"isDocument",{enumerable:true,get:function(){return o.isDocument}});Object.defineProperty(r,"hasChildren",{enumerable:true,get:function(){return o.hasChildren}})},2262:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.getElementsByTagType=r.getElementsByTagName=r.getElementById=r.getElements=r.testElement=void 0;var i=a(7792);var n=a(7433);var o={tag_name:function(t){if(typeof t==="function"){return function(r){return(0,i.isTag)(r)&&t(r.name)}}else if(t==="*"){return i.isTag}return function(r){return(0,i.isTag)(r)&&r.name===t}},tag_type:function(t){if(typeof t==="function"){return function(r){return t(r.type)}}return function(r){return r.type===t}},tag_contains:function(t){if(typeof t==="function"){return function(r){return(0,i.isText)(r)&&t(r.data)}}return function(r){return(0,i.isText)(r)&&r.data===t}}};function getAttribCheck(t,r){if(typeof r==="function"){return function(a){return(0,i.isTag)(a)&&r(a.attribs[t])}}return function(a){return(0,i.isTag)(a)&&a.attribs[t]===r}}function combineFuncs(t,r){return function(a){return t(a)||r(a)}}function compileTest(t){var r=Object.keys(t).map((function(r){var a=t[r];return Object.prototype.hasOwnProperty.call(o,r)?o[r](a):getAttribCheck(r,a)}));return r.length===0?null:r.reduce(combineFuncs)}function testElement(t,r){var a=compileTest(t);return a?a(r):true}r.testElement=testElement;function getElements(t,r,a,i){if(i===void 0){i=Infinity}var o=compileTest(t);return o?(0,n.filter)(o,r,a,i):[]}r.getElements=getElements;function getElementById(t,r,a){if(a===void 0){a=true}if(!Array.isArray(r))r=[r];return(0,n.findOne)(getAttribCheck("id",t),r,a)}r.getElementById=getElementById;function getElementsByTagName(t,r,a,i){if(a===void 0){a=true}if(i===void 0){i=Infinity}return(0,n.filter)(o["tag_name"](t),r,a,i)}r.getElementsByTagName=getElementsByTagName;function getElementsByTagType(t,r,a,i){if(a===void 0){a=true}if(i===void 0){i=Infinity}return(0,n.filter)(o["tag_type"](t),r,a,i)}r.getElementsByTagType=getElementsByTagType},4456:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.prepend=r.prependChild=r.append=r.appendChild=r.replaceElement=r.removeElement=void 0;function removeElement(t){if(t.prev)t.prev.next=t.next;if(t.next)t.next.prev=t.prev;if(t.parent){var r=t.parent.children;var a=r.lastIndexOf(t);if(a>=0){r.splice(a,1)}}t.next=null;t.prev=null;t.parent=null}r.removeElement=removeElement;function replaceElement(t,r){var a=r.prev=t.prev;if(a){a.next=r}var i=r.next=t.next;if(i){i.prev=r}var n=r.parent=t.parent;if(n){var o=n.children;o[o.lastIndexOf(t)]=r;t.parent=null}}r.replaceElement=replaceElement;function appendChild(t,r){removeElement(r);r.next=null;r.parent=t;if(t.children.push(r)>1){var a=t.children[t.children.length-2];a.next=r;r.prev=a}else{r.prev=null}}r.appendChild=appendChild;function append(t,r){removeElement(r);var a=t.parent;var i=t.next;r.next=i;r.prev=t;t.next=r;r.parent=a;if(i){i.prev=r;if(a){var n=a.children;n.splice(n.lastIndexOf(i),0,r)}}else if(a){a.children.push(r)}}r.append=append;function prependChild(t,r){removeElement(r);r.parent=t;r.prev=null;if(t.children.unshift(r)!==1){var a=t.children[1];a.prev=r;r.next=a}else{r.next=null}}r.prependChild=prependChild;function prepend(t,r){removeElement(r);var a=t.parent;if(a){var i=a.children;i.splice(i.indexOf(t),0,r)}if(t.prev){t.prev.next=r}r.parent=a;r.prev=t.prev;r.next=t;t.prev=r}r.prepend=prepend},7433:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.findAll=r.existsOne=r.findOne=r.findOneChild=r.find=r.filter=void 0;var i=a(7792);function filter(t,r,a,i){if(a===void 0){a=true}if(i===void 0){i=Infinity}return find(t,Array.isArray(r)?r:[r],a,i)}r.filter=filter;function find(t,r,a,n){var o=[];var d=[r];var p=[0];for(;;){if(p[0]>=d[0].length){if(p.length===1){return o}d.shift();p.shift();continue}var l=d[0][p[0]++];if(t(l)){o.push(l);if(--n<=0)return o}if(a&&(0,i.hasChildren)(l)&&l.children.length>0){p.unshift(0);d.unshift(l.children)}}}r.find=find;function findOneChild(t,r){return r.find(t)}r.findOneChild=findOneChild;function findOne(t,r,a){if(a===void 0){a=true}var n=null;for(var o=0;o<r.length&&!n;o++){var d=r[o];if(!(0,i.isTag)(d)){continue}else if(t(d)){n=d}else if(a&&d.children.length>0){n=findOne(t,d.children,true)}}return n}r.findOne=findOne;function existsOne(t,r){return r.some((function(r){return(0,i.isTag)(r)&&(t(r)||existsOne(t,r.children))}))}r.existsOne=existsOne;function findAll(t,r){var a=[];var n=[r];var o=[0];for(;;){if(o[0]>=n[0].length){if(n.length===1){return a}n.shift();o.shift();continue}var d=n[0][o[0]++];if(!(0,i.isTag)(d))continue;if(t(d))a.push(d);if(d.children.length>0){o.unshift(0);n.unshift(d.children)}}}r.findAll=findAll},7252:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.innerText=r.textContent=r.getText=r.getInnerHTML=r.getOuterHTML=void 0;var n=a(7792);var o=i(a(9943));var d=a(1108);function getOuterHTML(t,r){return(0,o.default)(t,r)}r.getOuterHTML=getOuterHTML;function getInnerHTML(t,r){return(0,n.hasChildren)(t)?t.children.map((function(t){return getOuterHTML(t,r)})).join(""):""}r.getInnerHTML=getInnerHTML;function getText(t){if(Array.isArray(t))return t.map(getText).join("");if((0,n.isTag)(t))return t.name==="br"?"\\n":getText(t.children);if((0,n.isCDATA)(t))return getText(t.children);if((0,n.isText)(t))return t.data;return""}r.getText=getText;function textContent(t){if(Array.isArray(t))return t.map(textContent).join("");if((0,n.hasChildren)(t)&&!(0,n.isComment)(t)){return textContent(t.children)}if((0,n.isText)(t))return t.data;return""}r.textContent=textContent;function innerText(t){if(Array.isArray(t))return t.map(innerText).join("");if((0,n.hasChildren)(t)&&(t.type===d.ElementType.Tag||(0,n.isCDATA)(t))){return innerText(t.children)}if((0,n.isText)(t))return t.data;return""}r.innerText=innerText},9667:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.prevElementSibling=r.nextElementSibling=r.getName=r.hasAttrib=r.getAttributeValue=r.getSiblings=r.getParent=r.getChildren=void 0;var i=a(7792);function getChildren(t){return(0,i.hasChildren)(t)?t.children:[]}r.getChildren=getChildren;function getParent(t){return t.parent||null}r.getParent=getParent;function getSiblings(t){var r,a;var i=getParent(t);if(i!=null)return getChildren(i);var n=[t];var o=t.prev,d=t.next;while(o!=null){n.unshift(o);r=o,o=r.prev}while(d!=null){n.push(d);a=d,d=a.next}return n}r.getSiblings=getSiblings;function getAttributeValue(t,r){var a;return(a=t.attribs)===null||a===void 0?void 0:a[r]}r.getAttributeValue=getAttributeValue;function hasAttrib(t,r){return t.attribs!=null&&Object.prototype.hasOwnProperty.call(t.attribs,r)&&t.attribs[r]!=null}r.hasAttrib=hasAttrib;function getName(t){return t.name}r.getName=getName;function nextElementSibling(t){var r;var a=t.next;while(a!==null&&!(0,i.isTag)(a))r=a,a=r.next;return a}r.nextElementSibling=nextElementSibling;function prevElementSibling(t){var r;var a=t.prev;while(a!==null&&!(0,i.isTag)(a))r=a,a=r.prev;return a}r.prevElementSibling=prevElementSibling},1469:function(t,r,a){"use strict";var i=this&&this.__createBinding||(Object.create?function(t,r,a,i){if(i===undefined)i=a;var n=Object.getOwnPropertyDescriptor(r,a);if(!n||("get"in n?!r.__esModule:n.writable||n.configurable)){n={enumerable:true,get:function(){return r[a]}}}Object.defineProperty(t,i,n)}:function(t,r,a,i){if(i===undefined)i=a;t[i]=r[a]});var n=this&&this.__setModuleDefault||(Object.create?function(t,r){Object.defineProperty(t,"default",{enumerable:true,value:r})}:function(t,r){t["default"]=r});var o=this&&this.__importStar||function(t){if(t&&t.__esModule)return t;var r={};if(t!=null)for(var a in t)if(a!=="default"&&Object.prototype.hasOwnProperty.call(t,a))i(r,t,a);n(r,t);return r};var d=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.decodeXML=r.decodeHTMLStrict=r.decodeHTMLAttribute=r.decodeHTML=r.determineBranch=r.EntityDecoder=r.DecodingMode=r.BinTrieFlags=r.fromCodePoint=r.replaceCodePoint=r.decodeCodePoint=r.xmlDecodeTree=r.htmlDecodeTree=void 0;var p=d(a(828));r.htmlDecodeTree=p.default;var l=d(a(2060));r.xmlDecodeTree=l.default;var s=o(a(4487));r.decodeCodePoint=s.default;var u=a(4487);Object.defineProperty(r,"replaceCodePoint",{enumerable:true,get:function(){return u.replaceCodePoint}});Object.defineProperty(r,"fromCodePoint",{enumerable:true,get:function(){return u.fromCodePoint}});var c;(function(t){t[t["NUM"]=35]="NUM";t[t["SEMI"]=59]="SEMI";t[t["EQUALS"]=61]="EQUALS";t[t["ZERO"]=48]="ZERO";t[t["NINE"]=57]="NINE";t[t["LOWER_A"]=97]="LOWER_A";t[t["LOWER_F"]=102]="LOWER_F";t[t["LOWER_X"]=120]="LOWER_X";t[t["LOWER_Z"]=122]="LOWER_Z";t[t["UPPER_A"]=65]="UPPER_A";t[t["UPPER_F"]=70]="UPPER_F";t[t["UPPER_Z"]=90]="UPPER_Z"})(c||(c={}));var m=32;var h;(function(t){t[t["VALUE_LENGTH"]=49152]="VALUE_LENGTH";t[t["BRANCH_LENGTH"]=16256]="BRANCH_LENGTH";t[t["JUMP_TABLE"]=127]="JUMP_TABLE"})(h=r.BinTrieFlags||(r.BinTrieFlags={}));function isNumber(t){return t>=c.ZERO&&t<=c.NINE}function isHexadecimalCharacter(t){return t>=c.UPPER_A&&t<=c.UPPER_F||t>=c.LOWER_A&&t<=c.LOWER_F}function isAsciiAlphaNumeric(t){return t>=c.UPPER_A&&t<=c.UPPER_Z||t>=c.LOWER_A&&t<=c.LOWER_Z||isNumber(t)}function isEntityInAttributeInvalidEnd(t){return t===c.EQUALS||isAsciiAlphaNumeric(t)}var v;(function(t){t[t["EntityStart"]=0]="EntityStart";t[t["NumericStart"]=1]="NumericStart";t[t["NumericDecimal"]=2]="NumericDecimal";t[t["NumericHex"]=3]="NumericHex";t[t["NamedEntity"]=4]="NamedEntity"})(v||(v={}));var g;(function(t){t[t["Legacy"]=0]="Legacy";t[t["Strict"]=1]="Strict";t[t["Attribute"]=2]="Attribute"})(g=r.DecodingMode||(r.DecodingMode={}));var b=function(){function EntityDecoder(t,r,a){this.decodeTree=t;this.emitCodePoint=r;this.errors=a;this.state=v.EntityStart;this.consumed=1;this.result=0;this.treeIndex=0;this.excess=1;this.decodeMode=g.Strict}EntityDecoder.prototype.startEntity=function(t){this.decodeMode=t;this.state=v.EntityStart;this.result=0;this.treeIndex=0;this.excess=1;this.consumed=1};EntityDecoder.prototype.write=function(t,r){switch(this.state){case v.EntityStart:{if(t.charCodeAt(r)===c.NUM){this.state=v.NumericStart;this.consumed+=1;return this.stateNumericStart(t,r+1)}this.state=v.NamedEntity;return this.stateNamedEntity(t,r)}case v.NumericStart:{return this.stateNumericStart(t,r)}case v.NumericDecimal:{return this.stateNumericDecimal(t,r)}case v.NumericHex:{return this.stateNumericHex(t,r)}case v.NamedEntity:{return this.stateNamedEntity(t,r)}}};EntityDecoder.prototype.stateNumericStart=function(t,r){if(r>=t.length){return-1}if((t.charCodeAt(r)|m)===c.LOWER_X){this.state=v.NumericHex;this.consumed+=1;return this.stateNumericHex(t,r+1)}this.state=v.NumericDecimal;return this.stateNumericDecimal(t,r)};EntityDecoder.prototype.addToNumericResult=function(t,r,a,i){if(r!==a){var n=a-r;this.result=this.result*Math.pow(i,n)+parseInt(t.substr(r,n),i);this.consumed+=n}};EntityDecoder.prototype.stateNumericHex=function(t,r){var a=r;while(r<t.length){var i=t.charCodeAt(r);if(isNumber(i)||isHexadecimalCharacter(i)){r+=1}else{this.addToNumericResult(t,a,r,16);return this.emitNumericEntity(i,3)}}this.addToNumericResult(t,a,r,16);return-1};EntityDecoder.prototype.stateNumericDecimal=function(t,r){var a=r;while(r<t.length){var i=t.charCodeAt(r);if(isNumber(i)){r+=1}else{this.addToNumericResult(t,a,r,10);return this.emitNumericEntity(i,2)}}this.addToNumericResult(t,a,r,10);return-1};EntityDecoder.prototype.emitNumericEntity=function(t,r){var a;if(this.consumed<=r){(a=this.errors)===null||a===void 0?void 0:a.absenceOfDigitsInNumericCharacterReference(this.consumed);return 0}if(t===c.SEMI){this.consumed+=1}else if(this.decodeMode===g.Strict){return 0}this.emitCodePoint((0,s.replaceCodePoint)(this.result),this.consumed);if(this.errors){if(t!==c.SEMI){this.errors.missingSemicolonAfterCharacterReference()}this.errors.validateNumericCharacterReference(this.result)}return this.consumed};EntityDecoder.prototype.stateNamedEntity=function(t,r){var a=this.decodeTree;var i=a[this.treeIndex];var n=(i&h.VALUE_LENGTH)>>14;for(;r<t.length;r++,this.excess++){var o=t.charCodeAt(r);this.treeIndex=determineBranch(a,i,this.treeIndex+Math.max(1,n),o);if(this.treeIndex<0){return this.result===0||this.decodeMode===g.Attribute&&(n===0||isEntityInAttributeInvalidEnd(o))?0:this.emitNotTerminatedNamedEntity()}i=a[this.treeIndex];n=(i&h.VALUE_LENGTH)>>14;if(n!==0){if(o===c.SEMI){return this.emitNamedEntityData(this.treeIndex,n,this.consumed+this.excess)}if(this.decodeMode!==g.Strict){this.result=this.treeIndex;this.consumed+=this.excess;this.excess=0}}}return-1};EntityDecoder.prototype.emitNotTerminatedNamedEntity=function(){var t;var r=this,a=r.result,i=r.decodeTree;var n=(i[a]&h.VALUE_LENGTH)>>14;this.emitNamedEntityData(a,n,this.consumed);(t=this.errors)===null||t===void 0?void 0:t.missingSemicolonAfterCharacterReference();return this.consumed};EntityDecoder.prototype.emitNamedEntityData=function(t,r,a){var i=this.decodeTree;this.emitCodePoint(r===1?i[t]&~h.VALUE_LENGTH:i[t+1],a);if(r===3){this.emitCodePoint(i[t+2],a)}return a};EntityDecoder.prototype.end=function(){var t;switch(this.state){case v.NamedEntity:{return this.result!==0&&(this.decodeMode!==g.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0}case v.NumericDecimal:{return this.emitNumericEntity(0,2)}case v.NumericHex:{return this.emitNumericEntity(0,3)}case v.NumericStart:{(t=this.errors)===null||t===void 0?void 0:t.absenceOfDigitsInNumericCharacterReference(this.consumed);return 0}case v.EntityStart:{return 0}}};return EntityDecoder}();r.EntityDecoder=b;function getDecoder(t){var r="";var a=new b(t,(function(t){return r+=(0,s.fromCodePoint)(t)}));return function decodeWithTrie(t,i){var n=0;var o=0;while((o=t.indexOf("&",o))>=0){r+=t.slice(n,o);a.startEntity(i);var d=a.write(t,o+1);if(d<0){n=o+a.end();break}n=o+d;o=d===0?n+1:n}var p=r+t.slice(n);r="";return p}}function determineBranch(t,r,a,i){var n=(r&h.BRANCH_LENGTH)>>7;var o=r&h.JUMP_TABLE;if(n===0){return o!==0&&i===o?a:-1}if(o){var d=i-o;return d<0||d>=n?-1:t[a+d]-1}var p=a;var l=p+n-1;while(p<=l){var s=p+l>>>1;var u=t[s];if(u<i){p=s+1}else if(u>i){l=s-1}else{return t[s+n]}}return-1}r.determineBranch=determineBranch;var y=getDecoder(p.default);var w=getDecoder(l.default);function decodeHTML(t,r){if(r===void 0){r=g.Legacy}return y(t,r)}r.decodeHTML=decodeHTML;function decodeHTMLAttribute(t){return y(t,g.Attribute)}r.decodeHTMLAttribute=decodeHTMLAttribute;function decodeHTMLStrict(t){return y(t,g.Strict)}r.decodeHTMLStrict=decodeHTMLStrict;function decodeXML(t){return w(t,g.Strict)}r.decodeXML=decodeXML},4487:(t,r)=>{"use strict";var a;Object.defineProperty(r,"__esModule",{value:true});r.replaceCodePoint=r.fromCodePoint=void 0;var i=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);r.fromCodePoint=(a=String.fromCodePoint)!==null&&a!==void 0?a:function(t){var r="";if(t>65535){t-=65536;r+=String.fromCharCode(t>>>10&1023|55296);t=56320|t&1023}r+=String.fromCharCode(t);return r};function replaceCodePoint(t){var r;if(t>=55296&&t<=57343||t>1114111){return 65533}return(r=i.get(t))!==null&&r!==void 0?r:t}r.replaceCodePoint=replaceCodePoint;function decodeCodePoint(t){return(0,r.fromCodePoint)(replaceCodePoint(t))}r["default"]=decodeCodePoint},6549:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.encodeNonAsciiHTML=r.encodeHTML=void 0;var n=i(a(7261));var o=a(6104);var d=/[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;function encodeHTML(t){return encodeHTMLTrieRe(d,t)}r.encodeHTML=encodeHTML;function encodeNonAsciiHTML(t){return encodeHTMLTrieRe(o.xmlReplacer,t)}r.encodeNonAsciiHTML=encodeNonAsciiHTML;function encodeHTMLTrieRe(t,r){var a="";var i=0;var d;while((d=t.exec(r))!==null){var p=d.index;a+=r.substring(i,p);var l=r.charCodeAt(p);var s=n.default.get(l);if(typeof s==="object"){if(p+1<r.length){var u=r.charCodeAt(p+1);var c=typeof s.n==="number"?s.n===u?s.o:undefined:s.n.get(u);if(c!==undefined){a+=c;i=t.lastIndex+=1;continue}}s=s.v}if(s!==undefined){a+=s;i=p+1}else{var m=(0,o.getCodePoint)(r,p);a+="&#x".concat(m.toString(16),";");i=t.lastIndex+=Number(m!==l)}}return a+r.substr(i)}},6104:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.escapeText=r.escapeAttribute=r.escapeUTF8=r.escape=r.encodeXML=r.getCodePoint=r.xmlReplacer=void 0;r.xmlReplacer=/["&\'<>$\\x80-\\uFFFF]/g;var a=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);r.getCodePoint=String.prototype.codePointAt!=null?function(t,r){return t.codePointAt(r)}:function(t,r){return(t.charCodeAt(r)&64512)===55296?(t.charCodeAt(r)-55296)*1024+t.charCodeAt(r+1)-56320+65536:t.charCodeAt(r)};function encodeXML(t){var i="";var n=0;var o;while((o=r.xmlReplacer.exec(t))!==null){var d=o.index;var p=t.charCodeAt(d);var l=a.get(p);if(l!==undefined){i+=t.substring(n,d)+l;n=d+1}else{i+="".concat(t.substring(n,d),"&#x").concat((0,r.getCodePoint)(t,d).toString(16),";");n=r.xmlReplacer.lastIndex+=Number((p&64512)===55296)}}return i+t.substr(n)}r.encodeXML=encodeXML;r.escape=encodeXML;function getEscaper(t,r){return function escape(a){var i;var n=0;var o="";while(i=t.exec(a)){if(n!==i.index){o+=a.substring(n,i.index)}o+=r.get(i[0].charCodeAt(0));n=i.index+1}return o+a.substring(n)}}r.escapeUTF8=getEscaper(/[&<>\'"]/g,a);r.escapeAttribute=getEscaper(/["&\\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]]));r.escapeText=getEscaper(/[&<>\\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]))},828:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r["default"]=new Uint16Array(\'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\0\\0\\0\\0\\0\\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\0\\0\\0͔͂\\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\\0\\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\0\\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\0ц\\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\0\\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\\0\\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\\0ֿ\\0\\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\0ࣃbleBracket;柦nǔࣈ\\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\0စbleBracket;柧nǔည\\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\\0\\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\\0ጬጱ\\0\\0\\0\\0\\0ጸጽ፷ᎅ\\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\\0ᖰᖶᖿ\\0\\0\\0\\0ᗆᗛᗫᙟ᙭\\0ᚕ᚛ᚲᚹ\\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\0\\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\0\\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\0ᠳƲᠯ\\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\0᧨ᨑᨕᨲ\\0ᨷᩐ\\0\\0᪴\\0\\0᫁\\0\\0ᬡᬮ᭍᭒\\0᯽\\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\0\\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\\0\\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\0\\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\0\\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\\0\\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\\0\\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\\0\\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\\0ᾞ\\0ᾡᾧ\\0\\0ῆῌ\\0ΐ\\0ῦῪ \\0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\0\\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\0⁐β•‥‧‪‬\\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\\0‶;慔;慖ʴ‾⁁\\0\\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\\0⊪\\0⊸⋅⋎\\0⋕⋳\\0\\0⋸⌢⍧⍢⍿\\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\0⒪\\0⒱\\0\\0\\0\\0\\0⒵Ⓔ\\0ⓆⓈⓍ\\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\\0\\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0ⴭ\\0ⴸⵈⵠⵥ⵲ⶄᬇ\\0\\0ⶍⶫ\\0ⷈⷎ\\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\\0\\0⵼\\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\\0⹽\\0⺀⺝\\0⺢⺹\\0\\0⻋ຜ\\0⼓\\0\\0⼫⾼\\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\\0\\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\0㍺㎤\\0\\0㏬㏰\\0㐨㑈㑚㒭㒱㓊㓱\\0㘖\\0\\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\0\\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\\0㙾㛂\\0\\0\\0\\0\\0㛛㜃\\0㜉㝬\\0\\0\\0㞇ɲ㙖\\0\\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\\0\\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\0\\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\\0㪋\\0㪐㪛\\0\\0㪝㪨㪫㪯\\0\\0㫃㫎\\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌\'.split("").map((function(t){return t.charCodeAt(0)})))},2060:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r["default"]=new Uint16Array("Ȁaglq\\t\x1Bɭ\\0\\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((function(t){return t.charCodeAt(0)})))},7261:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function restoreDiff(t){for(var r=1;r<t.length;r++){t[r][0]+=t[r-1][0]+1}return t}r["default"]=new Map(restoreDiff([[9,"&Tab;"],[0,"&NewLine;"],[22,"&excl;"],[0,"&quot;"],[0,"&num;"],[0,"&dollar;"],[0,"&percnt;"],[0,"&amp;"],[0,"&apos;"],[0,"&lpar;"],[0,"&rpar;"],[0,"&ast;"],[0,"&plus;"],[0,"&comma;"],[1,"&period;"],[0,"&sol;"],[10,"&colon;"],[0,"&semi;"],[0,{v:"&lt;",n:8402,o:"&nvlt;"}],[0,{v:"&equals;",n:8421,o:"&bne;"}],[0,{v:"&gt;",n:8402,o:"&nvgt;"}],[0,"&quest;"],[0,"&commat;"],[26,"&lbrack;"],[0,"&bsol;"],[0,"&rbrack;"],[0,"&Hat;"],[0,"&lowbar;"],[0,"&DiacriticalGrave;"],[5,{n:106,o:"&fjlig;"}],[20,"&lbrace;"],[0,"&verbar;"],[0,"&rbrace;"],[34,"&nbsp;"],[0,"&iexcl;"],[0,"&cent;"],[0,"&pound;"],[0,"&curren;"],[0,"&yen;"],[0,"&brvbar;"],[0,"&sect;"],[0,"&die;"],[0,"&copy;"],[0,"&ordf;"],[0,"&laquo;"],[0,"&not;"],[0,"&shy;"],[0,"&circledR;"],[0,"&macr;"],[0,"&deg;"],[0,"&PlusMinus;"],[0,"&sup2;"],[0,"&sup3;"],[0,"&acute;"],[0,"&micro;"],[0,"&para;"],[0,"&centerdot;"],[0,"&cedil;"],[0,"&sup1;"],[0,"&ordm;"],[0,"&raquo;"],[0,"&frac14;"],[0,"&frac12;"],[0,"&frac34;"],[0,"&iquest;"],[0,"&Agrave;"],[0,"&Aacute;"],[0,"&Acirc;"],[0,"&Atilde;"],[0,"&Auml;"],[0,"&angst;"],[0,"&AElig;"],[0,"&Ccedil;"],[0,"&Egrave;"],[0,"&Eacute;"],[0,"&Ecirc;"],[0,"&Euml;"],[0,"&Igrave;"],[0,"&Iacute;"],[0,"&Icirc;"],[0,"&Iuml;"],[0,"&ETH;"],[0,"&Ntilde;"],[0,"&Ograve;"],[0,"&Oacute;"],[0,"&Ocirc;"],[0,"&Otilde;"],[0,"&Ouml;"],[0,"&times;"],[0,"&Oslash;"],[0,"&Ugrave;"],[0,"&Uacute;"],[0,"&Ucirc;"],[0,"&Uuml;"],[0,"&Yacute;"],[0,"&THORN;"],[0,"&szlig;"],[0,"&agrave;"],[0,"&aacute;"],[0,"&acirc;"],[0,"&atilde;"],[0,"&auml;"],[0,"&aring;"],[0,"&aelig;"],[0,"&ccedil;"],[0,"&egrave;"],[0,"&eacute;"],[0,"&ecirc;"],[0,"&euml;"],[0,"&igrave;"],[0,"&iacute;"],[0,"&icirc;"],[0,"&iuml;"],[0,"&eth;"],[0,"&ntilde;"],[0,"&ograve;"],[0,"&oacute;"],[0,"&ocirc;"],[0,"&otilde;"],[0,"&ouml;"],[0,"&div;"],[0,"&oslash;"],[0,"&ugrave;"],[0,"&uacute;"],[0,"&ucirc;"],[0,"&uuml;"],[0,"&yacute;"],[0,"&thorn;"],[0,"&yuml;"],[0,"&Amacr;"],[0,"&amacr;"],[0,"&Abreve;"],[0,"&abreve;"],[0,"&Aogon;"],[0,"&aogon;"],[0,"&Cacute;"],[0,"&cacute;"],[0,"&Ccirc;"],[0,"&ccirc;"],[0,"&Cdot;"],[0,"&cdot;"],[0,"&Ccaron;"],[0,"&ccaron;"],[0,"&Dcaron;"],[0,"&dcaron;"],[0,"&Dstrok;"],[0,"&dstrok;"],[0,"&Emacr;"],[0,"&emacr;"],[2,"&Edot;"],[0,"&edot;"],[0,"&Eogon;"],[0,"&eogon;"],[0,"&Ecaron;"],[0,"&ecaron;"],[0,"&Gcirc;"],[0,"&gcirc;"],[0,"&Gbreve;"],[0,"&gbreve;"],[0,"&Gdot;"],[0,"&gdot;"],[0,"&Gcedil;"],[1,"&Hcirc;"],[0,"&hcirc;"],[0,"&Hstrok;"],[0,"&hstrok;"],[0,"&Itilde;"],[0,"&itilde;"],[0,"&Imacr;"],[0,"&imacr;"],[2,"&Iogon;"],[0,"&iogon;"],[0,"&Idot;"],[0,"&imath;"],[0,"&IJlig;"],[0,"&ijlig;"],[0,"&Jcirc;"],[0,"&jcirc;"],[0,"&Kcedil;"],[0,"&kcedil;"],[0,"&kgreen;"],[0,"&Lacute;"],[0,"&lacute;"],[0,"&Lcedil;"],[0,"&lcedil;"],[0,"&Lcaron;"],[0,"&lcaron;"],[0,"&Lmidot;"],[0,"&lmidot;"],[0,"&Lstrok;"],[0,"&lstrok;"],[0,"&Nacute;"],[0,"&nacute;"],[0,"&Ncedil;"],[0,"&ncedil;"],[0,"&Ncaron;"],[0,"&ncaron;"],[0,"&napos;"],[0,"&ENG;"],[0,"&eng;"],[0,"&Omacr;"],[0,"&omacr;"],[2,"&Odblac;"],[0,"&odblac;"],[0,"&OElig;"],[0,"&oelig;"],[0,"&Racute;"],[0,"&racute;"],[0,"&Rcedil;"],[0,"&rcedil;"],[0,"&Rcaron;"],[0,"&rcaron;"],[0,"&Sacute;"],[0,"&sacute;"],[0,"&Scirc;"],[0,"&scirc;"],[0,"&Scedil;"],[0,"&scedil;"],[0,"&Scaron;"],[0,"&scaron;"],[0,"&Tcedil;"],[0,"&tcedil;"],[0,"&Tcaron;"],[0,"&tcaron;"],[0,"&Tstrok;"],[0,"&tstrok;"],[0,"&Utilde;"],[0,"&utilde;"],[0,"&Umacr;"],[0,"&umacr;"],[0,"&Ubreve;"],[0,"&ubreve;"],[0,"&Uring;"],[0,"&uring;"],[0,"&Udblac;"],[0,"&udblac;"],[0,"&Uogon;"],[0,"&uogon;"],[0,"&Wcirc;"],[0,"&wcirc;"],[0,"&Ycirc;"],[0,"&ycirc;"],[0,"&Yuml;"],[0,"&Zacute;"],[0,"&zacute;"],[0,"&Zdot;"],[0,"&zdot;"],[0,"&Zcaron;"],[0,"&zcaron;"],[19,"&fnof;"],[34,"&imped;"],[63,"&gacute;"],[65,"&jmath;"],[142,"&circ;"],[0,"&caron;"],[16,"&breve;"],[0,"&DiacriticalDot;"],[0,"&ring;"],[0,"&ogon;"],[0,"&DiacriticalTilde;"],[0,"&dblac;"],[51,"&DownBreve;"],[127,"&Alpha;"],[0,"&Beta;"],[0,"&Gamma;"],[0,"&Delta;"],[0,"&Epsilon;"],[0,"&Zeta;"],[0,"&Eta;"],[0,"&Theta;"],[0,"&Iota;"],[0,"&Kappa;"],[0,"&Lambda;"],[0,"&Mu;"],[0,"&Nu;"],[0,"&Xi;"],[0,"&Omicron;"],[0,"&Pi;"],[0,"&Rho;"],[1,"&Sigma;"],[0,"&Tau;"],[0,"&Upsilon;"],[0,"&Phi;"],[0,"&Chi;"],[0,"&Psi;"],[0,"&ohm;"],[7,"&alpha;"],[0,"&beta;"],[0,"&gamma;"],[0,"&delta;"],[0,"&epsi;"],[0,"&zeta;"],[0,"&eta;"],[0,"&theta;"],[0,"&iota;"],[0,"&kappa;"],[0,"&lambda;"],[0,"&mu;"],[0,"&nu;"],[0,"&xi;"],[0,"&omicron;"],[0,"&pi;"],[0,"&rho;"],[0,"&sigmaf;"],[0,"&sigma;"],[0,"&tau;"],[0,"&upsi;"],[0,"&phi;"],[0,"&chi;"],[0,"&psi;"],[0,"&omega;"],[7,"&thetasym;"],[0,"&Upsi;"],[2,"&phiv;"],[0,"&piv;"],[5,"&Gammad;"],[0,"&digamma;"],[18,"&kappav;"],[0,"&rhov;"],[3,"&epsiv;"],[0,"&backepsilon;"],[10,"&IOcy;"],[0,"&DJcy;"],[0,"&GJcy;"],[0,"&Jukcy;"],[0,"&DScy;"],[0,"&Iukcy;"],[0,"&YIcy;"],[0,"&Jsercy;"],[0,"&LJcy;"],[0,"&NJcy;"],[0,"&TSHcy;"],[0,"&KJcy;"],[1,"&Ubrcy;"],[0,"&DZcy;"],[0,"&Acy;"],[0,"&Bcy;"],[0,"&Vcy;"],[0,"&Gcy;"],[0,"&Dcy;"],[0,"&IEcy;"],[0,"&ZHcy;"],[0,"&Zcy;"],[0,"&Icy;"],[0,"&Jcy;"],[0,"&Kcy;"],[0,"&Lcy;"],[0,"&Mcy;"],[0,"&Ncy;"],[0,"&Ocy;"],[0,"&Pcy;"],[0,"&Rcy;"],[0,"&Scy;"],[0,"&Tcy;"],[0,"&Ucy;"],[0,"&Fcy;"],[0,"&KHcy;"],[0,"&TScy;"],[0,"&CHcy;"],[0,"&SHcy;"],[0,"&SHCHcy;"],[0,"&HARDcy;"],[0,"&Ycy;"],[0,"&SOFTcy;"],[0,"&Ecy;"],[0,"&YUcy;"],[0,"&YAcy;"],[0,"&acy;"],[0,"&bcy;"],[0,"&vcy;"],[0,"&gcy;"],[0,"&dcy;"],[0,"&iecy;"],[0,"&zhcy;"],[0,"&zcy;"],[0,"&icy;"],[0,"&jcy;"],[0,"&kcy;"],[0,"&lcy;"],[0,"&mcy;"],[0,"&ncy;"],[0,"&ocy;"],[0,"&pcy;"],[0,"&rcy;"],[0,"&scy;"],[0,"&tcy;"],[0,"&ucy;"],[0,"&fcy;"],[0,"&khcy;"],[0,"&tscy;"],[0,"&chcy;"],[0,"&shcy;"],[0,"&shchcy;"],[0,"&hardcy;"],[0,"&ycy;"],[0,"&softcy;"],[0,"&ecy;"],[0,"&yucy;"],[0,"&yacy;"],[1,"&iocy;"],[0,"&djcy;"],[0,"&gjcy;"],[0,"&jukcy;"],[0,"&dscy;"],[0,"&iukcy;"],[0,"&yicy;"],[0,"&jsercy;"],[0,"&ljcy;"],[0,"&njcy;"],[0,"&tshcy;"],[0,"&kjcy;"],[1,"&ubrcy;"],[0,"&dzcy;"],[7074,"&ensp;"],[0,"&emsp;"],[0,"&emsp13;"],[0,"&emsp14;"],[1,"&numsp;"],[0,"&puncsp;"],[0,"&ThinSpace;"],[0,"&hairsp;"],[0,"&NegativeMediumSpace;"],[0,"&zwnj;"],[0,"&zwj;"],[0,"&lrm;"],[0,"&rlm;"],[0,"&dash;"],[2,"&ndash;"],[0,"&mdash;"],[0,"&horbar;"],[0,"&Verbar;"],[1,"&lsquo;"],[0,"&CloseCurlyQuote;"],[0,"&lsquor;"],[1,"&ldquo;"],[0,"&CloseCurlyDoubleQuote;"],[0,"&bdquo;"],[1,"&dagger;"],[0,"&Dagger;"],[0,"&bull;"],[2,"&nldr;"],[0,"&hellip;"],[9,"&permil;"],[0,"&pertenk;"],[0,"&prime;"],[0,"&Prime;"],[0,"&tprime;"],[0,"&backprime;"],[3,"&lsaquo;"],[0,"&rsaquo;"],[3,"&oline;"],[2,"&caret;"],[1,"&hybull;"],[0,"&frasl;"],[10,"&bsemi;"],[7,"&qprime;"],[7,{v:"&MediumSpace;",n:8202,o:"&ThickSpace;"}],[0,"&NoBreak;"],[0,"&af;"],[0,"&InvisibleTimes;"],[0,"&ic;"],[72,"&euro;"],[46,"&tdot;"],[0,"&DotDot;"],[37,"&complexes;"],[2,"&incare;"],[4,"&gscr;"],[0,"&hamilt;"],[0,"&Hfr;"],[0,"&Hopf;"],[0,"&planckh;"],[0,"&hbar;"],[0,"&imagline;"],[0,"&Ifr;"],[0,"&lagran;"],[0,"&ell;"],[1,"&naturals;"],[0,"&numero;"],[0,"&copysr;"],[0,"&weierp;"],[0,"&Popf;"],[0,"&Qopf;"],[0,"&realine;"],[0,"&real;"],[0,"&reals;"],[0,"&rx;"],[3,"&trade;"],[1,"&integers;"],[2,"&mho;"],[0,"&zeetrf;"],[0,"&iiota;"],[2,"&bernou;"],[0,"&Cayleys;"],[1,"&escr;"],[0,"&Escr;"],[0,"&Fouriertrf;"],[1,"&Mellintrf;"],[0,"&order;"],[0,"&alefsym;"],[0,"&beth;"],[0,"&gimel;"],[0,"&daleth;"],[12,"&CapitalDifferentialD;"],[0,"&dd;"],[0,"&ee;"],[0,"&ii;"],[10,"&frac13;"],[0,"&frac23;"],[0,"&frac15;"],[0,"&frac25;"],[0,"&frac35;"],[0,"&frac45;"],[0,"&frac16;"],[0,"&frac56;"],[0,"&frac18;"],[0,"&frac38;"],[0,"&frac58;"],[0,"&frac78;"],[49,"&larr;"],[0,"&ShortUpArrow;"],[0,"&rarr;"],[0,"&darr;"],[0,"&harr;"],[0,"&updownarrow;"],[0,"&nwarr;"],[0,"&nearr;"],[0,"&LowerRightArrow;"],[0,"&LowerLeftArrow;"],[0,"&nlarr;"],[0,"&nrarr;"],[1,{v:"&rarrw;",n:824,o:"&nrarrw;"}],[0,"&Larr;"],[0,"&Uarr;"],[0,"&Rarr;"],[0,"&Darr;"],[0,"&larrtl;"],[0,"&rarrtl;"],[0,"&LeftTeeArrow;"],[0,"&mapstoup;"],[0,"&map;"],[0,"&DownTeeArrow;"],[1,"&hookleftarrow;"],[0,"&hookrightarrow;"],[0,"&larrlp;"],[0,"&looparrowright;"],[0,"&harrw;"],[0,"&nharr;"],[1,"&lsh;"],[0,"&rsh;"],[0,"&ldsh;"],[0,"&rdsh;"],[1,"&crarr;"],[0,"&cularr;"],[0,"&curarr;"],[2,"&circlearrowleft;"],[0,"&circlearrowright;"],[0,"&leftharpoonup;"],[0,"&DownLeftVector;"],[0,"&RightUpVector;"],[0,"&LeftUpVector;"],[0,"&rharu;"],[0,"&DownRightVector;"],[0,"&dharr;"],[0,"&dharl;"],[0,"&RightArrowLeftArrow;"],[0,"&udarr;"],[0,"&LeftArrowRightArrow;"],[0,"&leftleftarrows;"],[0,"&upuparrows;"],[0,"&rightrightarrows;"],[0,"&ddarr;"],[0,"&leftrightharpoons;"],[0,"&Equilibrium;"],[0,"&nlArr;"],[0,"&nhArr;"],[0,"&nrArr;"],[0,"&DoubleLeftArrow;"],[0,"&DoubleUpArrow;"],[0,"&DoubleRightArrow;"],[0,"&dArr;"],[0,"&DoubleLeftRightArrow;"],[0,"&DoubleUpDownArrow;"],[0,"&nwArr;"],[0,"&neArr;"],[0,"&seArr;"],[0,"&swArr;"],[0,"&lAarr;"],[0,"&rAarr;"],[1,"&zigrarr;"],[6,"&larrb;"],[0,"&rarrb;"],[15,"&DownArrowUpArrow;"],[7,"&loarr;"],[0,"&roarr;"],[0,"&hoarr;"],[0,"&forall;"],[0,"&comp;"],[0,{v:"&part;",n:824,o:"&npart;"}],[0,"&exist;"],[0,"&nexist;"],[0,"&empty;"],[1,"&Del;"],[0,"&Element;"],[0,"&NotElement;"],[1,"&ni;"],[0,"&notni;"],[2,"&prod;"],[0,"&coprod;"],[0,"&sum;"],[0,"&minus;"],[0,"&MinusPlus;"],[0,"&dotplus;"],[1,"&Backslash;"],[0,"&lowast;"],[0,"&compfn;"],[1,"&radic;"],[2,"&prop;"],[0,"&infin;"],[0,"&angrt;"],[0,{v:"&ang;",n:8402,o:"&nang;"}],[0,"&angmsd;"],[0,"&angsph;"],[0,"&mid;"],[0,"&nmid;"],[0,"&DoubleVerticalBar;"],[0,"&NotDoubleVerticalBar;"],[0,"&and;"],[0,"&or;"],[0,{v:"&cap;",n:65024,o:"&caps;"}],[0,{v:"&cup;",n:65024,o:"&cups;"}],[0,"&int;"],[0,"&Int;"],[0,"&iiint;"],[0,"&conint;"],[0,"&Conint;"],[0,"&Cconint;"],[0,"&cwint;"],[0,"&ClockwiseContourIntegral;"],[0,"&awconint;"],[0,"&there4;"],[0,"&becaus;"],[0,"&ratio;"],[0,"&Colon;"],[0,"&dotminus;"],[1,"&mDDot;"],[0,"&homtht;"],[0,{v:"&sim;",n:8402,o:"&nvsim;"}],[0,{v:"&backsim;",n:817,o:"&race;"}],[0,{v:"&ac;",n:819,o:"&acE;"}],[0,"&acd;"],[0,"&VerticalTilde;"],[0,"&NotTilde;"],[0,{v:"&eqsim;",n:824,o:"&nesim;"}],[0,"&sime;"],[0,"&NotTildeEqual;"],[0,"&cong;"],[0,"&simne;"],[0,"&ncong;"],[0,"&ap;"],[0,"&nap;"],[0,"&ape;"],[0,{v:"&apid;",n:824,o:"&napid;"}],[0,"&backcong;"],[0,{v:"&asympeq;",n:8402,o:"&nvap;"}],[0,{v:"&bump;",n:824,o:"&nbump;"}],[0,{v:"&bumpe;",n:824,o:"&nbumpe;"}],[0,{v:"&doteq;",n:824,o:"&nedot;"}],[0,"&doteqdot;"],[0,"&efDot;"],[0,"&erDot;"],[0,"&Assign;"],[0,"&ecolon;"],[0,"&ecir;"],[0,"&circeq;"],[1,"&wedgeq;"],[0,"&veeeq;"],[1,"&triangleq;"],[2,"&equest;"],[0,"&ne;"],[0,{v:"&Congruent;",n:8421,o:"&bnequiv;"}],[0,"&nequiv;"],[1,{v:"&le;",n:8402,o:"&nvle;"}],[0,{v:"&ge;",n:8402,o:"&nvge;"}],[0,{v:"&lE;",n:824,o:"&nlE;"}],[0,{v:"&gE;",n:824,o:"&ngE;"}],[0,{v:"&lnE;",n:65024,o:"&lvertneqq;"}],[0,{v:"&gnE;",n:65024,o:"&gvertneqq;"}],[0,{v:"&ll;",n:new Map(restoreDiff([[824,"&nLtv;"],[7577,"&nLt;"]]))}],[0,{v:"&gg;",n:new Map(restoreDiff([[824,"&nGtv;"],[7577,"&nGt;"]]))}],[0,"&between;"],[0,"&NotCupCap;"],[0,"&nless;"],[0,"&ngt;"],[0,"&nle;"],[0,"&nge;"],[0,"&lesssim;"],[0,"&GreaterTilde;"],[0,"&nlsim;"],[0,"&ngsim;"],[0,"&LessGreater;"],[0,"&gl;"],[0,"&NotLessGreater;"],[0,"&NotGreaterLess;"],[0,"&pr;"],[0,"&sc;"],[0,"&prcue;"],[0,"&sccue;"],[0,"&PrecedesTilde;"],[0,{v:"&scsim;",n:824,o:"&NotSucceedsTilde;"}],[0,"&NotPrecedes;"],[0,"&NotSucceeds;"],[0,{v:"&sub;",n:8402,o:"&NotSubset;"}],[0,{v:"&sup;",n:8402,o:"&NotSuperset;"}],[0,"&nsub;"],[0,"&nsup;"],[0,"&sube;"],[0,"&supe;"],[0,"&NotSubsetEqual;"],[0,"&NotSupersetEqual;"],[0,{v:"&subne;",n:65024,o:"&varsubsetneq;"}],[0,{v:"&supne;",n:65024,o:"&varsupsetneq;"}],[1,"&cupdot;"],[0,"&UnionPlus;"],[0,{v:"&sqsub;",n:824,o:"&NotSquareSubset;"}],[0,{v:"&sqsup;",n:824,o:"&NotSquareSuperset;"}],[0,"&sqsube;"],[0,"&sqsupe;"],[0,{v:"&sqcap;",n:65024,o:"&sqcaps;"}],[0,{v:"&sqcup;",n:65024,o:"&sqcups;"}],[0,"&CirclePlus;"],[0,"&CircleMinus;"],[0,"&CircleTimes;"],[0,"&osol;"],[0,"&CircleDot;"],[0,"&circledcirc;"],[0,"&circledast;"],[1,"&circleddash;"],[0,"&boxplus;"],[0,"&boxminus;"],[0,"&boxtimes;"],[0,"&dotsquare;"],[0,"&RightTee;"],[0,"&dashv;"],[0,"&DownTee;"],[0,"&bot;"],[1,"&models;"],[0,"&DoubleRightTee;"],[0,"&Vdash;"],[0,"&Vvdash;"],[0,"&VDash;"],[0,"&nvdash;"],[0,"&nvDash;"],[0,"&nVdash;"],[0,"&nVDash;"],[0,"&prurel;"],[1,"&LeftTriangle;"],[0,"&RightTriangle;"],[0,{v:"&LeftTriangleEqual;",n:8402,o:"&nvltrie;"}],[0,{v:"&RightTriangleEqual;",n:8402,o:"&nvrtrie;"}],[0,"&origof;"],[0,"&imof;"],[0,"&multimap;"],[0,"&hercon;"],[0,"&intcal;"],[0,"&veebar;"],[1,"&barvee;"],[0,"&angrtvb;"],[0,"&lrtri;"],[0,"&bigwedge;"],[0,"&bigvee;"],[0,"&bigcap;"],[0,"&bigcup;"],[0,"&diam;"],[0,"&sdot;"],[0,"&sstarf;"],[0,"&divideontimes;"],[0,"&bowtie;"],[0,"&ltimes;"],[0,"&rtimes;"],[0,"&leftthreetimes;"],[0,"&rightthreetimes;"],[0,"&backsimeq;"],[0,"&curlyvee;"],[0,"&curlywedge;"],[0,"&Sub;"],[0,"&Sup;"],[0,"&Cap;"],[0,"&Cup;"],[0,"&fork;"],[0,"&epar;"],[0,"&lessdot;"],[0,"&gtdot;"],[0,{v:"&Ll;",n:824,o:"&nLl;"}],[0,{v:"&Gg;",n:824,o:"&nGg;"}],[0,{v:"&leg;",n:65024,o:"&lesg;"}],[0,{v:"&gel;",n:65024,o:"&gesl;"}],[2,"&cuepr;"],[0,"&cuesc;"],[0,"&NotPrecedesSlantEqual;"],[0,"&NotSucceedsSlantEqual;"],[0,"&NotSquareSubsetEqual;"],[0,"&NotSquareSupersetEqual;"],[2,"&lnsim;"],[0,"&gnsim;"],[0,"&precnsim;"],[0,"&scnsim;"],[0,"&nltri;"],[0,"&NotRightTriangle;"],[0,"&nltrie;"],[0,"&NotRightTriangleEqual;"],[0,"&vellip;"],[0,"&ctdot;"],[0,"&utdot;"],[0,"&dtdot;"],[0,"&disin;"],[0,"&isinsv;"],[0,"&isins;"],[0,{v:"&isindot;",n:824,o:"&notindot;"}],[0,"&notinvc;"],[0,"&notinvb;"],[1,{v:"&isinE;",n:824,o:"&notinE;"}],[0,"&nisd;"],[0,"&xnis;"],[0,"&nis;"],[0,"&notnivc;"],[0,"&notnivb;"],[6,"&barwed;"],[0,"&Barwed;"],[1,"&lceil;"],[0,"&rceil;"],[0,"&LeftFloor;"],[0,"&rfloor;"],[0,"&drcrop;"],[0,"&dlcrop;"],[0,"&urcrop;"],[0,"&ulcrop;"],[0,"&bnot;"],[1,"&profline;"],[0,"&profsurf;"],[1,"&telrec;"],[0,"&target;"],[5,"&ulcorn;"],[0,"&urcorn;"],[0,"&dlcorn;"],[0,"&drcorn;"],[2,"&frown;"],[0,"&smile;"],[9,"&cylcty;"],[0,"&profalar;"],[7,"&topbot;"],[6,"&ovbar;"],[1,"&solbar;"],[60,"&angzarr;"],[51,"&lmoustache;"],[0,"&rmoustache;"],[2,"&OverBracket;"],[0,"&bbrk;"],[0,"&bbrktbrk;"],[37,"&OverParenthesis;"],[0,"&UnderParenthesis;"],[0,"&OverBrace;"],[0,"&UnderBrace;"],[2,"&trpezium;"],[4,"&elinters;"],[59,"&blank;"],[164,"&circledS;"],[55,"&boxh;"],[1,"&boxv;"],[9,"&boxdr;"],[3,"&boxdl;"],[3,"&boxur;"],[3,"&boxul;"],[3,"&boxvr;"],[7,"&boxvl;"],[7,"&boxhd;"],[7,"&boxhu;"],[7,"&boxvh;"],[19,"&boxH;"],[0,"&boxV;"],[0,"&boxdR;"],[0,"&boxDr;"],[0,"&boxDR;"],[0,"&boxdL;"],[0,"&boxDl;"],[0,"&boxDL;"],[0,"&boxuR;"],[0,"&boxUr;"],[0,"&boxUR;"],[0,"&boxuL;"],[0,"&boxUl;"],[0,"&boxUL;"],[0,"&boxvR;"],[0,"&boxVr;"],[0,"&boxVR;"],[0,"&boxvL;"],[0,"&boxVl;"],[0,"&boxVL;"],[0,"&boxHd;"],[0,"&boxhD;"],[0,"&boxHD;"],[0,"&boxHu;"],[0,"&boxhU;"],[0,"&boxHU;"],[0,"&boxvH;"],[0,"&boxVh;"],[0,"&boxVH;"],[19,"&uhblk;"],[3,"&lhblk;"],[3,"&block;"],[8,"&blk14;"],[0,"&blk12;"],[0,"&blk34;"],[13,"&square;"],[8,"&blacksquare;"],[0,"&EmptyVerySmallSquare;"],[1,"&rect;"],[0,"&marker;"],[2,"&fltns;"],[1,"&bigtriangleup;"],[0,"&blacktriangle;"],[0,"&triangle;"],[2,"&blacktriangleright;"],[0,"&rtri;"],[3,"&bigtriangledown;"],[0,"&blacktriangledown;"],[0,"&dtri;"],[2,"&blacktriangleleft;"],[0,"&ltri;"],[6,"&loz;"],[0,"&cir;"],[32,"&tridot;"],[2,"&bigcirc;"],[8,"&ultri;"],[0,"&urtri;"],[0,"&lltri;"],[0,"&EmptySmallSquare;"],[0,"&FilledSmallSquare;"],[8,"&bigstar;"],[0,"&star;"],[7,"&phone;"],[49,"&female;"],[1,"&male;"],[29,"&spades;"],[2,"&clubs;"],[1,"&hearts;"],[0,"&diamondsuit;"],[3,"&sung;"],[2,"&flat;"],[0,"&natural;"],[0,"&sharp;"],[163,"&check;"],[3,"&cross;"],[8,"&malt;"],[21,"&sext;"],[33,"&VerticalSeparator;"],[25,"&lbbrk;"],[0,"&rbbrk;"],[84,"&bsolhsub;"],[0,"&suphsol;"],[28,"&LeftDoubleBracket;"],[0,"&RightDoubleBracket;"],[0,"&lang;"],[0,"&rang;"],[0,"&Lang;"],[0,"&Rang;"],[0,"&loang;"],[0,"&roang;"],[7,"&longleftarrow;"],[0,"&longrightarrow;"],[0,"&longleftrightarrow;"],[0,"&DoubleLongLeftArrow;"],[0,"&DoubleLongRightArrow;"],[0,"&DoubleLongLeftRightArrow;"],[1,"&longmapsto;"],[2,"&dzigrarr;"],[258,"&nvlArr;"],[0,"&nvrArr;"],[0,"&nvHarr;"],[0,"&Map;"],[6,"&lbarr;"],[0,"&bkarow;"],[0,"&lBarr;"],[0,"&dbkarow;"],[0,"&drbkarow;"],[0,"&DDotrahd;"],[0,"&UpArrowBar;"],[0,"&DownArrowBar;"],[2,"&Rarrtl;"],[2,"&latail;"],[0,"&ratail;"],[0,"&lAtail;"],[0,"&rAtail;"],[0,"&larrfs;"],[0,"&rarrfs;"],[0,"&larrbfs;"],[0,"&rarrbfs;"],[2,"&nwarhk;"],[0,"&nearhk;"],[0,"&hksearow;"],[0,"&hkswarow;"],[0,"&nwnear;"],[0,"&nesear;"],[0,"&seswar;"],[0,"&swnwar;"],[8,{v:"&rarrc;",n:824,o:"&nrarrc;"}],[1,"&cudarrr;"],[0,"&ldca;"],[0,"&rdca;"],[0,"&cudarrl;"],[0,"&larrpl;"],[2,"&curarrm;"],[0,"&cularrp;"],[7,"&rarrpl;"],[2,"&harrcir;"],[0,"&Uarrocir;"],[0,"&lurdshar;"],[0,"&ldrushar;"],[2,"&LeftRightVector;"],[0,"&RightUpDownVector;"],[0,"&DownLeftRightVector;"],[0,"&LeftUpDownVector;"],[0,"&LeftVectorBar;"],[0,"&RightVectorBar;"],[0,"&RightUpVectorBar;"],[0,"&RightDownVectorBar;"],[0,"&DownLeftVectorBar;"],[0,"&DownRightVectorBar;"],[0,"&LeftUpVectorBar;"],[0,"&LeftDownVectorBar;"],[0,"&LeftTeeVector;"],[0,"&RightTeeVector;"],[0,"&RightUpTeeVector;"],[0,"&RightDownTeeVector;"],[0,"&DownLeftTeeVector;"],[0,"&DownRightTeeVector;"],[0,"&LeftUpTeeVector;"],[0,"&LeftDownTeeVector;"],[0,"&lHar;"],[0,"&uHar;"],[0,"&rHar;"],[0,"&dHar;"],[0,"&luruhar;"],[0,"&ldrdhar;"],[0,"&ruluhar;"],[0,"&rdldhar;"],[0,"&lharul;"],[0,"&llhard;"],[0,"&rharul;"],[0,"&lrhard;"],[0,"&udhar;"],[0,"&duhar;"],[0,"&RoundImplies;"],[0,"&erarr;"],[0,"&simrarr;"],[0,"&larrsim;"],[0,"&rarrsim;"],[0,"&rarrap;"],[0,"&ltlarr;"],[1,"&gtrarr;"],[0,"&subrarr;"],[1,"&suplarr;"],[0,"&lfisht;"],[0,"&rfisht;"],[0,"&ufisht;"],[0,"&dfisht;"],[5,"&lopar;"],[0,"&ropar;"],[4,"&lbrke;"],[0,"&rbrke;"],[0,"&lbrkslu;"],[0,"&rbrksld;"],[0,"&lbrksld;"],[0,"&rbrkslu;"],[0,"&langd;"],[0,"&rangd;"],[0,"&lparlt;"],[0,"&rpargt;"],[0,"&gtlPar;"],[0,"&ltrPar;"],[3,"&vzigzag;"],[1,"&vangrt;"],[0,"&angrtvbd;"],[6,"&ange;"],[0,"&range;"],[0,"&dwangle;"],[0,"&uwangle;"],[0,"&angmsdaa;"],[0,"&angmsdab;"],[0,"&angmsdac;"],[0,"&angmsdad;"],[0,"&angmsdae;"],[0,"&angmsdaf;"],[0,"&angmsdag;"],[0,"&angmsdah;"],[0,"&bemptyv;"],[0,"&demptyv;"],[0,"&cemptyv;"],[0,"&raemptyv;"],[0,"&laemptyv;"],[0,"&ohbar;"],[0,"&omid;"],[0,"&opar;"],[1,"&operp;"],[1,"&olcross;"],[0,"&odsold;"],[1,"&olcir;"],[0,"&ofcir;"],[0,"&olt;"],[0,"&ogt;"],[0,"&cirscir;"],[0,"&cirE;"],[0,"&solb;"],[0,"&bsolb;"],[3,"&boxbox;"],[3,"&trisb;"],[0,"&rtriltri;"],[0,{v:"&LeftTriangleBar;",n:824,o:"&NotLeftTriangleBar;"}],[0,{v:"&RightTriangleBar;",n:824,o:"&NotRightTriangleBar;"}],[11,"&iinfin;"],[0,"&infintie;"],[0,"&nvinfin;"],[4,"&eparsl;"],[0,"&smeparsl;"],[0,"&eqvparsl;"],[5,"&blacklozenge;"],[8,"&RuleDelayed;"],[1,"&dsol;"],[9,"&bigodot;"],[0,"&bigoplus;"],[0,"&bigotimes;"],[1,"&biguplus;"],[1,"&bigsqcup;"],[5,"&iiiint;"],[0,"&fpartint;"],[2,"&cirfnint;"],[0,"&awint;"],[0,"&rppolint;"],[0,"&scpolint;"],[0,"&npolint;"],[0,"&pointint;"],[0,"&quatint;"],[0,"&intlarhk;"],[10,"&pluscir;"],[0,"&plusacir;"],[0,"&simplus;"],[0,"&plusdu;"],[0,"&plussim;"],[0,"&plustwo;"],[1,"&mcomma;"],[0,"&minusdu;"],[2,"&loplus;"],[0,"&roplus;"],[0,"&Cross;"],[0,"&timesd;"],[0,"&timesbar;"],[1,"&smashp;"],[0,"&lotimes;"],[0,"&rotimes;"],[0,"&otimesas;"],[0,"&Otimes;"],[0,"&odiv;"],[0,"&triplus;"],[0,"&triminus;"],[0,"&tritime;"],[0,"&intprod;"],[2,"&amalg;"],[0,"&capdot;"],[1,"&ncup;"],[0,"&ncap;"],[0,"&capand;"],[0,"&cupor;"],[0,"&cupcap;"],[0,"&capcup;"],[0,"&cupbrcap;"],[0,"&capbrcup;"],[0,"&cupcup;"],[0,"&capcap;"],[0,"&ccups;"],[0,"&ccaps;"],[2,"&ccupssm;"],[2,"&And;"],[0,"&Or;"],[0,"&andand;"],[0,"&oror;"],[0,"&orslope;"],[0,"&andslope;"],[1,"&andv;"],[0,"&orv;"],[0,"&andd;"],[0,"&ord;"],[1,"&wedbar;"],[6,"&sdote;"],[3,"&simdot;"],[2,{v:"&congdot;",n:824,o:"&ncongdot;"}],[0,"&easter;"],[0,"&apacir;"],[0,{v:"&apE;",n:824,o:"&napE;"}],[0,"&eplus;"],[0,"&pluse;"],[0,"&Esim;"],[0,"&Colone;"],[0,"&Equal;"],[1,"&ddotseq;"],[0,"&equivDD;"],[0,"&ltcir;"],[0,"&gtcir;"],[0,"&ltquest;"],[0,"&gtquest;"],[0,{v:"&leqslant;",n:824,o:"&nleqslant;"}],[0,{v:"&geqslant;",n:824,o:"&ngeqslant;"}],[0,"&lesdot;"],[0,"&gesdot;"],[0,"&lesdoto;"],[0,"&gesdoto;"],[0,"&lesdotor;"],[0,"&gesdotol;"],[0,"&lap;"],[0,"&gap;"],[0,"&lne;"],[0,"&gne;"],[0,"&lnap;"],[0,"&gnap;"],[0,"&lEg;"],[0,"&gEl;"],[0,"&lsime;"],[0,"&gsime;"],[0,"&lsimg;"],[0,"&gsiml;"],[0,"&lgE;"],[0,"&glE;"],[0,"&lesges;"],[0,"&gesles;"],[0,"&els;"],[0,"&egs;"],[0,"&elsdot;"],[0,"&egsdot;"],[0,"&el;"],[0,"&eg;"],[2,"&siml;"],[0,"&simg;"],[0,"&simlE;"],[0,"&simgE;"],[0,{v:"&LessLess;",n:824,o:"&NotNestedLessLess;"}],[0,{v:"&GreaterGreater;",n:824,o:"&NotNestedGreaterGreater;"}],[1,"&glj;"],[0,"&gla;"],[0,"&ltcc;"],[0,"&gtcc;"],[0,"&lescc;"],[0,"&gescc;"],[0,"&smt;"],[0,"&lat;"],[0,{v:"&smte;",n:65024,o:"&smtes;"}],[0,{v:"&late;",n:65024,o:"&lates;"}],[0,"&bumpE;"],[0,{v:"&PrecedesEqual;",n:824,o:"&NotPrecedesEqual;"}],[0,{v:"&sce;",n:824,o:"&NotSucceedsEqual;"}],[2,"&prE;"],[0,"&scE;"],[0,"&precneqq;"],[0,"&scnE;"],[0,"&prap;"],[0,"&scap;"],[0,"&precnapprox;"],[0,"&scnap;"],[0,"&Pr;"],[0,"&Sc;"],[0,"&subdot;"],[0,"&supdot;"],[0,"&subplus;"],[0,"&supplus;"],[0,"&submult;"],[0,"&supmult;"],[0,"&subedot;"],[0,"&supedot;"],[0,{v:"&subE;",n:824,o:"&nsubE;"}],[0,{v:"&supE;",n:824,o:"&nsupE;"}],[0,"&subsim;"],[0,"&supsim;"],[2,{v:"&subnE;",n:65024,o:"&varsubsetneqq;"}],[0,{v:"&supnE;",n:65024,o:"&varsupsetneqq;"}],[2,"&csub;"],[0,"&csup;"],[0,"&csube;"],[0,"&csupe;"],[0,"&subsup;"],[0,"&supsub;"],[0,"&subsub;"],[0,"&supsup;"],[0,"&suphsub;"],[0,"&supdsub;"],[0,"&forkv;"],[0,"&topfork;"],[0,"&mlcp;"],[8,"&Dashv;"],[1,"&Vdashl;"],[0,"&Barv;"],[0,"&vBar;"],[0,"&vBarv;"],[1,"&Vbar;"],[0,"&Not;"],[0,"&bNot;"],[0,"&rnmid;"],[0,"&cirmid;"],[0,"&midcir;"],[0,"&topcir;"],[0,"&nhpar;"],[0,"&parsim;"],[9,{v:"&parsl;",n:8421,o:"&nparsl;"}],[44343,{n:new Map(restoreDiff([[56476,"&Ascr;"],[1,"&Cscr;"],[0,"&Dscr;"],[2,"&Gscr;"],[2,"&Jscr;"],[0,"&Kscr;"],[2,"&Nscr;"],[0,"&Oscr;"],[0,"&Pscr;"],[0,"&Qscr;"],[1,"&Sscr;"],[0,"&Tscr;"],[0,"&Uscr;"],[0,"&Vscr;"],[0,"&Wscr;"],[0,"&Xscr;"],[0,"&Yscr;"],[0,"&Zscr;"],[0,"&ascr;"],[0,"&bscr;"],[0,"&cscr;"],[0,"&dscr;"],[1,"&fscr;"],[1,"&hscr;"],[0,"&iscr;"],[0,"&jscr;"],[0,"&kscr;"],[0,"&lscr;"],[0,"&mscr;"],[0,"&nscr;"],[1,"&pscr;"],[0,"&qscr;"],[0,"&rscr;"],[0,"&sscr;"],[0,"&tscr;"],[0,"&uscr;"],[0,"&vscr;"],[0,"&wscr;"],[0,"&xscr;"],[0,"&yscr;"],[0,"&zscr;"],[52,"&Afr;"],[0,"&Bfr;"],[1,"&Dfr;"],[0,"&Efr;"],[0,"&Ffr;"],[0,"&Gfr;"],[2,"&Jfr;"],[0,"&Kfr;"],[0,"&Lfr;"],[0,"&Mfr;"],[0,"&Nfr;"],[0,"&Ofr;"],[0,"&Pfr;"],[0,"&Qfr;"],[1,"&Sfr;"],[0,"&Tfr;"],[0,"&Ufr;"],[0,"&Vfr;"],[0,"&Wfr;"],[0,"&Xfr;"],[0,"&Yfr;"],[1,"&afr;"],[0,"&bfr;"],[0,"&cfr;"],[0,"&dfr;"],[0,"&efr;"],[0,"&ffr;"],[0,"&gfr;"],[0,"&hfr;"],[0,"&ifr;"],[0,"&jfr;"],[0,"&kfr;"],[0,"&lfr;"],[0,"&mfr;"],[0,"&nfr;"],[0,"&ofr;"],[0,"&pfr;"],[0,"&qfr;"],[0,"&rfr;"],[0,"&sfr;"],[0,"&tfr;"],[0,"&ufr;"],[0,"&vfr;"],[0,"&wfr;"],[0,"&xfr;"],[0,"&yfr;"],[0,"&zfr;"],[0,"&Aopf;"],[0,"&Bopf;"],[1,"&Dopf;"],[0,"&Eopf;"],[0,"&Fopf;"],[0,"&Gopf;"],[1,"&Iopf;"],[0,"&Jopf;"],[0,"&Kopf;"],[0,"&Lopf;"],[0,"&Mopf;"],[1,"&Oopf;"],[3,"&Sopf;"],[0,"&Topf;"],[0,"&Uopf;"],[0,"&Vopf;"],[0,"&Wopf;"],[0,"&Xopf;"],[0,"&Yopf;"],[1,"&aopf;"],[0,"&bopf;"],[0,"&copf;"],[0,"&dopf;"],[0,"&eopf;"],[0,"&fopf;"],[0,"&gopf;"],[0,"&hopf;"],[0,"&iopf;"],[0,"&jopf;"],[0,"&kopf;"],[0,"&lopf;"],[0,"&mopf;"],[0,"&nopf;"],[0,"&oopf;"],[0,"&popf;"],[0,"&qopf;"],[0,"&ropf;"],[0,"&sopf;"],[0,"&topf;"],[0,"&uopf;"],[0,"&vopf;"],[0,"&wopf;"],[0,"&xopf;"],[0,"&yopf;"],[0,"&zopf;"]]))}],[8906,"&fflig;"],[0,"&filig;"],[0,"&fllig;"],[0,"&ffilig;"],[0,"&ffllig;"]]))},8467:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.decodeXMLStrict=r.decodeHTML5Strict=r.decodeHTML4Strict=r.decodeHTML5=r.decodeHTML4=r.decodeHTMLAttribute=r.decodeHTMLStrict=r.decodeHTML=r.decodeXML=r.DecodingMode=r.EntityDecoder=r.encodeHTML5=r.encodeHTML4=r.encodeNonAsciiHTML=r.encodeHTML=r.escapeText=r.escapeAttribute=r.escapeUTF8=r.escape=r.encodeXML=r.encode=r.decodeStrict=r.decode=r.EncodingMode=r.EntityLevel=void 0;var i=a(1469);var n=a(6549);var o=a(6104);var d;(function(t){t[t["XML"]=0]="XML";t[t["HTML"]=1]="HTML"})(d=r.EntityLevel||(r.EntityLevel={}));var p;(function(t){t[t["UTF8"]=0]="UTF8";t[t["ASCII"]=1]="ASCII";t[t["Extensive"]=2]="Extensive";t[t["Attribute"]=3]="Attribute";t[t["Text"]=4]="Text"})(p=r.EncodingMode||(r.EncodingMode={}));function decode(t,r){if(r===void 0){r=d.XML}var a=typeof r==="number"?r:r.level;if(a===d.HTML){var n=typeof r==="object"?r.mode:undefined;return(0,i.decodeHTML)(t,n)}return(0,i.decodeXML)(t)}r.decode=decode;function decodeStrict(t,r){var a;if(r===void 0){r=d.XML}var n=typeof r==="number"?{level:r}:r;(a=n.mode)!==null&&a!==void 0?a:n.mode=i.DecodingMode.Strict;return decode(t,n)}r.decodeStrict=decodeStrict;function encode(t,r){if(r===void 0){r=d.XML}var a=typeof r==="number"?{level:r}:r;if(a.mode===p.UTF8)return(0,o.escapeUTF8)(t);if(a.mode===p.Attribute)return(0,o.escapeAttribute)(t);if(a.mode===p.Text)return(0,o.escapeText)(t);if(a.level===d.HTML){if(a.mode===p.ASCII){return(0,n.encodeNonAsciiHTML)(t)}return(0,n.encodeHTML)(t)}return(0,o.encodeXML)(t)}r.encode=encode;var l=a(6104);Object.defineProperty(r,"encodeXML",{enumerable:true,get:function(){return l.encodeXML}});Object.defineProperty(r,"escape",{enumerable:true,get:function(){return l.escape}});Object.defineProperty(r,"escapeUTF8",{enumerable:true,get:function(){return l.escapeUTF8}});Object.defineProperty(r,"escapeAttribute",{enumerable:true,get:function(){return l.escapeAttribute}});Object.defineProperty(r,"escapeText",{enumerable:true,get:function(){return l.escapeText}});var s=a(6549);Object.defineProperty(r,"encodeHTML",{enumerable:true,get:function(){return s.encodeHTML}});Object.defineProperty(r,"encodeNonAsciiHTML",{enumerable:true,get:function(){return s.encodeNonAsciiHTML}});Object.defineProperty(r,"encodeHTML4",{enumerable:true,get:function(){return s.encodeHTML}});Object.defineProperty(r,"encodeHTML5",{enumerable:true,get:function(){return s.encodeHTML}});var u=a(1469);Object.defineProperty(r,"EntityDecoder",{enumerable:true,get:function(){return u.EntityDecoder}});Object.defineProperty(r,"DecodingMode",{enumerable:true,get:function(){return u.DecodingMode}});Object.defineProperty(r,"decodeXML",{enumerable:true,get:function(){return u.decodeXML}});Object.defineProperty(r,"decodeHTML",{enumerable:true,get:function(){return u.decodeHTML}});Object.defineProperty(r,"decodeHTMLStrict",{enumerable:true,get:function(){return u.decodeHTMLStrict}});Object.defineProperty(r,"decodeHTMLAttribute",{enumerable:true,get:function(){return u.decodeHTMLAttribute}});Object.defineProperty(r,"decodeHTML4",{enumerable:true,get:function(){return u.decodeHTML}});Object.defineProperty(r,"decodeHTML5",{enumerable:true,get:function(){return u.decodeHTML}});Object.defineProperty(r,"decodeHTML4Strict",{enumerable:true,get:function(){return u.decodeHTMLStrict}});Object.defineProperty(r,"decodeHTML5Strict",{enumerable:true,get:function(){return u.decodeHTMLStrict}});Object.defineProperty(r,"decodeXMLStrict",{enumerable:true,get:function(){return u.decodeXML}})},1528:function(t,r,a){t=a.nmd(t);\n/*! https://mths.be/he v1.2.0 by @mathias | MIT license */(function(a){var i=true&&r;var n=true&&t&&t.exports==i&&t;var o=typeof global=="object"&&global;if(o.global===o||o.window===o){a=o}var d=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;var p=/[\\x01-\\x7F]/g;var l=/[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;var s=/<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;var u={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\\t":"Tab","\\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","\'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",\'"\':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon","ˆ":"circ","ˇ":"caron","°":"deg","©":"copy","®":"reg","℗":"copysr","℘":"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78","𝒶":"ascr","𝕒":"aopf","𝔞":"afr","𝔸":"Aopf","𝔄":"Afr","𝒜":"Ascr","ª":"ordf","á":"aacute","Á":"Aacute","à":"agrave","À":"Agrave","ă":"abreve","Ă":"Abreve","â":"acirc","Â":"Acirc","å":"aring","Å":"angst","ä":"auml","Ä":"Auml","ã":"atilde","Ã":"Atilde","ą":"aogon","Ą":"Aogon","ā":"amacr","Ā":"Amacr","æ":"aelig","Æ":"AElig","𝒷":"bscr","𝕓":"bopf","𝔟":"bfr","𝔹":"Bopf","ℬ":"Bscr","𝔅":"Bfr","𝔠":"cfr","𝒸":"cscr","𝕔":"copf","ℭ":"Cfr","𝒞":"Cscr","ℂ":"Copf","ć":"cacute","Ć":"Cacute","ĉ":"ccirc","Ĉ":"Ccirc","č":"ccaron","Č":"Ccaron","ċ":"cdot","Ċ":"Cdot","ç":"ccedil","Ç":"Ccedil","℅":"incare","𝔡":"dfr","ⅆ":"dd","𝕕":"dopf","𝒹":"dscr","𝒟":"Dscr","𝔇":"Dfr","ⅅ":"DD","𝔻":"Dopf","ď":"dcaron","Ď":"Dcaron","đ":"dstrok","Đ":"Dstrok","ð":"eth","Ð":"ETH","ⅇ":"ee","ℯ":"escr","𝔢":"efr","𝕖":"eopf","ℰ":"Escr","𝔈":"Efr","𝔼":"Eopf","é":"eacute","É":"Eacute","è":"egrave","È":"Egrave","ê":"ecirc","Ê":"Ecirc","ě":"ecaron","Ě":"Ecaron","ë":"euml","Ë":"Euml","ė":"edot","Ė":"Edot","ę":"eogon","Ę":"Eogon","ē":"emacr","Ē":"Emacr","𝔣":"ffr","𝕗":"fopf","𝒻":"fscr","𝔉":"Ffr","𝔽":"Fopf","ℱ":"Fscr","ﬀ":"fflig","ﬃ":"ffilig","ﬄ":"ffllig","ﬁ":"filig",fj:"fjlig","ﬂ":"fllig","ƒ":"fnof","ℊ":"gscr","𝕘":"gopf","𝔤":"gfr","𝒢":"Gscr","𝔾":"Gopf","𝔊":"Gfr","ǵ":"gacute","ğ":"gbreve","Ğ":"Gbreve","ĝ":"gcirc","Ĝ":"Gcirc","ġ":"gdot","Ġ":"Gdot","Ģ":"Gcedil","𝔥":"hfr","ℎ":"planckh","𝒽":"hscr","𝕙":"hopf","ℋ":"Hscr","ℌ":"Hfr","ℍ":"Hopf","ĥ":"hcirc","Ĥ":"Hcirc","ℏ":"hbar","ħ":"hstrok","Ħ":"Hstrok","𝕚":"iopf","𝔦":"ifr","𝒾":"iscr","ⅈ":"ii","𝕀":"Iopf","ℐ":"Iscr","ℑ":"Im","í":"iacute","Í":"Iacute","ì":"igrave","Ì":"Igrave","î":"icirc","Î":"Icirc","ï":"iuml","Ï":"Iuml","ĩ":"itilde","Ĩ":"Itilde","İ":"Idot","į":"iogon","Į":"Iogon","ī":"imacr","Ī":"Imacr","ĳ":"ijlig","Ĳ":"IJlig","ı":"imath","𝒿":"jscr","𝕛":"jopf","𝔧":"jfr","𝒥":"Jscr","𝔍":"Jfr","𝕁":"Jopf","ĵ":"jcirc","Ĵ":"Jcirc","ȷ":"jmath","𝕜":"kopf","𝓀":"kscr","𝔨":"kfr","𝒦":"Kscr","𝕂":"Kopf","𝔎":"Kfr","ķ":"kcedil","Ķ":"Kcedil","𝔩":"lfr","𝓁":"lscr","ℓ":"ell","𝕝":"lopf","ℒ":"Lscr","𝔏":"Lfr","𝕃":"Lopf","ĺ":"lacute","Ĺ":"Lacute","ľ":"lcaron","Ľ":"Lcaron","ļ":"lcedil","Ļ":"Lcedil","ł":"lstrok","Ł":"Lstrok","ŀ":"lmidot","Ŀ":"Lmidot","𝔪":"mfr","𝕞":"mopf","𝓂":"mscr","𝔐":"Mfr","𝕄":"Mopf","ℳ":"Mscr","𝔫":"nfr","𝕟":"nopf","𝓃":"nscr","ℕ":"Nopf","𝒩":"Nscr","𝔑":"Nfr","ń":"nacute","Ń":"Nacute","ň":"ncaron","Ň":"Ncaron","ñ":"ntilde","Ñ":"Ntilde","ņ":"ncedil","Ņ":"Ncedil","№":"numero","ŋ":"eng","Ŋ":"ENG","𝕠":"oopf","𝔬":"ofr","ℴ":"oscr","𝒪":"Oscr","𝔒":"Ofr","𝕆":"Oopf","º":"ordm","ó":"oacute","Ó":"Oacute","ò":"ograve","Ò":"Ograve","ô":"ocirc","Ô":"Ocirc","ö":"ouml","Ö":"Ouml","ő":"odblac","Ő":"Odblac","õ":"otilde","Õ":"Otilde","ø":"oslash","Ø":"Oslash","ō":"omacr","Ō":"Omacr","œ":"oelig","Œ":"OElig","𝔭":"pfr","𝓅":"pscr","𝕡":"popf","ℙ":"Popf","𝔓":"Pfr","𝒫":"Pscr","𝕢":"qopf","𝔮":"qfr","𝓆":"qscr","𝒬":"Qscr","𝔔":"Qfr","ℚ":"Qopf","ĸ":"kgreen","𝔯":"rfr","𝕣":"ropf","𝓇":"rscr","ℛ":"Rscr","ℜ":"Re","ℝ":"Ropf","ŕ":"racute","Ŕ":"Racute","ř":"rcaron","Ř":"Rcaron","ŗ":"rcedil","Ŗ":"Rcedil","𝕤":"sopf","𝓈":"sscr","𝔰":"sfr","𝕊":"Sopf","𝔖":"Sfr","𝒮":"Sscr","Ⓢ":"oS","ś":"sacute","Ś":"Sacute","ŝ":"scirc","Ŝ":"Scirc","š":"scaron","Š":"Scaron","ş":"scedil","Ş":"Scedil","ß":"szlig","𝔱":"tfr","𝓉":"tscr","𝕥":"topf","𝒯":"Tscr","𝔗":"Tfr","𝕋":"Topf","ť":"tcaron","Ť":"Tcaron","ţ":"tcedil","Ţ":"Tcedil","™":"trade","ŧ":"tstrok","Ŧ":"Tstrok","𝓊":"uscr","𝕦":"uopf","𝔲":"ufr","𝕌":"Uopf","𝔘":"Ufr","𝒰":"Uscr","ú":"uacute","Ú":"Uacute","ù":"ugrave","Ù":"Ugrave","ŭ":"ubreve","Ŭ":"Ubreve","û":"ucirc","Û":"Ucirc","ů":"uring","Ů":"Uring","ü":"uuml","Ü":"Uuml","ű":"udblac","Ű":"Udblac","ũ":"utilde","Ũ":"Utilde","ų":"uogon","Ų":"Uogon","ū":"umacr","Ū":"Umacr","𝔳":"vfr","𝕧":"vopf","𝓋":"vscr","𝔙":"Vfr","𝕍":"Vopf","𝒱":"Vscr","𝕨":"wopf","𝓌":"wscr","𝔴":"wfr","𝒲":"Wscr","𝕎":"Wopf","𝔚":"Wfr","ŵ":"wcirc","Ŵ":"Wcirc","𝔵":"xfr","𝓍":"xscr","𝕩":"xopf","𝕏":"Xopf","𝔛":"Xfr","𝒳":"Xscr","𝔶":"yfr","𝓎":"yscr","𝕪":"yopf","𝒴":"Yscr","𝔜":"Yfr","𝕐":"Yopf","ý":"yacute","Ý":"Yacute","ŷ":"ycirc","Ŷ":"Ycirc","ÿ":"yuml","Ÿ":"Yuml","𝓏":"zscr","𝔷":"zfr","𝕫":"zopf","ℨ":"Zfr","ℤ":"Zopf","𝒵":"Zscr","ź":"zacute","Ź":"Zacute","ž":"zcaron","Ž":"Zcaron","ż":"zdot","Ż":"Zdot","Ƶ":"imped","þ":"thorn","Þ":"THORN","ŉ":"napos","α":"alpha","Α":"Alpha","β":"beta","Β":"Beta","γ":"gamma","Γ":"Gamma","δ":"delta","Δ":"Delta","ε":"epsi","ϵ":"epsiv","Ε":"Epsilon","ϝ":"gammad","Ϝ":"Gammad","ζ":"zeta","Ζ":"Zeta","η":"eta","Η":"Eta","θ":"theta","ϑ":"thetav","Θ":"Theta","ι":"iota","Ι":"Iota","κ":"kappa","ϰ":"kappav","Κ":"Kappa","λ":"lambda","Λ":"Lambda","μ":"mu","µ":"micro","Μ":"Mu","ν":"nu","Ν":"Nu","ξ":"xi","Ξ":"Xi","ο":"omicron","Ο":"Omicron","π":"pi","ϖ":"piv","Π":"Pi","ρ":"rho","ϱ":"rhov","Ρ":"Rho","σ":"sigma","Σ":"Sigma","ς":"sigmaf","τ":"tau","Τ":"Tau","υ":"upsi","Υ":"Upsilon","ϒ":"Upsi","φ":"phi","ϕ":"phiv","Φ":"Phi","χ":"chi","Χ":"Chi","ψ":"psi","Ψ":"Psi","ω":"omega","Ω":"ohm","а":"acy","А":"Acy","б":"bcy","Б":"Bcy","в":"vcy","В":"Vcy","г":"gcy","Г":"Gcy","ѓ":"gjcy","Ѓ":"GJcy","д":"dcy","Д":"Dcy","ђ":"djcy","Ђ":"DJcy","е":"iecy","Е":"IEcy","ё":"iocy","Ё":"IOcy","є":"jukcy","Є":"Jukcy","ж":"zhcy","Ж":"ZHcy","з":"zcy","З":"Zcy","ѕ":"dscy","Ѕ":"DScy","и":"icy","И":"Icy","і":"iukcy","І":"Iukcy","ї":"yicy","Ї":"YIcy","й":"jcy","Й":"Jcy","ј":"jsercy","Ј":"Jsercy","к":"kcy","К":"Kcy","ќ":"kjcy","Ќ":"KJcy","л":"lcy","Л":"Lcy","љ":"ljcy","Љ":"LJcy","м":"mcy","М":"Mcy","н":"ncy","Н":"Ncy","њ":"njcy","Њ":"NJcy","о":"ocy","О":"Ocy","п":"pcy","П":"Pcy","р":"rcy","Р":"Rcy","с":"scy","С":"Scy","т":"tcy","Т":"Tcy","ћ":"tshcy","Ћ":"TSHcy","у":"ucy","У":"Ucy","ў":"ubrcy","Ў":"Ubrcy","ф":"fcy","Ф":"Fcy","х":"khcy","Х":"KHcy","ц":"tscy","Ц":"TScy","ч":"chcy","Ч":"CHcy","џ":"dzcy","Џ":"DZcy","ш":"shcy","Ш":"SHcy","щ":"shchcy","Щ":"SHCHcy","ъ":"hardcy","Ъ":"HARDcy","ы":"ycy","Ы":"Ycy","ь":"softcy","Ь":"SOFTcy","э":"ecy","Э":"Ecy","ю":"yucy","Ю":"YUcy","я":"yacy","Я":"YAcy","ℵ":"aleph","ℶ":"beth","ℷ":"gimel","ℸ":"daleth"};var c=/["&\'<>`]/g;var m={\'"\':"&quot;","&":"&amp;","\'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"};var h=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;var v=/[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;var g=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;var b={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"\'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:\'"\',QUOT:\'"\',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"};var y={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:\'"\',QUOT:\'"\',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"};var w={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"};var S=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];var _=String.fromCharCode;var T={};var C=T.hasOwnProperty;var has=function(t,r){return C.call(t,r)};var contains=function(t,r){var a=-1;var i=t.length;while(++a<i){if(t[a]==r){return true}}return false};var merge=function(t,r){if(!t){return r}var a={};var i;for(i in r){a[i]=has(t,i)?t[i]:r[i]}return a};var codePointToSymbol=function(t,r){var a="";if(t>=55296&&t<=57343||t>1114111){if(r){parseError("character reference outside the permissible Unicode range")}return"�"}if(has(w,t)){if(r){parseError("disallowed character reference")}return w[t]}if(r&&contains(S,t)){parseError("disallowed character reference")}if(t>65535){t-=65536;a+=_(t>>>10&1023|55296);t=56320|t&1023}a+=_(t);return a};var hexEscape=function(t){return"&#x"+t.toString(16).toUpperCase()+";"};var decEscape=function(t){return"&#"+t+";"};var parseError=function(t){throw Error("Parse error: "+t)};var encode=function(t,r){r=merge(r,encode.options);var a=r.strict;if(a&&v.test(t)){parseError("forbidden code point")}var i=r.encodeEverything;var n=r.useNamedReferences;var o=r.allowUnsafeSymbols;var m=r.decimal?decEscape:hexEscape;var escapeBmpSymbol=function(t){return m(t.charCodeAt(0))};if(i){t=t.replace(p,(function(t){if(n&&has(u,t)){return"&"+u[t]+";"}return escapeBmpSymbol(t)}));if(n){t=t.replace(/&gt;\\u20D2/g,"&nvgt;").replace(/&lt;\\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")}if(n){t=t.replace(s,(function(t){return"&"+u[t]+";"}))}}else if(n){if(!o){t=t.replace(c,(function(t){return"&"+u[t]+";"}))}t=t.replace(/&gt;\\u20D2/g,"&nvgt;").replace(/&lt;\\u20D2/g,"&nvlt;");t=t.replace(s,(function(t){return"&"+u[t]+";"}))}else if(!o){t=t.replace(c,escapeBmpSymbol)}return t.replace(d,(function(t){var r=t.charCodeAt(0);var a=t.charCodeAt(1);var i=(r-55296)*1024+a-56320+65536;return m(i)})).replace(l,escapeBmpSymbol)};encode.options={allowUnsafeSymbols:false,encodeEverything:false,strict:false,useNamedReferences:false,decimal:false};var decode=function(t,r){r=merge(r,decode.options);var a=r.strict;if(a&&h.test(t)){parseError("malformed character reference")}return t.replace(g,(function(t,i,n,o,d,p,l,s,u){var c;var m;var h;var v;var g;var w;if(i){g=i;return b[g]}if(n){g=n;w=o;if(w&&r.isAttributeValue){if(a&&w=="="){parseError("`&` did not start a character reference")}return t}else{if(a){parseError("named character reference was not terminated by a semicolon")}return y[g]+(w||"")}}if(d){h=d;m=p;if(a&&!m){parseError("character reference was not terminated by a semicolon")}c=parseInt(h,10);return codePointToSymbol(c,a)}if(l){v=l;m=s;if(a&&!m){parseError("character reference was not terminated by a semicolon")}c=parseInt(v,16);return codePointToSymbol(c,a)}if(a){parseError("named character reference was not terminated by a semicolon")}return t}))};decode.options={isAttributeValue:false,strict:false};var escape=function(t){return t.replace(c,(function(t){return m[t]}))};var D={version:"1.2.0",encode:encode,decode:decode,escape:escape,unescape:decode};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd){define((function(){return D}))}else if(i&&!i.nodeType){if(n){n.exports=D}else{for(var R in D){has(D,R)&&(i[R]=D[R])}}}else{a.he=D}})(this)},7666:(t,r,a)=>{\n/*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */\nif(!globalThis.DOMException){try{const{MessageChannel:t}=a(8167),r=(new t).port1,i=new ArrayBuffer;r.postMessage(i,[i,i])}catch(t){t.constructor.name==="DOMException"&&(globalThis.DOMException=t.constructor)}}t.exports=globalThis.DOMException},6705:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function _interopDefault(t){return t&&typeof t==="object"&&"default"in t?t["default"]:t}var i=_interopDefault(a(2203));var n=_interopDefault(a(8611));var o=_interopDefault(a(7016));var d=_interopDefault(a(2686));var p=_interopDefault(a(5692));var l=_interopDefault(a(3106));const s=i.Readable;const u=Symbol("buffer");const c=Symbol("type");class Blob{constructor(){this[c]="";const t=arguments[0];const r=arguments[1];const a=[];let i=0;if(t){const r=t;const n=Number(r.length);for(let t=0;t<n;t++){const n=r[t];let o;if(n instanceof Buffer){o=n}else if(ArrayBuffer.isView(n)){o=Buffer.from(n.buffer,n.byteOffset,n.byteLength)}else if(n instanceof ArrayBuffer){o=Buffer.from(n)}else if(n instanceof Blob){o=n[u]}else{o=Buffer.from(typeof n==="string"?n:String(n))}i+=o.length;a.push(o)}}this[u]=Buffer.concat(a);let n=r&&r.type!==undefined&&String(r.type).toLowerCase();if(n&&!/[^\\u0020-\\u007E]/.test(n)){this[c]=n}}get size(){return this[u].length}get type(){return this[c]}text(){return Promise.resolve(this[u].toString())}arrayBuffer(){const t=this[u];const r=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength);return Promise.resolve(r)}stream(){const t=new s;t._read=function(){};t.push(this[u]);t.push(null);return t}toString(){return"[object Blob]"}slice(){const t=this.size;const r=arguments[0];const a=arguments[1];let i,n;if(r===undefined){i=0}else if(r<0){i=Math.max(t+r,0)}else{i=Math.min(r,t)}if(a===undefined){n=t}else if(a<0){n=Math.max(t+a,0)}else{n=Math.min(a,t)}const o=Math.max(n-i,0);const d=this[u];const p=d.slice(i,i+o);const l=new Blob([],{type:arguments[2]});l[u]=p;return l}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(t,r,a){Error.call(this,t);this.message=t;this.type=r;if(a){this.code=this.errno=a.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let m;try{m=a(2078).convert}catch(t){}const h=Symbol("Body internals");const v=i.PassThrough;function Body(t){var r=this;var a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},n=a.size;let o=n===undefined?0:n;var d=a.timeout;let p=d===undefined?0:d;if(t==null){t=null}else if(isURLSearchParams(t)){t=Buffer.from(t.toString())}else if(isBlob(t));else if(Buffer.isBuffer(t));else if(Object.prototype.toString.call(t)==="[object ArrayBuffer]"){t=Buffer.from(t)}else if(ArrayBuffer.isView(t)){t=Buffer.from(t.buffer,t.byteOffset,t.byteLength)}else if(t instanceof i);else{t=Buffer.from(String(t))}this[h]={body:t,disturbed:false,error:null};this.size=o;this.timeout=p;if(t instanceof i){t.on("error",(function(t){const a=t.name==="AbortError"?t:new FetchError(`Invalid response body while trying to fetch ${r.url}: ${t.message}`,"system",t);r[h].error=a}))}}Body.prototype={get body(){return this[h].body},get bodyUsed(){return this[h].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(t){return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}))},blob(){let t=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(r){return Object.assign(new Blob([],{type:t.toLowerCase()}),{[u]:r})}))},json(){var t=this;return consumeBody.call(this).then((function(r){try{return JSON.parse(r.toString())}catch(r){return Body.Promise.reject(new FetchError(`invalid json response body at ${t.url} reason: ${r.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(t){return t.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var t=this;return consumeBody.call(this).then((function(r){return convertBody(r,t.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(t){for(const r of Object.getOwnPropertyNames(Body.prototype)){if(!(r in t)){const a=Object.getOwnPropertyDescriptor(Body.prototype,r);Object.defineProperty(t,r,a)}}};function consumeBody(){var t=this;if(this[h].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[h].disturbed=true;if(this[h].error){return Body.Promise.reject(this[h].error)}let r=this.body;if(r===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(r)){r=r.stream()}if(Buffer.isBuffer(r)){return Body.Promise.resolve(r)}if(!(r instanceof i)){return Body.Promise.resolve(Buffer.alloc(0))}let a=[];let n=0;let o=false;return new Body.Promise((function(i,d){let p;if(t.timeout){p=setTimeout((function(){o=true;d(new FetchError(`Response timeout while trying to fetch ${t.url} (over ${t.timeout}ms)`,"body-timeout"))}),t.timeout)}r.on("error",(function(r){if(r.name==="AbortError"){o=true;d(r)}else{d(new FetchError(`Invalid response body while trying to fetch ${t.url}: ${r.message}`,"system",r))}}));r.on("data",(function(r){if(o||r===null){return}if(t.size&&n+r.length>t.size){o=true;d(new FetchError(`content size at ${t.url} over limit: ${t.size}`,"max-size"));return}n+=r.length;a.push(r)}));r.on("end",(function(){if(o){return}clearTimeout(p);try{i(Buffer.concat(a,n))}catch(r){d(new FetchError(`Could not create Buffer from response body for ${t.url}: ${r.message}`,"system",r))}}))}))}function convertBody(t,r){if(typeof m!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const a=r.get("content-type");let i="utf-8";let n,o;if(a){n=/charset=([^;]*)/i.exec(a)}o=t.slice(0,1024).toString();if(!n&&o){n=/<meta.+?charset=([\'"])(.+?)\\1/i.exec(o)}if(!n&&o){n=/<meta[\\s]+?http-equiv=([\'"])content-type\\1[\\s]+?content=([\'"])(.+?)\\2/i.exec(o);if(!n){n=/<meta[\\s]+?content=([\'"])(.+?)\\1[\\s]+?http-equiv=([\'"])content-type\\3/i.exec(o);if(n){n.pop()}}if(n){n=/charset=(.*)/i.exec(n.pop())}}if(!n&&o){n=/<\\?xml.+?encoding=([\'"])(.+?)\\1/i.exec(o)}if(n){i=n.pop();if(i==="gb2312"||i==="gbk"){i="gb18030"}}return m(t,"UTF-8",i).toString()}function isURLSearchParams(t){if(typeof t!=="object"||typeof t.append!=="function"||typeof t.delete!=="function"||typeof t.get!=="function"||typeof t.getAll!=="function"||typeof t.has!=="function"||typeof t.set!=="function"){return false}return t.constructor.name==="URLSearchParams"||Object.prototype.toString.call(t)==="[object URLSearchParams]"||typeof t.sort==="function"}function isBlob(t){return typeof t==="object"&&typeof t.arrayBuffer==="function"&&typeof t.type==="string"&&typeof t.stream==="function"&&typeof t.constructor==="function"&&typeof t.constructor.name==="string"&&/^(Blob|File)$/.test(t.constructor.name)&&/^(Blob|File)$/.test(t[Symbol.toStringTag])}function clone(t){let r,a;let n=t.body;if(t.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof i&&typeof n.getBoundary!=="function"){r=new v;a=new v;n.pipe(r);n.pipe(a);t[h].body=r;n=a}return n}function extractContentType(t){if(t===null){return null}else if(typeof t==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(t)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(t)){return t.type||null}else if(Buffer.isBuffer(t)){return null}else if(Object.prototype.toString.call(t)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(t)){return null}else if(typeof t.getBoundary==="function"){return`multipart/form-data;boundary=${t.getBoundary()}`}else if(t instanceof i){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(t){const r=t.body;if(r===null){return 0}else if(isBlob(r)){return r.size}else if(Buffer.isBuffer(r)){return r.length}else if(r&&typeof r.getLengthSync==="function"){if(r._lengthRetrievers&&r._lengthRetrievers.length==0||r.hasKnownLength&&r.hasKnownLength()){return r.getLengthSync()}return null}else{return null}}function writeToStream(t,r){const a=r.body;if(a===null){t.end()}else if(isBlob(a)){a.stream().pipe(t)}else if(Buffer.isBuffer(a)){t.write(a);t.end()}else{a.pipe(t)}}Body.Promise=global.Promise;const g=/[^\\^_`a-zA-Z\\-0-9!#$%&\'*+.|~]/;const b=/[^\\t\\x20-\\x7e\\x80-\\xff]/;function validateName(t){t=`${t}`;if(g.test(t)||t===""){throw new TypeError(`${t} is not a legal HTTP header name`)}}function validateValue(t){t=`${t}`;if(b.test(t)){throw new TypeError(`${t} is not a legal HTTP header value`)}}function find(t,r){r=r.toLowerCase();for(const a in t){if(a.toLowerCase()===r){return a}}return undefined}const y=Symbol("map");class Headers{constructor(){let t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[y]=Object.create(null);if(t instanceof Headers){const r=t.raw();const a=Object.keys(r);for(const t of a){for(const a of r[t]){this.append(t,a)}}return}if(t==null);else if(typeof t==="object"){const r=t[Symbol.iterator];if(r!=null){if(typeof r!=="function"){throw new TypeError("Header pairs must be iterable")}const a=[];for(const r of t){if(typeof r!=="object"||typeof r[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}a.push(Array.from(r))}for(const t of a){if(t.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(t[0],t[1])}}else{for(const r of Object.keys(t)){const a=t[r];this.append(r,a)}}}else{throw new TypeError("Provided initializer must be an object")}}get(t){t=`${t}`;validateName(t);const r=find(this[y],t);if(r===undefined){return null}return this[y][r].join(", ")}forEach(t){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let a=getHeaders(this);let i=0;while(i<a.length){var n=a[i];const o=n[0],d=n[1];t.call(r,d,o,this);a=getHeaders(this);i++}}set(t,r){t=`${t}`;r=`${r}`;validateName(t);validateValue(r);const a=find(this[y],t);this[y][a!==undefined?a:t]=[r]}append(t,r){t=`${t}`;r=`${r}`;validateName(t);validateValue(r);const a=find(this[y],t);if(a!==undefined){this[y][a].push(r)}else{this[y][t]=[r]}}has(t){t=`${t}`;validateName(t);return find(this[y],t)!==undefined}delete(t){t=`${t}`;validateName(t);const r=find(this[y],t);if(r!==undefined){delete this[y][r]}}raw(){return this[y]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(t){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const a=Object.keys(t[y]).sort();return a.map(r==="key"?function(t){return t.toLowerCase()}:r==="value"?function(r){return t[y][r].join(", ")}:function(r){return[r.toLowerCase(),t[y][r].join(", ")]})}const w=Symbol("internal");function createHeadersIterator(t,r){const a=Object.create(S);a[w]={target:t,kind:r,index:0};return a}const S=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==S){throw new TypeError("Value of `this` is not a HeadersIterator")}var t=this[w];const r=t.target,a=t.kind,i=t.index;const n=getHeaders(r,a);const o=n.length;if(i>=o){return{value:undefined,done:true}}this[w].index=i+1;return{value:n[i],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(S,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(t){const r=Object.assign({__proto__:null},t[y]);const a=find(t[y],"Host");if(a!==undefined){r[a]=r[a][0]}return r}function createHeadersLenient(t){const r=new Headers;for(const a of Object.keys(t)){if(g.test(a)){continue}if(Array.isArray(t[a])){for(const i of t[a]){if(b.test(i)){continue}if(r[y][a]===undefined){r[y][a]=[i]}else{r[y][a].push(i)}}}else if(!b.test(t[a])){r[y][a]=[t[a]]}}return r}const _=Symbol("Response internals");const T=n.STATUS_CODES;class Response{constructor(){let t=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,t,r);const a=r.status||200;const i=new Headers(r.headers);if(t!=null&&!i.has("Content-Type")){const r=extractContentType(t);if(r){i.append("Content-Type",r)}}this[_]={url:r.url,status:a,statusText:r.statusText||T[a],headers:i,counter:r.counter}}get url(){return this[_].url||""}get status(){return this[_].status}get ok(){return this[_].status>=200&&this[_].status<300}get redirected(){return this[_].counter>0}get statusText(){return this[_].statusText}get headers(){return this[_].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const C=Symbol("Request internals");const D=o.URL||d.URL;const R=o.parse;const E=o.format;function parseURL(t){if(/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(t)){t=new D(t).toString()}return R(t)}const A="destroy"in i.Readable.prototype;function isRequest(t){return typeof t==="object"&&typeof t[C]==="object"}function isAbortSignal(t){const r=t&&typeof t==="object"&&Object.getPrototypeOf(t);return!!(r&&r.constructor.name==="AbortSignal")}class Request{constructor(t){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let a;if(!isRequest(t)){if(t&&t.href){a=parseURL(t.href)}else{a=parseURL(`${t}`)}t={}}else{a=parseURL(t.url)}let i=r.method||t.method||"GET";i=i.toUpperCase();if((r.body!=null||isRequest(t)&&t.body!==null)&&(i==="GET"||i==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let n=r.body!=null?r.body:isRequest(t)&&t.body!==null?clone(t):null;Body.call(this,n,{timeout:r.timeout||t.timeout||0,size:r.size||t.size||0});const o=new Headers(r.headers||t.headers||{});if(n!=null&&!o.has("Content-Type")){const t=extractContentType(n);if(t){o.append("Content-Type",t)}}let d=isRequest(t)?t.signal:null;if("signal"in r)d=r.signal;if(d!=null&&!isAbortSignal(d)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[C]={method:i,redirect:r.redirect||t.redirect||"follow",headers:o,parsedURL:a,signal:d};this.follow=r.follow!==undefined?r.follow:t.follow!==undefined?t.follow:20;this.compress=r.compress!==undefined?r.compress:t.compress!==undefined?t.compress:true;this.counter=r.counter||t.counter||0;this.agent=r.agent||t.agent}get method(){return this[C].method}get url(){return E(this[C].parsedURL)}get headers(){return this[C].headers}get redirect(){return this[C].redirect}get signal(){return this[C].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(t){const r=t[C].parsedURL;const a=new Headers(t[C].headers);if(!a.has("Accept")){a.set("Accept","*/*")}if(!r.protocol||!r.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(r.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(t.signal&&t.body instanceof i.Readable&&!A){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let n=null;if(t.body==null&&/^(POST|PUT)$/i.test(t.method)){n="0"}if(t.body!=null){const r=getTotalBytes(t);if(typeof r==="number"){n=String(r)}}if(n){a.set("Content-Length",n)}if(!a.has("User-Agent")){a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(t.compress&&!a.has("Accept-Encoding")){a.set("Accept-Encoding","gzip,deflate")}let o=t.agent;if(typeof o==="function"){o=o(r)}if(!a.has("Connection")&&!o){a.set("Connection","close")}return Object.assign({},r,{method:t.method,headers:exportNodeCompatibleHeaders(a),agent:o})}function AbortError(t){Error.call(this,t);this.type="aborted";this.message=t;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const N=o.URL||d.URL;const P=i.PassThrough;const q=function isDomainOrSubdomain(t,r){const a=new N(r).hostname;const i=new N(t).hostname;return a===i||a[a.length-i.length-1]==="."&&a.endsWith(i)};const B=function isSameProtocol(t,r){const a=new N(r).protocol;const i=new N(t).protocol;return a===i};function fetch(t,r){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(a,o){const d=new Request(t,r);const s=getNodeRequestOptions(d);const u=(s.protocol==="https:"?p:n).request;const c=d.signal;let m=null;const h=function abort(){let t=new AbortError("The user aborted a request.");o(t);if(d.body&&d.body instanceof i.Readable){destroyStream(d.body,t)}if(!m||!m.body)return;m.body.emit("error",t)};if(c&&c.aborted){h();return}const v=function abortAndFinalize(){h();finalize()};const g=u(s);let b;if(c){c.addEventListener("abort",v)}function finalize(){g.abort();if(c)c.removeEventListener("abort",v);clearTimeout(b)}if(d.timeout){g.once("socket",(function(t){b=setTimeout((function(){o(new FetchError(`network timeout at: ${d.url}`,"request-timeout"));finalize()}),d.timeout)}))}g.on("error",(function(t){o(new FetchError(`request to ${d.url} failed, reason: ${t.message}`,"system",t));if(m&&m.body){destroyStream(m.body,t)}finalize()}));fixResponseChunkedTransferBadEnding(g,(function(t){if(c&&c.aborted){return}if(m&&m.body){destroyStream(m.body,t)}}));if(parseInt(process.version.substring(1))<14){g.on("socket",(function(t){t.addListener("close",(function(r){const a=t.listenerCount("data")>0;if(m&&a&&!r&&!(c&&c.aborted)){const t=new Error("Premature close");t.code="ERR_STREAM_PREMATURE_CLOSE";m.body.emit("error",t)}}))}))}g.on("response",(function(t){clearTimeout(b);const r=createHeadersLenient(t.headers);if(fetch.isRedirect(t.statusCode)){const i=r.get("Location");let n=null;try{n=i===null?null:new N(i,d.url).toString()}catch(t){if(d.redirect!=="manual"){o(new FetchError(`uri requested responds with an invalid redirect URL: ${i}`,"invalid-redirect"));finalize();return}}switch(d.redirect){case"error":o(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${d.url}`,"no-redirect"));finalize();return;case"manual":if(n!==null){try{r.set("Location",n)}catch(t){o(t)}}break;case"follow":if(n===null){break}if(d.counter>=d.follow){o(new FetchError(`maximum redirect reached at: ${d.url}`,"max-redirect"));finalize();return}const i={headers:new Headers(d.headers),follow:d.follow,counter:d.counter+1,agent:d.agent,compress:d.compress,method:d.method,body:d.body,signal:d.signal,timeout:d.timeout,size:d.size};if(!q(d.url,n)||!B(d.url,n)){for(const t of["authorization","www-authenticate","cookie","cookie2"]){i.headers.delete(t)}}if(t.statusCode!==303&&d.body&&getTotalBytes(d)===null){o(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(t.statusCode===303||(t.statusCode===301||t.statusCode===302)&&d.method==="POST"){i.method="GET";i.body=undefined;i.headers.delete("content-length")}a(fetch(new Request(n,i)));finalize();return}}t.once("end",(function(){if(c)c.removeEventListener("abort",v)}));let i=t.pipe(new P);const n={url:d.url,status:t.statusCode,statusText:t.statusMessage,headers:r,size:d.size,timeout:d.timeout,counter:d.counter};const p=r.get("Content-Encoding");if(!d.compress||d.method==="HEAD"||p===null||t.statusCode===204||t.statusCode===304){m=new Response(i,n);a(m);return}const s={flush:l.Z_SYNC_FLUSH,finishFlush:l.Z_SYNC_FLUSH};if(p=="gzip"||p=="x-gzip"){i=i.pipe(l.createGunzip(s));m=new Response(i,n);a(m);return}if(p=="deflate"||p=="x-deflate"){const r=t.pipe(new P);r.once("data",(function(t){if((t[0]&15)===8){i=i.pipe(l.createInflate())}else{i=i.pipe(l.createInflateRaw())}m=new Response(i,n);a(m)}));r.on("end",(function(){if(!m){m=new Response(i,n);a(m)}}));return}if(p=="br"&&typeof l.createBrotliDecompress==="function"){i=i.pipe(l.createBrotliDecompress());m=new Response(i,n);a(m);return}m=new Response(i,n);a(m)}));writeToStream(g,d)}))}function fixResponseChunkedTransferBadEnding(t,r){let a;t.on("socket",(function(t){a=t}));t.on("response",(function(t){const i=t.headers;if(i["transfer-encoding"]==="chunked"&&!i["content-length"]){t.once("close",(function(t){const i=a.listenerCount("data")>0;if(i&&!t){const t=new Error("Premature close");t.code="ERR_STREAM_PREMATURE_CLOSE";r(t)}}))}}))}function destroyStream(t,r){if(t.destroy){t.destroy(r)}else{t.emit("error",r);t.end()}}fetch.isRedirect=function(t){return t===301||t===302||t===303||t===307||t===308};fetch.Promise=global.Promise;t.exports=r=fetch;Object.defineProperty(r,"__esModule",{value:true});r["default"]=r;r.Headers=Headers;r.Request=Request;r.Response=Response;r.FetchError=FetchError},3600:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function arr_back(t){return t[t.length-1]}r["default"]=arr_back},3203:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.NodeType=r.TextNode=r.Node=r.valid=r.CommentNode=r.HTMLElement=r.parse=void 0;var n=i(a(1008));r.CommentNode=n.default;var o=i(a(6992));r.HTMLElement=o.default;var d=i(a(6637));r.Node=d.default;var p=i(a(7734));r.TextNode=p.default;var l=i(a(5977));r.NodeType=l.default;var s=i(a(4636));var u=i(a(2421));r.valid=u.default;function parse(t,r){if(r===void 0){r={}}return(0,s.default)(t,r)}r["default"]=parse;r.parse=parse;parse.parse=s.default;parse.HTMLElement=o.default;parse.CommentNode=n.default;parse.valid=u.default;parse.Node=d.default;parse.TextNode=p.default;parse.NodeType=l.default},8205:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});var n=i(a(5977));function isTag(t){return t&&t.nodeType===n.default.ELEMENT_NODE}function getAttributeValue(t,r){return isTag(t)?t.getAttribute(r):undefined}function getName(t){return(t&&t.rawTagName||"").toLowerCase()}function getChildren(t){return t&&t.childNodes}function getParent(t){return t?t.parentNode:null}function getText(t){return t.text}function removeSubsets(t){var r=t.length;var a;var i;var n;while(--r>-1){a=i=t[r];t[r]=null;n=true;while(i){if(t.indexOf(i)>-1){n=false;t.splice(r,1);break}i=getParent(i)}if(n){t[r]=a}}return t}function existsOne(t,r){return r.some((function(r){return isTag(r)?t(r)||existsOne(t,getChildren(r)):false}))}function getSiblings(t){var r=getParent(t);return r?getChildren(r):[]}function hasAttrib(t,r){return getAttributeValue(t,r)!==undefined}function findOne(t,r){var a=null;for(var i=0,n=r===null||r===void 0?void 0:r.length;i<n&&!a;i++){var o=r[i];if(t(o)){a=o}else{var d=getChildren(o);if(d&&d.length>0){a=findOne(t,d)}}}return a}function findAll(t,r){var a=[];for(var i=0,n=r.length;i<n;i++){if(!isTag(r[i]))continue;if(t(r[i]))a.push(r[i]);var o=getChildren(r[i]);if(o)a=a.concat(findAll(t,o))}return a}r["default"]={isTag:isTag,getAttributeValue:getAttributeValue,getName:getName,getChildren:getChildren,getParent:getParent,getText:getText,removeSubsets:removeSubsets,existsOne:existsOne,getSiblings:getSiblings,hasAttrib:hasAttrib,findOne:findOne,findAll:findAll}},1008:function(t,r,a){"use strict";var i=this&&this.__extends||function(){var extendStatics=function(t,r){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var a in r)if(Object.prototype.hasOwnProperty.call(r,a))t[a]=r[a]};return extendStatics(t,r)};return function(t,r){if(typeof r!=="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");extendStatics(t,r);function __(){this.constructor=t}t.prototype=r===null?Object.create(r):(__.prototype=r.prototype,new __)}}();var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});var o=n(a(6637));var d=n(a(5977));var p=function(t){i(CommentNode,t);function CommentNode(r,a,i){var n=t.call(this,a,i)||this;n.rawText=r;n.nodeType=d.default.COMMENT_NODE;return n}CommentNode.prototype.clone=function(){return new CommentNode(this.rawText,null)};Object.defineProperty(CommentNode.prototype,"text",{get:function(){return this.rawText},enumerable:false,configurable:true});CommentNode.prototype.toString=function(){return"\\x3c!--".concat(this.rawText,"--\\x3e")};return CommentNode}(o.default);r["default"]=p},6992:function(t,r,a){"use strict";var i=this&&this.__extends||function(){var extendStatics=function(t,r){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var a in r)if(Object.prototype.hasOwnProperty.call(r,a))t[a]=r[a]};return extendStatics(t,r)};return function(t,r){if(typeof r!=="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");extendStatics(t,r);function __(){this.constructor=t}t.prototype=r===null?Object.create(r):(__.prototype=r.prototype,new __)}}();var n=this&&this.__assign||function(){n=Object.assign||function(t){for(var r,a=1,i=arguments.length;a<i;a++){r=arguments[a];for(var n in r)if(Object.prototype.hasOwnProperty.call(r,n))t[n]=r[n]}return t};return n.apply(this,arguments)};var o=this&&this.__spreadArray||function(t,r,a){if(a||arguments.length===2)for(var i=0,n=r.length,o;i<n;i++){if(o||!(i in r)){if(!o)o=Array.prototype.slice.call(r,0,i);o[i]=r[i]}}return t.concat(o||Array.prototype.slice.call(r))};var d=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.parse=r.base_parse=void 0;var p=a(2842);var l=d(a(1528));var s=d(a(3600));var u=d(a(8205));var c=d(a(6872));var m=d(a(1008));var h=d(a(6637));var v=d(a(7734));var g=d(a(5977));function decode(t){return JSON.parse(JSON.stringify(l.default.decode(t)))}var b=["h1","h2","h3","h4","h5","h6","header","hgroup"];var y=["details","dialog","dd","div","dt"];var w=["fieldset","figcaption","figure","footer","form"];var S=["table","td","tr"];var _=["address","article","aside","blockquote","br","hr","li","main","nav","ol","p","pre","section","ul"];var T=new Set;function addToKBlockElement(){var t=[];for(var r=0;r<arguments.length;r++){t[r]=arguments[r]}var addToSet=function(t){for(var r=0;r<t.length;r++){var a=t[r];T.add(a);T.add(a.toUpperCase())}};for(var a=0,i=t;a<i.length;a++){var n=i[a];addToSet(n)}}addToKBlockElement(b,y,w,S,_);var C=function(){function DOMTokenList(t,r){if(t===void 0){t=[]}if(r===void 0){r=function(){return null}}this._set=new Set(t);this._afterUpdate=r}DOMTokenList.prototype._validate=function(t){if(/\\s/.test(t)){throw new Error("DOMException in DOMTokenList.add: The token \'".concat(t,"\' contains HTML space characters, which are not valid in tokens."))}};DOMTokenList.prototype.add=function(t){this._validate(t);this._set.add(t);this._afterUpdate(this)};DOMTokenList.prototype.replace=function(t,r){this._validate(r);this._set.delete(t);this._set.add(r);this._afterUpdate(this)};DOMTokenList.prototype.remove=function(t){this._set.delete(t)&&this._afterUpdate(this)};DOMTokenList.prototype.toggle=function(t){this._validate(t);if(this._set.has(t))this._set.delete(t);else this._set.add(t);this._afterUpdate(this)};DOMTokenList.prototype.contains=function(t){return this._set.has(t)};Object.defineProperty(DOMTokenList.prototype,"length",{get:function(){return this._set.size},enumerable:false,configurable:true});DOMTokenList.prototype.values=function(){return this._set.values()};Object.defineProperty(DOMTokenList.prototype,"value",{get:function(){return Array.from(this._set.values())},enumerable:false,configurable:true});DOMTokenList.prototype.toString=function(){return Array.from(this._set.values()).join(" ")};return DOMTokenList}();var D=function(t){i(HTMLElement,t);function HTMLElement(r,a,i,n,o,d,p){if(i===void 0){i=""}if(d===void 0){d=new c.default}if(p===void 0){p={}}var l=t.call(this,n,o)||this;l.rawAttrs=i;l.voidTag=d;l.nodeType=g.default.ELEMENT_NODE;l.rawTagName=r;l.rawAttrs=i||"";l.id=a.id||"";l.childNodes=[];l._parseOptions=p;l.classList=new C(a.class?a.class.split(/\\s+/):[],(function(t){return l.setAttribute("class",t.toString())}));if(a.id){if(!i){l.rawAttrs=\'id="\'.concat(a.id,\'"\')}}if(a.class){if(!i){var s=\'class="\'.concat(l.classList.toString(),\'"\');if(l.rawAttrs){l.rawAttrs+=" ".concat(s)}else{l.rawAttrs=s}}}return l}HTMLElement.prototype.quoteAttribute=function(t){if(t==null){return"null"}return JSON.stringify(t.replace(/"/g,"&quot;"))};HTMLElement.prototype.removeChild=function(t){this.childNodes=this.childNodes.filter((function(r){return r!==t}));return this};HTMLElement.prototype.exchangeChild=function(t,r){var a=this.childNodes;this.childNodes=a.map((function(a){if(a===t){return r}return a}));return this};Object.defineProperty(HTMLElement.prototype,"tagName",{get:function(){return this.rawTagName?this.rawTagName.toUpperCase():this.rawTagName},set:function(t){this.rawTagName=t.toLowerCase()},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"localName",{get:function(){return this.rawTagName.toLowerCase()},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"isVoidElement",{get:function(){return this.voidTag.isVoidElement(this.localName)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"rawText",{get:function(){return this.childNodes.reduce((function(t,r){return t+=r.rawText}),"")},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"textContent",{get:function(){return decode(this.rawText)},set:function(t){var r=[new v.default(t,this)];this.childNodes=r},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"text",{get:function(){return decode(this.rawText)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"structuredText",{get:function(){var t=[];var r=[t];function dfs(a){if(a.nodeType===g.default.ELEMENT_NODE){if(T.has(a.rawTagName)){if(t.length>0){r.push(t=[])}a.childNodes.forEach(dfs);if(t.length>0){r.push(t=[])}}else{a.childNodes.forEach(dfs)}}else if(a.nodeType===g.default.TEXT_NODE){if(a.isWhitespace){t.prependWhitespace=true}else{var i=a.trimmedText;if(t.prependWhitespace){i=" ".concat(i);t.prependWhitespace=false}t.push(i)}}}dfs(this);return r.map((function(t){return t.join("").replace(/\\s{2,}/g," ")})).join("\\n").replace(/\\s+$/,"")},enumerable:false,configurable:true});HTMLElement.prototype.toString=function(){var t=this.rawTagName;if(t){var r=this.rawAttrs?" ".concat(this.rawAttrs):"";return this.voidTag.formatNode(t,r,this.innerHTML)}return this.innerHTML};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return this.childNodes.map((function(t){return t.toString()})).join("")},set:function(t){var r=parse(t,this._parseOptions);var a=r.childNodes.length?r.childNodes:[new v.default(t,this)];resetParent(a,this);resetParent(this.childNodes,null);this.childNodes=a},enumerable:false,configurable:true});HTMLElement.prototype.set_content=function(t,r){if(r===void 0){r={}}if(t instanceof h.default){t=[t]}else if(typeof t=="string"){r=n(n({},this._parseOptions),r);var a=parse(t,r);t=a.childNodes.length?a.childNodes:[new v.default(a.innerHTML,this)]}resetParent(this.childNodes,null);resetParent(t,this);this.childNodes=t;return this};HTMLElement.prototype.replaceWith=function(){var t=this;var r=[];for(var a=0;a<arguments.length;a++){r[a]=arguments[a]}var i=this.parentNode;var n=r.map((function(r){if(r instanceof h.default){return[r]}else if(typeof r=="string"){var a=parse(r,t._parseOptions);return a.childNodes.length?a.childNodes:[new v.default(r,t)]}return[]})).flat();var d=i.childNodes.findIndex((function(r){return r===t}));resetParent([this],null);i.childNodes=o(o(o([],i.childNodes.slice(0,d),true),resetParent(n,i),true),i.childNodes.slice(d+1),true);return this};Object.defineProperty(HTMLElement.prototype,"outerHTML",{get:function(){return this.toString()},enumerable:false,configurable:true});HTMLElement.prototype.trimRight=function(t){for(var r=0;r<this.childNodes.length;r++){var a=this.childNodes[r];if(a.nodeType===g.default.ELEMENT_NODE){a.trimRight(t)}else{var i=a.rawText.search(t);if(i>-1){a.rawText=a.rawText.substr(0,i);this.childNodes.length=r+1}}}return this};Object.defineProperty(HTMLElement.prototype,"structure",{get:function(){var t=[];var r=0;function write(a){t.push("  ".repeat(r)+a)}function dfs(t){var a=t.id?"#".concat(t.id):"";var i=t.classList.length?".".concat(t.classList.value.join(".")):"";write("".concat(t.rawTagName).concat(a).concat(i));r++;t.childNodes.forEach((function(t){if(t.nodeType===g.default.ELEMENT_NODE){dfs(t)}else if(t.nodeType===g.default.TEXT_NODE){if(!t.isWhitespace){write("#text")}}}));r--}dfs(this);return t.join("\\n")},enumerable:false,configurable:true});HTMLElement.prototype.removeWhitespace=function(){var t=this;var r=0;this.childNodes.forEach((function(a){if(a.nodeType===g.default.TEXT_NODE){if(a.isWhitespace){return}a.rawText=a.trimmedRawText}else if(a.nodeType===g.default.ELEMENT_NODE){a.removeWhitespace()}t.childNodes[r++]=a}));this.childNodes.length=r;return this};HTMLElement.prototype.querySelectorAll=function(t){return(0,p.selectAll)(t,this,{xmlMode:true,adapter:u.default})};HTMLElement.prototype.querySelector=function(t){return(0,p.selectOne)(t,this,{xmlMode:true,adapter:u.default})};HTMLElement.prototype.getElementsByTagName=function(t){var r=t.toUpperCase();var a=[];var i=[];var n=this;var o=0;while(o!==undefined){var d=void 0;do{d=n.childNodes[o++]}while(o<n.childNodes.length&&d===undefined);if(d===undefined){n=n.parentNode;o=i.pop();continue}if(d.nodeType===g.default.ELEMENT_NODE){if(t==="*"||d.tagName===r)a.push(d);if(d.childNodes.length>0){i.push(o);n=d;o=0}}}return a};HTMLElement.prototype.getElementById=function(t){var r=[];var a=this;var i=0;while(i!==undefined){var n=void 0;do{n=a.childNodes[i++]}while(i<a.childNodes.length&&n===undefined);if(n===undefined){a=a.parentNode;i=r.pop();continue}if(n.nodeType===g.default.ELEMENT_NODE){if(n.id===t){return n}if(n.childNodes.length>0){r.push(i);a=n;i=0}}}return null};HTMLElement.prototype.closest=function(t){var r=new Map;var a=this;var i=null;function findOne(t,a){var i=null;for(var n=0,o=a.length;n<o&&!i;n++){var d=a[n];if(t(d)){i=d}else{var p=r.get(d);if(p){i=findOne(t,[p])}}}return i}while(a){r.set(a,i);i=a;a=a.parentNode}a=this;while(a){var o=(0,p.selectOne)(t,a,{xmlMode:true,adapter:n(n({},u.default),{getChildren:function(t){var a=r.get(t);return a&&[a]},getSiblings:function(t){return[t]},findOne:findOne,findAll:function(){return[]}})});if(o){return o}a=a.parentNode}return null};HTMLElement.prototype.appendChild=function(t){t.remove();this.childNodes.push(t);t.parentNode=this;return t};Object.defineProperty(HTMLElement.prototype,"firstChild",{get:function(){return this.childNodes[0]},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"lastChild",{get:function(){return(0,s.default)(this.childNodes)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"attrs",{get:function(){if(this._attrs){return this._attrs}this._attrs={};var t=this.rawAttributes;for(var r in t){var a=t[r]||"";this._attrs[r.toLowerCase()]=decode(a)}return this._attrs},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"attributes",{get:function(){var t={};var r=this.rawAttributes;for(var a in r){var i=r[a]||"";t[a]=decode(i)}return t},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"rawAttributes",{get:function(){if(this._rawAttrs){return this._rawAttrs}var t={};if(this.rawAttrs){var r=/([a-zA-Z()[\\]#@$.?:][a-zA-Z0-9-_:()[\\]#]*)(?:\\s*=\\s*((?:\'[^\']*\')|(?:"[^"]*")|\\S+))?/g;var a=void 0;while(a=r.exec(this.rawAttrs)){var i=a[1];var n=a[2]||null;if(n&&(n[0]==="\'"||n[0]===\'"\'))n=n.slice(1,n.length-1);t[i]=t[i]||n}}this._rawAttrs=t;return t},enumerable:false,configurable:true});HTMLElement.prototype.removeAttribute=function(t){var r=this.rawAttributes;delete r[t];if(this._attrs){delete this._attrs[t]}this.rawAttrs=Object.keys(r).map((function(t){var a=JSON.stringify(r[t]);if(a===undefined||a==="null"){return t}return"".concat(t,"=").concat(a)})).join(" ");if(t==="id"){this.id=""}return this};HTMLElement.prototype.hasAttribute=function(t){return t.toLowerCase()in this.attrs};HTMLElement.prototype.getAttribute=function(t){return this.attrs[t.toLowerCase()]};HTMLElement.prototype.setAttribute=function(t,r){var a=this;if(arguments.length<2){throw new Error("Failed to execute \'setAttribute\' on \'Element\'")}var i=t.toLowerCase();var n=this.rawAttributes;for(var o in n){if(o.toLowerCase()===i){t=o;break}}n[t]=String(r);if(this._attrs){this._attrs[i]=decode(n[t])}this.rawAttrs=Object.keys(n).map((function(t){var r=a.quoteAttribute(n[t]);if(r==="null"||r===\'""\')return t;return"".concat(t,"=").concat(r)})).join(" ");if(t==="id"){this.id=r}return this};HTMLElement.prototype.setAttributes=function(t){var r=this;if(this._attrs){delete this._attrs}if(this._rawAttrs){delete this._rawAttrs}this.rawAttrs=Object.keys(t).map((function(a){var i=t[a];if(i==="null"||i===\'""\')return a;return"".concat(a,"=").concat(r.quoteAttribute(String(i)))})).join(" ");return this};HTMLElement.prototype.insertAdjacentHTML=function(t,r){var a,i,n;var d=this;if(arguments.length<2){throw new Error("2 arguments required")}var p=parse(r,this._parseOptions);if(t==="afterend"){var l=this.parentNode.childNodes.findIndex((function(t){return t===d}));resetParent(p.childNodes,this.parentNode);(a=this.parentNode.childNodes).splice.apply(a,o([l+1,0],p.childNodes,false))}else if(t==="afterbegin"){resetParent(p.childNodes,this);(i=this.childNodes).unshift.apply(i,p.childNodes)}else if(t==="beforeend"){p.childNodes.forEach((function(t){d.appendChild(t)}))}else if(t==="beforebegin"){var l=this.parentNode.childNodes.findIndex((function(t){return t===d}));resetParent(p.childNodes,this.parentNode);(n=this.parentNode.childNodes).splice.apply(n,o([l,0],p.childNodes,false))}else{throw new Error("The value provided (\'".concat(t,"\') is not one of \'beforebegin\', \'afterbegin\', \'beforeend\', or \'afterend\'"))}return this};Object.defineProperty(HTMLElement.prototype,"nextSibling",{get:function(){if(this.parentNode){var t=this.parentNode.childNodes;var r=0;while(r<t.length){var a=t[r++];if(this===a)return t[r]||null}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"nextElementSibling",{get:function(){if(this.parentNode){var t=this.parentNode.childNodes;var r=0;var a=false;while(r<t.length){var i=t[r++];if(a){if(i instanceof HTMLElement){return i||null}}else if(this===i){a=true}}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"previousSibling",{get:function(){if(this.parentNode){var t=this.parentNode.childNodes;var r=t.length;while(r>0){var a=t[--r];if(this===a)return t[r-1]||null}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"previousElementSibling",{get:function(){if(this.parentNode){var t=this.parentNode.childNodes;var r=t.length;var a=false;while(r>0){var i=t[--r];if(a){if(i instanceof HTMLElement){return i||null}}else if(this===i){a=true}}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"classNames",{get:function(){return this.classList.toString()},enumerable:false,configurable:true});HTMLElement.prototype.clone=function(){return parse(this.toString(),this._parseOptions).firstChild};return HTMLElement}(h.default);r["default"]=D;var R=/<!--[\\s\\S]*?-->|<(\\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\\s+[^>]*?(?:(?:\'[^\']*\')|(?:"[^"]*"))?)*)\\s*(\\/?)>/g;var E=/(?:^|\\s)(id|class)\\s*=\\s*((?:\'[^\']*\')|(?:"[^"]*")|\\S+)/gi;var A={area:true,AREA:true,base:true,BASE:true,br:true,BR:true,col:true,COL:true,hr:true,HR:true,img:true,IMG:true,input:true,INPUT:true,link:true,LINK:true,meta:true,META:true,source:true,SOURCE:true,embed:true,EMBED:true,param:true,PARAM:true,track:true,TRACK:true,wbr:true,WBR:true};var N={li:{li:true,LI:true},LI:{li:true,LI:true},p:{p:true,div:true,P:true,DIV:true},P:{p:true,div:true,P:true,DIV:true},b:{div:true,DIV:true},B:{div:true,DIV:true},td:{td:true,th:true,TD:true,TH:true},TD:{td:true,th:true,TD:true,TH:true},th:{td:true,th:true,TD:true,TH:true},TH:{td:true,th:true,TD:true,TH:true},h1:{h1:true,H1:true},H1:{h1:true,H1:true},h2:{h2:true,H2:true},H2:{h2:true,H2:true},h3:{h3:true,H3:true},H3:{h3:true,H3:true},h4:{h4:true,H4:true},H4:{h4:true,H4:true},h5:{h5:true,H5:true},H5:{h5:true,H5:true},h6:{h6:true,H6:true},H6:{h6:true,H6:true}};var P={li:{ul:true,ol:true,UL:true,OL:true},LI:{ul:true,ol:true,UL:true,OL:true},a:{div:true,DIV:true},A:{div:true,DIV:true},b:{div:true,DIV:true},B:{div:true,DIV:true},i:{div:true,DIV:true},I:{div:true,DIV:true},p:{div:true,DIV:true},P:{div:true,DIV:true},td:{tr:true,table:true,TR:true,TABLE:true},TD:{tr:true,table:true,TR:true,TABLE:true},th:{tr:true,table:true,TR:true,TABLE:true},TH:{tr:true,table:true,TR:true,TABLE:true}};var q="documentfragmentcontainer";function base_parse(t,r){var a,i;if(r===void 0){r={}}var n=new c.default((a=r===null||r===void 0?void 0:r.voidTag)===null||a===void 0?void 0:a.closingSlash,(i=r===null||r===void 0?void 0:r.voidTag)===null||i===void 0?void 0:i.tags);var o=r.blockTextElements||{script:true,noscript:true,style:true,pre:true};var d=Object.keys(o);var p=d.map((function(t){return new RegExp("^".concat(t,"$"),"i")}));var l=d.filter((function(t){return o[t]})).map((function(t){return new RegExp("^".concat(t,"$"),"i")}));function element_should_be_ignore(t){return l.some((function(r){return r.test(t)}))}function is_block_text_element(t){return p.some((function(r){return r.test(t)}))}var createRange=function(t,r){return[t-C,r-C]};var u=new D(null,{},"",null,[0,t.length],n,r);var h=u;var g=[u];var b=-1;var y=undefined;var w;t="<".concat(q,">").concat(t,"</").concat(q,">");var S=r.lowerCaseTagName,_=r.fixNestedATags;var T=t.length-(q.length+2);var C=q.length+2;while(w=R.exec(t)){var B=w[0],L=w[1],O=w[2],k=w[3],V=w[4];var j=B.length;var M=R.lastIndex-j;var F=R.lastIndex;if(b>-1){if(b+j<F){var I=t.substring(b,M);h.appendChild(new v.default(I,h,createRange(b,M)))}}b=R.lastIndex;if(O===q)continue;if(B[1]==="!"){if(r.comment){var I=t.substring(M+4,F-3);h.appendChild(new m.default(I,h,createRange(M,F)))}continue}if(S)O=O.toLowerCase();if(!L){var W={};for(var U=void 0;U=E.exec(k);){var H=U[1],$=U[2];var z=$[0]==="\'"||$[0]===\'"\';W[H.toLowerCase()]=z?$.slice(1,$.length-1):$}var G=h.rawTagName;if(!V&&N[G]){if(N[G][O]){g.pop();h=(0,s.default)(g)}}if(_&&(O==="a"||O==="A")){if(y!==undefined){g.splice(y);h=(0,s.default)(g)}y=g.length}var Q=R.lastIndex;var Y=Q-j;h=h.appendChild(new D(O,W,k.slice(1),null,createRange(Y,Q),n,r));g.push(h);if(is_block_text_element(O)){var J="</".concat(O,">");var Z=S?t.toLocaleLowerCase().indexOf(J,R.lastIndex):t.indexOf(J,R.lastIndex);var X=Z===-1?T:Z;if(element_should_be_ignore(O)){var I=t.substring(Q,X);if(I.length>0&&/\\S/.test(I)){h.appendChild(new v.default(I,h,createRange(Q,X)))}}if(Z===-1){b=R.lastIndex=t.length+1}else{b=R.lastIndex=Z+J.length;L="/"}}}if(L||V||A[O]){while(true){if(y!=null&&(O==="a"||O==="A"))y=undefined;if(h.rawTagName===O){h.range[1]=createRange(-1,Math.max(b,F))[1];g.pop();h=(0,s.default)(g);break}else{var G=h.tagName;if(P[G]){if(P[G][O]){g.pop();h=(0,s.default)(g);continue}}break}}}}return g}r.base_parse=base_parse;function parse(t,r){if(r===void 0){r={}}var a=base_parse(t,r);var i=a[0];var _loop_1=function(){var t=a.pop();var i=(0,s.default)(a);if(t.parentNode&&t.parentNode.parentNode){if(t.parentNode===i&&t.tagName===i.tagName){if(r.parseNoneClosedTags!==true){i.removeChild(t);t.childNodes.forEach((function(t){i.parentNode.appendChild(t)}));a.pop()}}else{if(r.parseNoneClosedTags!==true){i.removeChild(t);t.childNodes.forEach((function(t){i.appendChild(t)}))}}}else{}};while(a.length>1){_loop_1()}return i}r.parse=parse;function resetParent(t,r){return t.map((function(t){t.parentNode=r;return t}))}},6637:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=a(1528);var n=function(){function Node(t,r){if(t===void 0){t=null}this.parentNode=t;this.childNodes=[];Object.defineProperty(this,"range",{enumerable:false,writable:true,configurable:true,value:r!==null&&r!==void 0?r:[-1,-1]})}Node.prototype.remove=function(){var t=this;if(this.parentNode){var r=this.parentNode.childNodes;this.parentNode.childNodes=r.filter((function(r){return t!==r}));this.parentNode=null}return this};Object.defineProperty(Node.prototype,"innerText",{get:function(){return this.rawText},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"textContent",{get:function(){return(0,i.decode)(this.rawText)},set:function(t){this.rawText=(0,i.encode)(t)},enumerable:false,configurable:true});return Node}();r["default"]=n},7734:function(t,r,a){"use strict";var i=this&&this.__extends||function(){var extendStatics=function(t,r){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,r){t.__proto__=r}||function(t,r){for(var a in r)if(Object.prototype.hasOwnProperty.call(r,a))t[a]=r[a]};return extendStatics(t,r)};return function(t,r){if(typeof r!=="function"&&r!==null)throw new TypeError("Class extends value "+String(r)+" is not a constructor or null");extendStatics(t,r);function __(){this.constructor=t}t.prototype=r===null?Object.create(r):(__.prototype=r.prototype,new __)}}();var n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});var o=a(1528);var d=n(a(6637));var p=n(a(5977));var l=function(t){i(TextNode,t);function TextNode(r,a,i){var n=t.call(this,a,i)||this;n.nodeType=p.default.TEXT_NODE;n._rawText=r;return n}TextNode.prototype.clone=function(){return new TextNode(this._rawText,null)};Object.defineProperty(TextNode.prototype,"rawText",{get:function(){return this._rawText},set:function(t){this._rawText=t;this._trimmedRawText=void 0;this._trimmedText=void 0},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"trimmedRawText",{get:function(){if(this._trimmedRawText!==undefined)return this._trimmedRawText;this._trimmedRawText=trimText(this.rawText);return this._trimmedRawText},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"trimmedText",{get:function(){if(this._trimmedText!==undefined)return this._trimmedText;this._trimmedText=trimText(this.text);return this._trimmedText},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"text",{get:function(){return(0,o.decode)(this.rawText)},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"isWhitespace",{get:function(){return/^(\\s|&nbsp;)*$/.test(this.rawText)},enumerable:false,configurable:true});TextNode.prototype.toString=function(){return this.rawText};return TextNode}(d.default);r["default"]=l;function trimText(t){var r=0;var a;var i;while(r>=0&&r<t.length){if(/\\S/.test(t[r])){if(a===undefined){a=r;r=t.length}else{i=r;r=void 0}}if(a===undefined)r++;else r--}if(a===undefined)a=0;if(i===undefined)i=t.length-1;var n=a>0&&/[^\\S\\r\\n]/.test(t[a-1]);var o=i<t.length-1&&/[^\\S\\r\\n]/.test(t[i+1]);return(n?" ":"")+t.slice(a,i+1)+(o?" ":"")}},5977:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var a;(function(t){t[t["ELEMENT_NODE"]=1]="ELEMENT_NODE";t[t["TEXT_NODE"]=3]="TEXT_NODE";t[t["COMMENT_NODE"]=8]="COMMENT_NODE"})(a||(a={}));r["default"]=a},4636:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r["default"]=void 0;var i=a(6992);Object.defineProperty(r,"default",{enumerable:true,get:function(){return i.parse}})},2421:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var i=a(6992);function valid(t,r){if(r===void 0){r={}}var a=(0,i.base_parse)(t,r);return Boolean(a.length===1)}r["default"]=valid},6872:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var a=function(){function VoidTag(t,r){if(t===void 0){t=false}this.addClosingSlash=t;if(Array.isArray(r)){this.voidTags=r.reduce((function(t,r){return t.add(r.toLowerCase())}),new Set)}else{this.voidTags=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"].reduce((function(t,r){return t.add(r)}),new Set)}}VoidTag.prototype.formatNode=function(t,r,a){var i=this.addClosingSlash;var n=i&&r&&!r.endsWith(" ")?" ":"";var o=i?"".concat(n,"/"):"";return this.isVoidElement(t.toLowerCase())?"<".concat(t).concat(r).concat(o,">"):"<".concat(t).concat(r,">").concat(a,"</").concat(t,">")};VoidTag.prototype.isVoidElement=function(t){return this.voidTags.has(t)};return VoidTag}();r["default"]=a},6694:function(t,r,a){"use strict";var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(r,"__esModule",{value:true});r.generate=r.compile=void 0;var n=i(a(5265));function compile(t){var r=t[0];var a=t[1]-1;if(a<0&&r<=0)return n.default.falseFunc;if(r===-1)return function(t){return t<=a};if(r===0)return function(t){return t===a};if(r===1)return a<0?n.default.trueFunc:function(t){return t>=a};var i=Math.abs(r);var o=(a%i+i)%i;return r>1?function(t){return t>=a&&t%i===o}:function(t){return t<=a&&t%i===o}}r.compile=compile;function generate(t){var r=t[0];var a=t[1]-1;var i=0;if(r<0){var n=-r;var o=(a%n+n)%n;return function(){var t=o+n*i++;return t>a?null:t}}if(r===0)return a<0?function(){return null}:function(){return i++===0?a:null};if(a<0){a+=r*Math.ceil(-a/r)}return function(){return r*i+++a}}r.generate=generate},187:(t,r,a)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.sequence=r.generate=r.compile=r.parse=void 0;var i=a(436);Object.defineProperty(r,"parse",{enumerable:true,get:function(){return i.parse}});var n=a(6694);Object.defineProperty(r,"compile",{enumerable:true,get:function(){return n.compile}});Object.defineProperty(r,"generate",{enumerable:true,get:function(){return n.generate}});function nthCheck(t){return(0,n.compile)((0,i.parse)(t))}r["default"]=nthCheck;function sequence(t){return(0,n.generate)((0,i.parse)(t))}r.sequence=sequence},436:(t,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.parse=void 0;var a=new Set([9,10,12,13,32]);var i="0".charCodeAt(0);var n="9".charCodeAt(0);function parse(t){t=t.trim().toLowerCase();if(t==="even"){return[2,0]}else if(t==="odd"){return[2,1]}var r=0;var o=0;var d=readSign();var p=readNumber();if(r<t.length&&t.charAt(r)==="n"){r++;o=d*(p!==null&&p!==void 0?p:1);skipWhitespace();if(r<t.length){d=readSign();skipWhitespace();p=readNumber()}else{d=p=0}}if(p===null||r<t.length){throw new Error("n-th rule couldn\'t be parsed (\'".concat(t,"\')"))}return[o,d*p];function readSign(){if(t.charAt(r)==="-"){r++;return-1}if(t.charAt(r)==="+"){r++}return 1}function readNumber(){var a=r;var o=0;while(r<t.length&&t.charCodeAt(r)>=i&&t.charCodeAt(r)<=n){o=o*10+(t.charCodeAt(r)-i);r++}return r===a?null:o}function skipWhitespace(){while(r<t.length&&a.has(t.charCodeAt(r))){r++}}}r.parse=parse},3079:(t,r,a)=>{var i;const n=a(9695).i;const o=a(7585);const d=new n;o.addDefaults(d);i=o.addDefaults;i=(t,r,a)=>d.addHandler(t,r,a);r.qg=t=>d.parse(t);i=n},7585:(t,r)=>{r.addDefaults=t=>{t.addHandler("year",/(?!^)[([]?((?:19[0-9]|20[012])[0-9])[)\\]]?/,{type:"integer"});t.addHandler("resolution",/([0-9]{3,4}[pi])/i,{type:"lowercase"});t.addHandler("resolution",/(4k)/i,{type:"lowercase"});t.addHandler("extended",/EXTENDED/,{type:"boolean"});t.addHandler("convert",/CONVERT/,{type:"boolean"});t.addHandler("hardcoded",/HC|HARDCODED/,{type:"boolean"});t.addHandler("proper",/(?:REAL.)?PROPER/,{type:"boolean"});t.addHandler("repack",/REPACK|RERIP/,{type:"boolean"});t.addHandler("retail",/\\bRetail\\b/i,{type:"boolean"});t.addHandler("remastered",/\\bRemaster(?:ed)?\\b/i,{type:"boolean"});t.addHandler("unrated",/\\bunrated|uncensored\\b/i,{type:"boolean"});t.addHandler("region",/R[0-9]/);t.addHandler("container",/\\b(MKV|AVI|MP4)\\b/i,{type:"lowercase"});t.addHandler("source",/\\b(?:HD-?)?CAM\\b/,{type:"lowercase"});t.addHandler("source",/\\b(?:HD-?)?T(?:ELE)?S(?:YNC)?\\b/i,{value:"telesync"});t.addHandler("source",/\\bHD-?Rip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bBRRip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bBDRip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bDVDRip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bDVD(?:R[0-9])?\\b/i,{value:"dvd"});t.addHandler("source",/\\bDVDscr\\b/i,{type:"lowercase"});t.addHandler("source",/\\b(?:HD-?)?TVRip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bTC\\b/,{type:"lowercase"});t.addHandler("source",/\\bPPVRip\\b/i,{type:"lowercase"});t.addHandler("source",/\\bR5\\b/i,{type:"lowercase"});t.addHandler("source",/\\bVHSSCR\\b/i,{type:"lowercase"});t.addHandler("source",/\\bBluray\\b/i,{type:"lowercase"});t.addHandler("source",/\\bWEB-?DL\\b/i,{type:"lowercase"});t.addHandler("source",/\\bWEB-?Rip\\b/i,{type:"lowercase"});t.addHandler("source",/\\b(?:DL|WEB|BD|BR)MUX\\b/i,{type:"lowercase"});t.addHandler("source",/\\b(DivX|XviD)\\b/,{type:"lowercase"});t.addHandler("source",/HDTV/i,{type:"lowercase"});t.addHandler("codec",/dvix|mpeg2|divx|xvid|[xh][-. ]?26[45]|avc|hevc/i,{type:"lowercase"});t.addHandler("codec",(({result:t})=>{if(t.codec){t.codec=t.codec.replace(/[ .-]/,"")}}));t.addHandler("audio",/MD|MP3|mp3|FLAC|Atmos|DTS(?:-HD)?|TrueHD/,{type:"lowercase"});t.addHandler("audio",/Dual[- ]Audio/i,{type:"lowercase"});t.addHandler("audio",/AC-?3(?:\\.5\\.1)?/i,{value:"ac3"});t.addHandler("audio",/DD5[. ]?1/i,{value:"dd5.1"});t.addHandler("audio",/AAC(?:[. ]?2[. ]0)?/,{value:"aac"});t.addHandler("group",/- ?([^\\-. ]+)$/);t.addHandler("season",/([0-9]{1,2})xall/i,{type:"integer"});t.addHandler("season",/S([0-9]{1,2}) ?E[0-9]{1,2}/i,{type:"integer"});t.addHandler("season",/([0-9]{1,2})x[0-9]{1,2}/,{type:"integer"});t.addHandler("season",/(?:Saison|Season)[. _-]?([0-9]{1,2})/i,{type:"integer"});t.addHandler("episode",/S[0-9]{1,2} ?E([0-9]{1,2})/i,{type:"integer"});t.addHandler("episode",/[0-9]{1,2}x([0-9]{1,2})/,{type:"integer"});t.addHandler("episode",/[ée]p(?:isode)?[. _-]?([0-9]{1,3})/i,{type:"integer"});t.addHandler("language",/\\bRUS\\b/i,{type:"lowercase"});t.addHandler("language",/\\bNL\\b/,{type:"lowercase"});t.addHandler("language",/\\bFLEMISH\\b/,{type:"lowercase"});t.addHandler("language",/\\bGERMAN\\b/,{type:"lowercase"});t.addHandler("language",/\\bDUBBED\\b/,{type:"lowercase"});t.addHandler("language",/\\b(ITA(?:LIAN)?|iTALiAN)\\b/,{value:"ita"});t.addHandler("language",/\\bFR(?:ENCH)?\\b/,{type:"lowercase"});t.addHandler("language",/\\bTruefrench|VF(?:[FI])\\b/i,{type:"lowercase"});t.addHandler("language",/\\bVOST(?:(?:F(?:R)?)|A)?|SUBFRENCH\\b/i,{type:"lowercase"});t.addHandler("language",/\\bMULTi(?:Lang|-VF2)?\\b/i,{type:"lowercase"})}},9695:(t,r)=>{function extendOptions(t){t=t||{};const r={skipIfAlreadyFound:true,type:"string"};t.skipIfAlreadyFound=t.skipIfAlreadyFound||r.skipIfAlreadyFound;t.type=t.type||r.type;return t}function createHandlerFromRegExp(t,r,a){let i;if(!a.type){i=t=>t}else if(a.type.toLowerCase()==="lowercase"){i=t=>t.toLowerCase()}else if(a.type.toLowerCase().slice(0,4)==="bool"){i=()=>true}else if(a.type.toLowerCase().slice(0,3)==="int"){i=t=>parseInt(t,10)}else{i=t=>t}function handler({title:n,result:o}){if(o[t]&&a.skipIfAlreadyFound){return null}const d=n.match(r);const[p,l]=d||[];if(p){o[t]=a.value||i(l||p);return d.index}return null}handler.handlerName=t;return handler}function cleanTitle(t){let r=t;if(r.indexOf(" ")===-1&&r.indexOf(".")!==-1){r=r.replace(/\\./g," ")}r=r.replace(/_/g," ");r=r.replace(/([(_]|- )$/,"").trim();return r}class Parser{constructor(){this.handlers=[]}addHandler(t,r,a){if(typeof r==="undefined"&&typeof t==="function"){r=t;r.handlerName="unknown"}else if(typeof t==="string"&&r instanceof RegExp){a=extendOptions(a);r=createHandlerFromRegExp(t,r,a)}else if(typeof r==="function"){r.handlerName=t}else{throw new Error(`Handler for ${t} should be a RegExp or a function. Got: ${typeof r}`)}this.handlers.push(r)}parse(t){const r={};let a=t.length;for(const i of this.handlers){const n=i({title:t,result:r});if(n&&n<a){a=n}}r.title=cleanTitle(t.slice(0,a));return r}}r.i=Parser},4351:t=>{\n/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet r;t.exports=typeof queueMicrotask==="function"?queueMicrotask.bind(typeof window!=="undefined"?window:global):t=>(r||(r=Promise.resolve())).then(t).catch((t=>setTimeout((()=>{throw t}),0)))},1552:(t,r,a)=>{"use strict";var i=a(4876);var n=a(2472);var o={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(t){return t.split("\\0").map((function(t){return t.normalize("NFC")})).join("\\0")}function findStatus(t){var r=0;var a=n.length-1;while(r<=a){var i=Math.floor((r+a)/2);var o=n[i];if(o[0][0]<=t&&o[0][1]>=t){return o}else if(o[0][0]>t){a=i-1}else{r=i+1}}return null}var d=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;function countSymbols(t){return t.replace(d,"_").length}function mapChars(t,r,a){var i=false;var n="";var d=countSymbols(t);for(var p=0;p<d;++p){var l=t.codePointAt(p);var s=findStatus(l);switch(s[1]){case"disallowed":i=true;n+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":n+=String.fromCodePoint.apply(String,s[2]);break;case"deviation":if(a===o.TRANSITIONAL){n+=String.fromCodePoint.apply(String,s[2])}else{n+=String.fromCodePoint(l)}break;case"valid":n+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":if(r){i=true;n+=String.fromCodePoint(l)}else{n+=String.fromCodePoint.apply(String,s[2])}break;case"disallowed_STD3_valid":if(r){i=true}n+=String.fromCodePoint(l);break}}return{string:n,error:i}}var p=/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;function validateLabel(t,r){if(t.substr(0,4)==="xn--"){t=i.toUnicode(t);r=o.NONTRANSITIONAL}var a=false;if(normalize(t)!==t||t[3]==="-"&&t[4]==="-"||t[0]==="-"||t[t.length-1]==="-"||t.indexOf(".")!==-1||t.search(p)===0){a=true}var n=countSymbols(t);for(var d=0;d<n;++d){var l=findStatus(t.codePointAt(d));if(processing===o.TRANSITIONAL&&l[1]!=="valid"||processing===o.NONTRANSITIONAL&&l[1]!=="valid"&&l[1]!=="deviation"){a=true;break}}return{label:t,error:a}}function processing(t,r,a){var i=mapChars(t,r,a);i.string=normalize(i.string);var n=i.string.split(".");for(var o=0;o<n.length;++o){try{var d=validateLabel(n[o]);n[o]=d.label;i.error=i.error||d.error}catch(t){i.error=true}}return{string:n.join("."),error:i.error}}t.exports.toASCII=function(t,r,a,n){var o=processing(t,r,a);var d=o.string.split(".");d=d.map((function(t){try{return i.toASCII(t)}catch(r){o.error=true;return t}}));if(n){var p=d.slice(0,d.length-1).join(".").length;if(p.length>253||p.length===0){o.error=true}for(var l=0;l<d.length;++l){if(d.length>63||d.length===0){o.error=true;break}}}if(o.error)return null;return d.join(".")};t.exports.toUnicode=function(t,r){var a=processing(t,r,o.NONTRANSITIONAL);return{domain:a.string,error:a.error}};t.exports.PROCESSING_OPTIONS=o},3585:function(t,r){\n/**\n * @license\n * web-streams-polyfill v3.3.3\n * Copyright 2024 Mattias Buelens, Diwank Singh Tomer and other contributors.\n * This code is released under the MIT license.\n * SPDX-License-Identifier: MIT\n */\n(function(t,a){true?a(r):0})(this,(function(t){"use strict";function noop(){return undefined}function typeIsObject(t){return typeof t==="object"&&t!==null||typeof t==="function"}const r=noop;function setFunctionName(t,r){try{Object.defineProperty(t,"name",{value:r,configurable:true})}catch(t){}}const a=Promise;const i=Promise.prototype.then;const n=Promise.reject.bind(a);function newPromise(t){return new a(t)}function promiseResolvedWith(t){return newPromise((r=>r(t)))}function promiseRejectedWith(t){return n(t)}function PerformPromiseThen(t,r,a){return i.call(t,r,a)}function uponPromise(t,a,i){PerformPromiseThen(PerformPromiseThen(t,a,i),undefined,r)}function uponFulfillment(t,r){uponPromise(t,r)}function uponRejection(t,r){uponPromise(t,undefined,r)}function transformPromiseWith(t,r,a){return PerformPromiseThen(t,r,a)}function setPromiseIsHandledToTrue(t){PerformPromiseThen(t,undefined,r)}let _queueMicrotask=t=>{if(typeof queueMicrotask==="function"){_queueMicrotask=queueMicrotask}else{const t=promiseResolvedWith(undefined);_queueMicrotask=r=>PerformPromiseThen(t,r)}return _queueMicrotask(t)};function reflectCall(t,r,a){if(typeof t!=="function"){throw new TypeError("Argument is not a function")}return Function.prototype.apply.call(t,r,a)}function promiseCall(t,r,a){try{return promiseResolvedWith(reflectCall(t,r,a))}catch(t){return promiseRejectedWith(t)}}const o=16384;class SimpleQueue{constructor(){this._cursor=0;this._size=0;this._front={_elements:[],_next:undefined};this._back=this._front;this._cursor=0;this._size=0}get length(){return this._size}push(t){const r=this._back;let a=r;if(r._elements.length===o-1){a={_elements:[],_next:undefined}}r._elements.push(t);if(a!==r){this._back=a;r._next=a}++this._size}shift(){const t=this._front;let r=t;const a=this._cursor;let i=a+1;const n=t._elements;const d=n[a];if(i===o){r=t._next;i=0}--this._size;this._cursor=i;if(t!==r){this._front=r}n[a]=undefined;return d}forEach(t){let r=this._cursor;let a=this._front;let i=a._elements;while(r!==i.length||a._next!==undefined){if(r===i.length){a=a._next;i=a._elements;r=0;if(i.length===0){break}}t(i[r]);++r}}peek(){const t=this._front;const r=this._cursor;return t._elements[r]}}const d=Symbol("[[AbortSteps]]");const p=Symbol("[[ErrorSteps]]");const l=Symbol("[[CancelSteps]]");const s=Symbol("[[PullSteps]]");const u=Symbol("[[ReleaseSteps]]");function ReadableStreamReaderGenericInitialize(t,r){t._ownerReadableStream=r;r._reader=t;if(r._state==="readable"){defaultReaderClosedPromiseInitialize(t)}else if(r._state==="closed"){defaultReaderClosedPromiseInitializeAsResolved(t)}else{defaultReaderClosedPromiseInitializeAsRejected(t,r._storedError)}}function ReadableStreamReaderGenericCancel(t,r){const a=t._ownerReadableStream;return ReadableStreamCancel(a,r)}function ReadableStreamReaderGenericRelease(t){const r=t._ownerReadableStream;if(r._state==="readable"){defaultReaderClosedPromiseReject(t,new TypeError(`Reader was released and can no longer be used to monitor the stream\'s closedness`))}else{defaultReaderClosedPromiseResetToRejected(t,new TypeError(`Reader was released and can no longer be used to monitor the stream\'s closedness`))}r._readableStreamController[u]();r._reader=undefined;t._ownerReadableStream=undefined}function readerLockException(t){return new TypeError("Cannot "+t+" a stream using a released reader")}function defaultReaderClosedPromiseInitialize(t){t._closedPromise=newPromise(((r,a)=>{t._closedPromise_resolve=r;t._closedPromise_reject=a}))}function defaultReaderClosedPromiseInitializeAsRejected(t,r){defaultReaderClosedPromiseInitialize(t);defaultReaderClosedPromiseReject(t,r)}function defaultReaderClosedPromiseInitializeAsResolved(t){defaultReaderClosedPromiseInitialize(t);defaultReaderClosedPromiseResolve(t)}function defaultReaderClosedPromiseReject(t,r){if(t._closedPromise_reject===undefined){return}setPromiseIsHandledToTrue(t._closedPromise);t._closedPromise_reject(r);t._closedPromise_resolve=undefined;t._closedPromise_reject=undefined}function defaultReaderClosedPromiseResetToRejected(t,r){defaultReaderClosedPromiseInitializeAsRejected(t,r)}function defaultReaderClosedPromiseResolve(t){if(t._closedPromise_resolve===undefined){return}t._closedPromise_resolve(undefined);t._closedPromise_resolve=undefined;t._closedPromise_reject=undefined}const c=Number.isFinite||function(t){return typeof t==="number"&&isFinite(t)};const m=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};function isDictionary(t){return typeof t==="object"||typeof t==="function"}function assertDictionary(t,r){if(t!==undefined&&!isDictionary(t)){throw new TypeError(`${r} is not an object.`)}}function assertFunction(t,r){if(typeof t!=="function"){throw new TypeError(`${r} is not a function.`)}}function isObject(t){return typeof t==="object"&&t!==null||typeof t==="function"}function assertObject(t,r){if(!isObject(t)){throw new TypeError(`${r} is not an object.`)}}function assertRequiredArgument(t,r,a){if(t===undefined){throw new TypeError(`Parameter ${r} is required in \'${a}\'.`)}}function assertRequiredField(t,r,a){if(t===undefined){throw new TypeError(`${r} is required in \'${a}\'.`)}}function convertUnrestrictedDouble(t){return Number(t)}function censorNegativeZero(t){return t===0?0:t}function integerPart(t){return censorNegativeZero(m(t))}function convertUnsignedLongLongWithEnforceRange(t,r){const a=0;const i=Number.MAX_SAFE_INTEGER;let n=Number(t);n=censorNegativeZero(n);if(!c(n)){throw new TypeError(`${r} is not a finite number`)}n=integerPart(n);if(n<a||n>i){throw new TypeError(`${r} is outside the accepted range of ${a} to ${i}, inclusive`)}if(!c(n)||n===0){return 0}return n}function assertReadableStream(t,r){if(!IsReadableStream(t)){throw new TypeError(`${r} is not a ReadableStream.`)}}function AcquireReadableStreamDefaultReader(t){return new ReadableStreamDefaultReader(t)}function ReadableStreamAddReadRequest(t,r){t._reader._readRequests.push(r)}function ReadableStreamFulfillReadRequest(t,r,a){const i=t._reader;const n=i._readRequests.shift();if(a){n._closeSteps()}else{n._chunkSteps(r)}}function ReadableStreamGetNumReadRequests(t){return t._reader._readRequests.length}function ReadableStreamHasDefaultReader(t){const r=t._reader;if(r===undefined){return false}if(!IsReadableStreamDefaultReader(r)){return false}return true}class ReadableStreamDefaultReader{constructor(t){assertRequiredArgument(t,1,"ReadableStreamDefaultReader");assertReadableStream(t,"First parameter");if(IsReadableStreamLocked(t)){throw new TypeError("This stream has already been locked for exclusive reading by another reader")}ReadableStreamReaderGenericInitialize(this,t);this._readRequests=new SimpleQueue}get closed(){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("closed"))}return this._closedPromise}cancel(t=undefined){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("cancel"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("cancel"))}return ReadableStreamReaderGenericCancel(this,t)}read(){if(!IsReadableStreamDefaultReader(this)){return promiseRejectedWith(defaultReaderBrandCheckException("read"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("read from"))}let t;let r;const a=newPromise(((a,i)=>{t=a;r=i}));const i={_chunkSteps:r=>t({value:r,done:false}),_closeSteps:()=>t({value:undefined,done:true}),_errorSteps:t=>r(t)};ReadableStreamDefaultReaderRead(this,i);return a}releaseLock(){if(!IsReadableStreamDefaultReader(this)){throw defaultReaderBrandCheckException("releaseLock")}if(this._ownerReadableStream===undefined){return}ReadableStreamDefaultReaderRelease(this)}}Object.defineProperties(ReadableStreamDefaultReader.prototype,{cancel:{enumerable:true},read:{enumerable:true},releaseLock:{enumerable:true},closed:{enumerable:true}});setFunctionName(ReadableStreamDefaultReader.prototype.cancel,"cancel");setFunctionName(ReadableStreamDefaultReader.prototype.read,"read");setFunctionName(ReadableStreamDefaultReader.prototype.releaseLock,"releaseLock");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableStreamDefaultReader.prototype,Symbol.toStringTag,{value:"ReadableStreamDefaultReader",configurable:true})}function IsReadableStreamDefaultReader(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_readRequests")){return false}return t instanceof ReadableStreamDefaultReader}function ReadableStreamDefaultReaderRead(t,r){const a=t._ownerReadableStream;a._disturbed=true;if(a._state==="closed"){r._closeSteps()}else if(a._state==="errored"){r._errorSteps(a._storedError)}else{a._readableStreamController[s](r)}}function ReadableStreamDefaultReaderRelease(t){ReadableStreamReaderGenericRelease(t);const r=new TypeError("Reader was released");ReadableStreamDefaultReaderErrorReadRequests(t,r)}function ReadableStreamDefaultReaderErrorReadRequests(t,r){const a=t._readRequests;t._readRequests=new SimpleQueue;a.forEach((t=>{t._errorSteps(r)}))}function defaultReaderBrandCheckException(t){return new TypeError(`ReadableStreamDefaultReader.prototype.${t} can only be used on a ReadableStreamDefaultReader`)}const h=Object.getPrototypeOf(Object.getPrototypeOf((async function*(){})).prototype);class ReadableStreamAsyncIteratorImpl{constructor(t,r){this._ongoingPromise=undefined;this._isFinished=false;this._reader=t;this._preventCancel=r}next(){const nextSteps=()=>this._nextSteps();this._ongoingPromise=this._ongoingPromise?transformPromiseWith(this._ongoingPromise,nextSteps,nextSteps):nextSteps();return this._ongoingPromise}return(t){const returnSteps=()=>this._returnSteps(t);return this._ongoingPromise?transformPromiseWith(this._ongoingPromise,returnSteps,returnSteps):returnSteps()}_nextSteps(){if(this._isFinished){return Promise.resolve({value:undefined,done:true})}const t=this._reader;let r;let a;const i=newPromise(((t,i)=>{r=t;a=i}));const n={_chunkSteps:t=>{this._ongoingPromise=undefined;_queueMicrotask((()=>r({value:t,done:false})))},_closeSteps:()=>{this._ongoingPromise=undefined;this._isFinished=true;ReadableStreamReaderGenericRelease(t);r({value:undefined,done:true})},_errorSteps:r=>{this._ongoingPromise=undefined;this._isFinished=true;ReadableStreamReaderGenericRelease(t);a(r)}};ReadableStreamDefaultReaderRead(t,n);return i}_returnSteps(t){if(this._isFinished){return Promise.resolve({value:t,done:true})}this._isFinished=true;const r=this._reader;if(!this._preventCancel){const a=ReadableStreamReaderGenericCancel(r,t);ReadableStreamReaderGenericRelease(r);return transformPromiseWith(a,(()=>({value:t,done:true})))}ReadableStreamReaderGenericRelease(r);return promiseResolvedWith({value:t,done:true})}}const v={next(){if(!IsReadableStreamAsyncIterator(this)){return promiseRejectedWith(streamAsyncIteratorBrandCheckException("next"))}return this._asyncIteratorImpl.next()},return(t){if(!IsReadableStreamAsyncIterator(this)){return promiseRejectedWith(streamAsyncIteratorBrandCheckException("return"))}return this._asyncIteratorImpl.return(t)}};Object.setPrototypeOf(v,h);function AcquireReadableStreamAsyncIterator(t,r){const a=AcquireReadableStreamDefaultReader(t);const i=new ReadableStreamAsyncIteratorImpl(a,r);const n=Object.create(v);n._asyncIteratorImpl=i;return n}function IsReadableStreamAsyncIterator(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_asyncIteratorImpl")){return false}try{return t._asyncIteratorImpl instanceof ReadableStreamAsyncIteratorImpl}catch(t){return false}}function streamAsyncIteratorBrandCheckException(t){return new TypeError(`ReadableStreamAsyncIterator.${t} can only be used on a ReadableSteamAsyncIterator`)}const g=Number.isNaN||function(t){return t!==t};var b,y,w;function CreateArrayFromList(t){return t.slice()}function CopyDataBlockBytes(t,r,a,i,n){new Uint8Array(t).set(new Uint8Array(a,i,n),r)}let TransferArrayBuffer=t=>{if(typeof t.transfer==="function"){TransferArrayBuffer=t=>t.transfer()}else if(typeof structuredClone==="function"){TransferArrayBuffer=t=>structuredClone(t,{transfer:[t]})}else{TransferArrayBuffer=t=>t}return TransferArrayBuffer(t)};let IsDetachedBuffer=t=>{if(typeof t.detached==="boolean"){IsDetachedBuffer=t=>t.detached}else{IsDetachedBuffer=t=>t.byteLength===0}return IsDetachedBuffer(t)};function ArrayBufferSlice(t,r,a){if(t.slice){return t.slice(r,a)}const i=a-r;const n=new ArrayBuffer(i);CopyDataBlockBytes(n,0,t,r,i);return n}function GetMethod(t,r){const a=t[r];if(a===undefined||a===null){return undefined}if(typeof a!=="function"){throw new TypeError(`${String(r)} is not a function`)}return a}function CreateAsyncFromSyncIterator(t){const r={[Symbol.iterator]:()=>t.iterator};const a=async function*(){return yield*r}();const i=a.next;return{iterator:a,nextMethod:i,done:false}}const S=(w=(b=Symbol.asyncIterator)!==null&&b!==void 0?b:(y=Symbol.for)===null||y===void 0?void 0:y.call(Symbol,"Symbol.asyncIterator"))!==null&&w!==void 0?w:"@@asyncIterator";function GetIterator(t,r="sync",a){if(a===undefined){if(r==="async"){a=GetMethod(t,S);if(a===undefined){const r=GetMethod(t,Symbol.iterator);const a=GetIterator(t,"sync",r);return CreateAsyncFromSyncIterator(a)}}else{a=GetMethod(t,Symbol.iterator)}}if(a===undefined){throw new TypeError("The object is not iterable")}const i=reflectCall(a,t,[]);if(!typeIsObject(i)){throw new TypeError("The iterator method must return an object")}const n=i.next;return{iterator:i,nextMethod:n,done:false}}function IteratorNext(t){const r=reflectCall(t.nextMethod,t.iterator,[]);if(!typeIsObject(r)){throw new TypeError("The iterator.next() method must return an object")}return r}function IteratorComplete(t){return Boolean(t.done)}function IteratorValue(t){return t.value}function IsNonNegativeNumber(t){if(typeof t!=="number"){return false}if(g(t)){return false}if(t<0){return false}return true}function CloneAsUint8Array(t){const r=ArrayBufferSlice(t.buffer,t.byteOffset,t.byteOffset+t.byteLength);return new Uint8Array(r)}function DequeueValue(t){const r=t._queue.shift();t._queueTotalSize-=r.size;if(t._queueTotalSize<0){t._queueTotalSize=0}return r.value}function EnqueueValueWithSize(t,r,a){if(!IsNonNegativeNumber(a)||a===Infinity){throw new RangeError("Size must be a finite, non-NaN, non-negative number.")}t._queue.push({value:r,size:a});t._queueTotalSize+=a}function PeekQueueValue(t){const r=t._queue.peek();return r.value}function ResetQueue(t){t._queue=new SimpleQueue;t._queueTotalSize=0}function isDataViewConstructor(t){return t===DataView}function isDataView(t){return isDataViewConstructor(t.constructor)}function arrayBufferViewElementSize(t){if(isDataViewConstructor(t)){return 1}return t.BYTES_PER_ELEMENT}class ReadableStreamBYOBRequest{constructor(){throw new TypeError("Illegal constructor")}get view(){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("view")}return this._view}respond(t){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("respond")}assertRequiredArgument(t,1,"respond");t=convertUnsignedLongLongWithEnforceRange(t,"First parameter");if(this._associatedReadableByteStreamController===undefined){throw new TypeError("This BYOB request has been invalidated")}if(IsDetachedBuffer(this._view.buffer)){throw new TypeError(`The BYOB request\'s buffer has been detached and so cannot be used as a response`)}ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController,t)}respondWithNewView(t){if(!IsReadableStreamBYOBRequest(this)){throw byobRequestBrandCheckException("respondWithNewView")}assertRequiredArgument(t,1,"respondWithNewView");if(!ArrayBuffer.isView(t)){throw new TypeError("You can only respond with array buffer views")}if(this._associatedReadableByteStreamController===undefined){throw new TypeError("This BYOB request has been invalidated")}if(IsDetachedBuffer(t.buffer)){throw new TypeError("The given view\'s buffer has been detached and so cannot be used as a response")}ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController,t)}}Object.defineProperties(ReadableStreamBYOBRequest.prototype,{respond:{enumerable:true},respondWithNewView:{enumerable:true},view:{enumerable:true}});setFunctionName(ReadableStreamBYOBRequest.prototype.respond,"respond");setFunctionName(ReadableStreamBYOBRequest.prototype.respondWithNewView,"respondWithNewView");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableStreamBYOBRequest.prototype,Symbol.toStringTag,{value:"ReadableStreamBYOBRequest",configurable:true})}class ReadableByteStreamController{constructor(){throw new TypeError("Illegal constructor")}get byobRequest(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("byobRequest")}return ReadableByteStreamControllerGetBYOBRequest(this)}get desiredSize(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("desiredSize")}return ReadableByteStreamControllerGetDesiredSize(this)}close(){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("close")}if(this._closeRequested){throw new TypeError("The stream has already been closed; do not close it again!")}const t=this._controlledReadableByteStream._state;if(t!=="readable"){throw new TypeError(`The stream (in ${t} state) is not in the readable state and cannot be closed`)}ReadableByteStreamControllerClose(this)}enqueue(t){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("enqueue")}assertRequiredArgument(t,1,"enqueue");if(!ArrayBuffer.isView(t)){throw new TypeError("chunk must be an array buffer view")}if(t.byteLength===0){throw new TypeError("chunk must have non-zero byteLength")}if(t.buffer.byteLength===0){throw new TypeError(`chunk\'s buffer must have non-zero byteLength`)}if(this._closeRequested){throw new TypeError("stream is closed or draining")}const r=this._controlledReadableByteStream._state;if(r!=="readable"){throw new TypeError(`The stream (in ${r} state) is not in the readable state and cannot be enqueued to`)}ReadableByteStreamControllerEnqueue(this,t)}error(t=undefined){if(!IsReadableByteStreamController(this)){throw byteStreamControllerBrandCheckException("error")}ReadableByteStreamControllerError(this,t)}[l](t){ReadableByteStreamControllerClearPendingPullIntos(this);ResetQueue(this);const r=this._cancelAlgorithm(t);ReadableByteStreamControllerClearAlgorithms(this);return r}[s](t){const r=this._controlledReadableByteStream;if(this._queueTotalSize>0){ReadableByteStreamControllerFillReadRequestFromQueue(this,t);return}const a=this._autoAllocateChunkSize;if(a!==undefined){let r;try{r=new ArrayBuffer(a)}catch(r){t._errorSteps(r);return}const i={buffer:r,bufferByteLength:a,byteOffset:0,byteLength:a,bytesFilled:0,minimumFill:1,elementSize:1,viewConstructor:Uint8Array,readerType:"default"};this._pendingPullIntos.push(i)}ReadableStreamAddReadRequest(r,t);ReadableByteStreamControllerCallPullIfNeeded(this)}[u](){if(this._pendingPullIntos.length>0){const t=this._pendingPullIntos.peek();t.readerType="none";this._pendingPullIntos=new SimpleQueue;this._pendingPullIntos.push(t)}}}Object.defineProperties(ReadableByteStreamController.prototype,{close:{enumerable:true},enqueue:{enumerable:true},error:{enumerable:true},byobRequest:{enumerable:true},desiredSize:{enumerable:true}});setFunctionName(ReadableByteStreamController.prototype.close,"close");setFunctionName(ReadableByteStreamController.prototype.enqueue,"enqueue");setFunctionName(ReadableByteStreamController.prototype.error,"error");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableByteStreamController.prototype,Symbol.toStringTag,{value:"ReadableByteStreamController",configurable:true})}function IsReadableByteStreamController(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_controlledReadableByteStream")){return false}return t instanceof ReadableByteStreamController}function IsReadableStreamBYOBRequest(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_associatedReadableByteStreamController")){return false}return t instanceof ReadableStreamBYOBRequest}function ReadableByteStreamControllerCallPullIfNeeded(t){const r=ReadableByteStreamControllerShouldCallPull(t);if(!r){return}if(t._pulling){t._pullAgain=true;return}t._pulling=true;const a=t._pullAlgorithm();uponPromise(a,(()=>{t._pulling=false;if(t._pullAgain){t._pullAgain=false;ReadableByteStreamControllerCallPullIfNeeded(t)}return null}),(r=>{ReadableByteStreamControllerError(t,r);return null}))}function ReadableByteStreamControllerClearPendingPullIntos(t){ReadableByteStreamControllerInvalidateBYOBRequest(t);t._pendingPullIntos=new SimpleQueue}function ReadableByteStreamControllerCommitPullIntoDescriptor(t,r){let a=false;if(t._state==="closed"){a=true}const i=ReadableByteStreamControllerConvertPullIntoDescriptor(r);if(r.readerType==="default"){ReadableStreamFulfillReadRequest(t,i,a)}else{ReadableStreamFulfillReadIntoRequest(t,i,a)}}function ReadableByteStreamControllerConvertPullIntoDescriptor(t){const r=t.bytesFilled;const a=t.elementSize;return new t.viewConstructor(t.buffer,t.byteOffset,r/a)}function ReadableByteStreamControllerEnqueueChunkToQueue(t,r,a,i){t._queue.push({buffer:r,byteOffset:a,byteLength:i});t._queueTotalSize+=i}function ReadableByteStreamControllerEnqueueClonedChunkToQueue(t,r,a,i){let n;try{n=ArrayBufferSlice(r,a,a+i)}catch(r){ReadableByteStreamControllerError(t,r);throw r}ReadableByteStreamControllerEnqueueChunkToQueue(t,n,0,i)}function ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(t,r){if(r.bytesFilled>0){ReadableByteStreamControllerEnqueueClonedChunkToQueue(t,r.buffer,r.byteOffset,r.bytesFilled)}ReadableByteStreamControllerShiftPendingPullInto(t)}function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(t,r){const a=Math.min(t._queueTotalSize,r.byteLength-r.bytesFilled);const i=r.bytesFilled+a;let n=a;let o=false;const d=i%r.elementSize;const p=i-d;if(p>=r.minimumFill){n=p-r.bytesFilled;o=true}const l=t._queue;while(n>0){const a=l.peek();const i=Math.min(n,a.byteLength);const o=r.byteOffset+r.bytesFilled;CopyDataBlockBytes(r.buffer,o,a.buffer,a.byteOffset,i);if(a.byteLength===i){l.shift()}else{a.byteOffset+=i;a.byteLength-=i}t._queueTotalSize-=i;ReadableByteStreamControllerFillHeadPullIntoDescriptor(t,i,r);n-=i}return o}function ReadableByteStreamControllerFillHeadPullIntoDescriptor(t,r,a){a.bytesFilled+=r}function ReadableByteStreamControllerHandleQueueDrain(t){if(t._queueTotalSize===0&&t._closeRequested){ReadableByteStreamControllerClearAlgorithms(t);ReadableStreamClose(t._controlledReadableByteStream)}else{ReadableByteStreamControllerCallPullIfNeeded(t)}}function ReadableByteStreamControllerInvalidateBYOBRequest(t){if(t._byobRequest===null){return}t._byobRequest._associatedReadableByteStreamController=undefined;t._byobRequest._view=null;t._byobRequest=null}function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(t){while(t._pendingPullIntos.length>0){if(t._queueTotalSize===0){return}const r=t._pendingPullIntos.peek();if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(t,r)){ReadableByteStreamControllerShiftPendingPullInto(t);ReadableByteStreamControllerCommitPullIntoDescriptor(t._controlledReadableByteStream,r)}}}function ReadableByteStreamControllerProcessReadRequestsUsingQueue(t){const r=t._controlledReadableByteStream._reader;while(r._readRequests.length>0){if(t._queueTotalSize===0){return}const a=r._readRequests.shift();ReadableByteStreamControllerFillReadRequestFromQueue(t,a)}}function ReadableByteStreamControllerPullInto(t,r,a,i){const n=t._controlledReadableByteStream;const o=r.constructor;const d=arrayBufferViewElementSize(o);const{byteOffset:p,byteLength:l}=r;const s=a*d;let u;try{u=TransferArrayBuffer(r.buffer)}catch(t){i._errorSteps(t);return}const c={buffer:u,bufferByteLength:u.byteLength,byteOffset:p,byteLength:l,bytesFilled:0,minimumFill:s,elementSize:d,viewConstructor:o,readerType:"byob"};if(t._pendingPullIntos.length>0){t._pendingPullIntos.push(c);ReadableStreamAddReadIntoRequest(n,i);return}if(n._state==="closed"){const t=new o(c.buffer,c.byteOffset,0);i._closeSteps(t);return}if(t._queueTotalSize>0){if(ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(t,c)){const r=ReadableByteStreamControllerConvertPullIntoDescriptor(c);ReadableByteStreamControllerHandleQueueDrain(t);i._chunkSteps(r);return}if(t._closeRequested){const r=new TypeError("Insufficient bytes to fill elements in the given buffer");ReadableByteStreamControllerError(t,r);i._errorSteps(r);return}}t._pendingPullIntos.push(c);ReadableStreamAddReadIntoRequest(n,i);ReadableByteStreamControllerCallPullIfNeeded(t)}function ReadableByteStreamControllerRespondInClosedState(t,r){if(r.readerType==="none"){ReadableByteStreamControllerShiftPendingPullInto(t)}const a=t._controlledReadableByteStream;if(ReadableStreamHasBYOBReader(a)){while(ReadableStreamGetNumReadIntoRequests(a)>0){const r=ReadableByteStreamControllerShiftPendingPullInto(t);ReadableByteStreamControllerCommitPullIntoDescriptor(a,r)}}}function ReadableByteStreamControllerRespondInReadableState(t,r,a){ReadableByteStreamControllerFillHeadPullIntoDescriptor(t,r,a);if(a.readerType==="none"){ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(t,a);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(t);return}if(a.bytesFilled<a.minimumFill){return}ReadableByteStreamControllerShiftPendingPullInto(t);const i=a.bytesFilled%a.elementSize;if(i>0){const r=a.byteOffset+a.bytesFilled;ReadableByteStreamControllerEnqueueClonedChunkToQueue(t,a.buffer,r-i,i)}a.bytesFilled-=i;ReadableByteStreamControllerCommitPullIntoDescriptor(t._controlledReadableByteStream,a);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(t)}function ReadableByteStreamControllerRespondInternal(t,r){const a=t._pendingPullIntos.peek();ReadableByteStreamControllerInvalidateBYOBRequest(t);const i=t._controlledReadableByteStream._state;if(i==="closed"){ReadableByteStreamControllerRespondInClosedState(t,a)}else{ReadableByteStreamControllerRespondInReadableState(t,r,a)}ReadableByteStreamControllerCallPullIfNeeded(t)}function ReadableByteStreamControllerShiftPendingPullInto(t){const r=t._pendingPullIntos.shift();return r}function ReadableByteStreamControllerShouldCallPull(t){const r=t._controlledReadableByteStream;if(r._state!=="readable"){return false}if(t._closeRequested){return false}if(!t._started){return false}if(ReadableStreamHasDefaultReader(r)&&ReadableStreamGetNumReadRequests(r)>0){return true}if(ReadableStreamHasBYOBReader(r)&&ReadableStreamGetNumReadIntoRequests(r)>0){return true}const a=ReadableByteStreamControllerGetDesiredSize(t);if(a>0){return true}return false}function ReadableByteStreamControllerClearAlgorithms(t){t._pullAlgorithm=undefined;t._cancelAlgorithm=undefined}function ReadableByteStreamControllerClose(t){const r=t._controlledReadableByteStream;if(t._closeRequested||r._state!=="readable"){return}if(t._queueTotalSize>0){t._closeRequested=true;return}if(t._pendingPullIntos.length>0){const r=t._pendingPullIntos.peek();if(r.bytesFilled%r.elementSize!==0){const r=new TypeError("Insufficient bytes to fill elements in the given buffer");ReadableByteStreamControllerError(t,r);throw r}}ReadableByteStreamControllerClearAlgorithms(t);ReadableStreamClose(r)}function ReadableByteStreamControllerEnqueue(t,r){const a=t._controlledReadableByteStream;if(t._closeRequested||a._state!=="readable"){return}const{buffer:i,byteOffset:n,byteLength:o}=r;if(IsDetachedBuffer(i)){throw new TypeError("chunk\'s buffer is detached and so cannot be enqueued")}const d=TransferArrayBuffer(i);if(t._pendingPullIntos.length>0){const r=t._pendingPullIntos.peek();if(IsDetachedBuffer(r.buffer)){throw new TypeError("The BYOB request\'s buffer has been detached and so cannot be filled with an enqueued chunk")}ReadableByteStreamControllerInvalidateBYOBRequest(t);r.buffer=TransferArrayBuffer(r.buffer);if(r.readerType==="none"){ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue(t,r)}}if(ReadableStreamHasDefaultReader(a)){ReadableByteStreamControllerProcessReadRequestsUsingQueue(t);if(ReadableStreamGetNumReadRequests(a)===0){ReadableByteStreamControllerEnqueueChunkToQueue(t,d,n,o)}else{if(t._pendingPullIntos.length>0){ReadableByteStreamControllerShiftPendingPullInto(t)}const r=new Uint8Array(d,n,o);ReadableStreamFulfillReadRequest(a,r,false)}}else if(ReadableStreamHasBYOBReader(a)){ReadableByteStreamControllerEnqueueChunkToQueue(t,d,n,o);ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(t)}else{ReadableByteStreamControllerEnqueueChunkToQueue(t,d,n,o)}ReadableByteStreamControllerCallPullIfNeeded(t)}function ReadableByteStreamControllerError(t,r){const a=t._controlledReadableByteStream;if(a._state!=="readable"){return}ReadableByteStreamControllerClearPendingPullIntos(t);ResetQueue(t);ReadableByteStreamControllerClearAlgorithms(t);ReadableStreamError(a,r)}function ReadableByteStreamControllerFillReadRequestFromQueue(t,r){const a=t._queue.shift();t._queueTotalSize-=a.byteLength;ReadableByteStreamControllerHandleQueueDrain(t);const i=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);r._chunkSteps(i)}function ReadableByteStreamControllerGetBYOBRequest(t){if(t._byobRequest===null&&t._pendingPullIntos.length>0){const r=t._pendingPullIntos.peek();const a=new Uint8Array(r.buffer,r.byteOffset+r.bytesFilled,r.byteLength-r.bytesFilled);const i=Object.create(ReadableStreamBYOBRequest.prototype);SetUpReadableStreamBYOBRequest(i,t,a);t._byobRequest=i}return t._byobRequest}function ReadableByteStreamControllerGetDesiredSize(t){const r=t._controlledReadableByteStream._state;if(r==="errored"){return null}if(r==="closed"){return 0}return t._strategyHWM-t._queueTotalSize}function ReadableByteStreamControllerRespond(t,r){const a=t._pendingPullIntos.peek();const i=t._controlledReadableByteStream._state;if(i==="closed"){if(r!==0){throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream")}}else{if(r===0){throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream")}if(a.bytesFilled+r>a.byteLength){throw new RangeError("bytesWritten out of range")}}a.buffer=TransferArrayBuffer(a.buffer);ReadableByteStreamControllerRespondInternal(t,r)}function ReadableByteStreamControllerRespondWithNewView(t,r){const a=t._pendingPullIntos.peek();const i=t._controlledReadableByteStream._state;if(i==="closed"){if(r.byteLength!==0){throw new TypeError("The view\'s length must be 0 when calling respondWithNewView() on a closed stream")}}else{if(r.byteLength===0){throw new TypeError("The view\'s length must be greater than 0 when calling respondWithNewView() on a readable stream")}}if(a.byteOffset+a.bytesFilled!==r.byteOffset){throw new RangeError("The region specified by view does not match byobRequest")}if(a.bufferByteLength!==r.buffer.byteLength){throw new RangeError("The buffer of view has different capacity than byobRequest")}if(a.bytesFilled+r.byteLength>a.byteLength){throw new RangeError("The region specified by view is larger than byobRequest")}const n=r.byteLength;a.buffer=TransferArrayBuffer(r.buffer);ReadableByteStreamControllerRespondInternal(t,n)}function SetUpReadableByteStreamController(t,r,a,i,n,o,d){r._controlledReadableByteStream=t;r._pullAgain=false;r._pulling=false;r._byobRequest=null;r._queue=r._queueTotalSize=undefined;ResetQueue(r);r._closeRequested=false;r._started=false;r._strategyHWM=o;r._pullAlgorithm=i;r._cancelAlgorithm=n;r._autoAllocateChunkSize=d;r._pendingPullIntos=new SimpleQueue;t._readableStreamController=r;const p=a();uponPromise(promiseResolvedWith(p),(()=>{r._started=true;ReadableByteStreamControllerCallPullIfNeeded(r);return null}),(t=>{ReadableByteStreamControllerError(r,t);return null}))}function SetUpReadableByteStreamControllerFromUnderlyingSource(t,r,a){const i=Object.create(ReadableByteStreamController.prototype);let n;let o;let d;if(r.start!==undefined){n=()=>r.start(i)}else{n=()=>undefined}if(r.pull!==undefined){o=()=>r.pull(i)}else{o=()=>promiseResolvedWith(undefined)}if(r.cancel!==undefined){d=t=>r.cancel(t)}else{d=()=>promiseResolvedWith(undefined)}const p=r.autoAllocateChunkSize;if(p===0){throw new TypeError("autoAllocateChunkSize must be greater than 0")}SetUpReadableByteStreamController(t,i,n,o,d,a,p)}function SetUpReadableStreamBYOBRequest(t,r,a){t._associatedReadableByteStreamController=r;t._view=a}function byobRequestBrandCheckException(t){return new TypeError(`ReadableStreamBYOBRequest.prototype.${t} can only be used on a ReadableStreamBYOBRequest`)}function byteStreamControllerBrandCheckException(t){return new TypeError(`ReadableByteStreamController.prototype.${t} can only be used on a ReadableByteStreamController`)}function convertReaderOptions(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.mode;return{mode:a===undefined?undefined:convertReadableStreamReaderMode(a,`${r} has member \'mode\' that`)}}function convertReadableStreamReaderMode(t,r){t=`${t}`;if(t!=="byob"){throw new TypeError(`${r} \'${t}\' is not a valid enumeration value for ReadableStreamReaderMode`)}return t}function convertByobReadOptions(t,r){var a;assertDictionary(t,r);const i=(a=t===null||t===void 0?void 0:t.min)!==null&&a!==void 0?a:1;return{min:convertUnsignedLongLongWithEnforceRange(i,`${r} has member \'min\' that`)}}function AcquireReadableStreamBYOBReader(t){return new ReadableStreamBYOBReader(t)}function ReadableStreamAddReadIntoRequest(t,r){t._reader._readIntoRequests.push(r)}function ReadableStreamFulfillReadIntoRequest(t,r,a){const i=t._reader;const n=i._readIntoRequests.shift();if(a){n._closeSteps(r)}else{n._chunkSteps(r)}}function ReadableStreamGetNumReadIntoRequests(t){return t._reader._readIntoRequests.length}function ReadableStreamHasBYOBReader(t){const r=t._reader;if(r===undefined){return false}if(!IsReadableStreamBYOBReader(r)){return false}return true}class ReadableStreamBYOBReader{constructor(t){assertRequiredArgument(t,1,"ReadableStreamBYOBReader");assertReadableStream(t,"First parameter");if(IsReadableStreamLocked(t)){throw new TypeError("This stream has already been locked for exclusive reading by another reader")}if(!IsReadableByteStreamController(t._readableStreamController)){throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte "+"source")}ReadableStreamReaderGenericInitialize(this,t);this._readIntoRequests=new SimpleQueue}get closed(){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("closed"))}return this._closedPromise}cancel(t=undefined){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("cancel"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("cancel"))}return ReadableStreamReaderGenericCancel(this,t)}read(t,r={}){if(!IsReadableStreamBYOBReader(this)){return promiseRejectedWith(byobReaderBrandCheckException("read"))}if(!ArrayBuffer.isView(t)){return promiseRejectedWith(new TypeError("view must be an array buffer view"))}if(t.byteLength===0){return promiseRejectedWith(new TypeError("view must have non-zero byteLength"))}if(t.buffer.byteLength===0){return promiseRejectedWith(new TypeError(`view\'s buffer must have non-zero byteLength`))}if(IsDetachedBuffer(t.buffer)){return promiseRejectedWith(new TypeError("view\'s buffer has been detached"))}let a;try{a=convertByobReadOptions(r,"options")}catch(t){return promiseRejectedWith(t)}const i=a.min;if(i===0){return promiseRejectedWith(new TypeError("options.min must be greater than 0"))}if(!isDataView(t)){if(i>t.length){return promiseRejectedWith(new RangeError("options.min must be less than or equal to view\'s length"))}}else if(i>t.byteLength){return promiseRejectedWith(new RangeError("options.min must be less than or equal to view\'s byteLength"))}if(this._ownerReadableStream===undefined){return promiseRejectedWith(readerLockException("read from"))}let n;let o;const d=newPromise(((t,r)=>{n=t;o=r}));const p={_chunkSteps:t=>n({value:t,done:false}),_closeSteps:t=>n({value:t,done:true}),_errorSteps:t=>o(t)};ReadableStreamBYOBReaderRead(this,t,i,p);return d}releaseLock(){if(!IsReadableStreamBYOBReader(this)){throw byobReaderBrandCheckException("releaseLock")}if(this._ownerReadableStream===undefined){return}ReadableStreamBYOBReaderRelease(this)}}Object.defineProperties(ReadableStreamBYOBReader.prototype,{cancel:{enumerable:true},read:{enumerable:true},releaseLock:{enumerable:true},closed:{enumerable:true}});setFunctionName(ReadableStreamBYOBReader.prototype.cancel,"cancel");setFunctionName(ReadableStreamBYOBReader.prototype.read,"read");setFunctionName(ReadableStreamBYOBReader.prototype.releaseLock,"releaseLock");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableStreamBYOBReader.prototype,Symbol.toStringTag,{value:"ReadableStreamBYOBReader",configurable:true})}function IsReadableStreamBYOBReader(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_readIntoRequests")){return false}return t instanceof ReadableStreamBYOBReader}function ReadableStreamBYOBReaderRead(t,r,a,i){const n=t._ownerReadableStream;n._disturbed=true;if(n._state==="errored"){i._errorSteps(n._storedError)}else{ReadableByteStreamControllerPullInto(n._readableStreamController,r,a,i)}}function ReadableStreamBYOBReaderRelease(t){ReadableStreamReaderGenericRelease(t);const r=new TypeError("Reader was released");ReadableStreamBYOBReaderErrorReadIntoRequests(t,r)}function ReadableStreamBYOBReaderErrorReadIntoRequests(t,r){const a=t._readIntoRequests;t._readIntoRequests=new SimpleQueue;a.forEach((t=>{t._errorSteps(r)}))}function byobReaderBrandCheckException(t){return new TypeError(`ReadableStreamBYOBReader.prototype.${t} can only be used on a ReadableStreamBYOBReader`)}function ExtractHighWaterMark(t,r){const{highWaterMark:a}=t;if(a===undefined){return r}if(g(a)||a<0){throw new RangeError("Invalid highWaterMark")}return a}function ExtractSizeAlgorithm(t){const{size:r}=t;if(!r){return()=>1}return r}function convertQueuingStrategy(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.highWaterMark;const i=t===null||t===void 0?void 0:t.size;return{highWaterMark:a===undefined?undefined:convertUnrestrictedDouble(a),size:i===undefined?undefined:convertQueuingStrategySize(i,`${r} has member \'size\' that`)}}function convertQueuingStrategySize(t,r){assertFunction(t,r);return r=>convertUnrestrictedDouble(t(r))}function convertUnderlyingSink(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.abort;const i=t===null||t===void 0?void 0:t.close;const n=t===null||t===void 0?void 0:t.start;const o=t===null||t===void 0?void 0:t.type;const d=t===null||t===void 0?void 0:t.write;return{abort:a===undefined?undefined:convertUnderlyingSinkAbortCallback(a,t,`${r} has member \'abort\' that`),close:i===undefined?undefined:convertUnderlyingSinkCloseCallback(i,t,`${r} has member \'close\' that`),start:n===undefined?undefined:convertUnderlyingSinkStartCallback(n,t,`${r} has member \'start\' that`),write:d===undefined?undefined:convertUnderlyingSinkWriteCallback(d,t,`${r} has member \'write\' that`),type:o}}function convertUnderlyingSinkAbortCallback(t,r,a){assertFunction(t,a);return a=>promiseCall(t,r,[a])}function convertUnderlyingSinkCloseCallback(t,r,a){assertFunction(t,a);return()=>promiseCall(t,r,[])}function convertUnderlyingSinkStartCallback(t,r,a){assertFunction(t,a);return a=>reflectCall(t,r,[a])}function convertUnderlyingSinkWriteCallback(t,r,a){assertFunction(t,a);return(a,i)=>promiseCall(t,r,[a,i])}function assertWritableStream(t,r){if(!IsWritableStream(t)){throw new TypeError(`${r} is not a WritableStream.`)}}function isAbortSignal(t){if(typeof t!=="object"||t===null){return false}try{return typeof t.aborted==="boolean"}catch(t){return false}}const _=typeof AbortController==="function";function createAbortController(){if(_){return new AbortController}return undefined}class WritableStream{constructor(t={},r={}){if(t===undefined){t=null}else{assertObject(t,"First parameter")}const a=convertQueuingStrategy(r,"Second parameter");const i=convertUnderlyingSink(t,"First parameter");InitializeWritableStream(this);const n=i.type;if(n!==undefined){throw new RangeError("Invalid type is specified")}const o=ExtractSizeAlgorithm(a);const d=ExtractHighWaterMark(a,1);SetUpWritableStreamDefaultControllerFromUnderlyingSink(this,i,d,o)}get locked(){if(!IsWritableStream(this)){throw streamBrandCheckException$2("locked")}return IsWritableStreamLocked(this)}abort(t=undefined){if(!IsWritableStream(this)){return promiseRejectedWith(streamBrandCheckException$2("abort"))}if(IsWritableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot abort a stream that already has a writer"))}return WritableStreamAbort(this,t)}close(){if(!IsWritableStream(this)){return promiseRejectedWith(streamBrandCheckException$2("close"))}if(IsWritableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot close a stream that already has a writer"))}if(WritableStreamCloseQueuedOrInFlight(this)){return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"))}return WritableStreamClose(this)}getWriter(){if(!IsWritableStream(this)){throw streamBrandCheckException$2("getWriter")}return AcquireWritableStreamDefaultWriter(this)}}Object.defineProperties(WritableStream.prototype,{abort:{enumerable:true},close:{enumerable:true},getWriter:{enumerable:true},locked:{enumerable:true}});setFunctionName(WritableStream.prototype.abort,"abort");setFunctionName(WritableStream.prototype.close,"close");setFunctionName(WritableStream.prototype.getWriter,"getWriter");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(WritableStream.prototype,Symbol.toStringTag,{value:"WritableStream",configurable:true})}function AcquireWritableStreamDefaultWriter(t){return new WritableStreamDefaultWriter(t)}function CreateWritableStream(t,r,a,i,n=1,o=()=>1){const d=Object.create(WritableStream.prototype);InitializeWritableStream(d);const p=Object.create(WritableStreamDefaultController.prototype);SetUpWritableStreamDefaultController(d,p,t,r,a,i,n,o);return d}function InitializeWritableStream(t){t._state="writable";t._storedError=undefined;t._writer=undefined;t._writableStreamController=undefined;t._writeRequests=new SimpleQueue;t._inFlightWriteRequest=undefined;t._closeRequest=undefined;t._inFlightCloseRequest=undefined;t._pendingAbortRequest=undefined;t._backpressure=false}function IsWritableStream(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_writableStreamController")){return false}return t instanceof WritableStream}function IsWritableStreamLocked(t){if(t._writer===undefined){return false}return true}function WritableStreamAbort(t,r){var a;if(t._state==="closed"||t._state==="errored"){return promiseResolvedWith(undefined)}t._writableStreamController._abortReason=r;(a=t._writableStreamController._abortController)===null||a===void 0?void 0:a.abort(r);const i=t._state;if(i==="closed"||i==="errored"){return promiseResolvedWith(undefined)}if(t._pendingAbortRequest!==undefined){return t._pendingAbortRequest._promise}let n=false;if(i==="erroring"){n=true;r=undefined}const o=newPromise(((a,i)=>{t._pendingAbortRequest={_promise:undefined,_resolve:a,_reject:i,_reason:r,_wasAlreadyErroring:n}}));t._pendingAbortRequest._promise=o;if(!n){WritableStreamStartErroring(t,r)}return o}function WritableStreamClose(t){const r=t._state;if(r==="closed"||r==="errored"){return promiseRejectedWith(new TypeError(`The stream (in ${r} state) is not in the writable state and cannot be closed`))}const a=newPromise(((r,a)=>{const i={_resolve:r,_reject:a};t._closeRequest=i}));const i=t._writer;if(i!==undefined&&t._backpressure&&r==="writable"){defaultWriterReadyPromiseResolve(i)}WritableStreamDefaultControllerClose(t._writableStreamController);return a}function WritableStreamAddWriteRequest(t){const r=newPromise(((r,a)=>{const i={_resolve:r,_reject:a};t._writeRequests.push(i)}));return r}function WritableStreamDealWithRejection(t,r){const a=t._state;if(a==="writable"){WritableStreamStartErroring(t,r);return}WritableStreamFinishErroring(t)}function WritableStreamStartErroring(t,r){const a=t._writableStreamController;t._state="erroring";t._storedError=r;const i=t._writer;if(i!==undefined){WritableStreamDefaultWriterEnsureReadyPromiseRejected(i,r)}if(!WritableStreamHasOperationMarkedInFlight(t)&&a._started){WritableStreamFinishErroring(t)}}function WritableStreamFinishErroring(t){t._state="errored";t._writableStreamController[p]();const r=t._storedError;t._writeRequests.forEach((t=>{t._reject(r)}));t._writeRequests=new SimpleQueue;if(t._pendingAbortRequest===undefined){WritableStreamRejectCloseAndClosedPromiseIfNeeded(t);return}const a=t._pendingAbortRequest;t._pendingAbortRequest=undefined;if(a._wasAlreadyErroring){a._reject(r);WritableStreamRejectCloseAndClosedPromiseIfNeeded(t);return}const i=t._writableStreamController[d](a._reason);uponPromise(i,(()=>{a._resolve();WritableStreamRejectCloseAndClosedPromiseIfNeeded(t);return null}),(r=>{a._reject(r);WritableStreamRejectCloseAndClosedPromiseIfNeeded(t);return null}))}function WritableStreamFinishInFlightWrite(t){t._inFlightWriteRequest._resolve(undefined);t._inFlightWriteRequest=undefined}function WritableStreamFinishInFlightWriteWithError(t,r){t._inFlightWriteRequest._reject(r);t._inFlightWriteRequest=undefined;WritableStreamDealWithRejection(t,r)}function WritableStreamFinishInFlightClose(t){t._inFlightCloseRequest._resolve(undefined);t._inFlightCloseRequest=undefined;const r=t._state;if(r==="erroring"){t._storedError=undefined;if(t._pendingAbortRequest!==undefined){t._pendingAbortRequest._resolve();t._pendingAbortRequest=undefined}}t._state="closed";const a=t._writer;if(a!==undefined){defaultWriterClosedPromiseResolve(a)}}function WritableStreamFinishInFlightCloseWithError(t,r){t._inFlightCloseRequest._reject(r);t._inFlightCloseRequest=undefined;if(t._pendingAbortRequest!==undefined){t._pendingAbortRequest._reject(r);t._pendingAbortRequest=undefined}WritableStreamDealWithRejection(t,r)}function WritableStreamCloseQueuedOrInFlight(t){if(t._closeRequest===undefined&&t._inFlightCloseRequest===undefined){return false}return true}function WritableStreamHasOperationMarkedInFlight(t){if(t._inFlightWriteRequest===undefined&&t._inFlightCloseRequest===undefined){return false}return true}function WritableStreamMarkCloseRequestInFlight(t){t._inFlightCloseRequest=t._closeRequest;t._closeRequest=undefined}function WritableStreamMarkFirstWriteRequestInFlight(t){t._inFlightWriteRequest=t._writeRequests.shift()}function WritableStreamRejectCloseAndClosedPromiseIfNeeded(t){if(t._closeRequest!==undefined){t._closeRequest._reject(t._storedError);t._closeRequest=undefined}const r=t._writer;if(r!==undefined){defaultWriterClosedPromiseReject(r,t._storedError)}}function WritableStreamUpdateBackpressure(t,r){const a=t._writer;if(a!==undefined&&r!==t._backpressure){if(r){defaultWriterReadyPromiseReset(a)}else{defaultWriterReadyPromiseResolve(a)}}t._backpressure=r}class WritableStreamDefaultWriter{constructor(t){assertRequiredArgument(t,1,"WritableStreamDefaultWriter");assertWritableStream(t,"First parameter");if(IsWritableStreamLocked(t)){throw new TypeError("This stream has already been locked for exclusive writing by another writer")}this._ownerWritableStream=t;t._writer=this;const r=t._state;if(r==="writable"){if(!WritableStreamCloseQueuedOrInFlight(t)&&t._backpressure){defaultWriterReadyPromiseInitialize(this)}else{defaultWriterReadyPromiseInitializeAsResolved(this)}defaultWriterClosedPromiseInitialize(this)}else if(r==="erroring"){defaultWriterReadyPromiseInitializeAsRejected(this,t._storedError);defaultWriterClosedPromiseInitialize(this)}else if(r==="closed"){defaultWriterReadyPromiseInitializeAsResolved(this);defaultWriterClosedPromiseInitializeAsResolved(this)}else{const r=t._storedError;defaultWriterReadyPromiseInitializeAsRejected(this,r);defaultWriterClosedPromiseInitializeAsRejected(this,r)}}get closed(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("closed"))}return this._closedPromise}get desiredSize(){if(!IsWritableStreamDefaultWriter(this)){throw defaultWriterBrandCheckException("desiredSize")}if(this._ownerWritableStream===undefined){throw defaultWriterLockException("desiredSize")}return WritableStreamDefaultWriterGetDesiredSize(this)}get ready(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("ready"))}return this._readyPromise}abort(t=undefined){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("abort"))}if(this._ownerWritableStream===undefined){return promiseRejectedWith(defaultWriterLockException("abort"))}return WritableStreamDefaultWriterAbort(this,t)}close(){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("close"))}const t=this._ownerWritableStream;if(t===undefined){return promiseRejectedWith(defaultWriterLockException("close"))}if(WritableStreamCloseQueuedOrInFlight(t)){return promiseRejectedWith(new TypeError("Cannot close an already-closing stream"))}return WritableStreamDefaultWriterClose(this)}releaseLock(){if(!IsWritableStreamDefaultWriter(this)){throw defaultWriterBrandCheckException("releaseLock")}const t=this._ownerWritableStream;if(t===undefined){return}WritableStreamDefaultWriterRelease(this)}write(t=undefined){if(!IsWritableStreamDefaultWriter(this)){return promiseRejectedWith(defaultWriterBrandCheckException("write"))}if(this._ownerWritableStream===undefined){return promiseRejectedWith(defaultWriterLockException("write to"))}return WritableStreamDefaultWriterWrite(this,t)}}Object.defineProperties(WritableStreamDefaultWriter.prototype,{abort:{enumerable:true},close:{enumerable:true},releaseLock:{enumerable:true},write:{enumerable:true},closed:{enumerable:true},desiredSize:{enumerable:true},ready:{enumerable:true}});setFunctionName(WritableStreamDefaultWriter.prototype.abort,"abort");setFunctionName(WritableStreamDefaultWriter.prototype.close,"close");setFunctionName(WritableStreamDefaultWriter.prototype.releaseLock,"releaseLock");setFunctionName(WritableStreamDefaultWriter.prototype.write,"write");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(WritableStreamDefaultWriter.prototype,Symbol.toStringTag,{value:"WritableStreamDefaultWriter",configurable:true})}function IsWritableStreamDefaultWriter(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_ownerWritableStream")){return false}return t instanceof WritableStreamDefaultWriter}function WritableStreamDefaultWriterAbort(t,r){const a=t._ownerWritableStream;return WritableStreamAbort(a,r)}function WritableStreamDefaultWriterClose(t){const r=t._ownerWritableStream;return WritableStreamClose(r)}function WritableStreamDefaultWriterCloseWithErrorPropagation(t){const r=t._ownerWritableStream;const a=r._state;if(WritableStreamCloseQueuedOrInFlight(r)||a==="closed"){return promiseResolvedWith(undefined)}if(a==="errored"){return promiseRejectedWith(r._storedError)}return WritableStreamDefaultWriterClose(t)}function WritableStreamDefaultWriterEnsureClosedPromiseRejected(t,r){if(t._closedPromiseState==="pending"){defaultWriterClosedPromiseReject(t,r)}else{defaultWriterClosedPromiseResetToRejected(t,r)}}function WritableStreamDefaultWriterEnsureReadyPromiseRejected(t,r){if(t._readyPromiseState==="pending"){defaultWriterReadyPromiseReject(t,r)}else{defaultWriterReadyPromiseResetToRejected(t,r)}}function WritableStreamDefaultWriterGetDesiredSize(t){const r=t._ownerWritableStream;const a=r._state;if(a==="errored"||a==="erroring"){return null}if(a==="closed"){return 0}return WritableStreamDefaultControllerGetDesiredSize(r._writableStreamController)}function WritableStreamDefaultWriterRelease(t){const r=t._ownerWritableStream;const a=new TypeError(`Writer was released and can no longer be used to monitor the stream\'s closedness`);WritableStreamDefaultWriterEnsureReadyPromiseRejected(t,a);WritableStreamDefaultWriterEnsureClosedPromiseRejected(t,a);r._writer=undefined;t._ownerWritableStream=undefined}function WritableStreamDefaultWriterWrite(t,r){const a=t._ownerWritableStream;const i=a._writableStreamController;const n=WritableStreamDefaultControllerGetChunkSize(i,r);if(a!==t._ownerWritableStream){return promiseRejectedWith(defaultWriterLockException("write to"))}const o=a._state;if(o==="errored"){return promiseRejectedWith(a._storedError)}if(WritableStreamCloseQueuedOrInFlight(a)||o==="closed"){return promiseRejectedWith(new TypeError("The stream is closing or closed and cannot be written to"))}if(o==="erroring"){return promiseRejectedWith(a._storedError)}const d=WritableStreamAddWriteRequest(a);WritableStreamDefaultControllerWrite(i,r,n);return d}const T={};class WritableStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get abortReason(){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("abortReason")}return this._abortReason}get signal(){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("signal")}if(this._abortController===undefined){throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported")}return this._abortController.signal}error(t=undefined){if(!IsWritableStreamDefaultController(this)){throw defaultControllerBrandCheckException$2("error")}const r=this._controlledWritableStream._state;if(r!=="writable"){return}WritableStreamDefaultControllerError(this,t)}[d](t){const r=this._abortAlgorithm(t);WritableStreamDefaultControllerClearAlgorithms(this);return r}[p](){ResetQueue(this)}}Object.defineProperties(WritableStreamDefaultController.prototype,{abortReason:{enumerable:true},signal:{enumerable:true},error:{enumerable:true}});if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(WritableStreamDefaultController.prototype,Symbol.toStringTag,{value:"WritableStreamDefaultController",configurable:true})}function IsWritableStreamDefaultController(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_controlledWritableStream")){return false}return t instanceof WritableStreamDefaultController}function SetUpWritableStreamDefaultController(t,r,a,i,n,o,d,p){r._controlledWritableStream=t;t._writableStreamController=r;r._queue=undefined;r._queueTotalSize=undefined;ResetQueue(r);r._abortReason=undefined;r._abortController=createAbortController();r._started=false;r._strategySizeAlgorithm=p;r._strategyHWM=d;r._writeAlgorithm=i;r._closeAlgorithm=n;r._abortAlgorithm=o;const l=WritableStreamDefaultControllerGetBackpressure(r);WritableStreamUpdateBackpressure(t,l);const s=a();const u=promiseResolvedWith(s);uponPromise(u,(()=>{r._started=true;WritableStreamDefaultControllerAdvanceQueueIfNeeded(r);return null}),(a=>{r._started=true;WritableStreamDealWithRejection(t,a);return null}))}function SetUpWritableStreamDefaultControllerFromUnderlyingSink(t,r,a,i){const n=Object.create(WritableStreamDefaultController.prototype);let o;let d;let p;let l;if(r.start!==undefined){o=()=>r.start(n)}else{o=()=>undefined}if(r.write!==undefined){d=t=>r.write(t,n)}else{d=()=>promiseResolvedWith(undefined)}if(r.close!==undefined){p=()=>r.close()}else{p=()=>promiseResolvedWith(undefined)}if(r.abort!==undefined){l=t=>r.abort(t)}else{l=()=>promiseResolvedWith(undefined)}SetUpWritableStreamDefaultController(t,n,o,d,p,l,a,i)}function WritableStreamDefaultControllerClearAlgorithms(t){t._writeAlgorithm=undefined;t._closeAlgorithm=undefined;t._abortAlgorithm=undefined;t._strategySizeAlgorithm=undefined}function WritableStreamDefaultControllerClose(t){EnqueueValueWithSize(t,T,0);WritableStreamDefaultControllerAdvanceQueueIfNeeded(t)}function WritableStreamDefaultControllerGetChunkSize(t,r){try{return t._strategySizeAlgorithm(r)}catch(r){WritableStreamDefaultControllerErrorIfNeeded(t,r);return 1}}function WritableStreamDefaultControllerGetDesiredSize(t){return t._strategyHWM-t._queueTotalSize}function WritableStreamDefaultControllerWrite(t,r,a){try{EnqueueValueWithSize(t,r,a)}catch(r){WritableStreamDefaultControllerErrorIfNeeded(t,r);return}const i=t._controlledWritableStream;if(!WritableStreamCloseQueuedOrInFlight(i)&&i._state==="writable"){const r=WritableStreamDefaultControllerGetBackpressure(t);WritableStreamUpdateBackpressure(i,r)}WritableStreamDefaultControllerAdvanceQueueIfNeeded(t)}function WritableStreamDefaultControllerAdvanceQueueIfNeeded(t){const r=t._controlledWritableStream;if(!t._started){return}if(r._inFlightWriteRequest!==undefined){return}const a=r._state;if(a==="erroring"){WritableStreamFinishErroring(r);return}if(t._queue.length===0){return}const i=PeekQueueValue(t);if(i===T){WritableStreamDefaultControllerProcessClose(t)}else{WritableStreamDefaultControllerProcessWrite(t,i)}}function WritableStreamDefaultControllerErrorIfNeeded(t,r){if(t._controlledWritableStream._state==="writable"){WritableStreamDefaultControllerError(t,r)}}function WritableStreamDefaultControllerProcessClose(t){const r=t._controlledWritableStream;WritableStreamMarkCloseRequestInFlight(r);DequeueValue(t);const a=t._closeAlgorithm();WritableStreamDefaultControllerClearAlgorithms(t);uponPromise(a,(()=>{WritableStreamFinishInFlightClose(r);return null}),(t=>{WritableStreamFinishInFlightCloseWithError(r,t);return null}))}function WritableStreamDefaultControllerProcessWrite(t,r){const a=t._controlledWritableStream;WritableStreamMarkFirstWriteRequestInFlight(a);const i=t._writeAlgorithm(r);uponPromise(i,(()=>{WritableStreamFinishInFlightWrite(a);const r=a._state;DequeueValue(t);if(!WritableStreamCloseQueuedOrInFlight(a)&&r==="writable"){const r=WritableStreamDefaultControllerGetBackpressure(t);WritableStreamUpdateBackpressure(a,r)}WritableStreamDefaultControllerAdvanceQueueIfNeeded(t);return null}),(r=>{if(a._state==="writable"){WritableStreamDefaultControllerClearAlgorithms(t)}WritableStreamFinishInFlightWriteWithError(a,r);return null}))}function WritableStreamDefaultControllerGetBackpressure(t){const r=WritableStreamDefaultControllerGetDesiredSize(t);return r<=0}function WritableStreamDefaultControllerError(t,r){const a=t._controlledWritableStream;WritableStreamDefaultControllerClearAlgorithms(t);WritableStreamStartErroring(a,r)}function streamBrandCheckException$2(t){return new TypeError(`WritableStream.prototype.${t} can only be used on a WritableStream`)}function defaultControllerBrandCheckException$2(t){return new TypeError(`WritableStreamDefaultController.prototype.${t} can only be used on a WritableStreamDefaultController`)}function defaultWriterBrandCheckException(t){return new TypeError(`WritableStreamDefaultWriter.prototype.${t} can only be used on a WritableStreamDefaultWriter`)}function defaultWriterLockException(t){return new TypeError("Cannot "+t+" a stream using a released writer")}function defaultWriterClosedPromiseInitialize(t){t._closedPromise=newPromise(((r,a)=>{t._closedPromise_resolve=r;t._closedPromise_reject=a;t._closedPromiseState="pending"}))}function defaultWriterClosedPromiseInitializeAsRejected(t,r){defaultWriterClosedPromiseInitialize(t);defaultWriterClosedPromiseReject(t,r)}function defaultWriterClosedPromiseInitializeAsResolved(t){defaultWriterClosedPromiseInitialize(t);defaultWriterClosedPromiseResolve(t)}function defaultWriterClosedPromiseReject(t,r){if(t._closedPromise_reject===undefined){return}setPromiseIsHandledToTrue(t._closedPromise);t._closedPromise_reject(r);t._closedPromise_resolve=undefined;t._closedPromise_reject=undefined;t._closedPromiseState="rejected"}function defaultWriterClosedPromiseResetToRejected(t,r){defaultWriterClosedPromiseInitializeAsRejected(t,r)}function defaultWriterClosedPromiseResolve(t){if(t._closedPromise_resolve===undefined){return}t._closedPromise_resolve(undefined);t._closedPromise_resolve=undefined;t._closedPromise_reject=undefined;t._closedPromiseState="resolved"}function defaultWriterReadyPromiseInitialize(t){t._readyPromise=newPromise(((r,a)=>{t._readyPromise_resolve=r;t._readyPromise_reject=a}));t._readyPromiseState="pending"}function defaultWriterReadyPromiseInitializeAsRejected(t,r){defaultWriterReadyPromiseInitialize(t);defaultWriterReadyPromiseReject(t,r)}function defaultWriterReadyPromiseInitializeAsResolved(t){defaultWriterReadyPromiseInitialize(t);defaultWriterReadyPromiseResolve(t)}function defaultWriterReadyPromiseReject(t,r){if(t._readyPromise_reject===undefined){return}setPromiseIsHandledToTrue(t._readyPromise);t._readyPromise_reject(r);t._readyPromise_resolve=undefined;t._readyPromise_reject=undefined;t._readyPromiseState="rejected"}function defaultWriterReadyPromiseReset(t){defaultWriterReadyPromiseInitialize(t)}function defaultWriterReadyPromiseResetToRejected(t,r){defaultWriterReadyPromiseInitializeAsRejected(t,r)}function defaultWriterReadyPromiseResolve(t){if(t._readyPromise_resolve===undefined){return}t._readyPromise_resolve(undefined);t._readyPromise_resolve=undefined;t._readyPromise_reject=undefined;t._readyPromiseState="fulfilled"}function getGlobals(){if(typeof globalThis!=="undefined"){return globalThis}else if(typeof self!=="undefined"){return self}else if(typeof global!=="undefined"){return global}return undefined}const C=getGlobals();function isDOMExceptionConstructor(t){if(!(typeof t==="function"||typeof t==="object")){return false}if(t.name!=="DOMException"){return false}try{new t;return true}catch(t){return false}}function getFromGlobal(){const t=C===null||C===void 0?void 0:C.DOMException;return isDOMExceptionConstructor(t)?t:undefined}function createPolyfill(){const t=function DOMException(t,r){this.message=t||"";this.name=r||"Error";if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}};setFunctionName(t,"DOMException");t.prototype=Object.create(Error.prototype);Object.defineProperty(t.prototype,"constructor",{value:t,writable:true,configurable:true});return t}const D=getFromGlobal()||createPolyfill();function ReadableStreamPipeTo(t,r,a,i,n,o){const d=AcquireReadableStreamDefaultReader(t);const p=AcquireWritableStreamDefaultWriter(r);t._disturbed=true;let l=false;let s=promiseResolvedWith(undefined);return newPromise(((u,c)=>{let m;if(o!==undefined){m=()=>{const a=o.reason!==undefined?o.reason:new D("Aborted","AbortError");const d=[];if(!i){d.push((()=>{if(r._state==="writable"){return WritableStreamAbort(r,a)}return promiseResolvedWith(undefined)}))}if(!n){d.push((()=>{if(t._state==="readable"){return ReadableStreamCancel(t,a)}return promiseResolvedWith(undefined)}))}shutdownWithAction((()=>Promise.all(d.map((t=>t())))),true,a)};if(o.aborted){m();return}o.addEventListener("abort",m)}function pipeLoop(){return newPromise(((t,r)=>{function next(a){if(a){t()}else{PerformPromiseThen(pipeStep(),next,r)}}next(false)}))}function pipeStep(){if(l){return promiseResolvedWith(true)}return PerformPromiseThen(p._readyPromise,(()=>newPromise(((t,r)=>{ReadableStreamDefaultReaderRead(d,{_chunkSteps:r=>{s=PerformPromiseThen(WritableStreamDefaultWriterWrite(p,r),undefined,noop);t(false)},_closeSteps:()=>t(true),_errorSteps:r})}))))}isOrBecomesErrored(t,d._closedPromise,(t=>{if(!i){shutdownWithAction((()=>WritableStreamAbort(r,t)),true,t)}else{shutdown(true,t)}return null}));isOrBecomesErrored(r,p._closedPromise,(r=>{if(!n){shutdownWithAction((()=>ReadableStreamCancel(t,r)),true,r)}else{shutdown(true,r)}return null}));isOrBecomesClosed(t,d._closedPromise,(()=>{if(!a){shutdownWithAction((()=>WritableStreamDefaultWriterCloseWithErrorPropagation(p)))}else{shutdown()}return null}));if(WritableStreamCloseQueuedOrInFlight(r)||r._state==="closed"){const r=new TypeError("the destination writable stream closed before all data could be piped to it");if(!n){shutdownWithAction((()=>ReadableStreamCancel(t,r)),true,r)}else{shutdown(true,r)}}setPromiseIsHandledToTrue(pipeLoop());function waitForWritesToFinish(){const t=s;return PerformPromiseThen(s,(()=>t!==s?waitForWritesToFinish():undefined))}function isOrBecomesErrored(t,r,a){if(t._state==="errored"){a(t._storedError)}else{uponRejection(r,a)}}function isOrBecomesClosed(t,r,a){if(t._state==="closed"){a()}else{uponFulfillment(r,a)}}function shutdownWithAction(t,a,i){if(l){return}l=true;if(r._state==="writable"&&!WritableStreamCloseQueuedOrInFlight(r)){uponFulfillment(waitForWritesToFinish(),doTheRest)}else{doTheRest()}function doTheRest(){uponPromise(t(),(()=>finalize(a,i)),(t=>finalize(true,t)));return null}}function shutdown(t,a){if(l){return}l=true;if(r._state==="writable"&&!WritableStreamCloseQueuedOrInFlight(r)){uponFulfillment(waitForWritesToFinish(),(()=>finalize(t,a)))}else{finalize(t,a)}}function finalize(t,r){WritableStreamDefaultWriterRelease(p);ReadableStreamReaderGenericRelease(d);if(o!==undefined){o.removeEventListener("abort",m)}if(t){c(r)}else{u(undefined)}return null}}))}class ReadableStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("desiredSize")}return ReadableStreamDefaultControllerGetDesiredSize(this)}close(){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("close")}if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)){throw new TypeError("The stream is not in a state that permits close")}ReadableStreamDefaultControllerClose(this)}enqueue(t=undefined){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("enqueue")}if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)){throw new TypeError("The stream is not in a state that permits enqueue")}return ReadableStreamDefaultControllerEnqueue(this,t)}error(t=undefined){if(!IsReadableStreamDefaultController(this)){throw defaultControllerBrandCheckException$1("error")}ReadableStreamDefaultControllerError(this,t)}[l](t){ResetQueue(this);const r=this._cancelAlgorithm(t);ReadableStreamDefaultControllerClearAlgorithms(this);return r}[s](t){const r=this._controlledReadableStream;if(this._queue.length>0){const a=DequeueValue(this);if(this._closeRequested&&this._queue.length===0){ReadableStreamDefaultControllerClearAlgorithms(this);ReadableStreamClose(r)}else{ReadableStreamDefaultControllerCallPullIfNeeded(this)}t._chunkSteps(a)}else{ReadableStreamAddReadRequest(r,t);ReadableStreamDefaultControllerCallPullIfNeeded(this)}}[u](){}}Object.defineProperties(ReadableStreamDefaultController.prototype,{close:{enumerable:true},enqueue:{enumerable:true},error:{enumerable:true},desiredSize:{enumerable:true}});setFunctionName(ReadableStreamDefaultController.prototype.close,"close");setFunctionName(ReadableStreamDefaultController.prototype.enqueue,"enqueue");setFunctionName(ReadableStreamDefaultController.prototype.error,"error");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableStreamDefaultController.prototype,Symbol.toStringTag,{value:"ReadableStreamDefaultController",configurable:true})}function IsReadableStreamDefaultController(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_controlledReadableStream")){return false}return t instanceof ReadableStreamDefaultController}function ReadableStreamDefaultControllerCallPullIfNeeded(t){const r=ReadableStreamDefaultControllerShouldCallPull(t);if(!r){return}if(t._pulling){t._pullAgain=true;return}t._pulling=true;const a=t._pullAlgorithm();uponPromise(a,(()=>{t._pulling=false;if(t._pullAgain){t._pullAgain=false;ReadableStreamDefaultControllerCallPullIfNeeded(t)}return null}),(r=>{ReadableStreamDefaultControllerError(t,r);return null}))}function ReadableStreamDefaultControllerShouldCallPull(t){const r=t._controlledReadableStream;if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(t)){return false}if(!t._started){return false}if(IsReadableStreamLocked(r)&&ReadableStreamGetNumReadRequests(r)>0){return true}const a=ReadableStreamDefaultControllerGetDesiredSize(t);if(a>0){return true}return false}function ReadableStreamDefaultControllerClearAlgorithms(t){t._pullAlgorithm=undefined;t._cancelAlgorithm=undefined;t._strategySizeAlgorithm=undefined}function ReadableStreamDefaultControllerClose(t){if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(t)){return}const r=t._controlledReadableStream;t._closeRequested=true;if(t._queue.length===0){ReadableStreamDefaultControllerClearAlgorithms(t);ReadableStreamClose(r)}}function ReadableStreamDefaultControllerEnqueue(t,r){if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(t)){return}const a=t._controlledReadableStream;if(IsReadableStreamLocked(a)&&ReadableStreamGetNumReadRequests(a)>0){ReadableStreamFulfillReadRequest(a,r,false)}else{let a;try{a=t._strategySizeAlgorithm(r)}catch(r){ReadableStreamDefaultControllerError(t,r);throw r}try{EnqueueValueWithSize(t,r,a)}catch(r){ReadableStreamDefaultControllerError(t,r);throw r}}ReadableStreamDefaultControllerCallPullIfNeeded(t)}function ReadableStreamDefaultControllerError(t,r){const a=t._controlledReadableStream;if(a._state!=="readable"){return}ResetQueue(t);ReadableStreamDefaultControllerClearAlgorithms(t);ReadableStreamError(a,r)}function ReadableStreamDefaultControllerGetDesiredSize(t){const r=t._controlledReadableStream._state;if(r==="errored"){return null}if(r==="closed"){return 0}return t._strategyHWM-t._queueTotalSize}function ReadableStreamDefaultControllerHasBackpressure(t){if(ReadableStreamDefaultControllerShouldCallPull(t)){return false}return true}function ReadableStreamDefaultControllerCanCloseOrEnqueue(t){const r=t._controlledReadableStream._state;if(!t._closeRequested&&r==="readable"){return true}return false}function SetUpReadableStreamDefaultController(t,r,a,i,n,o,d){r._controlledReadableStream=t;r._queue=undefined;r._queueTotalSize=undefined;ResetQueue(r);r._started=false;r._closeRequested=false;r._pullAgain=false;r._pulling=false;r._strategySizeAlgorithm=d;r._strategyHWM=o;r._pullAlgorithm=i;r._cancelAlgorithm=n;t._readableStreamController=r;const p=a();uponPromise(promiseResolvedWith(p),(()=>{r._started=true;ReadableStreamDefaultControllerCallPullIfNeeded(r);return null}),(t=>{ReadableStreamDefaultControllerError(r,t);return null}))}function SetUpReadableStreamDefaultControllerFromUnderlyingSource(t,r,a,i){const n=Object.create(ReadableStreamDefaultController.prototype);let o;let d;let p;if(r.start!==undefined){o=()=>r.start(n)}else{o=()=>undefined}if(r.pull!==undefined){d=()=>r.pull(n)}else{d=()=>promiseResolvedWith(undefined)}if(r.cancel!==undefined){p=t=>r.cancel(t)}else{p=()=>promiseResolvedWith(undefined)}SetUpReadableStreamDefaultController(t,n,o,d,p,a,i)}function defaultControllerBrandCheckException$1(t){return new TypeError(`ReadableStreamDefaultController.prototype.${t} can only be used on a ReadableStreamDefaultController`)}function ReadableStreamTee(t,r){if(IsReadableByteStreamController(t._readableStreamController)){return ReadableByteStreamTee(t)}return ReadableStreamDefaultTee(t)}function ReadableStreamDefaultTee(t,r){const a=AcquireReadableStreamDefaultReader(t);let i=false;let n=false;let o=false;let d=false;let p;let l;let s;let u;let c;const m=newPromise((t=>{c=t}));function pullAlgorithm(){if(i){n=true;return promiseResolvedWith(undefined)}i=true;const t={_chunkSteps:t=>{_queueMicrotask((()=>{n=false;const r=t;const a=t;if(!o){ReadableStreamDefaultControllerEnqueue(s._readableStreamController,r)}if(!d){ReadableStreamDefaultControllerEnqueue(u._readableStreamController,a)}i=false;if(n){pullAlgorithm()}}))},_closeSteps:()=>{i=false;if(!o){ReadableStreamDefaultControllerClose(s._readableStreamController)}if(!d){ReadableStreamDefaultControllerClose(u._readableStreamController)}if(!o||!d){c(undefined)}},_errorSteps:()=>{i=false}};ReadableStreamDefaultReaderRead(a,t);return promiseResolvedWith(undefined)}function cancel1Algorithm(r){o=true;p=r;if(d){const r=CreateArrayFromList([p,l]);const a=ReadableStreamCancel(t,r);c(a)}return m}function cancel2Algorithm(r){d=true;l=r;if(o){const r=CreateArrayFromList([p,l]);const a=ReadableStreamCancel(t,r);c(a)}return m}function startAlgorithm(){}s=CreateReadableStream(startAlgorithm,pullAlgorithm,cancel1Algorithm);u=CreateReadableStream(startAlgorithm,pullAlgorithm,cancel2Algorithm);uponRejection(a._closedPromise,(t=>{ReadableStreamDefaultControllerError(s._readableStreamController,t);ReadableStreamDefaultControllerError(u._readableStreamController,t);if(!o||!d){c(undefined)}return null}));return[s,u]}function ReadableByteStreamTee(t){let r=AcquireReadableStreamDefaultReader(t);let a=false;let i=false;let n=false;let o=false;let d=false;let p;let l;let s;let u;let c;const m=newPromise((t=>{c=t}));function forwardReaderError(t){uponRejection(t._closedPromise,(a=>{if(t!==r){return null}ReadableByteStreamControllerError(s._readableStreamController,a);ReadableByteStreamControllerError(u._readableStreamController,a);if(!o||!d){c(undefined)}return null}))}function pullWithDefaultReader(){if(IsReadableStreamBYOBReader(r)){ReadableStreamReaderGenericRelease(r);r=AcquireReadableStreamDefaultReader(t);forwardReaderError(r)}const p={_chunkSteps:r=>{_queueMicrotask((()=>{i=false;n=false;const p=r;let l=r;if(!o&&!d){try{l=CloneAsUint8Array(r)}catch(r){ReadableByteStreamControllerError(s._readableStreamController,r);ReadableByteStreamControllerError(u._readableStreamController,r);c(ReadableStreamCancel(t,r));return}}if(!o){ReadableByteStreamControllerEnqueue(s._readableStreamController,p)}if(!d){ReadableByteStreamControllerEnqueue(u._readableStreamController,l)}a=false;if(i){pull1Algorithm()}else if(n){pull2Algorithm()}}))},_closeSteps:()=>{a=false;if(!o){ReadableByteStreamControllerClose(s._readableStreamController)}if(!d){ReadableByteStreamControllerClose(u._readableStreamController)}if(s._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(s._readableStreamController,0)}if(u._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(u._readableStreamController,0)}if(!o||!d){c(undefined)}},_errorSteps:()=>{a=false}};ReadableStreamDefaultReaderRead(r,p)}function pullWithBYOBReader(p,l){if(IsReadableStreamDefaultReader(r)){ReadableStreamReaderGenericRelease(r);r=AcquireReadableStreamBYOBReader(t);forwardReaderError(r)}const m=l?u:s;const h=l?s:u;const v={_chunkSteps:r=>{_queueMicrotask((()=>{i=false;n=false;const p=l?d:o;const s=l?o:d;if(!s){let a;try{a=CloneAsUint8Array(r)}catch(r){ReadableByteStreamControllerError(m._readableStreamController,r);ReadableByteStreamControllerError(h._readableStreamController,r);c(ReadableStreamCancel(t,r));return}if(!p){ReadableByteStreamControllerRespondWithNewView(m._readableStreamController,r)}ReadableByteStreamControllerEnqueue(h._readableStreamController,a)}else if(!p){ReadableByteStreamControllerRespondWithNewView(m._readableStreamController,r)}a=false;if(i){pull1Algorithm()}else if(n){pull2Algorithm()}}))},_closeSteps:t=>{a=false;const r=l?d:o;const i=l?o:d;if(!r){ReadableByteStreamControllerClose(m._readableStreamController)}if(!i){ReadableByteStreamControllerClose(h._readableStreamController)}if(t!==undefined){if(!r){ReadableByteStreamControllerRespondWithNewView(m._readableStreamController,t)}if(!i&&h._readableStreamController._pendingPullIntos.length>0){ReadableByteStreamControllerRespond(h._readableStreamController,0)}}if(!r||!i){c(undefined)}},_errorSteps:()=>{a=false}};ReadableStreamBYOBReaderRead(r,p,1,v)}function pull1Algorithm(){if(a){i=true;return promiseResolvedWith(undefined)}a=true;const t=ReadableByteStreamControllerGetBYOBRequest(s._readableStreamController);if(t===null){pullWithDefaultReader()}else{pullWithBYOBReader(t._view,false)}return promiseResolvedWith(undefined)}function pull2Algorithm(){if(a){n=true;return promiseResolvedWith(undefined)}a=true;const t=ReadableByteStreamControllerGetBYOBRequest(u._readableStreamController);if(t===null){pullWithDefaultReader()}else{pullWithBYOBReader(t._view,true)}return promiseResolvedWith(undefined)}function cancel1Algorithm(r){o=true;p=r;if(d){const r=CreateArrayFromList([p,l]);const a=ReadableStreamCancel(t,r);c(a)}return m}function cancel2Algorithm(r){d=true;l=r;if(o){const r=CreateArrayFromList([p,l]);const a=ReadableStreamCancel(t,r);c(a)}return m}function startAlgorithm(){return}s=CreateReadableByteStream(startAlgorithm,pull1Algorithm,cancel1Algorithm);u=CreateReadableByteStream(startAlgorithm,pull2Algorithm,cancel2Algorithm);forwardReaderError(r);return[s,u]}function isReadableStreamLike(t){return typeIsObject(t)&&typeof t.getReader!=="undefined"}function ReadableStreamFrom(t){if(isReadableStreamLike(t)){return ReadableStreamFromDefaultReader(t.getReader())}return ReadableStreamFromIterable(t)}function ReadableStreamFromIterable(t){let r;const a=GetIterator(t,"async");const i=noop;function pullAlgorithm(){let t;try{t=IteratorNext(a)}catch(t){return promiseRejectedWith(t)}const i=promiseResolvedWith(t);return transformPromiseWith(i,(t=>{if(!typeIsObject(t)){throw new TypeError("The promise returned by the iterator.next() method must fulfill with an object")}const a=IteratorComplete(t);if(a){ReadableStreamDefaultControllerClose(r._readableStreamController)}else{const a=IteratorValue(t);ReadableStreamDefaultControllerEnqueue(r._readableStreamController,a)}}))}function cancelAlgorithm(t){const r=a.iterator;let i;try{i=GetMethod(r,"return")}catch(t){return promiseRejectedWith(t)}if(i===undefined){return promiseResolvedWith(undefined)}let n;try{n=reflectCall(i,r,[t])}catch(t){return promiseRejectedWith(t)}const o=promiseResolvedWith(n);return transformPromiseWith(o,(t=>{if(!typeIsObject(t)){throw new TypeError("The promise returned by the iterator.return() method must fulfill with an object")}return undefined}))}r=CreateReadableStream(i,pullAlgorithm,cancelAlgorithm,0);return r}function ReadableStreamFromDefaultReader(t){let r;const a=noop;function pullAlgorithm(){let a;try{a=t.read()}catch(t){return promiseRejectedWith(t)}return transformPromiseWith(a,(t=>{if(!typeIsObject(t)){throw new TypeError("The promise returned by the reader.read() method must fulfill with an object")}if(t.done){ReadableStreamDefaultControllerClose(r._readableStreamController)}else{const a=t.value;ReadableStreamDefaultControllerEnqueue(r._readableStreamController,a)}}))}function cancelAlgorithm(r){try{return promiseResolvedWith(t.cancel(r))}catch(t){return promiseRejectedWith(t)}}r=CreateReadableStream(a,pullAlgorithm,cancelAlgorithm,0);return r}function convertUnderlyingDefaultOrByteSource(t,r){assertDictionary(t,r);const a=t;const i=a===null||a===void 0?void 0:a.autoAllocateChunkSize;const n=a===null||a===void 0?void 0:a.cancel;const o=a===null||a===void 0?void 0:a.pull;const d=a===null||a===void 0?void 0:a.start;const p=a===null||a===void 0?void 0:a.type;return{autoAllocateChunkSize:i===undefined?undefined:convertUnsignedLongLongWithEnforceRange(i,`${r} has member \'autoAllocateChunkSize\' that`),cancel:n===undefined?undefined:convertUnderlyingSourceCancelCallback(n,a,`${r} has member \'cancel\' that`),pull:o===undefined?undefined:convertUnderlyingSourcePullCallback(o,a,`${r} has member \'pull\' that`),start:d===undefined?undefined:convertUnderlyingSourceStartCallback(d,a,`${r} has member \'start\' that`),type:p===undefined?undefined:convertReadableStreamType(p,`${r} has member \'type\' that`)}}function convertUnderlyingSourceCancelCallback(t,r,a){assertFunction(t,a);return a=>promiseCall(t,r,[a])}function convertUnderlyingSourcePullCallback(t,r,a){assertFunction(t,a);return a=>promiseCall(t,r,[a])}function convertUnderlyingSourceStartCallback(t,r,a){assertFunction(t,a);return a=>reflectCall(t,r,[a])}function convertReadableStreamType(t,r){t=`${t}`;if(t!=="bytes"){throw new TypeError(`${r} \'${t}\' is not a valid enumeration value for ReadableStreamType`)}return t}function convertIteratorOptions(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.preventCancel;return{preventCancel:Boolean(a)}}function convertPipeOptions(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.preventAbort;const i=t===null||t===void 0?void 0:t.preventCancel;const n=t===null||t===void 0?void 0:t.preventClose;const o=t===null||t===void 0?void 0:t.signal;if(o!==undefined){assertAbortSignal(o,`${r} has member \'signal\' that`)}return{preventAbort:Boolean(a),preventCancel:Boolean(i),preventClose:Boolean(n),signal:o}}function assertAbortSignal(t,r){if(!isAbortSignal(t)){throw new TypeError(`${r} is not an AbortSignal.`)}}function convertReadableWritablePair(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.readable;assertRequiredField(a,"readable","ReadableWritablePair");assertReadableStream(a,`${r} has member \'readable\' that`);const i=t===null||t===void 0?void 0:t.writable;assertRequiredField(i,"writable","ReadableWritablePair");assertWritableStream(i,`${r} has member \'writable\' that`);return{readable:a,writable:i}}class ReadableStream{constructor(t={},r={}){if(t===undefined){t=null}else{assertObject(t,"First parameter")}const a=convertQueuingStrategy(r,"Second parameter");const i=convertUnderlyingDefaultOrByteSource(t,"First parameter");InitializeReadableStream(this);if(i.type==="bytes"){if(a.size!==undefined){throw new RangeError("The strategy for a byte stream cannot have a size function")}const t=ExtractHighWaterMark(a,0);SetUpReadableByteStreamControllerFromUnderlyingSource(this,i,t)}else{const t=ExtractSizeAlgorithm(a);const r=ExtractHighWaterMark(a,1);SetUpReadableStreamDefaultControllerFromUnderlyingSource(this,i,r,t)}}get locked(){if(!IsReadableStream(this)){throw streamBrandCheckException$1("locked")}return IsReadableStreamLocked(this)}cancel(t=undefined){if(!IsReadableStream(this)){return promiseRejectedWith(streamBrandCheckException$1("cancel"))}if(IsReadableStreamLocked(this)){return promiseRejectedWith(new TypeError("Cannot cancel a stream that already has a reader"))}return ReadableStreamCancel(this,t)}getReader(t=undefined){if(!IsReadableStream(this)){throw streamBrandCheckException$1("getReader")}const r=convertReaderOptions(t,"First parameter");if(r.mode===undefined){return AcquireReadableStreamDefaultReader(this)}return AcquireReadableStreamBYOBReader(this)}pipeThrough(t,r={}){if(!IsReadableStream(this)){throw streamBrandCheckException$1("pipeThrough")}assertRequiredArgument(t,1,"pipeThrough");const a=convertReadableWritablePair(t,"First parameter");const i=convertPipeOptions(r,"Second parameter");if(IsReadableStreamLocked(this)){throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream")}if(IsWritableStreamLocked(a.writable)){throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream")}const n=ReadableStreamPipeTo(this,a.writable,i.preventClose,i.preventAbort,i.preventCancel,i.signal);setPromiseIsHandledToTrue(n);return a.readable}pipeTo(t,r={}){if(!IsReadableStream(this)){return promiseRejectedWith(streamBrandCheckException$1("pipeTo"))}if(t===undefined){return promiseRejectedWith(`Parameter 1 is required in \'pipeTo\'.`)}if(!IsWritableStream(t)){return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo\'s first argument must be a WritableStream`))}let a;try{a=convertPipeOptions(r,"Second parameter")}catch(t){return promiseRejectedWith(t)}if(IsReadableStreamLocked(this)){return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream"))}if(IsWritableStreamLocked(t)){return promiseRejectedWith(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream"))}return ReadableStreamPipeTo(this,t,a.preventClose,a.preventAbort,a.preventCancel,a.signal)}tee(){if(!IsReadableStream(this)){throw streamBrandCheckException$1("tee")}const t=ReadableStreamTee(this);return CreateArrayFromList(t)}values(t=undefined){if(!IsReadableStream(this)){throw streamBrandCheckException$1("values")}const r=convertIteratorOptions(t,"First parameter");return AcquireReadableStreamAsyncIterator(this,r.preventCancel)}[S](t){return this.values(t)}static from(t){return ReadableStreamFrom(t)}}Object.defineProperties(ReadableStream,{from:{enumerable:true}});Object.defineProperties(ReadableStream.prototype,{cancel:{enumerable:true},getReader:{enumerable:true},pipeThrough:{enumerable:true},pipeTo:{enumerable:true},tee:{enumerable:true},values:{enumerable:true},locked:{enumerable:true}});setFunctionName(ReadableStream.from,"from");setFunctionName(ReadableStream.prototype.cancel,"cancel");setFunctionName(ReadableStream.prototype.getReader,"getReader");setFunctionName(ReadableStream.prototype.pipeThrough,"pipeThrough");setFunctionName(ReadableStream.prototype.pipeTo,"pipeTo");setFunctionName(ReadableStream.prototype.tee,"tee");setFunctionName(ReadableStream.prototype.values,"values");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ReadableStream.prototype,Symbol.toStringTag,{value:"ReadableStream",configurable:true})}Object.defineProperty(ReadableStream.prototype,S,{value:ReadableStream.prototype.values,writable:true,configurable:true});function CreateReadableStream(t,r,a,i=1,n=()=>1){const o=Object.create(ReadableStream.prototype);InitializeReadableStream(o);const d=Object.create(ReadableStreamDefaultController.prototype);SetUpReadableStreamDefaultController(o,d,t,r,a,i,n);return o}function CreateReadableByteStream(t,r,a){const i=Object.create(ReadableStream.prototype);InitializeReadableStream(i);const n=Object.create(ReadableByteStreamController.prototype);SetUpReadableByteStreamController(i,n,t,r,a,0,undefined);return i}function InitializeReadableStream(t){t._state="readable";t._reader=undefined;t._storedError=undefined;t._disturbed=false}function IsReadableStream(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_readableStreamController")){return false}return t instanceof ReadableStream}function IsReadableStreamLocked(t){if(t._reader===undefined){return false}return true}function ReadableStreamCancel(t,r){t._disturbed=true;if(t._state==="closed"){return promiseResolvedWith(undefined)}if(t._state==="errored"){return promiseRejectedWith(t._storedError)}ReadableStreamClose(t);const a=t._reader;if(a!==undefined&&IsReadableStreamBYOBReader(a)){const t=a._readIntoRequests;a._readIntoRequests=new SimpleQueue;t.forEach((t=>{t._closeSteps(undefined)}))}const i=t._readableStreamController[l](r);return transformPromiseWith(i,noop)}function ReadableStreamClose(t){t._state="closed";const r=t._reader;if(r===undefined){return}defaultReaderClosedPromiseResolve(r);if(IsReadableStreamDefaultReader(r)){const t=r._readRequests;r._readRequests=new SimpleQueue;t.forEach((t=>{t._closeSteps()}))}}function ReadableStreamError(t,r){t._state="errored";t._storedError=r;const a=t._reader;if(a===undefined){return}defaultReaderClosedPromiseReject(a,r);if(IsReadableStreamDefaultReader(a)){ReadableStreamDefaultReaderErrorReadRequests(a,r)}else{ReadableStreamBYOBReaderErrorReadIntoRequests(a,r)}}function streamBrandCheckException$1(t){return new TypeError(`ReadableStream.prototype.${t} can only be used on a ReadableStream`)}function convertQueuingStrategyInit(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.highWaterMark;assertRequiredField(a,"highWaterMark","QueuingStrategyInit");return{highWaterMark:convertUnrestrictedDouble(a)}}const byteLengthSizeFunction=t=>t.byteLength;setFunctionName(byteLengthSizeFunction,"size");class ByteLengthQueuingStrategy{constructor(t){assertRequiredArgument(t,1,"ByteLengthQueuingStrategy");t=convertQueuingStrategyInit(t,"First parameter");this._byteLengthQueuingStrategyHighWaterMark=t.highWaterMark}get highWaterMark(){if(!IsByteLengthQueuingStrategy(this)){throw byteLengthBrandCheckException("highWaterMark")}return this._byteLengthQueuingStrategyHighWaterMark}get size(){if(!IsByteLengthQueuingStrategy(this)){throw byteLengthBrandCheckException("size")}return byteLengthSizeFunction}}Object.defineProperties(ByteLengthQueuingStrategy.prototype,{highWaterMark:{enumerable:true},size:{enumerable:true}});if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(ByteLengthQueuingStrategy.prototype,Symbol.toStringTag,{value:"ByteLengthQueuingStrategy",configurable:true})}function byteLengthBrandCheckException(t){return new TypeError(`ByteLengthQueuingStrategy.prototype.${t} can only be used on a ByteLengthQueuingStrategy`)}function IsByteLengthQueuingStrategy(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_byteLengthQueuingStrategyHighWaterMark")){return false}return t instanceof ByteLengthQueuingStrategy}const countSizeFunction=()=>1;setFunctionName(countSizeFunction,"size");class CountQueuingStrategy{constructor(t){assertRequiredArgument(t,1,"CountQueuingStrategy");t=convertQueuingStrategyInit(t,"First parameter");this._countQueuingStrategyHighWaterMark=t.highWaterMark}get highWaterMark(){if(!IsCountQueuingStrategy(this)){throw countBrandCheckException("highWaterMark")}return this._countQueuingStrategyHighWaterMark}get size(){if(!IsCountQueuingStrategy(this)){throw countBrandCheckException("size")}return countSizeFunction}}Object.defineProperties(CountQueuingStrategy.prototype,{highWaterMark:{enumerable:true},size:{enumerable:true}});if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(CountQueuingStrategy.prototype,Symbol.toStringTag,{value:"CountQueuingStrategy",configurable:true})}function countBrandCheckException(t){return new TypeError(`CountQueuingStrategy.prototype.${t} can only be used on a CountQueuingStrategy`)}function IsCountQueuingStrategy(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_countQueuingStrategyHighWaterMark")){return false}return t instanceof CountQueuingStrategy}function convertTransformer(t,r){assertDictionary(t,r);const a=t===null||t===void 0?void 0:t.cancel;const i=t===null||t===void 0?void 0:t.flush;const n=t===null||t===void 0?void 0:t.readableType;const o=t===null||t===void 0?void 0:t.start;const d=t===null||t===void 0?void 0:t.transform;const p=t===null||t===void 0?void 0:t.writableType;return{cancel:a===undefined?undefined:convertTransformerCancelCallback(a,t,`${r} has member \'cancel\' that`),flush:i===undefined?undefined:convertTransformerFlushCallback(i,t,`${r} has member \'flush\' that`),readableType:n,start:o===undefined?undefined:convertTransformerStartCallback(o,t,`${r} has member \'start\' that`),transform:d===undefined?undefined:convertTransformerTransformCallback(d,t,`${r} has member \'transform\' that`),writableType:p}}function convertTransformerFlushCallback(t,r,a){assertFunction(t,a);return a=>promiseCall(t,r,[a])}function convertTransformerStartCallback(t,r,a){assertFunction(t,a);return a=>reflectCall(t,r,[a])}function convertTransformerTransformCallback(t,r,a){assertFunction(t,a);return(a,i)=>promiseCall(t,r,[a,i])}function convertTransformerCancelCallback(t,r,a){assertFunction(t,a);return a=>promiseCall(t,r,[a])}class TransformStream{constructor(t={},r={},a={}){if(t===undefined){t=null}const i=convertQueuingStrategy(r,"Second parameter");const n=convertQueuingStrategy(a,"Third parameter");const o=convertTransformer(t,"First parameter");if(o.readableType!==undefined){throw new RangeError("Invalid readableType specified")}if(o.writableType!==undefined){throw new RangeError("Invalid writableType specified")}const d=ExtractHighWaterMark(n,0);const p=ExtractSizeAlgorithm(n);const l=ExtractHighWaterMark(i,1);const s=ExtractSizeAlgorithm(i);let u;const c=newPromise((t=>{u=t}));InitializeTransformStream(this,c,l,s,d,p);SetUpTransformStreamDefaultControllerFromTransformer(this,o);if(o.start!==undefined){u(o.start(this._transformStreamController))}else{u(undefined)}}get readable(){if(!IsTransformStream(this)){throw streamBrandCheckException("readable")}return this._readable}get writable(){if(!IsTransformStream(this)){throw streamBrandCheckException("writable")}return this._writable}}Object.defineProperties(TransformStream.prototype,{readable:{enumerable:true},writable:{enumerable:true}});if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(TransformStream.prototype,Symbol.toStringTag,{value:"TransformStream",configurable:true})}function InitializeTransformStream(t,r,a,i,n,o){function startAlgorithm(){return r}function writeAlgorithm(r){return TransformStreamDefaultSinkWriteAlgorithm(t,r)}function abortAlgorithm(r){return TransformStreamDefaultSinkAbortAlgorithm(t,r)}function closeAlgorithm(){return TransformStreamDefaultSinkCloseAlgorithm(t)}t._writable=CreateWritableStream(startAlgorithm,writeAlgorithm,closeAlgorithm,abortAlgorithm,a,i);function pullAlgorithm(){return TransformStreamDefaultSourcePullAlgorithm(t)}function cancelAlgorithm(r){return TransformStreamDefaultSourceCancelAlgorithm(t,r)}t._readable=CreateReadableStream(startAlgorithm,pullAlgorithm,cancelAlgorithm,n,o);t._backpressure=undefined;t._backpressureChangePromise=undefined;t._backpressureChangePromise_resolve=undefined;TransformStreamSetBackpressure(t,true);t._transformStreamController=undefined}function IsTransformStream(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_transformStreamController")){return false}return t instanceof TransformStream}function TransformStreamError(t,r){ReadableStreamDefaultControllerError(t._readable._readableStreamController,r);TransformStreamErrorWritableAndUnblockWrite(t,r)}function TransformStreamErrorWritableAndUnblockWrite(t,r){TransformStreamDefaultControllerClearAlgorithms(t._transformStreamController);WritableStreamDefaultControllerErrorIfNeeded(t._writable._writableStreamController,r);TransformStreamUnblockWrite(t)}function TransformStreamUnblockWrite(t){if(t._backpressure){TransformStreamSetBackpressure(t,false)}}function TransformStreamSetBackpressure(t,r){if(t._backpressureChangePromise!==undefined){t._backpressureChangePromise_resolve()}t._backpressureChangePromise=newPromise((r=>{t._backpressureChangePromise_resolve=r}));t._backpressure=r}class TransformStreamDefaultController{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("desiredSize")}const t=this._controlledTransformStream._readable._readableStreamController;return ReadableStreamDefaultControllerGetDesiredSize(t)}enqueue(t=undefined){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("enqueue")}TransformStreamDefaultControllerEnqueue(this,t)}error(t=undefined){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("error")}TransformStreamDefaultControllerError(this,t)}terminate(){if(!IsTransformStreamDefaultController(this)){throw defaultControllerBrandCheckException("terminate")}TransformStreamDefaultControllerTerminate(this)}}Object.defineProperties(TransformStreamDefaultController.prototype,{enqueue:{enumerable:true},error:{enumerable:true},terminate:{enumerable:true},desiredSize:{enumerable:true}});setFunctionName(TransformStreamDefaultController.prototype.enqueue,"enqueue");setFunctionName(TransformStreamDefaultController.prototype.error,"error");setFunctionName(TransformStreamDefaultController.prototype.terminate,"terminate");if(typeof Symbol.toStringTag==="symbol"){Object.defineProperty(TransformStreamDefaultController.prototype,Symbol.toStringTag,{value:"TransformStreamDefaultController",configurable:true})}function IsTransformStreamDefaultController(t){if(!typeIsObject(t)){return false}if(!Object.prototype.hasOwnProperty.call(t,"_controlledTransformStream")){return false}return t instanceof TransformStreamDefaultController}function SetUpTransformStreamDefaultController(t,r,a,i,n){r._controlledTransformStream=t;t._transformStreamController=r;r._transformAlgorithm=a;r._flushAlgorithm=i;r._cancelAlgorithm=n;r._finishPromise=undefined;r._finishPromise_resolve=undefined;r._finishPromise_reject=undefined}function SetUpTransformStreamDefaultControllerFromTransformer(t,r){const a=Object.create(TransformStreamDefaultController.prototype);let i;let n;let o;if(r.transform!==undefined){i=t=>r.transform(t,a)}else{i=t=>{try{TransformStreamDefaultControllerEnqueue(a,t);return promiseResolvedWith(undefined)}catch(t){return promiseRejectedWith(t)}}}if(r.flush!==undefined){n=()=>r.flush(a)}else{n=()=>promiseResolvedWith(undefined)}if(r.cancel!==undefined){o=t=>r.cancel(t)}else{o=()=>promiseResolvedWith(undefined)}SetUpTransformStreamDefaultController(t,a,i,n,o)}function TransformStreamDefaultControllerClearAlgorithms(t){t._transformAlgorithm=undefined;t._flushAlgorithm=undefined;t._cancelAlgorithm=undefined}function TransformStreamDefaultControllerEnqueue(t,r){const a=t._controlledTransformStream;const i=a._readable._readableStreamController;if(!ReadableStreamDefaultControllerCanCloseOrEnqueue(i)){throw new TypeError("Readable side is not in a state that permits enqueue")}try{ReadableStreamDefaultControllerEnqueue(i,r)}catch(t){TransformStreamErrorWritableAndUnblockWrite(a,t);throw a._readable._storedError}const n=ReadableStreamDefaultControllerHasBackpressure(i);if(n!==a._backpressure){TransformStreamSetBackpressure(a,true)}}function TransformStreamDefaultControllerError(t,r){TransformStreamError(t._controlledTransformStream,r)}function TransformStreamDefaultControllerPerformTransform(t,r){const a=t._transformAlgorithm(r);return transformPromiseWith(a,undefined,(r=>{TransformStreamError(t._controlledTransformStream,r);throw r}))}function TransformStreamDefaultControllerTerminate(t){const r=t._controlledTransformStream;const a=r._readable._readableStreamController;ReadableStreamDefaultControllerClose(a);const i=new TypeError("TransformStream terminated");TransformStreamErrorWritableAndUnblockWrite(r,i)}function TransformStreamDefaultSinkWriteAlgorithm(t,r){const a=t._transformStreamController;if(t._backpressure){const i=t._backpressureChangePromise;return transformPromiseWith(i,(()=>{const i=t._writable;const n=i._state;if(n==="erroring"){throw i._storedError}return TransformStreamDefaultControllerPerformTransform(a,r)}))}return TransformStreamDefaultControllerPerformTransform(a,r)}function TransformStreamDefaultSinkAbortAlgorithm(t,r){const a=t._transformStreamController;if(a._finishPromise!==undefined){return a._finishPromise}const i=t._readable;a._finishPromise=newPromise(((t,r)=>{a._finishPromise_resolve=t;a._finishPromise_reject=r}));const n=a._cancelAlgorithm(r);TransformStreamDefaultControllerClearAlgorithms(a);uponPromise(n,(()=>{if(i._state==="errored"){defaultControllerFinishPromiseReject(a,i._storedError)}else{ReadableStreamDefaultControllerError(i._readableStreamController,r);defaultControllerFinishPromiseResolve(a)}return null}),(t=>{ReadableStreamDefaultControllerError(i._readableStreamController,t);defaultControllerFinishPromiseReject(a,t);return null}));return a._finishPromise}function TransformStreamDefaultSinkCloseAlgorithm(t){const r=t._transformStreamController;if(r._finishPromise!==undefined){return r._finishPromise}const a=t._readable;r._finishPromise=newPromise(((t,a)=>{r._finishPromise_resolve=t;r._finishPromise_reject=a}));const i=r._flushAlgorithm();TransformStreamDefaultControllerClearAlgorithms(r);uponPromise(i,(()=>{if(a._state==="errored"){defaultControllerFinishPromiseReject(r,a._storedError)}else{ReadableStreamDefaultControllerClose(a._readableStreamController);defaultControllerFinishPromiseResolve(r)}return null}),(t=>{ReadableStreamDefaultControllerError(a._readableStreamController,t);defaultControllerFinishPromiseReject(r,t);return null}));return r._finishPromise}function TransformStreamDefaultSourcePullAlgorithm(t){TransformStreamSetBackpressure(t,false);return t._backpressureChangePromise}function TransformStreamDefaultSourceCancelAlgorithm(t,r){const a=t._transformStreamController;if(a._finishPromise!==undefined){return a._finishPromise}const i=t._writable;a._finishPromise=newPromise(((t,r)=>{a._finishPromise_resolve=t;a._finishPromise_reject=r}));const n=a._cancelAlgorithm(r);TransformStreamDefaultControllerClearAlgorithms(a);uponPromise(n,(()=>{if(i._state==="errored"){defaultControllerFinishPromiseReject(a,i._storedError)}else{WritableStreamDefaultControllerErrorIfNeeded(i._writableStreamController,r);TransformStreamUnblockWrite(t);defaultControllerFinishPromiseResolve(a)}return null}),(r=>{WritableStreamDefaultControllerErrorIfNeeded(i._writableStreamController,r);TransformStreamUnblockWrite(t);defaultControllerFinishPromiseReject(a,r);return null}));return a._finishPromise}function defaultControllerBrandCheckException(t){return new TypeError(`TransformStreamDefaultController.prototype.${t} can only be used on a TransformStreamDefaultController`)}function defaultControllerFinishPromiseResolve(t){if(t._finishPromise_resolve===undefined){return}t._finishPromise_resolve();t._finishPromise_resolve=undefined;t._finishPromise_reject=undefined}function defaultControllerFinishPromiseReject(t,r){if(t._finishPromise_reject===undefined){return}setPromiseIsHandledToTrue(t._finishPromise);t._finishPromise_reject(r);t._finishPromise_resolve=undefined;t._finishPromise_reject=undefined}function streamBrandCheckException(t){return new TypeError(`TransformStream.prototype.${t} can only be used on a TransformStream`)}t.ByteLengthQueuingStrategy=ByteLengthQueuingStrategy;t.CountQueuingStrategy=CountQueuingStrategy;t.ReadableByteStreamController=ReadableByteStreamController;t.ReadableStream=ReadableStream;t.ReadableStreamBYOBReader=ReadableStreamBYOBReader;t.ReadableStreamBYOBRequest=ReadableStreamBYOBRequest;t.ReadableStreamDefaultController=ReadableStreamDefaultController;t.ReadableStreamDefaultReader=ReadableStreamDefaultReader;t.TransformStream=TransformStream;t.TransformStreamDefaultController=TransformStreamDefaultController;t.WritableStream=WritableStream;t.WritableStreamDefaultController=WritableStreamDefaultController;t.WritableStreamDefaultWriter=WritableStreamDefaultWriter}))},7125:t=>{"use strict";var r={};t.exports=r;function sign(t){return t<0?-1:1}function evenRound(t){if(t%1===.5&&(t&1)===0){return Math.floor(t)}else{return Math.round(t)}}function createNumberConversion(t,r){if(!r.unsigned){--t}const a=r.unsigned?0:-Math.pow(2,t);const i=Math.pow(2,t)-1;const n=r.moduloBitLength?Math.pow(2,r.moduloBitLength):Math.pow(2,t);const o=r.moduloBitLength?Math.pow(2,r.moduloBitLength-1):Math.pow(2,t-1);return function(t,d){if(!d)d={};let p=+t;if(d.enforceRange){if(!Number.isFinite(p)){throw new TypeError("Argument is not a finite number")}p=sign(p)*Math.floor(Math.abs(p));if(p<a||p>i){throw new TypeError("Argument is not in byte range")}return p}if(!isNaN(p)&&d.clamp){p=evenRound(p);if(p<a)p=a;if(p>i)p=i;return p}if(!Number.isFinite(p)||p===0){return 0}p=sign(p)*Math.floor(Math.abs(p));p=p%n;if(!r.unsigned&&p>=o){return p-n}else if(r.unsigned){if(p<0){p+=n}else if(p===-0){return 0}}return p}}r["void"]=function(){return undefined};r["boolean"]=function(t){return!!t};r["byte"]=createNumberConversion(8,{unsigned:false});r["octet"]=createNumberConversion(8,{unsigned:true});r["short"]=createNumberConversion(16,{unsigned:false});r["unsigned short"]=createNumberConversion(16,{unsigned:true});r["long"]=createNumberConversion(32,{unsigned:false});r["unsigned long"]=createNumberConversion(32,{unsigned:true});r["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});r["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});r["double"]=function(t){const r=+t;if(!Number.isFinite(r)){throw new TypeError("Argument is not a finite floating-point value")}return r};r["unrestricted double"]=function(t){const r=+t;if(isNaN(r)){throw new TypeError("Argument is NaN")}return r};r["float"]=r["double"];r["unrestricted float"]=r["unrestricted double"];r["DOMString"]=function(t,r){if(!r)r={};if(r.treatNullAsEmptyString&&t===null){return""}return String(t)};r["ByteString"]=function(t,r){const a=String(t);let i=undefined;for(let t=0;(i=a.codePointAt(t))!==undefined;++t){if(i>255){throw new TypeError("Argument is not a valid bytestring")}}return a};r["USVString"]=function(t){const r=String(t);const a=r.length;const i=[];for(let t=0;t<a;++t){const n=r.charCodeAt(t);if(n<55296||n>57343){i.push(String.fromCodePoint(n))}else if(56320<=n&&n<=57343){i.push(String.fromCodePoint(65533))}else{if(t===a-1){i.push(String.fromCodePoint(65533))}else{const a=r.charCodeAt(t+1);if(56320<=a&&a<=57343){const r=n&1023;const o=a&1023;i.push(String.fromCodePoint((2<<15)+(2<<9)*r+o));++t}else{i.push(String.fromCodePoint(65533))}}}}return i.join("")};r["Date"]=function(t,r){if(!(t instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(t)){return undefined}return t};r["RegExp"]=function(t,r){if(!(t instanceof RegExp)){t=new RegExp(t)}return t}},3184:(t,r,a)=>{"use strict";const i=a(905);r.implementation=class URLImpl{constructor(t){const r=t[0];const a=t[1];let n=null;if(a!==undefined){n=i.basicURLParse(a);if(n==="failure"){throw new TypeError("Invalid base URL")}}const o=i.basicURLParse(r,{baseURL:n});if(o==="failure"){throw new TypeError("Invalid URL")}this._url=o}get href(){return i.serializeURL(this._url)}set href(t){const r=i.basicURLParse(t);if(r==="failure"){throw new TypeError("Invalid URL")}this._url=r}get origin(){return i.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(t){i.basicURLParse(t+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(t){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setTheUsername(this._url,t)}get password(){return this._url.password}set password(t){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}i.setThePassword(this._url,t)}get host(){const t=this._url;if(t.host===null){return""}if(t.port===null){return i.serializeHost(t.host)}return i.serializeHost(t.host)+":"+i.serializeInteger(t.port)}set host(t){if(this._url.cannotBeABaseURL){return}i.basicURLParse(t,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return i.serializeHost(this._url.host)}set hostname(t){if(this._url.cannotBeABaseURL){return}i.basicURLParse(t,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return i.serializeInteger(this._url.port)}set port(t){if(i.cannotHaveAUsernamePasswordPort(this._url)){return}if(t===""){this._url.port=null}else{i.basicURLParse(t,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(t){if(this._url.cannotBeABaseURL){return}this._url.path=[];i.basicURLParse(t,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(t){const r=this._url;if(t===""){r.query=null;return}const a=t[0]==="?"?t.substring(1):t;r.query="";i.basicURLParse(a,{url:r,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(t){if(t===""){this._url.fragment=null;return}const r=t[0]==="#"?t.substring(1):t;this._url.fragment="";i.basicURLParse(r,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},6633:(t,r,a)=>{"use strict";const i=a(7125);const n=a(9857);const o=a(3184);const d=n.implSymbol;function URL(r){if(!this||this[d]||!(this instanceof URL)){throw new TypeError("Failed to construct \'URL\': Please use the \'new\' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct \'URL\': 1 argument required, but only "+arguments.length+" present.")}const a=[];for(let t=0;t<arguments.length&&t<2;++t){a[t]=arguments[t]}a[0]=i["USVString"](a[0]);if(a[1]!==undefined){a[1]=i["USVString"](a[1])}t.exports.setup(this,a)}URL.prototype.toJSON=function toJSON(){if(!this||!t.exports.is(this)){throw new TypeError("Illegal invocation")}const r=[];for(let t=0;t<arguments.length&&t<0;++t){r[t]=arguments[t]}return this[d].toJSON.apply(this[d],r)};Object.defineProperty(URL.prototype,"href",{get(){return this[d].href},set(t){t=i["USVString"](t);this[d].href=t},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!t.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[d].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[d].protocol},set(t){t=i["USVString"](t);this[d].protocol=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[d].username},set(t){t=i["USVString"](t);this[d].username=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[d].password},set(t){t=i["USVString"](t);this[d].password=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[d].host},set(t){t=i["USVString"](t);this[d].host=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[d].hostname},set(t){t=i["USVString"](t);this[d].hostname=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[d].port},set(t){t=i["USVString"](t);this[d].port=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[d].pathname},set(t){t=i["USVString"](t);this[d].pathname=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[d].search},set(t){t=i["USVString"](t);this[d].search=t},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[d].hash},set(t){t=i["USVString"](t);this[d].hash=t},enumerable:true,configurable:true});t.exports={is(t){return!!t&&t[d]instanceof o.implementation},create(t,r){let a=Object.create(URL.prototype);this.setup(a,t,r);return a},setup(t,r,a){if(!a)a={};a.wrapper=t;t[d]=new o.implementation(r,a);t[d][n.wrapperSymbol]=t},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},2686:(t,r,a)=>{"use strict";r.URL=a(6633)["interface"];r.serializeURL=a(905).serializeURL;r.serializeURLOrigin=a(905).serializeURLOrigin;r.basicURLParse=a(905).basicURLParse;r.setTheUsername=a(905).setTheUsername;r.setThePassword=a(905).setThePassword;r.serializeHost=a(905).serializeHost;r.serializeInteger=a(905).serializeInteger;r.parseURL=a(905).parseURL},905:(t,r,a)=>{"use strict";const i=a(4876);const n=a(1552);const o={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const d=Symbol("failure");function countSymbols(t){return i.ucs2.decode(t).length}function at(t,r){const a=t[r];return isNaN(a)?undefined:String.fromCodePoint(a)}function isASCIIDigit(t){return t>=48&&t<=57}function isASCIIAlpha(t){return t>=65&&t<=90||t>=97&&t<=122}function isASCIIAlphanumeric(t){return isASCIIAlpha(t)||isASCIIDigit(t)}function isASCIIHex(t){return isASCIIDigit(t)||t>=65&&t<=70||t>=97&&t<=102}function isSingleDot(t){return t==="."||t.toLowerCase()==="%2e"}function isDoubleDot(t){t=t.toLowerCase();return t===".."||t==="%2e."||t===".%2e"||t==="%2e%2e"}function isWindowsDriveLetterCodePoints(t,r){return isASCIIAlpha(t)&&(r===58||r===124)}function isWindowsDriveLetterString(t){return t.length===2&&isASCIIAlpha(t.codePointAt(0))&&(t[1]===":"||t[1]==="|")}function isNormalizedWindowsDriveLetterString(t){return t.length===2&&isASCIIAlpha(t.codePointAt(0))&&t[1]===":"}function containsForbiddenHostCodePoint(t){return t.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(t){return t.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function isSpecialScheme(t){return o[t]!==undefined}function isSpecial(t){return isSpecialScheme(t.scheme)}function defaultPort(t){return o[t]}function percentEncode(t){let r=t.toString(16).toUpperCase();if(r.length===1){r="0"+r}return"%"+r}function utf8PercentEncode(t){const r=new Buffer(t);let a="";for(let t=0;t<r.length;++t){a+=percentEncode(r[t])}return a}function utf8PercentDecode(t){const r=new Buffer(t);const a=[];for(let t=0;t<r.length;++t){if(r[t]!==37){a.push(r[t])}else if(r[t]===37&&isASCIIHex(r[t+1])&&isASCIIHex(r[t+2])){a.push(parseInt(r.slice(t+1,t+3).toString(),16));t+=2}else{a.push(r[t])}}return new Buffer(a).toString()}function isC0ControlPercentEncode(t){return t<=31||t>126}const p=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(t){return isC0ControlPercentEncode(t)||p.has(t)}const l=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(t){return isPathPercentEncode(t)||l.has(t)}function percentEncodeChar(t,r){const a=String.fromCodePoint(t);if(r(t)){return utf8PercentEncode(a)}return a}function parseIPv4Number(t){let r=10;if(t.length>=2&&t.charAt(0)==="0"&&t.charAt(1).toLowerCase()==="x"){t=t.substring(2);r=16}else if(t.length>=2&&t.charAt(0)==="0"){t=t.substring(1);r=8}if(t===""){return 0}const a=r===10?/[^0-9]/:r===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(a.test(t)){return d}return parseInt(t,r)}function parseIPv4(t){const r=t.split(".");if(r[r.length-1]===""){if(r.length>1){r.pop()}}if(r.length>4){return t}const a=[];for(const i of r){if(i===""){return t}const r=parseIPv4Number(i);if(r===d){return t}a.push(r)}for(let t=0;t<a.length-1;++t){if(a[t]>255){return d}}if(a[a.length-1]>=Math.pow(256,5-a.length)){return d}let i=a.pop();let n=0;for(const t of a){i+=t*Math.pow(256,3-n);++n}return i}function serializeIPv4(t){let r="";let a=t;for(let t=1;t<=4;++t){r=String(a%256)+r;if(t!==4){r="."+r}a=Math.floor(a/256)}return r}function parseIPv6(t){const r=[0,0,0,0,0,0,0,0];let a=0;let n=null;let o=0;t=i.ucs2.decode(t);if(t[o]===58){if(t[o+1]!==58){return d}o+=2;++a;n=a}while(o<t.length){if(a===8){return d}if(t[o]===58){if(n!==null){return d}++o;++a;n=a;continue}let i=0;let p=0;while(p<4&&isASCIIHex(t[o])){i=i*16+parseInt(at(t,o),16);++o;++p}if(t[o]===46){if(p===0){return d}o-=p;if(a>6){return d}let i=0;while(t[o]!==undefined){let n=null;if(i>0){if(t[o]===46&&i<4){++o}else{return d}}if(!isASCIIDigit(t[o])){return d}while(isASCIIDigit(t[o])){const r=parseInt(at(t,o));if(n===null){n=r}else if(n===0){return d}else{n=n*10+r}if(n>255){return d}++o}r[a]=r[a]*256+n;++i;if(i===2||i===4){++a}}if(i!==4){return d}break}else if(t[o]===58){++o;if(t[o]===undefined){return d}}else if(t[o]!==undefined){return d}r[a]=i;++a}if(n!==null){let t=a-n;a=7;while(a!==0&&t>0){const i=r[n+t-1];r[n+t-1]=r[a];r[a]=i;--a;--t}}else if(n===null&&a!==8){return d}return r}function serializeIPv6(t){let r="";const a=findLongestZeroSequence(t);const i=a.idx;let n=false;for(let a=0;a<=7;++a){if(n&&t[a]===0){continue}else if(n){n=false}if(i===a){const t=a===0?"::":":";r+=t;n=true;continue}r+=t[a].toString(16);if(a!==7){r+=":"}}return r}function parseHost(t,r){if(t[0]==="["){if(t[t.length-1]!=="]"){return d}return parseIPv6(t.substring(1,t.length-1))}if(!r){return parseOpaqueHost(t)}const a=utf8PercentDecode(t);const i=n.toASCII(a,false,n.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(i===null){return d}if(containsForbiddenHostCodePoint(i)){return d}const o=parseIPv4(i);if(typeof o==="number"||o===d){return o}return i}function parseOpaqueHost(t){if(containsForbiddenHostCodePointExcludingPercent(t)){return d}let r="";const a=i.ucs2.decode(t);for(let t=0;t<a.length;++t){r+=percentEncodeChar(a[t],isC0ControlPercentEncode)}return r}function findLongestZeroSequence(t){let r=null;let a=1;let i=null;let n=0;for(let o=0;o<t.length;++o){if(t[o]!==0){if(n>a){r=i;a=n}i=null;n=0}else{if(i===null){i=o}++n}}if(n>a){r=i;a=n}return{idx:r,len:a}}function serializeHost(t){if(typeof t==="number"){return serializeIPv4(t)}if(t instanceof Array){return"["+serializeIPv6(t)+"]"}return t}function trimControlChars(t){return t.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g,"")}function trimTabAndNewline(t){return t.replace(/\\u0009|\\u000A|\\u000D/g,"")}function shortenPath(t){const r=t.path;if(r.length===0){return}if(t.scheme==="file"&&r.length===1&&isNormalizedWindowsDriveLetter(r[0])){return}r.pop()}function includesCredentials(t){return t.username!==""||t.password!==""}function cannotHaveAUsernamePasswordPort(t){return t.host===null||t.host===""||t.cannotBeABaseURL||t.scheme==="file"}function isNormalizedWindowsDriveLetter(t){return/^[A-Za-z]:$/.test(t)}function URLStateMachine(t,r,a,n,o){this.pointer=0;this.input=t;this.base=r||null;this.encodingOverride=a||"utf-8";this.stateOverride=o;this.url=n;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const t=trimControlChars(this.input);if(t!==this.input){this.parseError=true}this.input=t}const p=trimTabAndNewline(this.input);if(p!==this.input){this.parseError=true}this.input=p;this.state=o||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=i.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const t=this.input[this.pointer];const r=isNaN(t)?undefined:String.fromCodePoint(t);const a=this["parse "+this.state](t,r);if(!a){break}else if(a===d){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(t,r){if(isASCIIAlpha(t)){this.buffer+=r.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return d}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(t,r){if(isASCIIAlphanumeric(t)||t===43||t===45||t===46){this.buffer+=r.toLowerCase()}else if(t===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return d}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(t){if(this.base===null||this.base.cannotBeABaseURL&&t!==35){return d}else if(this.base.cannotBeABaseURL&&t===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(t){if(t===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(t){if(t===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(t){this.url.scheme=this.base.scheme;if(isNaN(t)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(t===47){this.state="relative slash"}else if(t===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(t===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&t===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(t){if(isSpecial(this.url)&&(t===47||t===92)){if(t===92){this.parseError=true}this.state="special authority ignore slashes"}else if(t===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(t){if(t===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(t){if(t!==47&&t!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(t,r){if(t===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const t=countSymbols(this.buffer);for(let r=0;r<t;++r){const t=this.buffer.codePointAt(r);if(t===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const a=percentEncodeChar(t,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=a}else{this.url.username+=a}}this.buffer=""}else if(isNaN(t)||t===47||t===63||t===35||isSpecial(this.url)&&t===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return d}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=r}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(t,r){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(t===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return d}const t=parseHost(this.buffer,isSpecial(this.url));if(t===d){return d}this.url.host=t;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(t)||t===47||t===63||t===35||isSpecial(this.url)&&t===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return d}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const t=parseHost(this.buffer,isSpecial(this.url));if(t===d){return d}this.url.host=t;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(t===91){this.arrFlag=true}else if(t===93){this.arrFlag=false}this.buffer+=r}return true};URLStateMachine.prototype["parse port"]=function parsePort(t,r){if(isASCIIDigit(t)){this.buffer+=r}else if(isNaN(t)||t===47||t===63||t===35||isSpecial(this.url)&&t===92||this.stateOverride){if(this.buffer!==""){const t=parseInt(this.buffer);if(t>Math.pow(2,16)-1){this.parseError=true;return d}this.url.port=t===defaultPort(this.url.scheme)?null:t;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return d}return true};const s=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(t){this.url.scheme="file";if(t===47||t===92){if(t===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(t)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(t===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(t===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(t,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!s.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(t){if(t===47||t===92){if(t===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(t,r){if(isNaN(t)||t===47||t===92||t===63||t===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let t=parseHost(this.buffer,isSpecial(this.url));if(t===d){return d}if(t==="localhost"){t=""}this.url.host=t;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=r}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(t){if(isSpecial(this.url)){if(t===92){this.parseError=true}this.state="path";if(t!==47&&t!==92){--this.pointer}}else if(!this.stateOverride&&t===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&t===35){this.url.fragment="";this.state="fragment"}else if(t!==undefined){this.state="path";if(t!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(t){if(isNaN(t)||t===47||isSpecial(this.url)&&t===92||!this.stateOverride&&(t===63||t===35)){if(isSpecial(this.url)&&t===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(t!==47&&!(isSpecial(this.url)&&t===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&t!==47&&!(isSpecial(this.url)&&t===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(t===undefined||t===63||t===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(t===63){this.url.query="";this.state="query"}if(t===35){this.url.fragment="";this.state="fragment"}}else{if(t===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(t,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(t){if(t===63){this.url.query="";this.state="query"}else if(t===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(t)&&t!==37){this.parseError=true}if(t===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(t)){this.url.path[0]=this.url.path[0]+percentEncodeChar(t,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(t,r){if(isNaN(t)||!this.stateOverride&&t===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const r=new Buffer(this.buffer);for(let t=0;t<r.length;++t){if(r[t]<33||r[t]>126||r[t]===34||r[t]===35||r[t]===60||r[t]===62){this.url.query+=percentEncode(r[t])}else{this.url.query+=String.fromCodePoint(r[t])}}this.buffer="";if(t===35){this.url.fragment="";this.state="fragment"}}else{if(t===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=r}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(t){if(isNaN(t)){}else if(t===0){this.parseError=true}else{if(t===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(t,isC0ControlPercentEncode)}return true};function serializeURL(t,r){let a=t.scheme+":";if(t.host!==null){a+="//";if(t.username!==""||t.password!==""){a+=t.username;if(t.password!==""){a+=":"+t.password}a+="@"}a+=serializeHost(t.host);if(t.port!==null){a+=":"+t.port}}else if(t.host===null&&t.scheme==="file"){a+="//"}if(t.cannotBeABaseURL){a+=t.path[0]}else{for(const r of t.path){a+="/"+r}}if(t.query!==null){a+="?"+t.query}if(!r&&t.fragment!==null){a+="#"+t.fragment}return a}function serializeOrigin(t){let r=t.scheme+"://";r+=serializeHost(t.host);if(t.port!==null){r+=":"+t.port}return r}t.exports.serializeURL=serializeURL;t.exports.serializeURLOrigin=function(r){switch(r.scheme){case"blob":try{return t.exports.serializeURLOrigin(t.exports.parseURL(r.path[0]))}catch(t){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:r.scheme,host:r.host,port:r.port});case"file":return"file://";default:return"null"}};t.exports.basicURLParse=function(t,r){if(r===undefined){r={}}const a=new URLStateMachine(t,r.baseURL,r.encodingOverride,r.url,r.stateOverride);if(a.failure){return"failure"}return a.url};t.exports.setTheUsername=function(t,r){t.username="";const a=i.ucs2.decode(r);for(let r=0;r<a.length;++r){t.username+=percentEncodeChar(a[r],isUserinfoPercentEncode)}};t.exports.setThePassword=function(t,r){t.password="";const a=i.ucs2.decode(r);for(let r=0;r<a.length;++r){t.password+=percentEncodeChar(a[r],isUserinfoPercentEncode)}};t.exports.serializeHost=serializeHost;t.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;t.exports.serializeInteger=function(t){return String(t)};t.exports.parseURL=function(r,a){if(a===undefined){a={}}return t.exports.basicURLParse(r,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},9857:t=>{"use strict";t.exports.mixin=function mixin(t,r){const a=Object.getOwnPropertyNames(r);for(let i=0;i<a.length;++i){Object.defineProperty(t,a[i],Object.getOwnPropertyDescriptor(r,a[i]))}};t.exports.wrapperSymbol=Symbol("wrapper");t.exports.implSymbol=Symbol("impl");t.exports.wrapperForImpl=function(r){return r[t.exports.wrapperSymbol]};t.exports.implForWrapper=function(r){return r[t.exports.implSymbol]}},2078:module=>{module.exports=eval("require")("encoding")},181:t=>{"use strict";t.exports=require("buffer")},8611:t=>{"use strict";t.exports=require("http")},5692:t=>{"use strict";t.exports=require("https")},1708:t=>{"use strict";t.exports=require("node:process")},7830:t=>{"use strict";t.exports=require("node:stream/web")},4876:t=>{"use strict";t.exports=require("punycode")},2203:t=>{"use strict";t.exports=require("stream")},7016:t=>{"use strict";t.exports=require("url")},8167:t=>{"use strict";t.exports=require("worker_threads")},3106:t=>{"use strict";t.exports=require("zlib")},1204:(t,r,a)=>{const i=65536;if(!globalThis.ReadableStream){try{const t=a(1708);const{emitWarning:r}=t;try{t.emitWarning=()=>{};Object.assign(globalThis,a(7830));t.emitWarning=r}catch(a){t.emitWarning=r;throw a}}catch(t){Object.assign(globalThis,a(3585))}}try{const{Blob:t}=a(181);if(t&&!t.prototype.stream){t.prototype.stream=function name(t){let r=0;const a=this;return new ReadableStream({type:"bytes",async pull(t){const n=a.slice(r,Math.min(a.size,r+i));const o=await n.arrayBuffer();r+=o.byteLength;t.enqueue(new Uint8Array(o));if(r===a.size){t.close()}}})}}}catch(t){}},4645:(t,r,a)=>{"use strict";a.d(r,{A:()=>d});var i=a(6327);const n=class File extends i.A{#e=0;#t="";constructor(t,r,a={}){if(arguments.length<2){throw new TypeError(`Failed to construct \'File\': 2 arguments required, but only ${arguments.length} present.`)}super(t,a);if(a===null)a={};const i=a.lastModified===undefined?Date.now():Number(a.lastModified);if(!Number.isNaN(i)){this.#e=i}this.#t=String(r)}get name(){return this.#t}get lastModified(){return this.#e}get[Symbol.toStringTag](){return"File"}static[Symbol.hasInstance](t){return!!t&&t instanceof i.A&&/^(File)$/.test(t[Symbol.toStringTag])}};const o=n;const d=o},9802:(t,r,a)=>{"use strict";a.d(r,{YQ:()=>p.A,ZH:()=>d.A});const i=require("node:fs");const n=require("node:path");var o=a(7666);var d=a(4645);var p=a(6327);const{stat:l}=i.promises;const blobFromSync=(t,r)=>fromBlob(statSync(t),t,r);const blobFrom=(t,r)=>l(t).then((a=>fromBlob(a,t,r)));const fileFrom=(t,r)=>l(t).then((a=>fromFile(a,t,r)));const fileFromSync=(t,r)=>fromFile(statSync(t),t,r);const fromBlob=(t,r,a="")=>new Blob([new BlobDataItem({path:r,size:t.size,lastModified:t.mtimeMs,start:0})],{type:a});const fromFile=(t,r,a="")=>new File([new BlobDataItem({path:r,size:t.size,lastModified:t.mtimeMs,start:0})],basename(r),{type:a,lastModified:t.mtimeMs});class BlobDataItem{#r;#a;constructor(t){this.#r=t.path;this.#a=t.start;this.size=t.size;this.lastModified=t.lastModified}slice(t,r){return new BlobDataItem({path:this.#r,lastModified:this.lastModified,size:r-t,start:this.#a+t})}async*stream(){const{mtimeMs:t}=await l(this.#r);if(t>this.lastModified){throw new o("The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.","NotReadableError")}yield*(0,i.createReadStream)(this.#r,{start:this.#a,end:this.#a+this.size-1})}get[Symbol.toStringTag](){return"Blob"}}const s=null&&blobFromSync},6327:(t,r,a)=>{"use strict";a.d(r,{A:()=>p});var i=a(1204);\n/*! fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */const n=65536;async function*toIterator(t,r=true){for(const a of t){if("stream"in a){yield*a.stream()}else if(ArrayBuffer.isView(a)){if(r){let t=a.byteOffset;const r=a.byteOffset+a.byteLength;while(t!==r){const i=Math.min(r-t,n);const o=a.buffer.slice(t,t+i);t+=o.byteLength;yield new Uint8Array(o)}}else{yield a}}else{let t=0,r=a;while(t!==r.size){const a=r.slice(t,Math.min(r.size,t+n));const i=await a.arrayBuffer();t+=i.byteLength;yield new Uint8Array(i)}}}}const o=class Blob{#i=[];#n="";#o=0;#d="transparent";constructor(t=[],r={}){if(typeof t!=="object"||t===null){throw new TypeError("Failed to construct \'Blob\': The provided value cannot be converted to a sequence.")}if(typeof t[Symbol.iterator]!=="function"){throw new TypeError("Failed to construct \'Blob\': The object must have a callable @@iterator property.")}if(typeof r!=="object"&&typeof r!=="function"){throw new TypeError("Failed to construct \'Blob\': parameter 2 cannot convert to dictionary.")}if(r===null)r={};const a=new TextEncoder;for(const r of t){let t;if(ArrayBuffer.isView(r)){t=new Uint8Array(r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength))}else if(r instanceof ArrayBuffer){t=new Uint8Array(r.slice(0))}else if(r instanceof Blob){t=r}else{t=a.encode(`${r}`)}this.#o+=ArrayBuffer.isView(t)?t.byteLength:t.size;this.#i.push(t)}this.#d=`${r.endings===undefined?"transparent":r.endings}`;const i=r.type===undefined?"":String(r.type);this.#n=/^[\\x20-\\x7E]*$/.test(i)?i:""}get size(){return this.#o}get type(){return this.#n}async text(){const t=new TextDecoder;let r="";for await(const a of toIterator(this.#i,false)){r+=t.decode(a,{stream:true})}r+=t.decode();return r}async arrayBuffer(){const t=new Uint8Array(this.size);let r=0;for await(const a of toIterator(this.#i,false)){t.set(a,r);r+=a.length}return t.buffer}stream(){const t=toIterator(this.#i,true);return new globalThis.ReadableStream({type:"bytes",async pull(r){const a=await t.next();a.done?r.close():r.enqueue(a.value)},async cancel(){await t.return()}})}slice(t=0,r=this.size,a=""){const{size:i}=this;let n=t<0?Math.max(i+t,0):Math.min(t,i);let o=r<0?Math.max(i+r,0):Math.min(r,i);const d=Math.max(o-n,0);const p=this.#i;const l=[];let s=0;for(const t of p){if(s>=d){break}const r=ArrayBuffer.isView(t)?t.byteLength:t.size;if(n&&r<=n){n-=r;o-=r}else{let a;if(ArrayBuffer.isView(t)){a=t.subarray(n,Math.min(r,o));s+=a.byteLength}else{a=t.slice(n,Math.min(r,o));s+=a.size}o-=r;l.push(a);n=0}}const u=new Blob([],{type:String(a).toLowerCase()});u.#o=d;u.#i=l;return u}get[Symbol.toStringTag](){return"Blob"}static[Symbol.hasInstance](t){return t&&typeof t==="object"&&typeof t.constructor==="function"&&(typeof t.stream==="function"||typeof t.arrayBuffer==="function")&&/^(Blob|File)$/.test(t[Symbol.toStringTag])}};Object.defineProperties(o.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});const d=o;const p=d},3018:(t,r,a)=>{"use strict";a.d(r,{$n:()=>formDataToBlob,fS:()=>c});var i=a(6327);var n=a(4645);\n/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */var{toStringTag:o,iterator:d,hasInstance:p}=Symbol,l=Math.random,s="append,set,get,getAll,delete,keys,values,entries,forEach,constructor".split(","),f=(t,r,a)=>(t+="",/^(Blob|File)$/.test(r&&r[o])?[(a=a!==void 0?a+"":r[o]=="File"?r.name:"blob",t),r.name!==a||r[o]=="blob"?new n.A([r],a,r):r]:[t,r+""]),e=(t,r)=>(r?t:t.replace(/\\r?\\n|\\r/g,"\\r\\n")).replace(/\\n/g,"%0A").replace(/\\r/g,"%0D").replace(/"/g,"%22"),x=(t,r,a)=>{if(r.length<a){throw new TypeError(`Failed to execute \'${t}\' on \'FormData\': ${a} arguments required, but only ${r.length} present.`)}};const u=null&&F;const c=class FormData{#p=[];constructor(...t){if(t.length)throw new TypeError(`Failed to construct \'FormData\': parameter 1 is not of type \'HTMLFormElement\'.`)}get[o](){return"FormData"}[d](){return this.entries()}static[p](t){return t&&typeof t==="object"&&t[o]==="FormData"&&!s.some((r=>typeof t[r]!="function"))}append(...t){x("append",arguments,2);this.#p.push(f(...t))}delete(t){x("delete",arguments,1);t+="";this.#p=this.#p.filter((([r])=>r!==t))}get(t){x("get",arguments,1);t+="";for(var r=this.#p,a=r.length,i=0;i<a;i++)if(r[i][0]===t)return r[i][1];return null}getAll(t,r){x("getAll",arguments,1);r=[];t+="";this.#p.forEach((a=>a[0]===t&&r.push(a[1])));return r}has(t){x("has",arguments,1);t+="";return this.#p.some((r=>r[0]===t))}forEach(t,r){x("forEach",arguments,1);for(var[a,i]of this)t.call(r,i,a,this)}set(...t){x("set",arguments,2);var r=[],a=!0;t=f(...t);this.#p.forEach((i=>{i[0]===t[0]?a&&(a=!r.push(t)):r.push(i)}));a&&r.push(t);this.#p=r}*entries(){yield*this.#p}*keys(){for(var[t]of this)yield t}*values(){for(var[,t]of this)yield t}};function formDataToBlob(t,r=i.A){var a=`${l()}${l()}`.replace(/\\./g,"").slice(-28).padStart(32,"-"),n=[],o=`--${a}\\r\\nContent-Disposition: form-data; name="`;t.forEach(((t,r)=>typeof t=="string"?n.push(o+e(r)+`"\\r\\n\\r\\n${t.replace(/\\r(?!\\n)|(?<!\\r)\\n/g,"\\r\\n")}\\r\\n`):n.push(o+e(r)+`"; filename="${e(t.name,1)}"\\r\\nContent-Type: ${t.type||"application/octet-stream"}\\r\\n\\r\\n`,t,"\\r\\n")));n.push(`--${a}--`);return new r(n,{type:"multipart/form-data; boundary="+a})}},2472:t=>{"use strict";t.exports=JSON.parse(\'[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]\')}};var __webpack_module_cache__={};function __nccwpck_require__(t){var r=__webpack_module_cache__[t];if(r!==undefined){return r.exports}var a=__webpack_module_cache__[t]={id:t,loaded:false,exports:{}};var i=true;try{__webpack_modules__[t].call(a.exports,a,a.exports,__nccwpck_require__);i=false}finally{if(i)delete __webpack_module_cache__[t]}a.loaded=true;return a.exports}__nccwpck_require__.m=__webpack_modules__;(()=>{__nccwpck_require__.n=t=>{var r=t&&t.__esModule?()=>t["default"]:()=>t;__nccwpck_require__.d(r,{a:r});return r}})();(()=>{__nccwpck_require__.d=(t,r)=>{for(var a in r){if(__nccwpck_require__.o(r,a)&&!__nccwpck_require__.o(t,a)){Object.defineProperty(t,a,{enumerable:true,get:r[a]})}}}})();(()=>{__nccwpck_require__.f={};__nccwpck_require__.e=t=>Promise.all(Object.keys(__nccwpck_require__.f).reduce(((r,a)=>{__nccwpck_require__.f[a](t,r);return r}),[]))})();(()=>{__nccwpck_require__.u=t=>""+t+".index.js"})();(()=>{__nccwpck_require__.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r)})();(()=>{__nccwpck_require__.r=t=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(t,"__esModule",{value:true})}})();(()=>{__nccwpck_require__.nmd=t=>{t.paths=[];if(!t.children)t.children=[];return t}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";(()=>{var t={792:1};var installChunk=r=>{var a=r.modules,i=r.ids,n=r.runtime;for(var o in a){if(__nccwpck_require__.o(a,o)){__nccwpck_require__.m[o]=a[o]}}if(n)n(__nccwpck_require__);for(var d=0;d<i.length;d++)t[i[d]]=1};__nccwpck_require__.f.require=(r,a)=>{if(!t[r]){if(true){installChunk(require("./"+__nccwpck_require__.u(r)))}else t[r]=1}}})();var __webpack_exports__={};(()=>{"use strict";__nccwpck_require__.r(__webpack_exports__);__nccwpck_require__.d(__webpack_exports__,{default:()=>dt});var t=__nccwpck_require__(5437);var r=__nccwpck_require__(7016);const a="ae5ba624c16df76df4c7a07914b03ee7";function createApiUrl({endpoint:t,queryParams:i}){const n=t[0]==="/"?t.substring(1):t;const o=new r.URLSearchParams(i!==null&&i!==void 0?i:{});return"https://api.themoviedb.org/3/"+n+"?api_key="+a+"&"+o}const i=require("fs");const n=require("path");var o=__nccwpck_require__.n(n);const d=require("crypto");var p=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function getUrlHash(t){return(0,d.createHash)("sha256").update(t).digest("hex")}function getCacheFilename(t){const r=getUrlHash(t);return o().join(__dirname,"cache",`${r}.txt`)}function fetchFromCache(t,r){return p(this,void 0,void 0,(function*(){const a=getCacheFilename(t);try{const t=yield i.promises.stat(a);const n=Date.now()-t.mtimeMs;if(!r.timeCacheMs||n>r.timeCacheMs){const t=yield i.promises.readFile(a);return new Response(t)}}catch(t){}return null}))}function fetchWithCache(t,r,a){return p(this,void 0,void 0,(function*(){if(!a){return fetch(t,r)}const n=yield fetchFromCache(t,a);if(n)return n;const d=yield fetch(t,r);if(d.ok){const r=getCacheFilename(t);const a=yield d.clone().text();yield i.promises.mkdir(o().dirname(r),{recursive:true});yield i.promises.writeFile(r,a)}return d}))}var l=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};let s;const getConfiguration=()=>l(void 0,void 0,void 0,(function*(){if(s){return s}const t=createApiUrl({endpoint:"configuration"});s=yield fetchWithCache(t,{method:"GET",redirect:"follow"}).then((t=>t.json())).then((t=>t));return s}));const getDiscoverMovie=({page:t,genre:r})=>{var a;const i=createApiUrl({endpoint:"discover/movie",queryParams:Object.assign({page:(a=t!==null&&t!==void 0?t:1)===null||a===void 0?void 0:a.toString()},r&&{with_genres:r})});return fetchWithCache(i,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var u;(function(t){t["En"]="en";t["Es"]="es";t["Ko"]="ko"})(u||(u={}));const getDiscoverTv=({page:t,genre:r})=>{var a;const i=createApiUrl({endpoint:"discover/tv",queryParams:Object.assign({page:(a=t!==null&&t!==void 0?t:1)===null||a===void 0?void 0:a.toString()},r&&{with_genres:r})});return fetchWithCache(i,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var c;(function(t){t["Ar"]="ar";t["Hi"]="hi";t["MS"]="ms";t["Pt"]="pt"})(c||(c={}));const getEpisodeDetails=({tvId:t,seasonNumber:r,episodeNumber:a})=>{const i=createApiUrl({endpoint:`tv/${t}/season/${r}/episode/${a}`,queryParams:{append_to_response:"videos,images"}});return fetchWithCache(i,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var m;(function(t){t["YouTube"]="YouTube"})(m||(m={}));var h;(function(t){t["BehindTheScenes"]="Behind the Scenes";t["Featurette"]="Featurette";t["Trailer"]="Trailer";t["Clip"]="Clip"})(h||(h={}));const getGenresMovie=()=>{const t=createApiUrl({endpoint:"genre/movie/list"});return fetchWithCache(t,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getGenresTv=()=>{const t=createApiUrl({endpoint:"genre/tv/list"});return fetchWithCache(t,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getMovieDetails=({movieId:t})=>{const r=createApiUrl({endpoint:`movie/${t}`,queryParams:{append_to_response:"videos"}});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var v;(function(t){t["YouTube"]="YouTube"})(v||(v={}));var g;(function(t){t["BehindTheScenes"]="Behind the Scenes";t["Featurette"]="Featurette";t["Trailer"]="Trailer";t["Clip"]="Clip"})(g||(g={}));const getMovieSimilar=({movieId:t})=>{const r=createApiUrl({endpoint:`movie/${t}/similar`});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getPersonCombinedCredits=({personId:t})=>{const r=createApiUrl({endpoint:`person/${t}/combined_credits`});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getPersonDetails=({personId:t})=>{const r=createApiUrl({endpoint:`person/${t}`});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getPersonPopular=({page:t})=>{const r=createApiUrl({endpoint:`person/popular`,queryParams:{page:(t!==null&&t!==void 0?t:1).toString()}});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const searchKeywords=({query:t})=>{const r=createApiUrl({endpoint:"search/keyword",queryParams:{query:t}});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const searchMulti=({query:t,page:r})=>{var a;const i=createApiUrl({endpoint:"search/multi",queryParams:{query:t,include_adult:"false",page:(a=r!==null&&r!==void 0?r:1)===null||a===void 0?void 0:a.toString()}});return fetchWithCache(i,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const searchPerson=({query:t,page:r})=>{var a;const i=createApiUrl({endpoint:"search/person",queryParams:{query:t,page:(a=r!==null&&r!==void 0?r:1)===null||a===void 0?void 0:a.toString()}});return fetchWithCache(i,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var b;(function(t){})(b||(b={}));var y;(function(t){})(y||(y={}));const getSeasonDetails=({tvId:t,seasonNumber:r})=>{const a=createApiUrl({endpoint:`tv/${t}/season/${r}`});return fetchWithCache(a,{method:"GET",redirect:"follow"}).then((t=>t.json()))};const getTvDetails=({tvId:t})=>{const r=createApiUrl({endpoint:`tv/${t}`});return fetchWithCache(r,{method:"GET",redirect:"follow"}).then((t=>t.json()))};var w=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function mergedExtractor(t,...r){t=t.with("mergedExtractor").empty();return{next(){return w(this,void 0,void 0,(function*(){t("next");t("fetching");const a=r.map((t=>t.next()));const i=yield Promise.all(a);const n=i.flat();t(`fetched ${i.length} results`);return n}))}}}function formatFileSize(t){if(t===0){return"0 B"}const r=["B","KB","MB","GB","TB","PB","EB","ZB","YB"];const a=1024;const i=2;const n=Math.floor(Math.log(t)/Math.log(a));const o=(t/Math.pow(a,n)).toFixed(i);const d=r[n];return`${o} ${d}`}function calculatePercentageDifference(t,r){const a=Math.abs(t-r);const i=(t+r)/2;return a/i*100}function formatNumberTwoDigits(t){return("0"+t).slice(-2)}function getFileExtension(t){const r=t.lastIndexOf(".");if(r===-1){return""}return t.substring(r)}function delay(t){return new Promise((r=>setTimeout(r,t)))}function encodeObjectToBase64(t){const r=JSON.stringify(t);return btoa(r)}function decodeBase64ToObject(t){const r=atob(t);return JSON.parse(r)}function removeDuplicatesBy(t,r){const a=new Set;return t.filter((t=>{const i=r(t);if(a.has(i)){return false}a.add(i);return true}))}function sortByProperties(t,...r){const a=[...t];return a.sort(((t,a)=>{for(let i=0;i<r.length;i++){const n=r[i](t,a);if(n!==0){return n}}return 0}))}function compareByBooleanProperty(t,r){if(t&&!r){return-1}else if(!t&&r){return 1}else{return 0}}function chunkArray(t,r){if(r<=0){throw new Error("Chunk size must be greater than 0")}const a=[];let i=0;while(i<t.length){a.push(t.slice(i,i+r));i+=r}return a}function findMax(t,r){if(t.length===0){return null}let a=undefined;let i=Number.NEGATIVE_INFINITY;t.forEach((t=>{const n=r(t);if(n>i){a=t;i=n}}));return a!==null&&a!==void 0?a:null}function extractYearFromDate(t){const r=new Date(t);const a=r.getFullYear();if(!isNaN(a)){return a}const i=/(\\d{4})/;const n=t.match(i);if(n&&n.length>0){const t=parseInt(n[0],10);if(!isNaN(t)){return t}}return null}function guessDate(t){const r=["yyyy-MM-dd","MM/dd/yyyy","dd-MM-yyyy","MM-dd-yyyy","dd/MM/yyyy","yyyy/MM/dd","yyyyMMdd","ddMMyyyy","MMddyyyy","yyyy.MM.dd","MM.dd.yyyy","dd.MM.yyyy","MM-dd-yyyy HH:mm:ss","yyyy-MM-dd HH:mm:ss","dd-MM-yyyy HH:mm:ss","MM/dd/yyyy HH:mm:ss","yyyy/MM/dd HH:mm:ss","yyyyMMdd HH:mm:ss","ddMMyyyy HH:mm:ss","MMddyyyy HH:mm:ss","yyyy.MM.dd HH:mm:ss","MM.dd.yyyy HH:mm:ss","dd.MM.yyyy HH:mm:ss"];for(const a of r){try{const r=new Date(t);const i=r.getFullYear().toString();const n=(r.getMonth()+1).toString().padStart(2,"0");const o=r.getDate().toString().padStart(2,"0");const d=a.replace("yyyy",i).replace("MM",n).replace("dd",o);const p=new Date(d);if(!isNaN(p.getTime())){return p}}catch(t){}}return undefined}function parseResolution(t){const r=t.toLowerCase();if(r.endsWith("p")){const t=parseInt(r,10);if(!isNaN(t)){const r=t*16/9;const a=t;return{width:r,height:a}}}else if(r.endsWith("k")){const t=parseInt(r,10);if(!isNaN(t)){const r=t*1920;const a=t*1080;return{width:r,height:a}}}else if(r.includes("x")){const[t,a]=r.split("x");const i=parseInt(t,10);const n=parseInt(a,10);if(!isNaN(i)&&!isNaN(n)){return{width:i,height:n}}}return null}function compareResolutions(t,r){if(!t){return-1}if(!r){return 1}const a=parseResolution(t);const i=parseResolution(r);if(!a){return-1}if(!i){return 1}if(a.width===i.width&&a.height===i.height||!a.width&&!i.width&&!a.height&&!i.height){return 0}const n=(a.width||0)*(a.height||0);const o=(i.width||0)*(i.height||0);if(n>o){return 1}return-1}function createThumbnail({imageBaseUrl:t,portraitPath:a,landscapePath:i}){const n=a?{small:{uri:new r.URL(`${t}w300/${a}`)},medium:{uri:new r.URL(`${t}w780/${a}`)},large:{uri:new r.URL(`${t}original/${a}`)}}:undefined;const o=i?{small:{uri:new r.URL(`${t}w300/${i}`)},medium:{uri:new r.URL(`${t}w780/${i}`)},large:{uri:new r.URL(`${t}original/${i}`)}}:undefined;return{portrait:n,landscape:o}}var S=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbAlbumExtractor(a){return S(this,arguments,void 0,(function*({uri:a,getTvDetailsApi:i,getConfigurationApi:n,logger:o}){var d;o=o.with(`TmdbAlbumExtractor (${a})`).empty();const p=yield n();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;const s=a.pathname.split("/").pop();let u;let c=false;o(`tvId=${s}`);const getResponse=()=>S(this,void 0,void 0,(function*(){o(`getResponse`);if(!s)throw new t.AlbumNotFoundError(a);if(u)return u;u=yield i({tvId:s});return u}));return{getAlbum(){return S(this,void 0,void 0,(function*(){var r,i,n;o(`getAlbum`);const d=yield getResponse();return(0,t.createAlbumDetail)({uri:a,name:(r=d.name)!==null&&r!==void 0?r:"",description:(i=d.overview)!==null&&i!==void 0?i:"",tracksCount:(n=d.number_of_seasons)!==null&&n!==void 0?n:0,thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:d.poster_path,landscapePath:d.backdrop_path})})}))},next(){return S(this,void 0,void 0,(function*(){var a,i,n;const d=o.with("next").empty();if(c)return[];c=true;d("fetching");const p=yield getResponse();d(`fetched ${(a=p.seasons)===null||a===void 0?void 0:a.length} results`);return(n=(i=p.seasons)===null||i===void 0?void 0:i.map((a=>{var i,n;o(`parsing album ${a.id}`);return(0,t.createAlbum)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(n=a.overview)!==null&&n!==void 0?n:"",uri:new r.URL(`https://www.themoviedb.org/tv/${s}/season/${a.season_number}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.poster_path,landscapePath:p.backdrop_path})})})))!==null&&n!==void 0?n:[]}))}}}))}var _=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbAlbumSeasonExtractor(a){return _(this,arguments,void 0,(function*({uri:a,getSeasonDetailsApi:i,getConfigurationApi:n,logger:o}){var d;o=o.with(`TmdbAlbumSeasonExtractor (${a})`);const p=yield n();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;const s=a.pathname.split("/")[2];const u=a.pathname.split("/").pop();let c;let m=false;o(`tvId=${s}, seasonNumber=${u}`);const getResponse=()=>_(this,void 0,void 0,(function*(){o(`getResponse`);if(!s||!u)throw new t.AlbumNotFoundError(a);if(c)return c;c=yield i({tvId:s,seasonNumber:u});return c}));return{getAlbum(){return _(this,void 0,void 0,(function*(){var r,i,n,d;o(`getAlbum`);const p=yield getResponse();return(0,t.createAlbumDetail)({uri:a,name:(r=p.name)!==null&&r!==void 0?r:"",description:(i=p.overview)!==null&&i!==void 0?i:"",tracksCount:(d=(n=p.episodes)===null||n===void 0?void 0:n.length)!==null&&d!==void 0?d:0,thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:p.poster_path})})}))},next(){return _(this,void 0,void 0,(function*(){var a,i,n;const d=o.with("next").empty();if(m)return[];m=true;d("fetching");const p=yield getResponse();d(`fetched ${(a=p.episodes)===null||a===void 0?void 0:a.length} results`);return(n=(i=p.episodes)===null||i===void 0?void 0:i.map((a=>{var i;d(`parsing media ${a.id}`);return(0,t.createMedia)({isVideo:true,name:`${a.episode_number}. ${a.name}`,description:(i=a.overview)!==null&&i!==void 0?i:"",browse:true,uri:new r.URL(`https://www.themoviedb.org/tv/${s}/season/${u}/episode/${a.episode_number}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.still_path})})})))!==null&&n!==void 0?n:[]}))}}}))}var T=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbAuthorExtractor(a){return T(this,arguments,void 0,(function*({uri:a,getPersonDetailsApi:i,getConfigurationApi:n,getPersonCombinedCreditsApi:o,logger:d}){var p;d=d.with(`TmdbAuthorExtractor (${a})`);const l=yield n();const s=(p=l.images)===null||p===void 0?void 0:p.secure_base_url;const u=a.pathname.split("/").pop();let c=undefined;d(`personId=${u}`);return{getAuthor(){return T(this,void 0,void 0,(function*(){var n,o;d(`getAuthor`);if(!u)throw new t.AuthorNotFoundError(a);if(c)return c;const p=yield i({personId:u});c=(0,t.createAuthorDetail)({name:(n=p.name)!==null&&n!==void 0?n:"",description:(o=p.biography)!==null&&o!==void 0?o:"",uri:new r.URL(`https://www.themoviedb.org/person/${p.id}`),thumbnail:createThumbnail({imageBaseUrl:s,portraitPath:p.profile_path})});return c}))},next(){return T(this,void 0,void 0,(function*(){var i,n,p,l;const c=d.with("next").empty();if(!u)throw new t.AuthorNotFoundError(a);c("fetching");const m=yield o({personId:u});c(`fetched ${(i=m.cast)===null||i===void 0?void 0:i.length}`);return(l=(p=(n=m.cast)===null||n===void 0?void 0:n.map((a=>{var i,n,o,d;c(`parse result ${a.id}`);switch(a.media_type){case"tv":c("parse tv");return(0,t.createAlbum)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(n=a.overview)!==null&&n!==void 0?n:"",uri:new r.URL(`https://www.themoviedb.org/tv/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:s,portraitPath:a.poster_path,landscapePath:a.backdrop_path})});case"movie":c("parse movie");return(0,t.createMedia)({name:(o=a.title)!==null&&o!==void 0?o:"",description:(d=a.overview)!==null&&d!==void 0?d:"",isVideo:true,browse:true,uri:new r.URL(`https://www.themoviedb.org/movie/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:s,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})}})))===null||p===void 0?void 0:p.filter((t=>!!t)))!==null&&l!==void 0?l:[]}))}}}))}var C=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbAutocompleteExtractor({searchKeywordsApi:t,query:r,logger:a}){a=a.with(`TmdbAutocompleteExtractor (${r})`).empty();let i=true;return{getQuery(){a(`getQuery`);return r},next(){return C(this,void 0,void 0,(function*(){var n,o;const d=a.with("next").empty();if(!i)return[];i=false;d("fetching");const p=yield t({query:r});d(`fetched ${p.total_results} results`);return(o=(n=p.results)===null||n===void 0?void 0:n.map((t=>t.name)).filter((t=>!!t)))!==null&&o!==void 0?o:[]}))}}}var D=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbCategoriesExtractor({getGenresTvApi:a,getGenresMovieApi:i,logger:n}){n=n.with("TmdbCategoriesExtractor").empty();let o=false;return{next(){return D(this,void 0,void 0,(function*(){var d,p,l,s,u,c;const m=n.with("next").empty();if(o)return[];o=true;m("fetching");const h=yield i();const v=yield a();m(`fetched ${((p=(d=h.genres)===null||d===void 0?void 0:d.length)!==null&&p!==void 0?p:0)+((s=(l=v.genres)===null||l===void 0?void 0:l.length)!==null&&s!==void 0?s:0)} results`);const g=[];(u=h.genres)===null||u===void 0?void 0:u.forEach((a=>{var i;m(`parsing category ${a.id}`);const n=(0,t.createCategory)({name:(i=a.name)!==null&&i!==void 0?i:"",uri:new r.URL(`https://www.themoviedb.org/discover/movie_or_tv?with_genres=${a.id}`)});g.push(n)}));(c=v.genres)===null||c===void 0?void 0:c.forEach((a=>{var i;m(`parsing category ${a.id}`);if(g.some((t=>t.name===a.name))){return}const n=(0,t.createCategory)({name:(i=a.name)!==null&&i!==void 0?i:"",uri:new r.URL(`https://www.themoviedb.org/discover/movie_or_tv?with_genres=${a.id}`)});g.push(n)}));m(`total results ${g.length}`);return g}))}}}var R=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbDiscoverMovieExtractor(a){return R(this,arguments,void 0,(function*({getMovieDiscoverApi:a,getConfigurationApi:i,genreId:n,logger:o}){var d;o=o.with(`TmdbDiscoverMovieExtractor (${n})`).empty();const p=yield i();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;let s=1;return{next(){return R(this,void 0,void 0,(function*(){var i,d;const p=o.with(`next (${s})`).empty();p("fetching");const u=yield a({page:s,genre:n});p(`fetched ${u.total_results} results`);s++;return(d=(i=u===null||u===void 0?void 0:u.results)===null||i===void 0?void 0:i.map((a=>{var i,n;p(`parsing media ${a.id}`);return(0,t.createMedia)({name:(i=a.title)!==null&&i!==void 0?i:"",description:(n=a.overview)!==null&&n!==void 0?n:"",isVideo:true,browse:true,uri:new r.URL(`https://www.themoviedb.org/movie/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})})))!==null&&d!==void 0?d:[]}))}}}))}var E=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbDiscoverTvExtractor(a){return E(this,arguments,void 0,(function*({getTvDiscoverApi:a,getConfigurationApi:i,genreId:n,logger:o}){var d;o=o.with(`TmdbDiscoverTvExtractor (${n})`).empty();const p=yield i();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;let s=1;return{next(){return E(this,void 0,void 0,(function*(){var i,d;const p=o.with(`next (${s})`);p("fetching");const u=yield a({page:s,genre:n});o(`fetched ${u.total_results} results`);s++;return(d=(i=u===null||u===void 0?void 0:u.results)===null||i===void 0?void 0:i.map((a=>{var i,n;p(`parsing album ${a.id}`);return(0,t.createAlbum)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(n=a.overview)!==null&&n!==void 0?n:"",uri:new r.URL(`https://www.themoviedb.org/tv/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})})))!==null&&d!==void 0?d:[]}))}}}))}var A=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbMediaExtractor(a){return A(this,arguments,void 0,(function*({tmdbTorrentScrapper:a,getConfigurationApi:i,getMovieDetailApi:n,getMovieSimilarApi:o,uri:d,logger:p}){var l;p=p.with(`TmdbMediaExtractor (${d})`).empty();const s=d.pathname.split("/").pop();const u=yield i();const c=(l=u.images)===null||l===void 0?void 0:l.secure_base_url;let m;let h=false;p(`movieId=${s}`);const getMovieResponse=()=>A(this,void 0,void 0,(function*(){p(`getMovieResponse`);if(!s)throw new t.MediaNotFoundError(d);if(m){return m}m=yield n({movieId:s});return m}));return{getMedia(){return A(this,void 0,void 0,(function*(){var r,a,i,n,o,l;p(`getMedia`);const s=yield getMovieResponse();return(0,t.createMediaDetail)({uri:d,name:(a=(r=s.title)!==null&&r!==void 0?r:s.original_title)!==null&&a!==void 0?a:"",isVideo:true,description:(i=s.overview)!==null&&i!==void 0?i:"",genres:(o=(n=s.genres)===null||n===void 0?void 0:n.map((t=>{var r;return(r=t.name)!==null&&r!==void 0?r:""})))!==null&&o!==void 0?o:[],publishedDate:s.release_date?guessDate(s.release_date):undefined,duration:((l=s.runtime)!==null&&l!==void 0?l:0)*60*1e3,browse:true,thumbnail:createThumbnail({imageBaseUrl:c,portraitPath:s.poster_path,landscapePath:s.backdrop_path})})}))},next(){return A(this,void 0,void 0,(function*(){var a,i;const n=p.with("next").empty();if(!s||h)return[];h=true;n("fetching");const d=yield o({movieId:s});n(`fetched ${d.total_results} results`);return(i=(a=d===null||d===void 0?void 0:d.results)===null||a===void 0?void 0:a.map((a=>{var i,o,d;n(`parsing media ${a.id}`);return(0,t.createMedia)({name:(o=(i=a.title)!==null&&i!==void 0?i:a.original_title)!==null&&o!==void 0?o:"",description:(d=a.overview)!==null&&d!==void 0?d:"",isVideo:true,browse:true,uri:new r.URL(`https://www.themoviedb.org/movie/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:c,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})})))!==null&&i!==void 0?i:[]}))},getAudioStream(){return A(this,void 0,void 0,(function*(){p(`getAudioStream`);return[]}))},getMixedVideoStream(){return A(this,void 0,void 0,(function*(){var i;const n=p.with("getMixedVideoStream").empty();const o=yield getMovieResponse();const d=o.release_date?extractYearFromDate(o.release_date):"";const l=`${(i=o.title)!==null&&i!==void 0?i:o.original_title} ${d}`.trim();n(`created search query (${l})`);const s=yield a.search({query:[l]});n(`found ${s.length} torrents`);return s.map((a=>(0,t.createStreamDescription)({uri:new r.URL(a.url),headers:{},name:a.name,description:a.description})))}))},getVideoOnlyStream(){return A(this,void 0,void 0,(function*(){p(`getVideoOnlyStream`);return[]}))},getTrailer(){return A(this,void 0,void 0,(function*(){var a,i,n,o,d;p(`getTrailer`);const l=yield getMovieResponse();const s=(n=(i=(a=l.videos)===null||a===void 0?void 0:a.results)===null||i===void 0?void 0:i.find((t=>t.site===v.YouTube&&t.type===g.Trailer)))!==null&&n!==void 0?n:(d=(o=l.videos)===null||o===void 0?void 0:o.results)===null||d===void 0?void 0:d.find((t=>t.site===v.YouTube));if(!s)return null;return(0,t.createWebPlayerStream)({uri:new r.URL(`https://www.youtube.com/watch?v=${s.key}`)})}))},getSubtitles(){return A(this,void 0,void 0,(function*(){p(`getSubtitles (${d})`);return[]}))}}}))}var N=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbMediaEpisodeExtractor(a){return N(this,arguments,void 0,(function*({tmdbTorrentScrapper:a,getConfigurationApi:i,getEpisodeDetailsApi:n,getSeasonDetailsApi:o,getTvDetailsApi:d,uri:p,logger:l}){var s;l=l.with(`TmdbMediaEpisodeExtractor (${p})`).empty();const u=p.pathname.split("/");const c=u[2];const v=u[4];const g=u[6];const b=yield i();const y=(s=b.images)===null||s===void 0?void 0:s.secure_base_url;let w;let S=false;l(`tvId=${c}, seasonNumber=${v}, episodeNumber=${g}`);const getEpisodeDetailResponse=()=>N(this,void 0,void 0,(function*(){l(`getEpisodeDetailResponse`);if(!c||!v||!g){throw new t.MediaNotFoundError(p)}if(w){return w}w=yield n({tvId:c,seasonNumber:v,episodeNumber:g});return w}));let _;const getTvResponse=()=>N(this,void 0,void 0,(function*(){l(`getTvResponse`);if(!c){throw new t.MediaNotFoundError(p)}if(_){return _}_=yield d({tvId:c});return _}));return{getMedia(){return N(this,void 0,void 0,(function*(){var r,a,i,n,o,d;l(`getMedia`);const s=yield getEpisodeDetailResponse();const u=(i=findMax((a=(r=s.images)===null||r===void 0?void 0:r.stills)!==null&&a!==void 0?a:[],(t=>t.width)))===null||i===void 0?void 0:i.file_path;return(0,t.createMediaDetail)({uri:p,isVideo:true,name:(n=s.name)!==null&&n!==void 0?n:"",description:(o=s.overview)!==null&&o!==void 0?o:"",genres:[],publishedDate:s.air_date?guessDate(s.air_date):undefined,duration:((d=s.runtime)!==null&&d!==void 0?d:0)*60*1e3,browse:true,thumbnail:createThumbnail({imageBaseUrl:y,portraitPath:s.still_path,landscapePath:u})})}))},next(){return N(this,void 0,void 0,(function*(){var a,i,n;const d=l.with(`next`).empty();if(!c||!v||S)return[];S=true;d("fetching");const p=yield o({tvId:c,seasonNumber:v});d(`fetched ${(a=p.episodes)===null||a===void 0?void 0:a.length} results`);return(n=(i=p.episodes)===null||i===void 0?void 0:i.map((a=>{var i,n;d(`parsing media ${a.id}`);return(0,t.createMedia)({isVideo:true,name:`${a.episode_number}. ${(i=a.name)!==null&&i!==void 0?i:""}`,description:(n=a.overview)!==null&&n!==void 0?n:"",uri:new r.URL(`https://www.themoviedb.org/tv/${c}/season/${v}/episode/${a.episode_number}`),browse:true,thumbnail:createThumbnail({imageBaseUrl:y,portraitPath:a.still_path})})})))!==null&&n!==void 0?n:[]}))},getAudioStream(){return N(this,void 0,void 0,(function*(){l(`getAudioStream)`);return[]}))},getMixedVideoStream(){return N(this,void 0,void 0,(function*(){var i,n,o,d;const p=l.with("getMixedVideoStream").empty();const s=yield getTvResponse();const u=yield getEpisodeDetailResponse();const c=[`${s.name} S${u.season_number} E${u.episode_number}`,`${s.name} S${formatNumberTwoDigits((i=u.season_number)!==null&&i!==void 0?i:0)} E${formatNumberTwoDigits((n=u.episode_number)!==null&&n!==void 0?n:0)}`,`${s.name} S${formatNumberTwoDigits((o=u.season_number)!==null&&o!==void 0?o:0)}E${formatNumberTwoDigits((d=u.episode_number)!==null&&d!==void 0?d:0)}`,`${s.name} season ${u.episode_number}`,`${s.name} ${u.name}`];p(`titles=${c.join(", ")}`);const m=yield a.search({query:c,serie:{episode:u.episode_number,season:u.season_number}});p(`torrents found: ${m.length}`);return m.map((a=>(0,t.createStreamDescription)({uri:new r.URL(a.url),headers:{},name:a.name,description:a.description})))}))},getVideoOnlyStream(){return N(this,void 0,void 0,(function*(){l(`getVideoOnlyStream`);return[]}))},getTrailer(){return N(this,void 0,void 0,(function*(){var a,i,n,o,d;l(`getTrailer`);const p=yield getEpisodeDetailResponse();const s=(n=(i=(a=p.videos)===null||a===void 0?void 0:a.results)===null||i===void 0?void 0:i.find((t=>t.site===m.YouTube&&t.type===h.Trailer)))!==null&&n!==void 0?n:(d=(o=p.videos)===null||o===void 0?void 0:o.results)===null||d===void 0?void 0:d.find((t=>t.site===m.YouTube));if(!s)return null;return(0,t.createWebPlayerStream)({uri:new r.URL(`https://www.youtube.com/watch?v=${s.key}`)})}))},getSubtitles(){return N(this,void 0,void 0,(function*(){l(`getSubtitles`);return[]}))}}}))}var P=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbPersonPopularExtractor(a){return P(this,arguments,void 0,(function*({getPersonPopularApi:a,getConfigurationApi:i,logger:n}){var o;n=n.with("TmdbPersonPopularExtractor").empty();const d=yield i();const p=(o=d.images)===null||o===void 0?void 0:o.secure_base_url;let l=1;return{next(){return P(this,void 0,void 0,(function*(){var i,o;const d=n.with(`next (${l})`);d(`fetching`);const s=yield a({page:l});d(`fetched ${s.total_results} results`);l++;return(o=(i=s===null||s===void 0?void 0:s.results)===null||i===void 0?void 0:i.map((a=>{var i,n,o,l;d(`parsing person ${a.id}`);return(0,t.createAuthor)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(l=(o=(n=a.known_for)===null||n===void 0?void 0:n.map((t=>{var r;return(r=t.title)!==null&&r!==void 0?r:""})))===null||o===void 0?void 0:o.join(","))!==null&&l!==void 0?l:"",uri:new r.URL(`https://www.themoviedb.org/person/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:p,portraitPath:a.profile_path})})})))!==null&&o!==void 0?o:[]}))}}}))}var q=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbSearchExtractor(t){return q(this,arguments,void 0,(function*({query:t,searchMultiApi:r,getConfigurationApi:a,logger:i}){i=i.with(`TmdbSearchExtractor (${t})`).empty();const n=yield a();let o=1;return{getQuery(){i(`getQuery`);return t},next(){return q(this,void 0,void 0,(function*(){var a,d;const p=i.with(`next (${o})`);p(`fetching`);const l=yield r({query:t,page:o});p(`fetched  ${l.total_results} results`);o++;return(d=(a=l.results)===null||a===void 0?void 0:a.map((t=>{var r,a,i,o,d,l;p(`parse result ${t.id}`);switch(t.media_type){case"movie":p("parse movie");return parseMovie(t,(a=(r=n.images)===null||r===void 0?void 0:r.secure_base_url)!==null&&a!==void 0?a:"");case"person":p("parse person");return parsePerson(t,(o=(i=n.images)===null||i===void 0?void 0:i.secure_base_url)!==null&&o!==void 0?o:"");case"tv":p("parse tv");return parseTv(t,(l=(d=n.images)===null||d===void 0?void 0:d.secure_base_url)!==null&&l!==void 0?l:"");default:p("skip parse");return null}})).filter((t=>t!==null)))!==null&&d!==void 0?d:[]}))}}}))}function parseMovie(a,i){var n,o;return(0,t.createMedia)({name:(n=a.title)!==null&&n!==void 0?n:"",description:(o=a.overview)!==null&&o!==void 0?o:"",isVideo:true,uri:new r.URL(`https://www.themoviedb.org/movie/${a.id}`),browse:true,thumbnail:createThumbnail({imageBaseUrl:i,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})}function parseTv(a,i){var n,o;return(0,t.createAlbum)({name:(n=a.name)!==null&&n!==void 0?n:"",description:(o=a.overview)!==null&&o!==void 0?o:"",uri:new r.URL(`https://www.themoviedb.org/tv/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:i,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})}function parsePerson(a,i){var n,o,d,p;return(0,t.createAuthor)({name:(n=a.name)!==null&&n!==void 0?n:"",description:(p=(d=(o=a.known_for)===null||o===void 0?void 0:o.map((t=>{var r;return(r=t.title)!==null&&r!==void 0?r:""})))===null||d===void 0?void 0:d.join(","))!==null&&p!==void 0?p:"",uri:new r.URL(`https://www.themoviedb.org/person/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:i,portraitPath:a.profile_path})})}var B=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbSearchAlbumsExtractor(a){return B(this,arguments,void 0,(function*({getConfigurationApi:a,query:i,searchTv:n,logger:o}){var d;o=o.with(`TmdbSearchAlbumsExtractor ${i}`).empty();const p=yield a();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;let s=1;return{next(){return B(this,void 0,void 0,(function*(){var a,d;const p=o.with(`next (${s})`);p(`fetching`);const u=yield n({query:i,page:s});p(`fetched ${u.total_results} results`);s++;return(d=(a=u===null||u===void 0?void 0:u.results)===null||a===void 0?void 0:a.map((a=>{var i,n;p(`parsing album ${a.id}`);return(0,t.createAlbum)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(n=a.overview)!==null&&n!==void 0?n:"",uri:new r.URL(`https://www.themoviedb.org/tv/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.poster_path,landscapePath:a.backdrop_path})})})))!==null&&d!==void 0?d:[]}))}}}))}var L=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbSearchAuthorsExtractor(a){return L(this,arguments,void 0,(function*({getConfigurationApi:a,query:i,searchPerson:n,logger:o}){var d;o=o.with(`TmdbSearchAuthorsExtractor (${i})`).empty();const p=yield a();const l=(d=p.images)===null||d===void 0?void 0:d.secure_base_url;let s=1;return{next(){return L(this,void 0,void 0,(function*(){var a,d;const p=o.with(`next (${s})`);p(`fetching`);const u=yield n({query:i,page:s});p(`fetched ${u.total_results} results`);s++;return(d=(a=u===null||u===void 0?void 0:u.results)===null||a===void 0?void 0:a.map((a=>{var i,n,o,d;p(`parsing person ${a.id}`);return(0,t.createAuthor)({name:(i=a.name)!==null&&i!==void 0?i:"",description:(d=(o=(n=a.known_for)===null||n===void 0?void 0:n.map((t=>{var r;return(r=t.title)!==null&&r!==void 0?r:""})))===null||o===void 0?void 0:o.join(","))!==null&&d!==void 0?d:"",uri:new r.URL(`https://www.themoviedb.org/person/${a.id}`),thumbnail:createThumbnail({imageBaseUrl:l,portraitPath:a.profile_path})})})))!==null&&d!==void 0?d:[]}))}}}))}var O=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbCategoryExtractor(r){return O(this,arguments,void 0,(function*({category:r,getMovieExtractor:a,getTvExtractor:i,logger:n}){n=n.with(`TmdbCategoryExtractor (${r})`);const o=r.searchParams.get("with_genres");n(`categoryId=${o}`);if(!o){return{getCategory(){return O(this,void 0,void 0,(function*(){n(`getCategory`);throw new t.CategoryNotFoundError(r)}))},next(){return O(this,void 0,void 0,(function*(){n(`next`);return[]}))}}}const d=yield a(o);const p=yield i(o);const l=mergedExtractor(n,d,p);return{getCategory(){return O(this,void 0,void 0,(function*(){n(`getCategory`);return(0,t.createCategory)({uri:r,name:o})}))},next(){return O(this,void 0,void 0,(function*(){n(`next`);return l.next()}))}}}))}var k=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};const V="movie";const j="serie";const M=(0,t.createCategory)({name:"Movies",uri:new r.URL(`https://www.themoviedb.org/discover/movie_or_tv?with_genres=${V}&customCategory`)});const F=(0,t.createCategory)({name:"Series",uri:new r.URL(`https://www.themoviedb.org/discover/movie_or_tv?with_genres=${j}&customCategory`)});function CustomCategoriesExtractor(){return k(this,void 0,void 0,(function*(){let t=true;return{next(){return k(this,void 0,void 0,(function*(){if(!t){return[]}t=false;return[M,F]}))}}}))}function CustomCategoryExtractor(t){return k(this,arguments,void 0,(function*({uri:t,logger:r,seriesExtractor:a,moviesExtractor:i}){const n=r.with(`CustomCategoryExtractor (${t})`).empty();const o=t.searchParams.get("with_genres");n(`categoryId=${o}`);let d;let p;if((o===null||o===void 0?void 0:o.toLowerCase())===j){d=yield a();p=F}else{d=yield i();p=M}return{next(){return k(this,void 0,void 0,(function*(){return d.next()}))},getCategory(){return k(this,void 0,void 0,(function*(){return p}))}}}))}function isCustomCategory(t){return t.searchParams.has("customCategory")}var I=__nccwpck_require__(3079);var W=__nccwpck_require__(1034);var U=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};const H=[{id:"1337x",scraper:(0,W._1337XScrapper)("https://1337x.to")},{id:"kickass",scraper:(0,W.KickassScrapper)("https://kickasstorrent.cr")}];const $=[{id:"eztv",scraper:(0,W.EzTvScrapper)("https://eztv.re")},{id:"tpb",scraper:(0,W.ThepiratebayScrapper)("https://tpb.party")},{id:"nyaa",scraper:(0,W.NyaaSiScrapper)("https://nyaa.si")}];const z=[...H,...$];let G=[];function DefaultTmdbTorrentScrapper({realDebrid:t,providers:a,sorting:i,excludeKeywords:n}){const o=(a?z.filter((t=>a.includes(t.id))):z).map((t=>t.scraper));n=n===null||n===void 0?void 0:n.map((t=>t.toLowerCase()));const d=!n?()=>true:t=>{const r=t.toLowerCase();return(n===null||n===void 0?void 0:n.some((t=>r.indexOf(t)!==-1)))===false};const p=(()=>{const t=[(t,r)=>{var a,i;return compareByBooleanProperty((a=t.rd)!==null&&a!==void 0?a:false,(i=r.rd)!==null&&i!==void 0?i:false)}];switch(i){case"none":break;case"quality_seeder":t.push(((t,r)=>{var a,i;return compareResolutions((a=r.parsed.resolution)!==null&&a!==void 0?a:"",(i=t.parsed.resolution)!==null&&i!==void 0?i:"")}));t.push(((t,r)=>r.seeder-t.seeder));break;case"quality_size":t.push(((t,r)=>{var a,i;return compareResolutions((a=r.parsed.resolution)!==null&&a!==void 0?a:"",(i=t.parsed.resolution)!==null&&i!==void 0?i:"")}));t.push(((t,r)=>r.size-t.size));break;case"seeder":t.push(((t,r)=>r.seeder-t.seeder));break}return t})();function findMagnet(t){return U(this,void 0,void 0,(function*(){const a=new r.URL(t).hostname;const i=o.find((t=>new r.URL(t.url).hostname===a));if(!i){return null}return i.getMagnet({url:t})}))}return{search(r){return U(this,arguments,void 0,(function*({query:r,serie:a}){const i=G.find((t=>t.query.length==r.length&&t.query.every((t=>r.some((r=>r.toLowerCase()===t.toLowerCase()))))));if(i){return i.result}const n=yield(()=>U(this,void 0,void 0,(function*(){const t=(yield Promise.all(r.map((t=>o.map((r=>r.search({query:t}).catch((()=>[])))))).flat())).flat();return removeDuplicatesBy(t,(t=>t.url))})))();const l=n.filter((t=>d(t.name)));const s=yield(()=>U(this,void 0,void 0,(function*(){const t=(yield Promise.all(l.map((t=>U(this,void 0,void 0,(function*(){if(t.url.startsWith("magnet")){return Promise.resolve(t)}try{const r=yield findMagnet(t.url);if(!r){return null}return Object.assign(Object.assign({},t),{url:r})}catch(t){return null}})))))).filter((t=>!!t));return removeDuplicatesBy(t,(t=>t.url))})))();const u=yield(()=>U(this,void 0,void 0,(function*(){const r=yield t.getInstantFilesFromMagnet(s.map((t=>t.url)));return s.map((t=>{if(!a)return t;const i=r[t.url];const n=i===null||i===void 0?void 0:i.find((t=>{const r=(0,I.qg)(t.filename);return r.season===a.season&&r.episode===a.episode}));if(n){return Object.assign(Object.assign({},t),{name:n.filename,url:n.url,size:n.filesize})}return null})).filter((t=>!!t)).map((t=>Object.assign(Object.assign({},t),{rd:true})))})))();const c=s.filter((t=>!u.some((r=>r.url===t.url)))).filter((t=>t.seeder>0));const m=[...u,...c];const h=m.map((t=>{const r=(0,I.qg)(t.name);const a=getTorrentDescription(t,r);return Object.assign(Object.assign({},t),{description:a,parsed:r})}));const v=sortByProperties(h,...p);G.push({query:r,result:v,timestamp:Date.now()});return v}))},isTorrentUrl(t){return U(this,void 0,void 0,(function*(){const a=new r.URL(t).hostname;return o.some((t=>new r.URL(t.url).hostname===a))}))},findMagnet:findMagnet}}function getTorrentDescription(t,r){const a=[];if(r.year){a.push(`Year: ${r.year}`)}if(t.rd){a.push(`RealDebrid: ✓`)}if(t.seeder){a.push(`Seeder: ${t.seeder}`)}if(t.leecher){a.push(`Leecher: ${t.leecher}`)}if(t.uploader){a.push(`Uploader: ${t.uploader}`)}if(t.uploadedDate){a.push(`Uploaded Date: ${t.uploadedDate}`)}if(t.size){a.push(`Size: ${formatFileSize(t.size)}`)}if(r.resolution){a.push(`Resolution: ${r.resolution}`)}if(r.extended){a.push("Extended: Yes")}if(r.unrated){a.push("Unrated: Yes")}if(r.proper){a.push("Proper: Yes")}if(r.repack){a.push("Repack: Yes")}if(r.convert){a.push("Convert: Yes")}if(r.hardcoded){a.push("Hardcoded: Yes")}if(r.retail){a.push("Retail: Yes")}if(r.remastered){a.push("Remastered: Yes")}if(r.region){a.push(`Region: ${r.region}`)}if(r.container){a.push(`Container: ${r.container}`)}if(r.source){a.push(`Source: ${r.source}`)}if(r.codec){a.push(`Codec: ${r.codec}`)}if(r.audio){a.push(`Audio: ${r.audio}`)}if(r.group){a.push(`Group: ${r.group}`)}if(r.season){a.push(`Season: ${r.season}`)}if(r.episode){a.push(`Episode: ${r.episode}`)}if(r.language){a.push(`Language: ${r.language}`)}if(t.provider){a.push(`Provider: ${t.provider}`)}return a.join("\\n")}function cleanupCache(){const t=Date.now();G=G.filter((r=>t-r.timestamp<36e5))}setInterval(cleanupCache,36e5);const Q=require("node:crypto");\n/* Common package for dealing with hex/string/uint8 conversions (and sha1 hashing)\n*\n* @author   Jimmy Wärting <jimmy@warting.se> (https://jimmy.warting.se/opensource)\n* @license  MIT\n*/\nconst Y="0123456789abcdef";const J=[];const Z=[];for(let t=0;t<256;t++){J[t]=Y[t>>4&15]+Y[t&15];if(t<16){if(t<10){Z[48+t]=t}else{Z[97-10+t]=t}}}const util_arr2hex=t=>{const r=t.length;let a="";let i=0;while(i<r){a+=J[t[i++]]}return a};const hex2arr=t=>{const r=t.length>>1;const a=r<<1;const i=new Uint8Array(r);let n=0;let o=0;while(o<a){i[n++]=Z[t.charCodeAt(o++)]<<4|Z[t.charCodeAt(o++)]}return i};const concat=(t,r=0)=>{const a=t.length||0;if(!r){let i=a;while(i--)r+=t[i].length}const i=new Uint8Array(r);let n=r;let o=a;while(o--){n-=t[o].length;i.set(t[o],n)}return i};const equal=(t,r)=>{if(t.length!==r.length)return false;for(let a=t.length;a>-1;a-=1){if(t[a]!==r[a])return false}return true};const X=new TextDecoder;const arr2text=(t,r)=>{if(t.byteLength>1024){if(!r)return X.decode(t);const a=new TextDecoder(r);return a.decode(t)}return Buffer.from(t).toString(r||"utf8")};const _node_text2arr=t=>new Uint8Array(Buffer.from(t,"utf8"));const arr2base=t=>Buffer.from(t).toString("base64");const base2arr=t=>new Uint8Array(Buffer.from(t,"base64"));const hex2bin=t=>Buffer.from(t,"hex").toString("binary");const bin2hex=t=>Buffer.from(t,"binary").toString("hex");const hash=async(t,r,a="sha1")=>{a=a.replace("sha-","sha");const i=(0,Q.createHash)(a).update(t);return r?i.digest(r):new Uint8Array(i.digest().buffer)};const randomBytes=t=>new Uint8Array(rand(t));function digitCount(t){const r=t<0?1:0;t=Math.abs(Number(t||1));return Math.floor(Math.log10(t))+1+r}function getType(t){if(ArrayBuffer.isView(t))return"arraybufferview";if(Array.isArray(t))return"array";if(t instanceof Number)return"number";if(t instanceof Boolean)return"boolean";if(t instanceof Set)return"set";if(t instanceof Map)return"map";if(t instanceof String)return"string";if(t instanceof ArrayBuffer)return"arraybuffer";return typeof t}function encode_encode(t,r,a){const i=[];let n=null;encode_encode._encode(i,t);n=concat(i);encode_encode.bytes=n.length;if(ArrayBuffer.isView(r)){r.set(n,a);return r}return n}encode_encode.bytes=-1;encode_encode._floatConversionDetected=false;encode_encode._encode=function(t,r){if(r==null){return}switch(getType(r)){case"object":encode_encode.dict(t,r);break;case"map":encode_encode.dictMap(t,r);break;case"array":encode_encode.list(t,r);break;case"set":encode_encode.listSet(t,r);break;case"string":encode_encode.string(t,r);break;case"number":encode_encode.number(t,r);break;case"boolean":encode_encode.number(t,r);break;case"arraybufferview":encode_encode.buffer(t,new Uint8Array(r.buffer,r.byteOffset,r.byteLength));break;case"arraybuffer":encode_encode.buffer(t,new Uint8Array(r));break}};const K=new Uint8Array([101]);const ee=new Uint8Array([100]);const te=new Uint8Array([108]);encode_encode.buffer=function(t,r){t.push(_node_text2arr(r.length+":"),r)};encode_encode.string=function(t,r){t.push(_node_text2arr(_node_text2arr(r).byteLength+":"+r))};encode_encode.number=function(t,r){if(Number.isInteger(r))return t.push(_node_text2arr("i"+BigInt(r)+"e"));const a=2147483648;const i=r/a<<0;const n=r%a<<0;const o=i*a+n;t.push(_node_text2arr("i"+o+"e"));if(o!==r&&!encode_encode._floatConversionDetected){encode_encode._floatConversionDetected=true;console.warn(\'WARNING: Possible data corruption detected with value "\'+r+\'":\',\'Bencoding only defines support for integers, value was converted to "\'+o+\'"\');console.trace()}};encode_encode.dict=function(t,r){t.push(ee);let a=0;let i;const n=Object.keys(r).sort();const o=n.length;for(;a<o;a++){i=n[a];if(r[i]==null)continue;encode_encode.string(t,i);encode_encode._encode(t,r[i])}t.push(K)};encode_encode.dictMap=function(t,r){t.push(ee);const a=Array.from(r.keys()).sort();for(const i of a){if(r.get(i)==null)continue;ArrayBuffer.isView(i)?encode_encode._encode(t,i):encode_encode.string(t,String(i));encode_encode._encode(t,r.get(i))}t.push(K)};encode_encode.list=function(t,r){let a=0;const i=r.length;t.push(te);for(;a<i;a++){if(r[a]==null)continue;encode_encode._encode(t,r[a])}t.push(K)};encode_encode.listSet=function(t,r){t.push(te);for(const a of r){if(a==null)continue;encode_encode._encode(t,a)}t.push(K)};const re=encode_encode;const ae=105;const ie=58;const ne=100;const oe=108;const de=101;function getIntFromBuffer(t,r,a){let i=0;let n=1;for(let o=r;o<a;o++){const a=t[o];if(a<58&&a>=48){i=i*10+(a-48);continue}if(o===r&&a===43){continue}if(o===r&&a===45){n=-1;continue}if(a===46){break}throw new Error("not a number: buffer["+o+"] = "+a)}return i*n}function decode(t,r,a,i){if(t==null||t.length===0){return null}if(typeof r!=="number"&&i==null){i=r;r=undefined}if(typeof a!=="number"&&i==null){i=a;a=undefined}decode.position=0;decode.encoding=i||null;decode.data=!ArrayBuffer.isView(t)?_node_text2arr(t):new Uint8Array(t.slice(r,a));decode.bytes=decode.data.length;return decode.next()}decode.bytes=0;decode.position=0;decode.data=null;decode.encoding=null;decode.next=function(){switch(decode.data[decode.position]){case ne:return decode.dictionary();case oe:return decode.list();case ae:return decode.integer();default:return decode.buffer()}};decode.find=function(t){let r=decode.position;const a=decode.data.length;const i=decode.data;while(r<a){if(i[r]===t)return r;r++}throw new Error(\'Invalid data: Missing delimiter "\'+String.fromCharCode(t)+\'" [0x\'+t.toString(16)+"]")};decode.dictionary=function(){decode.position++;const t={};while(decode.data[decode.position]!==de){const r=decode.buffer();let a=arr2text(r);if(a.includes("�"))a=util_arr2hex(r);t[a]=decode.next()}decode.position++;return t};decode.list=function(){decode.position++;const t=[];while(decode.data[decode.position]!==de){t.push(decode.next())}decode.position++;return t};decode.integer=function(){const t=decode.find(de);const r=getIntFromBuffer(decode.data,decode.position+1,t);decode.position+=t+1-decode.position;return r};decode.buffer=function(){let t=decode.find(ie);const r=getIntFromBuffer(decode.data,decode.position,t);const a=++t+r;decode.position=a;return decode.encoding?arr2text(decode.data.slice(t,a)):decode.data.slice(t,a)};const pe=decode;function listLength(t){let r=1+1;for(const a of t){r+=encodingLength(a)}return r}function mapLength(t){let r=1+1;for(const[a,i]of t){const t=_node_text2arr(a).byteLength;r+=digitCount(t)+1+t;r+=encodingLength(i)}return r}function objectLength(t){let r=1+1;const a=Object.keys(t);for(let i=0;i<a.length;i++){const n=_node_text2arr(a[i]).byteLength;r+=digitCount(n)+1+n;r+=encodingLength(t[a[i]])}return r}function stringLength(t){const r=_node_text2arr(t).byteLength;return digitCount(r)+1+r}function arrayBufferLength(t){const r=t.byteLength-t.byteOffset;return digitCount(r)+1+r}function encodingLength(t){const r=0;if(t==null)return r;const a=getType(t);switch(a){case"arraybufferview":return arrayBufferLength(t);case"string":return stringLength(t);case"array":case"set":return listLength(t);case"number":return 1+digitCount(Math.floor(t))+1;case"bigint":return 1+t.toString().length+1;case"object":return objectLength(t);case"map":return mapLength(t);default:throw new TypeError(`Unsupported value of type "${a}"`)}}const le=encodingLength;const se=le;const ue={encode:re,decode:pe,byteLength:le,encodingLength:se};const ce=require("node:http");const me=require("node:https");const fe=require("node:zlib");const he=require("node:stream");const ve=require("node:buffer");function dataUriToBuffer(t){if(!/^data:/i.test(t)){throw new TypeError(\'`uri` does not appear to be a Data URI (must begin with "data:")\')}t=t.replace(/\\r?\\n/g,"");const r=t.indexOf(",");if(r===-1||r<=4){throw new TypeError("malformed data: URI")}const a=t.substring(5,r).split(";");let i="";let n=false;const o=a[0]||"text/plain";let d=o;for(let t=1;t<a.length;t++){if(a[t]==="base64"){n=true}else if(a[t]){d+=`;${a[t]}`;if(a[t].indexOf("charset=")===0){i=a[t].substring(8)}}}if(!a[0]&&!i.length){d+=";charset=US-ASCII";i="US-ASCII"}const p=n?"base64":"ascii";const l=unescape(t.substring(r+1));const s=Buffer.from(l,p);s.type=o;s.typeFull=d;s.charset=i;return s}const ge=dataUriToBuffer;const be=require("node:util");var ye=__nccwpck_require__(6327);var we=__nccwpck_require__(3018);class FetchBaseError extends Error{constructor(t,r){super(t);Error.captureStackTrace(this,this.constructor);this.type=r}get name(){return this.constructor.name}get[Symbol.toStringTag](){return this.constructor.name}}class FetchError extends FetchBaseError{constructor(t,r,a){super(t,r);if(a){this.code=this.errno=a.code;this.erroredSysCall=a.syscall}}}const Se=Symbol.toStringTag;const isURLSearchParameters=t=>typeof t==="object"&&typeof t.append==="function"&&typeof t.delete==="function"&&typeof t.get==="function"&&typeof t.getAll==="function"&&typeof t.has==="function"&&typeof t.set==="function"&&typeof t.sort==="function"&&t[Se]==="URLSearchParams";const isBlob=t=>t&&typeof t==="object"&&typeof t.arrayBuffer==="function"&&typeof t.type==="string"&&typeof t.stream==="function"&&typeof t.constructor==="function"&&/^(Blob|File)$/.test(t[Se]);const isAbortSignal=t=>typeof t==="object"&&(t[Se]==="AbortSignal"||t[Se]==="EventTarget");const isDomainOrSubdomain=(t,r)=>{const a=new URL(r).hostname;const i=new URL(t).hostname;return a===i||a.endsWith(`.${i}`)};const isSameProtocol=(t,r)=>{const a=new URL(r).protocol;const i=new URL(t).protocol;return a===i};const _e=(0,be.promisify)(he.pipeline);const Te=Symbol("Body internals");class Body{constructor(t,{size:r=0}={}){let a=null;if(t===null){t=null}else if(isURLSearchParameters(t)){t=ve.Buffer.from(t.toString())}else if(isBlob(t)){}else if(ve.Buffer.isBuffer(t)){}else if(be.types.isAnyArrayBuffer(t)){t=ve.Buffer.from(t)}else if(ArrayBuffer.isView(t)){t=ve.Buffer.from(t.buffer,t.byteOffset,t.byteLength)}else if(t instanceof he){}else if(t instanceof we.fS){t=(0,we.$n)(t);a=t.type.split("=")[1]}else{t=ve.Buffer.from(String(t))}let i=t;if(ve.Buffer.isBuffer(t)){i=he.Readable.from(t)}else if(isBlob(t)){i=he.Readable.from(t.stream())}this[Te]={body:t,stream:i,boundary:a,disturbed:false,error:null};this.size=r;if(t instanceof he){t.on("error",(t=>{const r=t instanceof FetchBaseError?t:new FetchError(`Invalid response body while trying to fetch ${this.url}: ${t.message}`,"system",t);this[Te].error=r}))}}get body(){return this[Te].stream}get bodyUsed(){return this[Te].disturbed}async arrayBuffer(){const{buffer:t,byteOffset:r,byteLength:a}=await consumeBody(this);return t.slice(r,r+a)}async formData(){const t=this.headers.get("content-type");if(t.startsWith("application/x-www-form-urlencoded")){const t=new we.fS;const r=new URLSearchParams(await this.text());for(const[a,i]of r){t.append(a,i)}return t}const{toFormData:r}=await __nccwpck_require__.e(158).then(__nccwpck_require__.bind(__nccwpck_require__,5158));return r(this.body,t)}async blob(){const t=this.headers&&this.headers.get("content-type")||this[Te].body&&this[Te].body.type||"";const r=await this.arrayBuffer();return new ye.A([r],{type:t})}async json(){const t=await this.text();return JSON.parse(t)}async text(){const t=await consumeBody(this);return(new TextDecoder).decode(t)}buffer(){return consumeBody(this)}}Body.prototype.buffer=(0,be.deprecate)(Body.prototype.buffer,"Please use \'response.arrayBuffer()\' instead of \'response.buffer()\'","node-fetch#buffer");Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true},data:{get:(0,be.deprecate)((()=>{}),"data doesn\'t exist, use json(), text(), arrayBuffer(), or body instead","https://github.com/node-fetch/node-fetch/issues/1000 (response)")}});async function consumeBody(t){if(t[Te].disturbed){throw new TypeError(`body used already for: ${t.url}`)}t[Te].disturbed=true;if(t[Te].error){throw t[Te].error}const{body:r}=t;if(r===null){return ve.Buffer.alloc(0)}if(!(r instanceof he)){return ve.Buffer.alloc(0)}const a=[];let i=0;try{for await(const n of r){if(t.size>0&&i+n.length>t.size){const a=new FetchError(`content size at ${t.url} over limit: ${t.size}`,"max-size");r.destroy(a);throw a}i+=n.length;a.push(n)}}catch(r){const a=r instanceof FetchBaseError?r:new FetchError(`Invalid response body while trying to fetch ${t.url}: ${r.message}`,"system",r);throw a}if(r.readableEnded===true||r._readableState.ended===true){try{if(a.every((t=>typeof t==="string"))){return ve.Buffer.from(a.join(""))}return ve.Buffer.concat(a,i)}catch(r){throw new FetchError(`Could not create Buffer from response body for ${t.url}: ${r.message}`,"system",r)}}else{throw new FetchError(`Premature close of server response while trying to fetch ${t.url}`)}}const clone=(t,r)=>{let a;let i;let{body:n}=t[Te];if(t.bodyUsed){throw new Error("cannot clone body after it is used")}if(n instanceof he&&typeof n.getBoundary!=="function"){a=new he.PassThrough({highWaterMark:r});i=new he.PassThrough({highWaterMark:r});n.pipe(a);n.pipe(i);t[Te].stream=a;n=i}return n};const Ce=(0,be.deprecate)((t=>t.getBoundary()),"form-data doesn\'t follow the spec and requires special treatment. Use alternative package","https://github.com/node-fetch/node-fetch/issues/1167");const extractContentType=(t,r)=>{if(t===null){return null}if(typeof t==="string"){return"text/plain;charset=UTF-8"}if(isURLSearchParameters(t)){return"application/x-www-form-urlencoded;charset=UTF-8"}if(isBlob(t)){return t.type||null}if(ve.Buffer.isBuffer(t)||be.types.isAnyArrayBuffer(t)||ArrayBuffer.isView(t)){return null}if(t instanceof we.fS){return`multipart/form-data; boundary=${r[Te].boundary}`}if(t&&typeof t.getBoundary==="function"){return`multipart/form-data;boundary=${Ce(t)}`}if(t instanceof he){return null}return"text/plain;charset=UTF-8"};const getTotalBytes=t=>{const{body:r}=t[Te];if(r===null){return 0}if(isBlob(r)){return r.size}if(ve.Buffer.isBuffer(r)){return r.length}if(r&&typeof r.getLengthSync==="function"){return r.hasKnownLength&&r.hasKnownLength()?r.getLengthSync():null}return null};const writeToStream=async(t,{body:r})=>{if(r===null){t.end()}else{await _e(r,t)}};const De=typeof ce.validateHeaderName==="function"?ce.validateHeaderName:t=>{if(!/^[\\^`\\-\\w!#$%&\'*+.|~]+$/.test(t)){const r=new TypeError(`Header name must be a valid HTTP token [${t}]`);Object.defineProperty(r,"code",{value:"ERR_INVALID_HTTP_TOKEN"});throw r}};const Re=typeof ce.validateHeaderValue==="function"?ce.validateHeaderValue:(t,r)=>{if(/[^\\t\\u0020-\\u007E\\u0080-\\u00FF]/.test(r)){const r=new TypeError(`Invalid character in header content ["${t}"]`);Object.defineProperty(r,"code",{value:"ERR_INVALID_CHAR"});throw r}};class Headers extends URLSearchParams{constructor(t){let r=[];if(t instanceof Headers){const a=t.raw();for(const[t,i]of Object.entries(a)){r.push(...i.map((r=>[t,r])))}}else if(t==null){}else if(typeof t==="object"&&!be.types.isBoxedPrimitive(t)){const a=t[Symbol.iterator];if(a==null){r.push(...Object.entries(t))}else{if(typeof a!=="function"){throw new TypeError("Header pairs must be iterable")}r=[...t].map((t=>{if(typeof t!=="object"||be.types.isBoxedPrimitive(t)){throw new TypeError("Each header pair must be an iterable object")}return[...t]})).map((t=>{if(t.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}return[...t]}))}}else{throw new TypeError("Failed to construct \'Headers\': The provided value is not of type \'(sequence<sequence<ByteString>> or record<ByteString, ByteString>)")}r=r.length>0?r.map((([t,r])=>{De(t);Re(t,String(r));return[String(t).toLowerCase(),String(r)]})):undefined;super(r);return new Proxy(this,{get(t,r,a){switch(r){case"append":case"set":return(a,i)=>{De(a);Re(a,String(i));return URLSearchParams.prototype[r].call(t,String(a).toLowerCase(),String(i))};case"delete":case"has":case"getAll":return a=>{De(a);return URLSearchParams.prototype[r].call(t,String(a).toLowerCase())};case"keys":return()=>{t.sort();return new Set(URLSearchParams.prototype.keys.call(t)).keys()};default:return Reflect.get(t,r,a)}}})}get[Symbol.toStringTag](){return this.constructor.name}toString(){return Object.prototype.toString.call(this)}get(t){const r=this.getAll(t);if(r.length===0){return null}let a=r.join(", ");if(/^content-encoding$/i.test(t)){a=a.toLowerCase()}return a}forEach(t,r=undefined){for(const a of this.keys()){Reflect.apply(t,r,[this.get(a),a,this])}}*values(){for(const t of this.keys()){yield this.get(t)}}*entries(){for(const t of this.keys()){yield[t,this.get(t)]}}[Symbol.iterator](){return this.entries()}raw(){return[...this.keys()].reduce(((t,r)=>{t[r]=this.getAll(r);return t}),{})}[Symbol.for("nodejs.util.inspect.custom")](){return[...this.keys()].reduce(((t,r)=>{const a=this.getAll(r);if(r==="host"){t[r]=a[0]}else{t[r]=a.length>1?a:a[0]}return t}),{})}}Object.defineProperties(Headers.prototype,["get","entries","forEach","values"].reduce(((t,r)=>{t[r]={enumerable:true};return t}),{}));function fromRawHeaders(t=[]){return new Headers(t.reduce(((t,r,a,i)=>{if(a%2===0){t.push(i.slice(a,a+2))}return t}),[]).filter((([t,r])=>{try{De(t);Re(t,String(r));return true}catch{return false}})))}const Ee=new Set([301,302,303,307,308]);const isRedirect=t=>Ee.has(t);const Ae=Symbol("Response internals");class response_Response extends Body{constructor(t=null,r={}){super(t,r);const a=r.status!=null?r.status:200;const i=new Headers(r.headers);if(t!==null&&!i.has("Content-Type")){const r=extractContentType(t,this);if(r){i.append("Content-Type",r)}}this[Ae]={type:"default",url:r.url,status:a,statusText:r.statusText||"",headers:i,counter:r.counter,highWaterMark:r.highWaterMark}}get type(){return this[Ae].type}get url(){return this[Ae].url||""}get status(){return this[Ae].status}get ok(){return this[Ae].status>=200&&this[Ae].status<300}get redirected(){return this[Ae].counter>0}get statusText(){return this[Ae].statusText}get headers(){return this[Ae].headers}get highWaterMark(){return this[Ae].highWaterMark}clone(){return new response_Response(clone(this,this.highWaterMark),{type:this.type,url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected,size:this.size,highWaterMark:this.highWaterMark})}static redirect(t,r=302){if(!isRedirect(r)){throw new RangeError(\'Failed to execute "redirect" on "response": Invalid status code\')}return new response_Response(null,{headers:{location:new URL(t).toString()},status:r})}static error(){const t=new response_Response(null,{status:0,statusText:""});t[Ae].type="error";return t}static json(t=undefined,r={}){const a=JSON.stringify(t);if(a===undefined){throw new TypeError("data is not JSON serializable")}const i=new Headers(r&&r.headers);if(!i.has("content-type")){i.set("content-type","application/json")}return new response_Response(a,{...r,headers:i})}get[Symbol.toStringTag](){return"Response"}}Object.defineProperties(response_Response.prototype,{type:{enumerable:true},url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});const Ne=require("node:url");const getSearch=t=>{if(t.search){return t.search}const r=t.href.length-1;const a=t.hash||(t.href[r]==="#"?"#":"");return t.href[r-a.length]==="?"?"?":""};const xe=require("node:net");function stripURLForUseAsAReferrer(t,r=false){if(t==null){return"no-referrer"}t=new URL(t);if(/^(about|blob|data):$/.test(t.protocol)){return"no-referrer"}t.username="";t.password="";t.hash="";if(r){t.pathname="";t.search=""}return t}const Pe=new Set(["","no-referrer","no-referrer-when-downgrade","same-origin","origin","strict-origin","origin-when-cross-origin","strict-origin-when-cross-origin","unsafe-url"]);const qe="strict-origin-when-cross-origin";function validateReferrerPolicy(t){if(!Pe.has(t)){throw new TypeError(`Invalid referrerPolicy: ${t}`)}return t}function isOriginPotentiallyTrustworthy(t){if(/^(http|ws)s:$/.test(t.protocol)){return true}const r=t.host.replace(/(^\\[)|(]$)/g,"");const a=(0,xe.isIP)(r);if(a===4&&/^127\\./.test(r)){return true}if(a===6&&/^(((0+:){7})|(::(0+:){0,6}))0*1$/.test(r)){return true}if(t.host==="localhost"||t.host.endsWith(".localhost")){return false}if(t.protocol==="file:"){return true}return false}function isUrlPotentiallyTrustworthy(t){if(/^about:(blank|srcdoc)$/.test(t)){return true}if(t.protocol==="data:"){return true}if(/^(blob|filesystem):$/.test(t.protocol)){return true}return isOriginPotentiallyTrustworthy(t)}function determineRequestsReferrer(t,{referrerURLCallback:r,referrerOriginCallback:a}={}){if(t.referrer==="no-referrer"||t.referrerPolicy===""){return null}const i=t.referrerPolicy;if(t.referrer==="about:client"){return"no-referrer"}const n=t.referrer;let o=stripURLForUseAsAReferrer(n);let d=stripURLForUseAsAReferrer(n,true);if(o.toString().length>4096){o=d}if(r){o=r(o)}if(a){d=a(d)}const p=new URL(t.url);switch(i){case"no-referrer":return"no-referrer";case"origin":return d;case"unsafe-url":return o;case"strict-origin":if(isUrlPotentiallyTrustworthy(o)&&!isUrlPotentiallyTrustworthy(p)){return"no-referrer"}return d.toString();case"strict-origin-when-cross-origin":if(o.origin===p.origin){return o}if(isUrlPotentiallyTrustworthy(o)&&!isUrlPotentiallyTrustworthy(p)){return"no-referrer"}return d;case"same-origin":if(o.origin===p.origin){return o}return"no-referrer";case"origin-when-cross-origin":if(o.origin===p.origin){return o}return d;case"no-referrer-when-downgrade":if(isUrlPotentiallyTrustworthy(o)&&!isUrlPotentiallyTrustworthy(p)){return"no-referrer"}return o;default:throw new TypeError(`Invalid referrerPolicy: ${i}`)}}function parseReferrerPolicyFromHeader(t){const r=(t.get("referrer-policy")||"").split(/[,\\s]+/);let a="";for(const t of r){if(t&&Pe.has(t)){a=t}}return a}const Be=Symbol("Request internals");const isRequest=t=>typeof t==="object"&&typeof t[Be]==="object";const Le=(0,be.deprecate)((()=>{}),".data is not a valid RequestInit property, use .body instead","https://github.com/node-fetch/node-fetch/issues/1000 (request)");class Request extends Body{constructor(t,r={}){let a;if(isRequest(t)){a=new URL(t.url)}else{a=new URL(t);t={}}if(a.username!==""||a.password!==""){throw new TypeError(`${a} is an url with embedded credentials.`)}let i=r.method||t.method||"GET";if(/^(delete|get|head|options|post|put)$/i.test(i)){i=i.toUpperCase()}if(!isRequest(r)&&"data"in r){Le()}if((r.body!=null||isRequest(t)&&t.body!==null)&&(i==="GET"||i==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}const n=r.body?r.body:isRequest(t)&&t.body!==null?clone(t):null;super(n,{size:r.size||t.size||0});const o=new Headers(r.headers||t.headers||{});if(n!==null&&!o.has("Content-Type")){const t=extractContentType(n,this);if(t){o.set("Content-Type",t)}}let d=isRequest(t)?t.signal:null;if("signal"in r){d=r.signal}if(d!=null&&!isAbortSignal(d)){throw new TypeError("Expected signal to be an instanceof AbortSignal or EventTarget")}let p=r.referrer==null?t.referrer:r.referrer;if(p===""){p="no-referrer"}else if(p){const t=new URL(p);p=/^about:(\\/\\/)?client$/.test(t)?"client":t}else{p=undefined}this[Be]={method:i,redirect:r.redirect||t.redirect||"follow",headers:o,parsedURL:a,signal:d,referrer:p};this.follow=r.follow===undefined?t.follow===undefined?20:t.follow:r.follow;this.compress=r.compress===undefined?t.compress===undefined?true:t.compress:r.compress;this.counter=r.counter||t.counter||0;this.agent=r.agent||t.agent;this.highWaterMark=r.highWaterMark||t.highWaterMark||16384;this.insecureHTTPParser=r.insecureHTTPParser||t.insecureHTTPParser||false;this.referrerPolicy=r.referrerPolicy||t.referrerPolicy||""}get method(){return this[Be].method}get url(){return(0,Ne.format)(this[Be].parsedURL)}get headers(){return this[Be].headers}get redirect(){return this[Be].redirect}get signal(){return this[Be].signal}get referrer(){if(this[Be].referrer==="no-referrer"){return""}if(this[Be].referrer==="client"){return"about:client"}if(this[Be].referrer){return this[Be].referrer.toString()}return undefined}get referrerPolicy(){return this[Be].referrerPolicy}set referrerPolicy(t){this[Be].referrerPolicy=validateReferrerPolicy(t)}clone(){return new Request(this)}get[Symbol.toStringTag](){return"Request"}}Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true},referrer:{enumerable:true},referrerPolicy:{enumerable:true}});const getNodeRequestOptions=t=>{const{parsedURL:r}=t[Be];const a=new Headers(t[Be].headers);if(!a.has("Accept")){a.set("Accept","*/*")}let i=null;if(t.body===null&&/^(post|put)$/i.test(t.method)){i="0"}if(t.body!==null){const r=getTotalBytes(t);if(typeof r==="number"&&!Number.isNaN(r)){i=String(r)}}if(i){a.set("Content-Length",i)}if(t.referrerPolicy===""){t.referrerPolicy=qe}if(t.referrer&&t.referrer!=="no-referrer"){t[Be].referrer=determineRequestsReferrer(t)}else{t[Be].referrer="no-referrer"}if(t[Be].referrer instanceof URL){a.set("Referer",t.referrer)}if(!a.has("User-Agent")){a.set("User-Agent","node-fetch")}if(t.compress&&!a.has("Accept-Encoding")){a.set("Accept-Encoding","gzip, deflate, br")}let{agent:n}=t;if(typeof n==="function"){n=n(r)}const o=getSearch(r);const d={path:r.pathname+o,method:t.method,headers:a[Symbol.for("nodejs.util.inspect.custom")](),insecureHTTPParser:t.insecureHTTPParser,agent:n};return{parsedURL:r,options:d}};class AbortError extends FetchBaseError{constructor(t,r="aborted"){super(t,r)}}var Oe=__nccwpck_require__(9802);const ke=new Set(["data:","http:","https:"]);async function src_fetch(t,r){return new Promise(((a,i)=>{const n=new Request(t,r);const{parsedURL:o,options:d}=getNodeRequestOptions(n);if(!ke.has(o.protocol)){throw new TypeError(`node-fetch cannot load ${t}. URL scheme "${o.protocol.replace(/:$/,"")}" is not supported.`)}if(o.protocol==="data:"){const t=ge(n.url);const r=new response_Response(t,{headers:{"Content-Type":t.typeFull}});a(r);return}const p=(o.protocol==="https:"?me:ce).request;const{signal:l}=n;let s=null;const abort=()=>{const t=new AbortError("The operation was aborted.");i(t);if(n.body&&n.body instanceof he.Readable){n.body.destroy(t)}if(!s||!s.body){return}s.body.emit("error",t)};if(l&&l.aborted){abort();return}const abortAndFinalize=()=>{abort();finalize()};const u=p(o.toString(),d);if(l){l.addEventListener("abort",abortAndFinalize)}const finalize=()=>{u.abort();if(l){l.removeEventListener("abort",abortAndFinalize)}};u.on("error",(t=>{i(new FetchError(`request to ${n.url} failed, reason: ${t.message}`,"system",t));finalize()}));fixResponseChunkedTransferBadEnding(u,(t=>{if(s&&s.body){s.body.destroy(t)}}));if(process.version<"v14"){u.on("socket",(t=>{let r;t.prependListener("end",(()=>{r=t._eventsCount}));t.prependListener("close",(a=>{if(s&&r<t._eventsCount&&!a){const t=new Error("Premature close");t.code="ERR_STREAM_PREMATURE_CLOSE";s.body.emit("error",t)}}))}))}u.on("response",(t=>{u.setTimeout(0);const o=fromRawHeaders(t.rawHeaders);if(isRedirect(t.statusCode)){const d=o.get("Location");let p=null;try{p=d===null?null:new URL(d,n.url)}catch{if(n.redirect!=="manual"){i(new FetchError(`uri requested responds with an invalid redirect URL: ${d}`,"invalid-redirect"));finalize();return}}switch(n.redirect){case"error":i(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${n.url}`,"no-redirect"));finalize();return;case"manual":break;case"follow":{if(p===null){break}if(n.counter>=n.follow){i(new FetchError(`maximum redirect reached at: ${n.url}`,"max-redirect"));finalize();return}const d={headers:new Headers(n.headers),follow:n.follow,counter:n.counter+1,agent:n.agent,compress:n.compress,method:n.method,body:clone(n),signal:n.signal,size:n.size,referrer:n.referrer,referrerPolicy:n.referrerPolicy};if(!isDomainOrSubdomain(n.url,p)||!isSameProtocol(n.url,p)){for(const t of["authorization","www-authenticate","cookie","cookie2"]){d.headers.delete(t)}}if(t.statusCode!==303&&n.body&&r.body instanceof he.Readable){i(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(t.statusCode===303||(t.statusCode===301||t.statusCode===302)&&n.method==="POST"){d.method="GET";d.body=undefined;d.headers.delete("content-length")}const l=parseReferrerPolicyFromHeader(o);if(l){d.referrerPolicy=l}a(src_fetch(new Request(p,d)));finalize();return}default:return i(new TypeError(`Redirect option \'${n.redirect}\' is not a valid value of RequestRedirect`))}}if(l){t.once("end",(()=>{l.removeEventListener("abort",abortAndFinalize)}))}let d=(0,he.pipeline)(t,new he.PassThrough,(t=>{if(t){i(t)}}));if(process.version<"v12.10"){t.on("aborted",abortAndFinalize)}const p={url:n.url,status:t.statusCode,statusText:t.statusMessage,headers:o,size:n.size,counter:n.counter,highWaterMark:n.highWaterMark};const c=o.get("Content-Encoding");if(!n.compress||n.method==="HEAD"||c===null||t.statusCode===204||t.statusCode===304){s=new response_Response(d,p);a(s);return}const m={flush:fe.Z_SYNC_FLUSH,finishFlush:fe.Z_SYNC_FLUSH};if(c==="gzip"||c==="x-gzip"){d=(0,he.pipeline)(d,fe.createGunzip(m),(t=>{if(t){i(t)}}));s=new response_Response(d,p);a(s);return}if(c==="deflate"||c==="x-deflate"){const r=(0,he.pipeline)(t,new he.PassThrough,(t=>{if(t){i(t)}}));r.once("data",(t=>{if((t[0]&15)===8){d=(0,he.pipeline)(d,fe.createInflate(),(t=>{if(t){i(t)}}))}else{d=(0,he.pipeline)(d,fe.createInflateRaw(),(t=>{if(t){i(t)}}))}s=new response_Response(d,p);a(s)}));r.once("end",(()=>{if(!s){s=new response_Response(d,p);a(s)}}));return}if(c==="br"){d=(0,he.pipeline)(d,fe.createBrotliDecompress(),(t=>{if(t){i(t)}}));s=new response_Response(d,p);a(s);return}s=new response_Response(d,p);a(s)}));writeToStream(u,n).catch(i)}))}function fixResponseChunkedTransferBadEnding(t,r){const a=ve.Buffer.from("0\\r\\n\\r\\n");let i=false;let n=false;let o;t.on("response",(t=>{const{headers:r}=t;i=r["transfer-encoding"]==="chunked"&&!r["content-length"]}));t.on("socket",(d=>{const onSocketClose=()=>{if(i&&!n){const t=new Error("Premature close");t.code="ERR_STREAM_PREMATURE_CLOSE";r(t)}};const onData=t=>{n=ve.Buffer.compare(t.slice(-5),a)===0;if(!n&&o){n=ve.Buffer.compare(o.slice(-3),a.slice(0,3))===0&&ve.Buffer.compare(t.slice(-2),a.slice(3))===0}o=t};d.prependListener("close",onSocketClose);d.on("data",onData);t.on("close",(()=>{d.removeListener("close",onSocketClose);d.removeListener("data",onData)}))}))}const Ve=global.fetch||src_fetch;const je=null&&Ve;const Me=global.Blob||Oe.YQ;const Fe=global.File||Oe.ZH;const Ie=global.FormData||we.fS;const We=global.Headers||Headers;const Ue=global.Request||Request;const He=global.Response||response_Response;const $e=global.AbortController;const ze=global.AbortSignal;const Ge="ABCDEFGHIJKLMNOPQRSTUVWXYZ234567";const Qe=[255,255,26,27,28,29,30,31,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,255,255,255,255,255];function quintetCount(t){const r=Math.floor(t.length/5);return t.length%5===0?r:r+1}const thirty_two_encode=function(t){if(!ArrayBuffer.isView(t)&&typeof t!=="string"){throw new TypeError("base32.encode only takes Buffer or string as parameter")}if(!ArrayBuffer.isView(t)){t=_node_text2arr(t)}let r=0;let a=0;let i=0;let n=0;const o=new Uint8Array(quintetCount(t)*8);while(r<t.length){const d=t[r];if(i>3){n=d&255>>i;i=(i+5)%8;n=n<<i|(r+1<t.length?t[r+1]:0)>>8-i;r++}else{n=d>>8-(i+5)&31;i=(i+5)%8;if(i===0){r++}}o[a]=Ge.charCodeAt(n);a++}for(r=a;r<o.length;r++){o[r]=61}return o};const thirty_two_decode=function(t){if(!ArrayBuffer.isView(t)&&typeof t!=="string"){throw new TypeError("base32.decode only takes Buffer or string as parameter")}let r=0;let a=0;let i;let n=0;if(!ArrayBuffer.isView(t)){t=_node_text2arr(t)}const o=new Uint8Array(Math.ceil(t.length*5/8));for(let d=0;d<t.length;d++){if(t[d]===61){break}const p=t[d]-48;if(p<Qe.length){a=Qe[p];if(r<=3){r=(r+5)%8;if(r===0){i|=a;o[n]=i;n++;i=0}else{i|=255&a<<8-r}}else{r=(r+5)%8;i|=255&a>>>r;o[n]=i;n++;i=255&a<<8-r}}else{throw new Error("Invalid input - it is not base32 encoded string")}}return o.subarray(0,n)};const Ye={encode:thirty_two_encode,decode:thirty_two_decode};function composeRange(t){return t.reduce(((t,r,a,i)=>{if(a===0||r!==i[a-1]+1)t.push([]);t[t.length-1].push(r);return t}),[]).map((t=>t.length>1?`${t[0]}-${t[t.length-1]}`:`${t[0]}`))}function parseRange(t){const generateRange=(t,r=t)=>Array.from({length:r-t+1},((r,a)=>a+t));return t.reduce(((t,r,a,i)=>{const n=r.split("-").map((t=>parseInt(t)));return t.concat(generateRange(...n))}),[])}const Je=null&&parseRange;\n/*! magnet-uri. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nfunction magnetURIDecode(t){const r={};const a=t.split("magnet:?")[1];const i=a&&a.length>=0?a.split("&"):[];i.forEach((t=>{const a=t.split("=");if(a.length!==2)return;const i=a[0];let n=a[1];if(i==="dn")n=decodeURIComponent(n).replace(/\\+/g," ");if(i==="tr"||i==="xs"||i==="as"||i==="ws"){n=decodeURIComponent(n)}if(i==="kt")n=decodeURIComponent(n).split("+");if(i==="ix")n=Number(n);if(i==="so")n=parseRange(decodeURIComponent(n).split(","));if(r[i]){if(!Array.isArray(r[i])){r[i]=[r[i]]}r[i].push(n)}else{r[i]=n}}));let n;if(r.xt){const t=Array.isArray(r.xt)?r.xt:[r.xt];t.forEach((t=>{if(n=t.match(/^urn:btih:(.{40})/)){r.infoHash=n[1].toLowerCase()}else if(n=t.match(/^urn:btih:(.{32})/)){r.infoHash=util_arr2hex(thirty_two_decode(n[1]))}else if(n=t.match(/^urn:btmh:1220(.{64})/)){r.infoHashV2=n[1].toLowerCase()}}))}if(r.xs){const t=Array.isArray(r.xs)?r.xs:[r.xs];t.forEach((t=>{if(n=t.match(/^urn:btpk:(.{64})/)){r.publicKey=n[1].toLowerCase()}}))}if(r.infoHash)r.infoHashBuffer=hex2arr(r.infoHash);if(r.infoHashV2)r.infoHashV2Buffer=hex2arr(r.infoHashV2);if(r.publicKey)r.publicKeyBuffer=hex2arr(r.publicKey);if(r.dn)r.name=r.dn;if(r.kt)r.keywords=r.kt;r.announce=[];if(typeof r.tr==="string"||Array.isArray(r.tr)){r.announce=r.announce.concat(r.tr)}r.urlList=[];if(typeof r.as==="string"||Array.isArray(r.as)){r.urlList=r.urlList.concat(r.as)}if(typeof r.ws==="string"||Array.isArray(r.ws)){r.urlList=r.urlList.concat(r.ws)}r.peerAddresses=[];if(typeof r["x.pe"]==="string"||Array.isArray(r["x.pe"])){r.peerAddresses=r.peerAddresses.concat(r["x.pe"])}r.announce=Array.from(new Set(r.announce));r.urlList=Array.from(new Set(r.urlList));r.peerAddresses=Array.from(new Set(r.peerAddresses));return r}function magnetURIEncode(t){t=Object.assign({},t);let r=new Set;if(t.xt&&typeof t.xt==="string")r.add(t.xt);if(t.xt&&Array.isArray(t.xt))r=new Set(t.xt);if(t.infoHashBuffer)r.add(`urn:btih:${arr2hex(t.infoHashBuffer)}`);if(t.infoHash)r.add(`urn:btih:${t.infoHash}`);if(t.infoHashV2Buffer)r.add(t.xt=`urn:btmh:1220${arr2hex(t.infoHashV2Buffer)}`);if(t.infoHashV2)r.add(`urn:btmh:1220${t.infoHashV2}`);const a=Array.from(r);if(a.length===1)t.xt=a[0];if(a.length>1)t.xt=a;if(t.publicKeyBuffer)t.xs=`urn:btpk:${arr2hex(t.publicKeyBuffer)}`;if(t.publicKey)t.xs=`urn:btpk:${t.publicKey}`;if(t.name)t.dn=t.name;if(t.keywords)t.kt=t.keywords;if(t.announce)t.tr=t.announce;if(t.urlList){t.ws=t.urlList;delete t.as}if(t.peerAddresses)t["x.pe"]=t.peerAddresses;let i="magnet:?";Object.keys(t).filter((t=>t.length===2||t==="x.pe")).forEach(((r,a)=>{const n=Array.isArray(t[r])?t[r]:[t[r]];n.forEach(((t,n)=>{if((a>0||n>0)&&(r!=="kt"&&r!=="so"||n===0))i+="&";if(r==="dn")t=encodeURIComponent(t).replace(/%20/g,"+");if(r==="tr"||r==="as"||r==="ws"){t=encodeURIComponent(t)}if(r==="xs"&&!t.startsWith("urn:btpk:")){t=encodeURIComponent(t)}if(r==="kt")t=encodeURIComponent(t);if(r==="so")return;if(r==="kt"&&n>0)i+=`+${t}`;else i+=`${r}=${t}`}));if(r==="so")i+=`${r}=${compose(n)}`}));return i}const Ze=magnetURIDecode;var Xe=__nccwpck_require__(4351);\n/*! parse-torrent. MIT License. WebTorrent LLC <https://webtorrent.io/opensource> */\nasync function parseTorrent(t){if(typeof t==="string"&&/^(stream-)?magnet:/.test(t)){const r=Ze(t);if(!r.infoHash){throw new Error("Invalid torrent identifier")}return r}else if(typeof t==="string"&&(/^[a-f0-9]{40}$/i.test(t)||/^[a-z2-7]{32}$/i.test(t))){return Ze(`magnet:?xt=urn:btih:${t}`)}else if(ArrayBuffer.isView(t)&&t.length===20){return Ze(`magnet:?xt=urn:btih:${util_arr2hex(t)}`)}else if(ArrayBuffer.isView(t)){return await decodeTorrentFile(t)}else if(t&&t.infoHash){t.infoHash=t.infoHash.toLowerCase();if(!t.announce)t.announce=[];if(typeof t.announce==="string"){t.announce=[t.announce]}if(!t.urlList)t.urlList=[];return t}else{throw new Error("Invalid torrent identifier")}}async function parseTorrentRemote(t,r,a){if(typeof r==="function")return parseTorrentRemote(t,{},r);if(typeof a!=="function")throw new Error("second argument must be a Function");let i;try{i=await parseTorrent(t)}catch(t){}if(i&&i.infoHash){queueMicrotask((()=>{a(null,i)}))}else if(parse_torrent_isBlob(t)){try{const r=new Uint8Array(await t.arrayBuffer());parseOrThrow(r)}catch(t){return a(new Error(`Error converting Blob: ${t.message}`))}}else if(/^https?:/.test(t)){try{const a=await fetch(t,{headers:{"user-agent":"WebTorrent (https://webtorrent.io)"},signal:AbortSignal.timeout(30*1e3),...r});const i=new Uint8Array(await a.arrayBuffer());parseOrThrow(i)}catch(t){return a(new Error(`Error downloading torrent: ${t.message}`))}}else if(typeof fs.readFile==="function"&&typeof t==="string"){fs.readFile(t,((t,r)=>{if(t)return a(new Error("Invalid torrent identifier"));parseOrThrow(r)}))}else{queueMicrotask((()=>{a(new Error("Invalid torrent identifier"))}))}async function parseOrThrow(t){try{i=await parseTorrent(t)}catch(t){return a(t)}if(i&&i.infoHash)a(null,i);else a(new Error("Invalid torrent identifier"))}}async function decodeTorrentFile(t){if(ArrayBuffer.isView(t)){t=ue.decode(t)}ensure(t.info,"info");ensure(t.info["name.utf-8"]||t.info.name,"info.name");ensure(t.info["piece length"],"info[\'piece length\']");ensure(t.info.pieces,"info.pieces");if(t.info.files){t.info.files.forEach((t=>{ensure(typeof t.length==="number","info.files[0].length");ensure(t["path.utf-8"]||t.path,"info.files[0].path")}))}else{ensure(typeof t.info.length==="number","info.length")}const r={info:t.info,infoBuffer:ue.encode(t.info),name:arr2text(t.info["name.utf-8"]||t.info.name),announce:[]};r.infoHashBuffer=await hash(r.infoBuffer);r.infoHash=util_arr2hex(r.infoHashBuffer);if(t.info.private!==undefined)r.private=!!t.info.private;if(t["creation date"])r.created=new Date(t["creation date"]*1e3);if(t["created by"])r.createdBy=arr2text(t["created by"]);if(ArrayBuffer.isView(t.comment))r.comment=arr2text(t.comment);if(Array.isArray(t["announce-list"])&&t["announce-list"].length>0){t["announce-list"].forEach((t=>{t.forEach((t=>{r.announce.push(arr2text(t))}))}))}else if(t.announce){r.announce.push(arr2text(t.announce))}if(ArrayBuffer.isView(t["url-list"])){t["url-list"]=t["url-list"].length>0?[t["url-list"]]:[]}r.urlList=(t["url-list"]||[]).map((t=>arr2text(t)));r.announce=Array.from(new Set(r.announce));r.urlList=Array.from(new Set(r.urlList));const a=t.info.files||[t.info];r.files=a.map(((t,i)=>{const o=[].concat(r.name,t["path.utf-8"]||t.path||[]).map((t=>ArrayBuffer.isView(t)?arr2text(t):t));return{path:n.join.apply(null,[n.sep].concat(o)).slice(1),name:o[o.length-1],length:t.length,offset:a.slice(0,i).reduce(sumLength,0)}}));r.length=a.reduce(sumLength,0);const i=r.files[r.files.length-1];r.pieceLength=t.info["piece length"];r.lastPieceLength=(i.offset+i.length)%r.pieceLength||r.pieceLength;r.pieces=splitPieces(t.info.pieces);return r}function encodeTorrentFile(t){const r={info:t.info};r["announce-list"]=(t.announce||[]).map((t=>{if(!r.announce)r.announce=t;t=text2arr(t);return[t]}));r["url-list"]=t.urlList||[];if(t.private!==undefined){r.private=Number(t.private)}if(t.created){r["creation date"]=t.created.getTime()/1e3|0}if(t.createdBy){r["created by"]=t.createdBy}if(t.comment){r.comment=t.comment}return bencode.encode(r)}function parse_torrent_isBlob(t){return typeof Blob!=="undefined"&&t instanceof Blob}function sumLength(t,r){return t+r.length}function splitPieces(t){const r=[];for(let a=0;a<t.length;a+=20){r.push(util_arr2hex(t.slice(a,a+20)))}return r}function ensure(t,r){if(!t)throw new Error(`Torrent is missing required field: ${r}`)}const Ke=parseTorrent;const et=null&&encode;var tt=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function TmdbStreamExtractor(a){return tt(this,arguments,void 0,(function*({realDebrid:a,tmdbTorrentScrapper:i,logger:n}){n=n.with("TmdbStreamExtractor").empty();return{getStreamDescription(r){return tt(this,void 0,void 0,(function*(){var o,d,p;const l=n.with(`getStreamDescription (${r})`).empty();const s=r.toString();let u;if(s.startsWith("magnet:")){l(`isMagnet=true`);u=s}else{const a=yield i.isTorrentUrl(s);if(a){l(`isTorrentUrl=true`);u=yield i.findMagnet(s)}else{l(`expected a torrent url or magnet url`);throw new t.StreamDescriptionNotFoundError(r)}}l(`magnet=${u}`);if(!u){l("no magnet found");throw new Error(`No magnet torrent found for ${r}`)}const c=Ke(u);const m=(p=(d=typeof c.name==="string"?c.name:(o=c.name)===null||o===void 0?void 0:o.join(","))!==null&&d!==void 0?d:c.infoHash)!==null&&p!==void 0?p:"";const h=yield(()=>tt(this,void 0,void 0,(function*(){const t=yield a.getInstantFilesFromMagnet([u]);for(const r in t){if(t[r].length>0)return true}return false})))();l(`isOnRealDebrid=${h}`);const v=(0,I.qg)(m);return(0,t.createStreamDescription)({uri:r,name:m,description:getTorrentDescription({name:m,url:s,rd:h,uploader:"",size:0,provider:"",seeder:0,leecher:0,uploadedDate:""},v)})}))},getStreams(o){return tt(this,void 0,void 0,(function*(){const d=n.with(`getStreams (${o})`).empty();const p=o.toString().startsWith("magnet:");if(p){d(`isMagnet=true`);return yield getStreamsFromMagnetUri({realDebrid:a,uri:o,logger:d})}const l=o.toString().startsWith("rd://");if(l){d(`isRd=true`);const i=yield a.getVideoFromRdUrl(o.toString());if((i===null||i===void 0?void 0:i.ready)==true){d(`directLink=${i.downloadUrl} is ready`);return[(0,t.createDirectStream)({uri:new r.URL(i.downloadUrl),headers:{}})]}else if((i===null||i===void 0?void 0:i.ready)===false){d(`directLink is not ready on read debrid, return the video to inform that video is being downloaded`);return[(0,t.createDirectStream)({uri:new r.URL("https://androidplayer1.github.io/sources/rd_downloading.mp4"),headers:{}})]}}const s=yield i.findMagnet(o.toString());d(`magnetUrl=${s}`);if(!s){return[]}return yield getStreamsFromMagnetUri({realDebrid:a,logger:d,uri:new r.URL(s)})}))},next(){return tt(this,void 0,void 0,(function*(){n(`next`);return[]}))}}}))}function getStreamsFromMagnetUri(a){return tt(this,arguments,void 0,(function*({uri:a,realDebrid:i,logger:n}){n=n.with(`getStreamsFromMagnetUri (${a})`).empty();const o=yield i.getVideoFromMagnet(a.toString());if(typeof o==="string"){n(`directLink found ${o}`);return[(0,t.createDirectStream)({uri:new r.URL(o),headers:{}})]}else if(o){n(`creating stream description`);return o.map((a=>{const i=(0,I.qg)(a.filename);const n=(()=>{const t=[];t.push("Title: "+i.title);if(i.year){t.push("Year: "+i.year)}if(i.season){t.push("Season: "+i.season)}if(i.episode){t.push("Episode: "+i.episode)}if(i.language){t.push("Language: "+i.language)}if(i.resolution){t.push("Quality: "+i.resolution)}return t.join("\\n")})();return(0,t.createStreamDescription)({uri:new r.URL(a.url),headers:{},name:a.filename,description:n})}))}else{n(`nothing found`);return[]}}))}var rt=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};const it=[".mp4",".mkv",".m4v"];function createRealDebridFileLink(t){return`rd://${encodeObjectToBase64(t)}`}function readRealDebridFileLink(t){const r=t.substring(5);return decodeBase64ToObject(r)}function waitTorrentToDownload(t,r,a){return rt(this,void 0,void 0,(function*(){var i,n;a=a.with(`waitTorrentToDownload (${r})`).empty();let o=0;const d=5;do{a.debug(`retries=${o}, maxRetries=${d}`);yield delay(2e3);const p=yield t.getTorrentInfo(r);if(((i=p.status)===null||i===void 0?void 0:i.toLowerCase())==="downloaded"){a("torrent is downloaded");return p}if(((n=p.status)===null||n===void 0?void 0:n.toLowerCase())==="error"){a("torrent is error");return p}o++}while(o<d);a.debug(`waitTorrentToDownload (${r}), done waiting`);return t.getTorrentInfo(r)}))}function findSelectedFilesFromInstantAvailability(t,r,a){a=a.with(`findSelectedFilesFromInstantAvailability (${r.join(", ")})`).empty();const i=[];for(const a in t){const{rd:n}=t[a];if(!n)continue;for(const t of n){const a=Object.keys(t).map((t=>Number.parseInt(t,10)));let n=false;for(const r in t){const a=getFileExtension(t[r].filename);if(!it.includes(a)){n=true;break}}const o=!n&&r.every((t=>a.includes(t)));if(o){i.push(a)}}}const n=i.reduce(((t,r)=>t.length>0&&t.length<r.length?t:r),[]);if(n.length===0){a("could not find best match");return r}a("best match found");return n}function getSingleVideo(t,r,a){return rt(this,void 0,void 0,(function*(){a=a.with(`getSingleVideo (${r.id})`).empty();if(!r.files||r.files.length!==1){a.debug(`expected a torrent with only 1 file. skip.`);return}const i=getFileExtension(r.files[0].path);if(!it.includes(i)){a.debug(`torrent has no video`);return}const n=r.files.map((t=>t.id));yield t.selectTorrentFiles(r.id,n);const o=yield waitTorrentToDownload(t,r.id,a);try{if(o.links.length===0){a.debug(`torrent has no download link available`);return undefined}const r=o.links[0];const i=yield t.unrestrictLink(r);return i.download}catch(t){a.error("",t);return undefined}}))}function getVideoFromMultipleFiles(t,r,a){return rt(this,void 0,void 0,(function*(){var i,n;a=a.with(`getVideoFromMultipleFiles (${r.id})`).empty();const o=(n=(i=r.files)===null||i===void 0?void 0:i.filter((t=>{const r=getFileExtension(t.path);return it.includes(r)})))!==null&&n!==void 0?n:[];if(o.length!==1){a("expected a torrent with max 1 video file. skip.");return}const d=[o[0].id];yield t.selectTorrentFiles(r.id,d);const p=yield waitTorrentToDownload(t,r.id,a);try{const r=p.links[0];if(!r){a("could not find download link");return undefined}const i=yield t.unrestrictLink(r);return i.download}catch(t){a.error(``,t);return undefined}}))}function getBiggestVideo(t,r,a){return rt(this,void 0,void 0,(function*(){var i,n,o,d;a=a.with(`getBiggestVideo (${r.id})`).empty();const p=(n=(i=r.files)===null||i===void 0?void 0:i.filter((t=>{const r=getFileExtension(t.path);return it.includes(r)})))!==null&&n!==void 0?n:[];const l=p.reduce(((t,r)=>{if(!t)return r;return t.bytes>r.bytes?t:r}),undefined);if(!l){a("expected at least one video file in torrent. skip.");return}const s=p.every((t=>{if(t===l)return true;const r=calculatePercentageDifference(l.bytes,t.bytes);return r>=80}));if(!s){a("expected multiple video files in torrent with huge difference in file size. skip.");return}const u=yield t.instantAvailability([r.hash]);const c=findSelectedFilesFromInstantAvailability(u,[l.id],a);a(`files to select ${c.join(", ")}`);yield t.selectTorrentFiles(r.id,c);const m=yield waitTorrentToDownload(t,r.id,a);const h=(d=(o=m.files)===null||o===void 0?void 0:o.filter((t=>t.selected===1)))!==null&&d!==void 0?d:[];const v=h.findIndex((t=>t.id===l.id));try{const r=m.links[v];if(!r){a("could not find download link");return undefined}const i=yield t.unrestrictLink(r);return i.download}catch(t){a.error("",t);return undefined}}))}function getMultipleVideos(t,r,a){return rt(this,void 0,void 0,(function*(){var i,n;a=a.with(`getMultipleVideos (${r})`).empty();const o=(n=(i=t.files)===null||i===void 0?void 0:i.filter((t=>{const r=getFileExtension(t.path);return it.includes(r)})))!==null&&n!==void 0?n:[];a.debug(`found videoFiles ${o.map((t=>t.path)).join(", ")}`);return o.map((t=>{const a=createRealDebridFileLink({magnet:r,fileId:t.id});return{url:a,filename:t.path,size:t.bytes}}))}))}function getFileById(t,r,a,i,n){return rt(this,void 0,void 0,(function*(){var o,d;n=n.with(`getFileById (${a}, ${i})`).empty();const p=yield t.instantAvailability([r.hash]);const l=findSelectedFilesFromInstantAvailability(p,[i],n);n(`filesToSelect=${l.join(", ")}`);yield t.selectTorrentFiles(r.id,l);const s=yield waitTorrentToDownload(t,r.id,n);try{const r=(d=(o=s.files)===null||o===void 0?void 0:o.filter((t=>t.selected===1)))!==null&&d!==void 0?d:[];const a=r.findIndex((t=>t.id===i));const p=s.links[a];if(!p){n("no download link found");return undefined}const l=yield t.unrestrictLink(p);return{downloadUrl:l.download,ready:true}}catch(t){n.error("",t);return{downloadUrl:createRealDebridFileLink({magnet:a,fileId:i}),ready:false}}}))}function DefaultRealDebrid(t,r){return{getInstantFilesFromMagnet(a){return rt(this,void 0,void 0,(function*(){var i,n,o;const d=r.with(`getInstantFilesFromMagnet`).empty();const p=a.map((t=>({magnet:t,hash:Ke(t).infoHash})));const l=p.map((t=>t.hash)).filter((t=>!!t));d(`calculated hashes`);const s=yield t.instantAvailability(l);const u={};for(const t in s){const r=(i=p.find((r=>{var a;return((a=r.hash)===null||a===void 0?void 0:a.toLowerCase())===t.toLowerCase()})))===null||i===void 0?void 0:i.magnet;if(r){const a=[];const i=(o=(n=s[t])===null||n===void 0?void 0:n.rd)!==null&&o!==void 0?o:[];for(const t of i){for(const i in t){a.push({filename:t[i].filename,filesize:t[i].filesize,url:createRealDebridFileLink({magnet:r,fileId:Number.parseInt(i,10)})})}}u[r]=a}}return u}))},getVideoFromMagnet(a){return rt(this,void 0,void 0,(function*(){const i=r.with(`getVideoFromMagnet (${a})`).empty();i(`getVideoFromMagnet (add torrent`);const n=yield t.addTorrentMagnet(a);try{i(`get torrent info`);const r=yield t.getTorrentInfo(n.id);const o=yield getSingleVideo(t,r,i);if(o){i(`case 1 match`);return o}const d=yield getVideoFromMultipleFiles(t,r,i);if(d){i(`case 2 match`);return d}const p=yield getBiggestVideo(t,r,i);if(p){i(`case 3 match`);return p}const l=yield getMultipleVideos(r,a,i);if(l){i(`case 4 match`);return l}}finally{const a=yield t.getTorrentInfo(n.id);if(a.status==="waiting_files_selection"){r.debug(`cleanup torrent`);yield t.deleteTorrent(a.id)}}i(`no cases matched`);return undefined}))},getVideoFromRdUrl(a){return rt(this,void 0,void 0,(function*(){const i=r.with(`getVideoFromRdUrl (${a})`).empty();if(!a.startsWith("rd://")){i(`does not match RD url`);return undefined}const n=readRealDebridFileLink(a);i(`magnet=${n.magnet}, fileId=${n.fileId}`);i(` add torrent`);const o=yield t.addTorrentMagnet(n.magnet);try{i(`get torrent info`);const r=yield t.getTorrentInfo(o.id);return yield getFileById(t,r,n.magnet,n.fileId,i)}finally{const r=yield t.getTorrentInfo(o.id);if(r.status==="waiting_files_selection"){i(`cleanup torrent`);yield t.deleteTorrent(r.id)}}}))}}}var nt=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function DefaultRealDebridApi({token:t}){const a={Authorization:`Bearer ${t}`};return{addTorrentMagnet(t){return nt(this,void 0,void 0,(function*(){const i=new r.URLSearchParams;i.append("magnet",t);return fetchWithCache("https://api.real-debrid.com/rest/1.0/torrents/addMagnet",{method:"POST",redirect:"follow",body:i,headers:Object.assign(Object.assign({},a),{"Content-Type":"application/x-www-form-urlencoded"})}).then((t=>t.json())).then((t=>t))}))},getTorrentInfo(t){return nt(this,void 0,void 0,(function*(){return fetchWithCache(`https://api.real-debrid.com/rest/1.0/torrents/info/${t}`,{method:"GET",redirect:"follow",headers:Object.assign({},a)}).then((t=>t.json())).then((t=>t))}))},instantAvailability(t){return nt(this,void 0,void 0,(function*(){const r=chunkArray(t,100);const i=yield Promise.all(r.map((t=>fetchWithCache(`https://api.real-debrid.com/rest/1.0/torrents/instantAvailability/${t.join("/")}`,{method:"GET",redirect:"follow",headers:Object.assign({},a)}).then((t=>t.json())).then((t=>t)))));return i.reduce(((t,r)=>{for(const a in r){t[a]=r[a]}return t}),{})}))},selectTorrentFiles(t,i){return nt(this,void 0,void 0,(function*(){const n=new r.URLSearchParams;n.append("files",i.join(","));yield fetchWithCache(`https://api.real-debrid.com/rest/1.0/torrents/selectFiles/${t}`,{method:"POST",redirect:"follow",body:n,headers:Object.assign(Object.assign({},a),{"Content-Type":"application/x-www-form-urlencoded"})}).then((t=>t.text()))}))},deleteTorrent(t){return nt(this,void 0,void 0,(function*(){yield fetchWithCache(`https://api.real-debrid.com/rest/1.0/torrents/delete/${t}`,{method:"DELETE",redirect:"follow",headers:Object.assign({},a)}).then((t=>t.text()))}))},unrestrictLink(t){return nt(this,void 0,void 0,(function*(){const i=new r.URLSearchParams;i.append("link",t);return fetchWithCache(`https://api.real-debrid.com/rest/1.0/unrestrict/link`,{method:"POST",redirect:"follow",body:i,headers:Object.assign(Object.assign({},a),{"Content-Type":"application/x-www-form-urlencoded"})}).then((t=>t.json()))}))}}}function createConsoleLogger(t){const loggerCurrentRef=r=>{console.debug(`${t}# ${r}`);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.debug=(r,a)=>{console.debug(`${t}# ${r}`,a);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.info=(r,a)=>{console.info(`${t}# ${r}`,a);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.log=(r,a)=>{console.log(`${t}# ${r}`,a);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.warning=(r,a)=>{console.warn(`${t}# ${r}`,a);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.error=(r,a)=>{console.error(`${t}# ${r}`,a);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.empty=()=>{console.debug("");return requireNotNull(loggerCurrentRef)};loggerCurrentRef.with=r=>createConsoleLogger(`${t}#${r}`);return loggerCurrentRef}function createLogger(t,r){const loggerCurrentRef=a=>{t.debug(`${r}# ${a}`);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.debug=(a,i)=>{t.debug(`${r}# ${a}`,i);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.info=(a,i)=>{t.info(`${r}# ${a}`,i);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.log=(a,i)=>{t.log(`${r}# ${a}`,i);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.warning=(a,i)=>{t.warning(`${r}# ${a}`,i);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.error=(a,i)=>{t.error(`${r}# ${a}`,i);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.empty=()=>{t.debug("");return requireNotNull(loggerCurrentRef)};loggerCurrentRef.with=a=>createLogger(t,`${r}#${a}`);return loggerCurrentRef}function requireNotNull(t){if(t===null||t===undefined){throw new Error("required value is null")}return t}var ot=undefined&&undefined.__awaiter||function(t,r,a,i){function adopt(t){return t instanceof a?t:new a((function(r){r(t)}))}return new(a||(a=Promise))((function(a,n){function fulfilled(t){try{step(i.next(t))}catch(t){n(t)}}function rejected(t){try{step(i["throw"](t))}catch(t){n(t)}}function step(t){t.done?a(t.value):adopt(t.value).then(fulfilled,rejected)}step((i=i.apply(t,r||[])).next())}))};function parseConfig(t,r){try{return JSON.parse(r)}catch(r){t.error("error parsing config",r)}return{}}const TmdbExtractor=({config:r,logger:a})=>{var i;const n=createLogger(a,"TmdbExtractor");const o=parseConfig(n,r);const d=DefaultRealDebridApi({token:(i=o.rdApiKey)!==null&&i!==void 0?i:""});n(`readDebridApi=${o.rdApiKey}`);const p=DefaultRealDebrid(d,n);const l=DefaultTmdbTorrentScrapper({realDebrid:p,excludeKeywords:o.excludeKeywords,providers:o.providers,sorting:o.sorting});return{getAccountExtractor(){return ot(this,void 0,void 0,(function*(){n("getAccountExtractor");throw new t.ExtractorNotImplementedError}))},getAlbumExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getAlbumExtractor (${t})`).empty();const a=t.pathname.indexOf("/season/")!==-1;r(`isSeason=${a}`);if(a){return TmdbAlbumSeasonExtractor({uri:t,getConfigurationApi:getConfiguration,getSeasonDetailsApi:getSeasonDetails,logger:r})}return TmdbAlbumExtractor({uri:t,getConfigurationApi:getConfiguration,getTvDetailsApi:getTvDetails,logger:r})}))},getAlbumsExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getAlbumsExtractor (${t})`).empty();if(!t){return TmdbDiscoverTvExtractor({getTvDiscoverApi:getDiscoverTv,getConfigurationApi:getConfiguration,logger:r})}return TmdbSearchAlbumsExtractor({getConfigurationApi:getConfiguration,searchTv:searchPerson,query:t,logger:r})}))},getAuthorExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getAuthorExtractor (${t})`).empty();return TmdbAuthorExtractor({uri:t,getConfigurationApi:getConfiguration,getPersonDetailsApi:getPersonDetails,getPersonCombinedCreditsApi:getPersonCombinedCredits,logger:r})}))},getAuthorsExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getAuthorsExtractor (${t})`).empty();if(!t){return TmdbPersonPopularExtractor({getConfigurationApi:getConfiguration,getPersonPopularApi:getPersonPopular,logger:r})}return TmdbSearchAuthorsExtractor({getConfigurationApi:getConfiguration,query:t,searchPerson:searchPerson,logger:r})}))},getAutocompleteExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getAutocompleteExtractor (${t})`).empty();return TmdbAutocompleteExtractor({query:t,logger:r,searchKeywordsApi:searchKeywords})}))},getCategoriesExtractor(){return ot(this,void 0,void 0,(function*(){const t=n.with(`getCategoriesExtractor`).empty();const r=yield CustomCategoriesExtractor();const a=TmdbCategoriesExtractor({getGenresTvApi:getGenresTv,getGenresMovieApi:getGenresMovie,logger:t});return mergedExtractor(t,r,a)}))},getCategoryExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getCategoriesExtractor (${t})`).empty();if(isCustomCategory(t)){return CustomCategoryExtractor({uri:t,logger:r,moviesExtractor:()=>TmdbDiscoverMovieExtractor({getMovieDiscoverApi:getDiscoverMovie,getConfigurationApi:getConfiguration,logger:r}),seriesExtractor:()=>TmdbDiscoverTvExtractor({getTvDiscoverApi:getDiscoverTv,getConfigurationApi:getConfiguration,logger:r})})}return TmdbCategoryExtractor({category:t,logger:r,getMovieExtractor:t=>TmdbDiscoverMovieExtractor({genreId:t,getConfigurationApi:getConfiguration,getMovieDiscoverApi:getDiscoverMovie,logger:r}),getTvExtractor:t=>TmdbDiscoverTvExtractor({genreId:t,getConfigurationApi:getConfiguration,getTvDiscoverApi:getDiscoverTv,logger:r})})}))},getFeedExtractor(){return ot(this,void 0,void 0,(function*(){const t=n.with(`getFeedExtractor`).empty();const r=[];const a=yield TmdbDiscoverMovieExtractor({getMovieDiscoverApi:getDiscoverMovie,getConfigurationApi:getConfiguration,logger:t});r.push(a);if(o.includeTvShowsOnFeed===true){const a=yield TmdbDiscoverTvExtractor({getTvDiscoverApi:getDiscoverTv,getConfigurationApi:getConfiguration,logger:t});r.push(a)}if(o.includePeopleOnFeed===true){const a=yield TmdbPersonPopularExtractor({getConfigurationApi:getConfiguration,getPersonPopularApi:getPersonPopular,logger:t});r.push(a)}return mergedExtractor(t,...r)}))},getHeaders(t){return ot(this,void 0,void 0,(function*(){n(`getHeaders (${t})`);return{}}))},getMediaExtractor(r){return ot(this,void 0,void 0,(function*(){const a=n.with(`getMediaExtractor (${r})`).empty();const i=r.pathname.indexOf("/movie/")!==-1;a(`isMovie=${i}`);if(i){return TmdbMediaExtractor({uri:r,logger:a,tmdbTorrentScrapper:l,getMovieSimilarApi:getMovieSimilar,getMovieDetailApi:getMovieDetails,getConfigurationApi:getConfiguration})}const o=r.pathname.indexOf("/episode/")!==-1;a(`isEpisode=${o}`);if(o){return TmdbMediaEpisodeExtractor({uri:r,logger:a,tmdbTorrentScrapper:l,getSeasonDetailsApi:getSeasonDetails,getConfigurationApi:getConfiguration,getEpisodeDetailsApi:getEpisodeDetails,getTvDetailsApi:getTvDetails})}throw new t.ExtractorNotImplementedError}))},getSearchExtractor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`getSearchExtractor (${t})`).empty();return TmdbSearchExtractor({query:t,logger:r,searchMultiApi:searchMulti,getConfigurationApi:getConfiguration})}))},getStreamExtractor(){return ot(this,void 0,void 0,(function*(){const t=n.with(`getStreamExtractor`).empty();return TmdbStreamExtractor({realDebrid:p,tmdbTorrentScrapper:l,logger:t})}))},isAlbum(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isAlbum (${t})`).empty();const a=t.pathname.indexOf("/tv/")!==-1||t.pathname.indexOf("/season/")!==-1;r(`${a}`);return a}))},isAuthor(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isAuthor (${t})`).empty();const a=t.pathname.indexOf("/person/")!==-1;r(`${a}`);return a}))},isCategory(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isCategory (${t})`).empty();const a=t.searchParams.get("with_genres")!==null;r(`${a}`);return a}))},isDirectStream(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isDirectStream (${t})`).empty();const a=t.toString().toLowerCase();const i=/\\.(pdf|docx?|xlsx?|pptx?|zip|rar|7z|tar|gz|mp3|mkv|wav|ogg|mp4|mov|avi)$/i;const o=i.test(a);r(`${o}`);return o}))},isDescriptionStream(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isDescriptionStream (${t})`).empty();const a=t.toString().toLowerCase();const i=a.startsWith("magnet:");if(i){r("true, magnet.");return true}const o=a.startsWith("rd:");if(o){r("true, rd.");return true}const d=yield l.isTorrentUrl(a);r(`${d}`);return d}))},isMediaTrack(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isMediaTrack (${t})`).empty();const a=t.pathname.indexOf("/movie/")!==-1||t.pathname.indexOf("/episode/")!==-1;r(`${a}`);return a}))},isSupported(t){return ot(this,void 0,void 0,(function*(){const r=n.with(`isSupported (${t})`).empty();const a=t.hostname==="www.themoviedb.org"||t.protocol==="magnet:"||t.protocol==="rd:";const i=a||(yield l.isTorrentUrl(t.toString()));r(`${i}`);return i}))}}};const dt=TmdbExtractor})();module.exports=__webpack_exports__})();',rv={id:zh,name:$h,description:Gh,config:Yh,configUrl:Qh,version:Kh,versionName:Xh,targetVersion:Jh,website:Zh,iconUrl:ev,updateUrl:tv,script:av};function bm(e,t){const a=new Blob([e],{type:"application/json"}),r=URL.createObjectURL(a),i=document.createElement("a");i.href=r,i.download=t,i.dispatchEvent(new MouseEvent("click")),URL.revokeObjectURL(r)}function wm(e){const t=[];for(const a in e)t.push(encodeURIComponent(a)+"="+encodeURIComponent(e[a]));return t.join("&")}const iv=(e,t,a={})=>{var r;return((r=a.forwardProps)==null?void 0:r.includes(e))||!t.includes(e)&&!xl(e)},bd=e=>{const t=y.createContext(null);return{withRootProvider:n=>p=>{const[o,l]=e.splitVariantProps(p),s=e(o);return b.jsx(t.Provider,{value:s,children:b.jsx(n,{...l})})},withProvider:(n,d,p)=>{const o=je(n,{},{shouldForwardProp:(s,u)=>iv(s,u,p)}),l=y.forwardRef((s,u)=>{const[m,h]=e.splitVariantProps(s),w=e(m);return b.jsx(t.Provider,{value:w,children:b.jsx(o,{...h,ref:u,className:Zr(w==null?void 0:w[d],s.className)})})});return l.displayName=n.displayName||n.name,l},withContext:(n,d)=>{const p=je(n),o=y.forwardRef((l,s)=>{const u=y.useContext(t);return b.jsx(p,{...l,ref:s,className:Zr(u==null?void 0:u[d],l.className)})});return o.displayName=n.displayName||n.name,o}}},{withProvider:Sm,withContext:wd}=bd(K7);Sm(em,"root");const nv=Sm(Z4,"root"),dv=wd(U4,"control");wd(Y4,"group");const o0=wd(X4,"indicator"),pv=wd(J4,"label"),mn=y.forwardRef((e,t)=>{const{children:a,...r}=e;return b.jsxs(nv,{ref:t,...r,children:[b.jsxs(dv,{children:[b.jsx(o0,{children:b.jsx(ov,{})}),b.jsx(o0,{indeterminate:!0,children:b.jsx(lv,{})})]}),a&&b.jsx(pv,{children:a}),b.jsx(K4,{})]})});mn.displayName="Checkbox";const ov=()=>b.jsxs("svg",{viewBox:"0 0 14 14",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[b.jsx("title",{children:"Check Icon"}),b.jsx("path",{d:"M11.6666 3.5L5.24992 9.91667L2.33325 7",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]}),lv=()=>b.jsxs("svg",{viewBox:"0 0 14 14",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[b.jsx("title",{children:"Minus Icon"}),b.jsx("path",{d:"M2.91675 7H11.0834",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round"})]}),{withProvider:_m,withContext:Sd}=bd(af);_m(dm,"root");_m(nm,"root");Sd(tm,"errorText");const vp=Sd(am,"helperText");Sd(im,"label");Sd(pm,"select");const l0=je(rm,F7);je(om,H7);const{withProvider:Tm,withContext:yi}=bd(lf);Tm(ym,"root");const sv=Tm(gm,"root");yi(sm,"indicator");const $i=yi(mm,"itemControl"),Gi=yi(um,"item"),Yi=yi(cm,"itemText");yi(fm,"label");const{withProvider:uv,withContext:bi}=bd(hf),Er=uv(te.div,"root"),Dr=bi(te.div,"body");bi(te.div,"description");bi(te.div,"footer");const D1=bi(te.div,"header"),C1=bi(te.h3,"title"),Em=[{id:"1337x",url:"https://1337x.to"},{id:"kickass",url:"https://kickasstorrent.cr"},{id:"eztv",url:"https://eztv.re"},{id:"tpb",url:"https://tpb.party"},{id:"nyaa",url:"https://nyaa.si"}],Tr=(()=>{try{return JSON.parse(anPlayer.getConfiguration())}catch(e){return console.error(e),{rdApiKey:"",sorting:"quality_seeder",providers:Em.map(t=>t.id),includePeopleOnFeed:!0,includeTvShowsOnFeed:!0}}})(),mv=e=>{const t=JSON.stringify(e);anPlayer.setConfiguration(t)&&anPlayer.finish()},cv=(()=>{try{return!!anPlayer}catch(e){return console.error(e),!1}})();function s0(){var N;const[e,t]=y.useState(Tr.rdApiKey),[a,r]=y.useState(Tr.includePeopleOnFeed),[i,n]=y.useState(Tr.includeTvShowsOnFeed),[d,p]=y.useState(Em.map(f=>{var c;return{...f,checked:((c=Tr.providers)==null?void 0:c.indexOf(f.id))!==-1}})),[o,l]=y.useState(Tr.sorting??"seeder"),[s,u]=y.useState(((N=Tr.excludeKeywords)==null?void 0:N.join(","))??""),m=y.useCallback(()=>({rdApiKey:e,sorting:o,providers:d.filter(c=>c.checked).map(c=>c.id),excludeKeywords:s?s.split(","):void 0,includePeopleOnFeed:a,includeTvShowsOnFeed:i}),[s,a,i,d,e,o]),h=y.useCallback(()=>{const f=m();mv(f)},[m]),w=y.useCallback(()=>{const f=m(),c={...rv,config:JSON.stringify(f)};bm(JSON.stringify(c),"tmdb-ui-"+(e??"")+".json")},[m,e]),_=y.useCallback(()=>{const f=m(),v=wm({config:JSON.stringify(f),downloadUrl:"https://androidplayer1.github.io/tmdb-ui/assets/tmdb.json"});window.open(`anplayer://plugin/install?${v}`,"_blank")},[m]);return b.jsx(cd,{maxW:"2xl",p:"4",children:b.jsxs(Z6,{gap:4,alignItems:"stretch",children:[b.jsx(zt,{fontSize:"2xl",fontWeight:"bold",mb:"4",children:"Configuration"}),b.jsxs(Er,{variant:"outline",children:[b.jsx(D1,{children:b.jsx(C1,{children:"Providers"})}),b.jsx(Dr,{children:b.jsx(Je,{gap:2,children:d.map(f=>b.jsx(mn,{checked:f.checked,onCheckedChange:({checked:c})=>{const v=[...d],D=v.indexOf(f);v[D]={...f,checked:c===!0},p(v)},children:f.url},f.id))})})]}),b.jsxs(Er,{variant:"outline",children:[b.jsx(D1,{children:b.jsx(C1,{children:"Sorting"})}),b.jsx(Dr,{children:b.jsxs(sv,{value:o,onValueChange:({value:f})=>l(f),children:[b.jsxs(Gi,{value:"quality_seeder",children:[b.jsx($i,{}),b.jsx(Yi,{children:"Quality then seeder"}),b.jsx(V1,{})]}),b.jsxs(Gi,{value:"quality_size",children:[b.jsx($i,{}),b.jsx(Yi,{children:"Quality then size"}),b.jsx(V1,{})]}),b.jsxs(Gi,{value:"seeder",children:[b.jsx($i,{}),b.jsx(Yi,{children:"Seeder"}),b.jsx(V1,{})]}),b.jsxs(Gi,{value:"none",children:[b.jsx($i,{}),b.jsx(Yi,{children:"None"}),b.jsx(V1,{})]})]})})]}),b.jsxs(Er,{variant:"outline",children:[b.jsx(D1,{children:b.jsx(C1,{children:"Excluded Keywords (comma separated)"})}),b.jsx(Dr,{children:b.jsxs(Je,{children:[b.jsx(l0,{placeholder:"480p, BRRip ...",value:s,onChange:f=>u(f.target.value)}),b.jsx(vp,{children:"Filter out all torrents that contain any of specified keywords"})]})})]}),b.jsxs(Er,{variant:"outline",children:[b.jsx(D1,{children:b.jsx(C1,{children:"Feed"})}),b.jsx(Dr,{children:b.jsxs(Je,{children:[b.jsx(mn,{checked:i,onCheckedChange:({checked:f})=>n(f===!0),children:"TV Shows"}),b.jsx(mn,{checked:a,onCheckedChange:({checked:f})=>r(f===!0),children:"People"}),b.jsx(vp,{children:"Select what content to be shown on feeds"})]})})]}),b.jsxs(Er,{variant:"outline",children:[b.jsx(D1,{children:b.jsx(C1,{children:"Real Debrid API Key"})}),b.jsx(Dr,{children:b.jsxs(Je,{children:[b.jsx(l0,{type:"text",name:"rdApiKey",value:e,onChange:f=>t(f.target.value),placeholder:"Enter your Real Debrid API key"}),b.jsx(xt,{variant:"outline",asChild:!0,children:b.jsx(Ja,{to:"https://real-debrid.com/apitoken",target:"_blank",rel:"noopener noreferrer",children:"Get key"})}),b.jsx(vp,{mt:"4",flex:"1",children:"Your Real Debrid API key is only stored on the device where the plugin is installed and is not shared or stored elsewhere."})]})})]}),b.jsx(md,{mt:"4",gap:"4",children:cv?b.jsx(xt,{flex:"1",onClick:h,children:"Save"}):b.jsxs(b.Fragment,{children:[b.jsx(xt,{flex:"1",variant:"outline",onClick:w,children:"Download"}),b.jsx(xt,{flex:"1",onClick:_,children:"Install"})]})})]})})}const fv="sport",hv="Sport",vv="Watch football, hockey, formula, boxing, nfl, mfl ...",gv="",yv=1,bv="1.0.0",wv="2.0.0",Sv="https://androidplayer1.github.io/tmdb-ui/",_v="",Tv="https://androidplayer1.github.io/tmdb-ui/assets/sport.json",Ev='(()=>{var __webpack_modules__={3724:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var d=_interopDefault(p(2203));var t=_interopDefault(p(8611));var r=_interopDefault(p(7016));var i=_interopDefault(p(2273));var l=_interopDefault(p(5692));var o=_interopDefault(p(3106));const m=d.Readable;const n=Symbol("buffer");const s=Symbol("type");class Blob{constructor(){this[s]="";const e=arguments[0];const a=arguments[1];const p=[];let d=0;if(e){const a=e;const t=Number(a.length);for(let e=0;e<t;e++){const t=a[e];let r;if(t instanceof Buffer){r=t}else if(ArrayBuffer.isView(t)){r=Buffer.from(t.buffer,t.byteOffset,t.byteLength)}else if(t instanceof ArrayBuffer){r=Buffer.from(t)}else if(t instanceof Blob){r=t[n]}else{r=Buffer.from(typeof t==="string"?t:String(t))}d+=r.length;p.push(r)}}this[n]=Buffer.concat(p);let t=a&&a.type!==undefined&&String(a.type).toLowerCase();if(t&&!/[^\\u0020-\\u007E]/.test(t)){this[s]=t}}get size(){return this[n].length}get type(){return this[s]}text(){return Promise.resolve(this[n].toString())}arrayBuffer(){const e=this[n];const a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new m;e._read=function(){};e.push(this[n]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const a=arguments[0];const p=arguments[1];let d,t;if(a===undefined){d=0}else if(a<0){d=Math.max(e+a,0)}else{d=Math.min(a,e)}if(p===undefined){t=e}else if(p<0){t=Math.max(e+p,0)}else{t=Math.min(p,e)}const r=Math.max(t-d,0);const i=this[n];const l=i.slice(d,d+r);const o=new Blob([],{type:arguments[2]});o[n]=l;return o}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,a,p){Error.call(this,e);this.message=e;this.type=a;if(p){this.code=this.errno=p.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let u;try{u=p(2078).convert}catch(e){}const c=Symbol("Body internals");const f=d.PassThrough;function Body(e){var a=this;var p=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},t=p.size;let r=t===undefined?0:t;var i=p.timeout;let l=i===undefined?0:i;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof d);else{e=Buffer.from(String(e))}this[c]={body:e,disturbed:false,error:null};this.size=r;this.timeout=l;if(e instanceof d){e.on("error",(function(e){const p=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[c].error=p}))}}Body.prototype={get body(){return this[c].body},get bodyUsed(){return this[c].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(a){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[n]:a})}))},json(){var e=this;return consumeBody.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(a){return convertBody(a,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const a of Object.getOwnPropertyNames(Body.prototype)){if(!(a in e)){const p=Object.getOwnPropertyDescriptor(Body.prototype,a);Object.defineProperty(e,a,p)}}};function consumeBody(){var e=this;if(this[c].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[c].disturbed=true;if(this[c].error){return Body.Promise.reject(this[c].error)}let a=this.body;if(a===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(a)){a=a.stream()}if(Buffer.isBuffer(a)){return Body.Promise.resolve(a)}if(!(a instanceof d)){return Body.Promise.resolve(Buffer.alloc(0))}let p=[];let t=0;let r=false;return new Body.Promise((function(d,i){let l;if(e.timeout){l=setTimeout((function(){r=true;i(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}a.on("error",(function(a){if(a.name==="AbortError"){r=true;i(a)}else{i(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}}));a.on("data",(function(a){if(r||a===null){return}if(e.size&&t+a.length>e.size){r=true;i(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}t+=a.length;p.push(a)}));a.on("end",(function(){if(r){return}clearTimeout(l);try{d(Buffer.concat(p,t))}catch(a){i(new FetchError(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}))}))}function convertBody(e,a){if(typeof u!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const p=a.get("content-type");let d="utf-8";let t,r;if(p){t=/charset=([^;]*)/i.exec(p)}r=e.slice(0,1024).toString();if(!t&&r){t=/<meta.+?charset=([\'"])(.+?)\\1/i.exec(r)}if(!t&&r){t=/<meta[\\s]+?http-equiv=([\'"])content-type\\1[\\s]+?content=([\'"])(.+?)\\2/i.exec(r);if(!t){t=/<meta[\\s]+?content=([\'"])(.+?)\\1[\\s]+?http-equiv=([\'"])content-type\\3/i.exec(r);if(t){t.pop()}}if(t){t=/charset=(.*)/i.exec(t.pop())}}if(!t&&r){t=/<\\?xml.+?encoding=([\'"])(.+?)\\1/i.exec(r)}if(t){d=t.pop();if(d==="gb2312"||d==="gbk"){d="gb18030"}}return u(e,"UTF-8",d).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let a,p;let t=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(t instanceof d&&typeof t.getBoundary!=="function"){a=new f;p=new f;t.pipe(a);t.pipe(p);e[c].body=a;t=p}return t}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof d){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const a=e.body;if(a===null){return 0}else if(isBlob(a)){return a.size}else if(Buffer.isBuffer(a)){return a.length}else if(a&&typeof a.getLengthSync==="function"){if(a._lengthRetrievers&&a._lengthRetrievers.length==0||a.hasKnownLength&&a.hasKnownLength()){return a.getLengthSync()}return null}else{return null}}function writeToStream(e,a){const p=a.body;if(p===null){e.end()}else if(isBlob(p)){p.stream().pipe(e)}else if(Buffer.isBuffer(p)){e.write(p);e.end()}else{p.pipe(e)}}Body.Promise=global.Promise;const v=/[^\\^_`a-zA-Z\\-0-9!#$%&\'*+.|~]/;const h=/[^\\t\\x20-\\x7e\\x80-\\xff]/;function validateName(e){e=`${e}`;if(v.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(h.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,a){a=a.toLowerCase();for(const p in e){if(p.toLowerCase()===a){return p}}return undefined}const g=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[g]=Object.create(null);if(e instanceof Headers){const a=e.raw();const p=Object.keys(a);for(const e of p){for(const p of a[e]){this.append(e,p)}}return}if(e==null);else if(typeof e==="object"){const a=e[Symbol.iterator];if(a!=null){if(typeof a!=="function"){throw new TypeError("Header pairs must be iterable")}const p=[];for(const a of e){if(typeof a!=="object"||typeof a[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}p.push(Array.from(a))}for(const e of p){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const a of Object.keys(e)){const p=e[a];this.append(a,p)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const a=find(this[g],e);if(a===undefined){return null}return this[g][a].join(", ")}forEach(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let p=getHeaders(this);let d=0;while(d<p.length){var t=p[d];const r=t[0],i=t[1];e.call(a,i,r,this);p=getHeaders(this);d++}}set(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const p=find(this[g],e);this[g][p!==undefined?p:e]=[a]}append(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const p=find(this[g],e);if(p!==undefined){this[g][p].push(a)}else{this[g][e]=[a]}}has(e){e=`${e}`;validateName(e);return find(this[g],e)!==undefined}delete(e){e=`${e}`;validateName(e);const a=find(this[g],e);if(a!==undefined){delete this[g][a]}}raw(){return this[g]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const p=Object.keys(e[g]).sort();return p.map(a==="key"?function(e){return e.toLowerCase()}:a==="value"?function(a){return e[g][a].join(", ")}:function(a){return[a.toLowerCase(),e[g][a].join(", ")]})}const w=Symbol("internal");function createHeadersIterator(e,a){const p=Object.create(b);p[w]={target:e,kind:a,index:0};return p}const b=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==b){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[w];const a=e.target,p=e.kind,d=e.index;const t=getHeaders(a,p);const r=t.length;if(d>=r){return{value:undefined,done:true}}this[w].index=d+1;return{value:t[d],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(b,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const a=Object.assign({__proto__:null},e[g]);const p=find(e[g],"Host");if(p!==undefined){a[p]=a[p][0]}return a}function createHeadersLenient(e){const a=new Headers;for(const p of Object.keys(e)){if(v.test(p)){continue}if(Array.isArray(e[p])){for(const d of e[p]){if(h.test(d)){continue}if(a[g][p]===undefined){a[g][p]=[d]}else{a[g][p].push(d)}}}else if(!h.test(e[p])){a[g][p]=[e[p]]}}return a}const y=Symbol("Response internals");const _=t.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,a);const p=a.status||200;const d=new Headers(a.headers);if(e!=null&&!d.has("Content-Type")){const a=extractContentType(e);if(a){d.append("Content-Type",a)}}this[y]={url:a.url,status:p,statusText:a.statusText||_[p],headers:d,counter:a.counter}}get url(){return this[y].url||""}get status(){return this[y].status}get ok(){return this[y].status>=200&&this[y].status<300}get redirected(){return this[y].counter>0}get statusText(){return this[y].statusText}get headers(){return this[y].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const N=Symbol("Request internals");const D=r.URL||i.URL;const S=r.parse;const T=r.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(e)){e=new D(e).toString()}return S(e)}const E="destroy"in d.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[N]==="object"}function isAbortSignal(e){const a=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(a&&a.constructor.name==="AbortSignal")}class Request{constructor(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let p;if(!isRequest(e)){if(e&&e.href){p=parseURL(e.href)}else{p=parseURL(`${e}`)}e={}}else{p=parseURL(e.url)}let d=a.method||e.method||"GET";d=d.toUpperCase();if((a.body!=null||isRequest(e)&&e.body!==null)&&(d==="GET"||d==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let t=a.body!=null?a.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,t,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const r=new Headers(a.headers||e.headers||{});if(t!=null&&!r.has("Content-Type")){const e=extractContentType(t);if(e){r.append("Content-Type",e)}}let i=isRequest(e)?e.signal:null;if("signal"in a)i=a.signal;if(i!=null&&!isAbortSignal(i)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[N]={method:d,redirect:a.redirect||e.redirect||"follow",headers:r,parsedURL:p,signal:i};this.follow=a.follow!==undefined?a.follow:e.follow!==undefined?e.follow:20;this.compress=a.compress!==undefined?a.compress:e.compress!==undefined?e.compress:true;this.counter=a.counter||e.counter||0;this.agent=a.agent||e.agent}get method(){return this[N].method}get url(){return T(this[N].parsedURL)}get headers(){return this[N].headers}get redirect(){return this[N].redirect}get signal(){return this[N].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const a=e[N].parsedURL;const p=new Headers(e[N].headers);if(!p.has("Accept")){p.set("Accept","*/*")}if(!a.protocol||!a.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(a.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof d.Readable&&!E){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let t=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){t="0"}if(e.body!=null){const a=getTotalBytes(e);if(typeof a==="number"){t=String(a)}}if(t){p.set("Content-Length",t)}if(!p.has("User-Agent")){p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!p.has("Accept-Encoding")){p.set("Accept-Encoding","gzip,deflate")}let r=e.agent;if(typeof r==="function"){r=r(a)}if(!p.has("Connection")&&!r){p.set("Connection","close")}return Object.assign({},a,{method:e.method,headers:exportNodeCompatibleHeaders(p),agent:r})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const A=r.URL||i.URL;const V=d.PassThrough;const C=function isDomainOrSubdomain(e,a){const p=new A(a).hostname;const d=new A(e).hostname;return p===d||p[p.length-d.length-1]==="."&&p.endsWith(d)};const x=function isSameProtocol(e,a){const p=new A(a).protocol;const d=new A(e).protocol;return p===d};function fetch(e,a){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(p,r){const i=new Request(e,a);const m=getNodeRequestOptions(i);const n=(m.protocol==="https:"?l:t).request;const s=i.signal;let u=null;const c=function abort(){let e=new AbortError("The user aborted a request.");r(e);if(i.body&&i.body instanceof d.Readable){destroyStream(i.body,e)}if(!u||!u.body)return;u.body.emit("error",e)};if(s&&s.aborted){c();return}const f=function abortAndFinalize(){c();finalize()};const v=n(m);let h;if(s){s.addEventListener("abort",f)}function finalize(){v.abort();if(s)s.removeEventListener("abort",f);clearTimeout(h)}if(i.timeout){v.once("socket",(function(e){h=setTimeout((function(){r(new FetchError(`network timeout at: ${i.url}`,"request-timeout"));finalize()}),i.timeout)}))}v.on("error",(function(e){r(new FetchError(`request to ${i.url} failed, reason: ${e.message}`,"system",e));if(u&&u.body){destroyStream(u.body,e)}finalize()}));fixResponseChunkedTransferBadEnding(v,(function(e){if(s&&s.aborted){return}if(u&&u.body){destroyStream(u.body,e)}}));if(parseInt(process.version.substring(1))<14){v.on("socket",(function(e){e.addListener("close",(function(a){const p=e.listenerCount("data")>0;if(u&&p&&!a&&!(s&&s.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";u.body.emit("error",e)}}))}))}v.on("response",(function(e){clearTimeout(h);const a=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const d=a.get("Location");let t=null;try{t=d===null?null:new A(d,i.url).toString()}catch(e){if(i.redirect!=="manual"){r(new FetchError(`uri requested responds with an invalid redirect URL: ${d}`,"invalid-redirect"));finalize();return}}switch(i.redirect){case"error":r(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect"));finalize();return;case"manual":if(t!==null){try{a.set("Location",t)}catch(e){r(e)}}break;case"follow":if(t===null){break}if(i.counter>=i.follow){r(new FetchError(`maximum redirect reached at: ${i.url}`,"max-redirect"));finalize();return}const d={headers:new Headers(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!C(i.url,t)||!x(i.url,t)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){d.headers.delete(e)}}if(e.statusCode!==303&&i.body&&getTotalBytes(i)===null){r(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&i.method==="POST"){d.method="GET";d.body=undefined;d.headers.delete("content-length")}p(fetch(new Request(t,d)));finalize();return}}e.once("end",(function(){if(s)s.removeEventListener("abort",f)}));let d=e.pipe(new V);const t={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:i.size,timeout:i.timeout,counter:i.counter};const l=a.get("Content-Encoding");if(!i.compress||i.method==="HEAD"||l===null||e.statusCode===204||e.statusCode===304){u=new Response(d,t);p(u);return}const m={flush:o.Z_SYNC_FLUSH,finishFlush:o.Z_SYNC_FLUSH};if(l=="gzip"||l=="x-gzip"){d=d.pipe(o.createGunzip(m));u=new Response(d,t);p(u);return}if(l=="deflate"||l=="x-deflate"){const a=e.pipe(new V);a.once("data",(function(e){if((e[0]&15)===8){d=d.pipe(o.createInflate())}else{d=d.pipe(o.createInflateRaw())}u=new Response(d,t);p(u)}));a.on("end",(function(){if(!u){u=new Response(d,t);p(u)}}));return}if(l=="br"&&typeof o.createBrotliDecompress==="function"){d=d.pipe(o.createBrotliDecompress());u=new Response(d,t);p(u);return}u=new Response(d,t);p(u)}));writeToStream(v,i)}))}function fixResponseChunkedTransferBadEnding(e,a){let p;e.on("socket",(function(e){p=e}));e.on("response",(function(e){const d=e.headers;if(d["transfer-encoding"]==="chunked"&&!d["content-length"]){e.once("close",(function(e){const d=p.listenerCount("data")>0;if(d&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";a(e)}}))}}))}function destroyStream(e,a){if(e.destroy){e.destroy(a)}else{e.emit("error",a);e.end()}}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=a=fetch;Object.defineProperty(a,"__esModule",{value:true});a["default"]=a;a.Headers=Headers;a.Request=Request;a.Response=Response;a.FetchError=FetchError},5497:(e,a,p)=>{"use strict";var d=p(4876);var t=p(453);var r={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\\0").map((function(e){return e.normalize("NFC")})).join("\\0")}function findStatus(e){var a=0;var p=t.length-1;while(a<=p){var d=Math.floor((a+p)/2);var r=t[d];if(r[0][0]<=e&&r[0][1]>=e){return r}else if(r[0][0]>e){p=d-1}else{a=d+1}}return null}var i=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;function countSymbols(e){return e.replace(i,"_").length}function mapChars(e,a,p){var d=false;var t="";var i=countSymbols(e);for(var l=0;l<i;++l){var o=e.codePointAt(l);var m=findStatus(o);switch(m[1]){case"disallowed":d=true;t+=String.fromCodePoint(o);break;case"ignored":break;case"mapped":t+=String.fromCodePoint.apply(String,m[2]);break;case"deviation":if(p===r.TRANSITIONAL){t+=String.fromCodePoint.apply(String,m[2])}else{t+=String.fromCodePoint(o)}break;case"valid":t+=String.fromCodePoint(o);break;case"disallowed_STD3_mapped":if(a){d=true;t+=String.fromCodePoint(o)}else{t+=String.fromCodePoint.apply(String,m[2])}break;case"disallowed_STD3_valid":if(a){d=true}t+=String.fromCodePoint(o);break}}return{string:t,error:d}}var l=/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;function validateLabel(e,a){if(e.substr(0,4)==="xn--"){e=d.toUnicode(e);a=r.NONTRANSITIONAL}var p=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(l)===0){p=true}var t=countSymbols(e);for(var i=0;i<t;++i){var o=findStatus(e.codePointAt(i));if(processing===r.TRANSITIONAL&&o[1]!=="valid"||processing===r.NONTRANSITIONAL&&o[1]!=="valid"&&o[1]!=="deviation"){p=true;break}}return{label:e,error:p}}function processing(e,a,p){var d=mapChars(e,a,p);d.string=normalize(d.string);var t=d.string.split(".");for(var r=0;r<t.length;++r){try{var i=validateLabel(t[r]);t[r]=i.label;d.error=d.error||i.error}catch(e){d.error=true}}return{string:t.join("."),error:d.error}}e.exports.toASCII=function(e,a,p,t){var r=processing(e,a,p);var i=r.string.split(".");i=i.map((function(e){try{return d.toASCII(e)}catch(a){r.error=true;return e}}));if(t){var l=i.slice(0,i.length-1).join(".").length;if(l.length>253||l.length===0){r.error=true}for(var o=0;o<i.length;++o){if(i.length>63||i.length===0){r.error=true;break}}}if(r.error)return null;return i.join(".")};e.exports.toUnicode=function(e,a){var p=processing(e,a,r.NONTRANSITIONAL);return{domain:p.string,error:p.error}};e.exports.PROCESSING_OPTIONS=r},1208:e=>{"use strict";var a={};e.exports=a;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,a){if(!a.unsigned){--e}const p=a.unsigned?0:-Math.pow(2,e);const d=Math.pow(2,e)-1;const t=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e);const r=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,i){if(!i)i={};let l=+e;if(i.enforceRange){if(!Number.isFinite(l)){throw new TypeError("Argument is not a finite number")}l=sign(l)*Math.floor(Math.abs(l));if(l<p||l>d){throw new TypeError("Argument is not in byte range")}return l}if(!isNaN(l)&&i.clamp){l=evenRound(l);if(l<p)l=p;if(l>d)l=d;return l}if(!Number.isFinite(l)||l===0){return 0}l=sign(l)*Math.floor(Math.abs(l));l=l%t;if(!a.unsigned&&l>=r){return l-t}else if(a.unsigned){if(l<0){l+=t}else if(l===-0){return 0}}return l}}a["void"]=function(){return undefined};a["boolean"]=function(e){return!!e};a["byte"]=createNumberConversion(8,{unsigned:false});a["octet"]=createNumberConversion(8,{unsigned:true});a["short"]=createNumberConversion(16,{unsigned:false});a["unsigned short"]=createNumberConversion(16,{unsigned:true});a["long"]=createNumberConversion(32,{unsigned:false});a["unsigned long"]=createNumberConversion(32,{unsigned:true});a["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});a["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});a["double"]=function(e){const a=+e;if(!Number.isFinite(a)){throw new TypeError("Argument is not a finite floating-point value")}return a};a["unrestricted double"]=function(e){const a=+e;if(isNaN(a)){throw new TypeError("Argument is NaN")}return a};a["float"]=a["double"];a["unrestricted float"]=a["unrestricted double"];a["DOMString"]=function(e,a){if(!a)a={};if(a.treatNullAsEmptyString&&e===null){return""}return String(e)};a["ByteString"]=function(e,a){const p=String(e);let d=undefined;for(let e=0;(d=p.codePointAt(e))!==undefined;++e){if(d>255){throw new TypeError("Argument is not a valid bytestring")}}return p};a["USVString"]=function(e){const a=String(e);const p=a.length;const d=[];for(let e=0;e<p;++e){const t=a.charCodeAt(e);if(t<55296||t>57343){d.push(String.fromCodePoint(t))}else if(56320<=t&&t<=57343){d.push(String.fromCodePoint(65533))}else{if(e===p-1){d.push(String.fromCodePoint(65533))}else{const p=a.charCodeAt(e+1);if(56320<=p&&p<=57343){const a=t&1023;const r=p&1023;d.push(String.fromCodePoint((2<<15)+(2<<9)*a+r));++e}else{d.push(String.fromCodePoint(65533))}}}}return d.join("")};a["Date"]=function(e,a){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};a["RegExp"]=function(e,a){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},4511:(e,a,p)=>{"use strict";const d=p(8900);a.implementation=class URLImpl{constructor(e){const a=e[0];const p=e[1];let t=null;if(p!==undefined){t=d.basicURLParse(p);if(t==="failure"){throw new TypeError("Invalid base URL")}}const r=d.basicURLParse(a,{baseURL:t});if(r==="failure"){throw new TypeError("Invalid URL")}this._url=r}get href(){return d.serializeURL(this._url)}set href(e){const a=d.basicURLParse(e);if(a==="failure"){throw new TypeError("Invalid URL")}this._url=a}get origin(){return d.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){d.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}d.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}d.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return d.serializeHost(e.host)}return d.serializeHost(e.host)+":"+d.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}d.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return d.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}d.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return d.serializeInteger(this._url.port)}set port(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{d.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];d.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const a=this._url;if(e===""){a.query=null;return}const p=e[0]==="?"?e.substring(1):e;a.query="";d.basicURLParse(p,{url:a,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const a=e[0]==="#"?e.substring(1):e;this._url.fragment="";d.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},2208:(e,a,p)=>{"use strict";const d=p(1208);const t=p(7892);const r=p(4511);const i=t.implSymbol;function URL(a){if(!this||this[i]||!(this instanceof URL)){throw new TypeError("Failed to construct \'URL\': Please use the \'new\' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct \'URL\': 1 argument required, but only "+arguments.length+" present.")}const p=[];for(let e=0;e<arguments.length&&e<2;++e){p[e]=arguments[e]}p[0]=d["USVString"](p[0]);if(p[1]!==undefined){p[1]=d["USVString"](p[1])}e.exports.setup(this,p)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const a=[];for(let e=0;e<arguments.length&&e<0;++e){a[e]=arguments[e]}return this[i].toJSON.apply(this[i],a)};Object.defineProperty(URL.prototype,"href",{get(){return this[i].href},set(e){e=d["USVString"](e);this[i].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[i].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[i].protocol},set(e){e=d["USVString"](e);this[i].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[i].username},set(e){e=d["USVString"](e);this[i].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[i].password},set(e){e=d["USVString"](e);this[i].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[i].host},set(e){e=d["USVString"](e);this[i].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[i].hostname},set(e){e=d["USVString"](e);this[i].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[i].port},set(e){e=d["USVString"](e);this[i].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[i].pathname},set(e){e=d["USVString"](e);this[i].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[i].search},set(e){e=d["USVString"](e);this[i].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[i].hash},set(e){e=d["USVString"](e);this[i].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[i]instanceof r.implementation},create(e,a){let p=Object.create(URL.prototype);this.setup(p,e,a);return p},setup(e,a,p){if(!p)p={};p.wrapper=e;e[i]=new r.implementation(a,p);e[i][t.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},2273:(e,a,p)=>{"use strict";a.URL=p(2208)["interface"];a.serializeURL=p(8900).serializeURL;a.serializeURLOrigin=p(8900).serializeURLOrigin;a.basicURLParse=p(8900).basicURLParse;a.setTheUsername=p(8900).setTheUsername;a.setThePassword=p(8900).setThePassword;a.serializeHost=p(8900).serializeHost;a.serializeInteger=p(8900).serializeInteger;a.parseURL=p(8900).parseURL},8900:(e,a,p)=>{"use strict";const d=p(4876);const t=p(5497);const r={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const i=Symbol("failure");function countSymbols(e){return d.ucs2.decode(e).length}function at(e,a){const p=e[a];return isNaN(p)?undefined:String.fromCodePoint(p)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,a){return isASCIIAlpha(e)&&(a===58||a===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function isSpecialScheme(e){return r[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return r[e]}function percentEncode(e){let a=e.toString(16).toUpperCase();if(a.length===1){a="0"+a}return"%"+a}function utf8PercentEncode(e){const a=new Buffer(e);let p="";for(let e=0;e<a.length;++e){p+=percentEncode(a[e])}return p}function utf8PercentDecode(e){const a=new Buffer(e);const p=[];for(let e=0;e<a.length;++e){if(a[e]!==37){p.push(a[e])}else if(a[e]===37&&isASCIIHex(a[e+1])&&isASCIIHex(a[e+2])){p.push(parseInt(a.slice(e+1,e+3).toString(),16));e+=2}else{p.push(a[e])}}return new Buffer(p).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const l=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||l.has(e)}const o=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||o.has(e)}function percentEncodeChar(e,a){const p=String.fromCodePoint(e);if(a(e)){return utf8PercentEncode(p)}return p}function parseIPv4Number(e){let a=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);a=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);a=8}if(e===""){return 0}const p=a===10?/[^0-9]/:a===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(p.test(e)){return i}return parseInt(e,a)}function parseIPv4(e){const a=e.split(".");if(a[a.length-1]===""){if(a.length>1){a.pop()}}if(a.length>4){return e}const p=[];for(const d of a){if(d===""){return e}const a=parseIPv4Number(d);if(a===i){return e}p.push(a)}for(let e=0;e<p.length-1;++e){if(p[e]>255){return i}}if(p[p.length-1]>=Math.pow(256,5-p.length)){return i}let d=p.pop();let t=0;for(const e of p){d+=e*Math.pow(256,3-t);++t}return d}function serializeIPv4(e){let a="";let p=e;for(let e=1;e<=4;++e){a=String(p%256)+a;if(e!==4){a="."+a}p=Math.floor(p/256)}return a}function parseIPv6(e){const a=[0,0,0,0,0,0,0,0];let p=0;let t=null;let r=0;e=d.ucs2.decode(e);if(e[r]===58){if(e[r+1]!==58){return i}r+=2;++p;t=p}while(r<e.length){if(p===8){return i}if(e[r]===58){if(t!==null){return i}++r;++p;t=p;continue}let d=0;let l=0;while(l<4&&isASCIIHex(e[r])){d=d*16+parseInt(at(e,r),16);++r;++l}if(e[r]===46){if(l===0){return i}r-=l;if(p>6){return i}let d=0;while(e[r]!==undefined){let t=null;if(d>0){if(e[r]===46&&d<4){++r}else{return i}}if(!isASCIIDigit(e[r])){return i}while(isASCIIDigit(e[r])){const a=parseInt(at(e,r));if(t===null){t=a}else if(t===0){return i}else{t=t*10+a}if(t>255){return i}++r}a[p]=a[p]*256+t;++d;if(d===2||d===4){++p}}if(d!==4){return i}break}else if(e[r]===58){++r;if(e[r]===undefined){return i}}else if(e[r]!==undefined){return i}a[p]=d;++p}if(t!==null){let e=p-t;p=7;while(p!==0&&e>0){const d=a[t+e-1];a[t+e-1]=a[p];a[p]=d;--p;--e}}else if(t===null&&p!==8){return i}return a}function serializeIPv6(e){let a="";const p=findLongestZeroSequence(e);const d=p.idx;let t=false;for(let p=0;p<=7;++p){if(t&&e[p]===0){continue}else if(t){t=false}if(d===p){const e=p===0?"::":":";a+=e;t=true;continue}a+=e[p].toString(16);if(p!==7){a+=":"}}return a}function parseHost(e,a){if(e[0]==="["){if(e[e.length-1]!=="]"){return i}return parseIPv6(e.substring(1,e.length-1))}if(!a){return parseOpaqueHost(e)}const p=utf8PercentDecode(e);const d=t.toASCII(p,false,t.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(d===null){return i}if(containsForbiddenHostCodePoint(d)){return i}const r=parseIPv4(d);if(typeof r==="number"||r===i){return r}return d}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return i}let a="";const p=d.ucs2.decode(e);for(let e=0;e<p.length;++e){a+=percentEncodeChar(p[e],isC0ControlPercentEncode)}return a}function findLongestZeroSequence(e){let a=null;let p=1;let d=null;let t=0;for(let r=0;r<e.length;++r){if(e[r]!==0){if(t>p){a=d;p=t}d=null;t=0}else{if(d===null){d=r}++t}}if(t>p){a=d;p=t}return{idx:a,len:p}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\\u0009|\\u000A|\\u000D/g,"")}function shortenPath(e){const a=e.path;if(a.length===0){return}if(e.scheme==="file"&&a.length===1&&isNormalizedWindowsDriveLetter(a[0])){return}a.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,a,p,t,r){this.pointer=0;this.input=e;this.base=a||null;this.encodingOverride=p||"utf-8";this.stateOverride=r;this.url=t;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const l=trimTabAndNewline(this.input);if(l!==this.input){this.parseError=true}this.input=l;this.state=r||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=d.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const a=isNaN(e)?undefined:String.fromCodePoint(e);const p=this["parse "+this.state](e,a);if(!p){break}else if(p===i){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,a){if(isASCIIAlpha(e)){this.buffer+=a.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return i}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,a){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=a.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return i}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return i}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,a){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const p=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=p}else{this.url.username+=p}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return i}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=a}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,a){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return i}const e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return i}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=a}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,a){if(isASCIIDigit(e)){this.buffer+=a}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return i}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return i}return true};const m=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!m.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,a){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=a}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,a){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e){if(a[e]<33||a[e]>126||a[e]===34||a[e]===35||a[e]===60||a[e]===62){this.url.query+=percentEncode(a[e])}else{this.url.query+=String.fromCodePoint(a[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=a}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,a){let p=e.scheme+":";if(e.host!==null){p+="//";if(e.username!==""||e.password!==""){p+=e.username;if(e.password!==""){p+=":"+e.password}p+="@"}p+=serializeHost(e.host);if(e.port!==null){p+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){p+="//"}if(e.cannotBeABaseURL){p+=e.path[0]}else{for(const a of e.path){p+="/"+a}}if(e.query!==null){p+="?"+e.query}if(!a&&e.fragment!==null){p+="#"+e.fragment}return p}function serializeOrigin(e){let a=e.scheme+"://";a+=serializeHost(e.host);if(e.port!==null){a+=":"+e.port}return a}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,a){if(a===undefined){a={}}const p=new URLStateMachine(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);if(p.failure){return"failure"}return p.url};e.exports.setTheUsername=function(e,a){e.username="";const p=d.ucs2.decode(a);for(let a=0;a<p.length;++a){e.username+=percentEncodeChar(p[a],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,a){e.password="";const p=d.ucs2.decode(a);for(let a=0;a<p.length;++a){e.password+=percentEncodeChar(p[a],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(a,p){if(p===undefined){p={}}return e.exports.basicURLParse(a,{baseURL:p.baseURL,encodingOverride:p.encodingOverride})}},7892:e=>{"use strict";e.exports.mixin=function mixin(e,a){const p=Object.getOwnPropertyNames(a);for(let d=0;d<p.length;++d){Object.defineProperty(e,p[d],Object.getOwnPropertyDescriptor(a,p[d]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}},5437:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(1189),a)},5733:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},1176:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.ContentType=void 0;var p;(function(e){e["media"]="media";e["mediaDetail"]="media_detail";e["author"]="author";e["authorDetail"]="author_detail";e["album"]="album";e["albumDetail"]="album_detail";e["category"]="category";e["comment"]="comment";e["streamDirect"]="stream_direct";e["streamDescription"]="stream_description";e["streamWebPlayer"]="stream_web_player"})(p||(a.ContentType=p={}))},8835:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(1176),a)},3582:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.AlbumNotFoundError=void 0;class AlbumNotFoundError extends Error{constructor(e){super(e.toString());this.album=e}}a.AlbumNotFoundError=AlbumNotFoundError},8628:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.AuthorNotFoundError=void 0;class AuthorNotFoundError extends Error{constructor(e){super(e.toString());this.author=e}}a.AuthorNotFoundError=AuthorNotFoundError},2863:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.CategoryNotFoundError=void 0;class CategoryNotFoundError extends Error{constructor(e){super(e.toString());this.category=e}}a.CategoryNotFoundError=CategoryNotFoundError},1449:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.ExtractorNotImplementedError=void 0;class ExtractorNotImplementedError extends Error{constructor(){super("")}}a.ExtractorNotImplementedError=ExtractorNotImplementedError},1e3:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(1987),a);t(p(3582),a);t(p(61),a);t(p(8628),a);t(p(5455),a);t(p(3283),a);t(p(3508),a);t(p(1449),a);t(p(2863),a);t(p(192),a)},61:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.MediaNotFoundError=void 0;class MediaNotFoundError extends Error{constructor(e){super(e.toString());this.media=e}}a.MediaNotFoundError=MediaNotFoundError},3283:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.NotAuthenticatedError=void 0;class NotAuthenticatedError extends Error{constructor(e){super(e)}}a.NotAuthenticatedError=NotAuthenticatedError},192:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.StreamDescriptionNotFoundError=void 0;class StreamDescriptionNotFoundError extends Error{constructor(e){super(e.toString());this.streamDescription=e}}a.StreamDescriptionNotFoundError=StreamDescriptionNotFoundError},1987:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.StreamParsingError=void 0;class StreamParsingError extends Error{constructor(e,a){super(`${e}, ${a}`);this.media=e;this.stream=a}}a.StreamParsingError=StreamParsingError},5455:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.SubtitleParsingError=void 0;class SubtitleParsingError extends Error{constructor(e,a){super(`${e}, ${a}`);this.media=e;this.subtitle=a}}a.SubtitleParsingError=SubtitleParsingError},3508:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.UserInputRequiredError=void 0;class UserInputRequiredError extends Error{constructor(e,a){super("");this.uri=e;this.headers=a}}a.UserInputRequiredError=UserInputRequiredError},6707:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},8855:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},8574:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},3889:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},9024:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},5042:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},5170:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},1658:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},9282:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},8242:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},8918:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(9282),a);t(p(8242),a);t(p(8855),a);t(p(8952),a);t(p(3889),a);t(p(8078),a);t(p(6707),a);t(p(1658),a);t(p(5042),a);t(p(9024),a);t(p(8574),a);t(p(5170),a);t(p(974),a)},8952:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},8078:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},974:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},1189:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(8835),a);t(p(1e3),a);t(p(8918),a);t(p(7847),a);t(p(5733),a);t(p(358),a)},358:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(8884),a)},8884:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},9787:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createAlbumDetail=void 0;const d=p(8835);function createAlbumDetail(e){return Object.assign(Object.assign({},e),{type:d.ContentType.albumDetail})}a.createAlbumDetail=createAlbumDetail},2579:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createAlbum=void 0;const d=p(8835);function createAlbum(e){return Object.assign(Object.assign({},e),{type:d.ContentType.album})}a.createAlbum=createAlbum},6263:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createAuthorDetail=void 0;const d=p(8835);function createAuthorDetail(e){return Object.assign(Object.assign({},e),{type:d.ContentType.authorDetail})}a.createAuthorDetail=createAuthorDetail},2447:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createAuthor=void 0;const d=p(8835);function createAuthor(e){return Object.assign(Object.assign({},e),{type:d.ContentType.author})}a.createAuthor=createAuthor},5504:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createCategory=void 0;const d=p(8835);function createCategory(e){return Object.assign(Object.assign({},e),{type:d.ContentType.category})}a.createCategory=createCategory},6181:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createComment=void 0;const d=p(8835);function createComment(e){return Object.assign(Object.assign({},e),{type:d.ContentType.comment})}a.createComment=createComment},7388:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createDirectStream=void 0;const d=p(8835);function createDirectStream(e){return Object.assign(Object.assign({},e),{type:d.ContentType.streamDirect})}a.createDirectStream=createDirectStream},7847:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});t(p(2579),a);t(p(9732),a);t(p(2447),a);t(p(6181),a);t(p(5504),a);t(p(8276),a);t(p(9052),a);t(p(9787),a);t(p(2998),a);t(p(6263),a);t(p(7388),a);t(p(7727),a);t(p(6970),a);t(p(2599),a);t(p(2423),a)},2998:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createMediaDetail=void 0;const d=p(8835);function createMediaDetail(e){return Object.assign(Object.assign({},e),{type:d.ContentType.mediaDetail})}a.createMediaDetail=createMediaDetail},9732:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createMedia=void 0;const d=p(8835);function createMedia(e){return Object.assign(Object.assign({},e),{type:d.ContentType.media})}a.createMedia=createMedia},2423:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createStreamDescription=void 0;const d=p(8835);function createStreamDescription(e){return Object.assign(Object.assign({},e),{type:d.ContentType.streamDescription})}a.createStreamDescription=createStreamDescription},8276:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},7727:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},6970:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},9052:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true})},2599:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.createWebPlayerStream=void 0;const d=p(8835);function createWebPlayerStream(e){return Object.assign(Object.assign({},e),{type:d.ContentType.streamWebPlayer})}a.createWebPlayerStream=createWebPlayerStream},5265:e=>{e.exports={trueFunc:function trueFunc(){return true},falseFunc:function falseFunc(){return false}}},5353:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.attributeRules=void 0;var t=d(p(5265));var r=/[-[\\]{}()*+?.,\\\\^$|#\\s]/g;function escapeRegex(e){return e.replace(r,"\\\\$&")}var i=new Set(["accept","accept-charset","align","alink","axis","bgcolor","charset","checked","clear","codetype","color","compact","declare","defer","dir","direction","disabled","enctype","face","frame","hreflang","http-equiv","lang","language","link","media","method","multiple","nohref","noresize","noshade","nowrap","readonly","rel","rev","rules","scope","scrolling","selected","shape","target","text","type","valign","valuetype","vlink"]);function shouldIgnoreCase(e,a){return typeof e.ignoreCase==="boolean"?e.ignoreCase:e.ignoreCase==="quirks"?!!a.quirksMode:!a.xmlMode&&i.has(e.name)}a.attributeRules={equals:function(e,a,p){var d=p.adapter;var t=a.name;var r=a.value;if(shouldIgnoreCase(a,p)){r=r.toLowerCase();return function(a){var p=d.getAttributeValue(a,t);return p!=null&&p.length===r.length&&p.toLowerCase()===r&&e(a)}}return function(a){return d.getAttributeValue(a,t)===r&&e(a)}},hyphen:function(e,a,p){var d=p.adapter;var t=a.name;var r=a.value;var i=r.length;if(shouldIgnoreCase(a,p)){r=r.toLowerCase();return function hyphenIC(a){var p=d.getAttributeValue(a,t);return p!=null&&(p.length===i||p.charAt(i)==="-")&&p.substr(0,i).toLowerCase()===r&&e(a)}}return function hyphen(a){var p=d.getAttributeValue(a,t);return p!=null&&(p.length===i||p.charAt(i)==="-")&&p.substr(0,i)===r&&e(a)}},element:function(e,a,p){var d=p.adapter;var r=a.name,i=a.value;if(/\\s/.test(i)){return t.default.falseFunc}var l=new RegExp("(?:^|\\\\s)".concat(escapeRegex(i),"(?:$|\\\\s)"),shouldIgnoreCase(a,p)?"i":"");return function element(a){var p=d.getAttributeValue(a,r);return p!=null&&p.length>=i.length&&l.test(p)&&e(a)}},exists:function(e,a,p){var d=a.name;var t=p.adapter;return function(a){return t.hasAttrib(a,d)&&e(a)}},start:function(e,a,p){var d=p.adapter;var r=a.name;var i=a.value;var l=i.length;if(l===0){return t.default.falseFunc}if(shouldIgnoreCase(a,p)){i=i.toLowerCase();return function(a){var p=d.getAttributeValue(a,r);return p!=null&&p.length>=l&&p.substr(0,l).toLowerCase()===i&&e(a)}}return function(a){var p;return!!((p=d.getAttributeValue(a,r))===null||p===void 0?void 0:p.startsWith(i))&&e(a)}},end:function(e,a,p){var d=p.adapter;var r=a.name;var i=a.value;var l=-i.length;if(l===0){return t.default.falseFunc}if(shouldIgnoreCase(a,p)){i=i.toLowerCase();return function(a){var p;return((p=d.getAttributeValue(a,r))===null||p===void 0?void 0:p.substr(l).toLowerCase())===i&&e(a)}}return function(a){var p;return!!((p=d.getAttributeValue(a,r))===null||p===void 0?void 0:p.endsWith(i))&&e(a)}},any:function(e,a,p){var d=p.adapter;var r=a.name,i=a.value;if(i===""){return t.default.falseFunc}if(shouldIgnoreCase(a,p)){var l=new RegExp(escapeRegex(i),"i");return function anyIC(a){var p=d.getAttributeValue(a,r);return p!=null&&p.length>=i.length&&l.test(p)&&e(a)}}return function(a){var p;return!!((p=d.getAttributeValue(a,r))===null||p===void 0?void 0:p.includes(i))&&e(a)}},not:function(e,a,p){var d=p.adapter;var t=a.name;var r=a.value;if(r===""){return function(a){return!!d.getAttributeValue(a,t)&&e(a)}}else if(shouldIgnoreCase(a,p)){r=r.toLowerCase();return function(a){var p=d.getAttributeValue(a,t);return(p==null||p.length!==r.length||p.toLowerCase()!==r)&&e(a)}}return function(a){return d.getAttributeValue(a,t)!==r&&e(a)}}}},5599:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var p in e)if(p!=="default"&&Object.prototype.hasOwnProperty.call(e,p))d(a,e,p);t(a,e);return a};var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.compileToken=a.compileUnsafe=a.compile=void 0;var l=p(5667);var o=i(p(5265));var m=r(p(4040));var n=p(634);var s=p(2287);function compile(e,a,p){var d=compileUnsafe(e,a,p);return(0,s.ensureIsTag)(d,a.adapter)}a.compile=compile;function compileUnsafe(e,a,p){var d=typeof e==="string"?(0,l.parse)(e):e;return compileToken(d,a,p)}a.compileUnsafe=compileUnsafe;function includesScopePseudo(e){return e.type===l.SelectorType.Pseudo&&(e.name==="scope"||Array.isArray(e.data)&&e.data.some((function(e){return e.some(includesScopePseudo)})))}var u={type:l.SelectorType.Descendant};var c={type:"_flexibleDescendant"};var f={type:l.SelectorType.Pseudo,name:"scope",data:null};function absolutize(e,a,p){var d=a.adapter;var t=!!(p===null||p===void 0?void 0:p.every((function(e){var a=d.isTag(e)&&d.getParent(e);return e===s.PLACEHOLDER_ELEMENT||a&&d.isTag(a)})));for(var r=0,i=e;r<i.length;r++){var o=i[r];if(o.length>0&&(0,m.isTraversal)(o[0])&&o[0].type!==l.SelectorType.Descendant){}else if(t&&!o.some(includesScopePseudo)){o.unshift(u)}else{continue}o.unshift(f)}}function compileToken(e,a,p){var d;e.forEach(m.default);p=(d=a.context)!==null&&d!==void 0?d:p;var t=Array.isArray(p);var r=p&&(Array.isArray(p)?p:[p]);if(a.relativeSelector!==false){absolutize(e,a,r)}else if(e.some((function(e){return e.length>0&&(0,m.isTraversal)(e[0])}))){throw new Error("Relative selectors are not allowed when the `relativeSelector` option is disabled")}var i=false;var n=e.map((function(e){if(e.length>=2){var p=e[0],d=e[1];if(p.type!==l.SelectorType.Pseudo||p.name!=="scope"){}else if(t&&d.type===l.SelectorType.Descendant){e[1]=c}else if(d.type===l.SelectorType.Adjacent||d.type===l.SelectorType.Sibling){i=true}}return compileRules(e,a,r)})).reduce(reduceRules,o.default.falseFunc);n.shouldTestNextSiblings=i;return n}a.compileToken=compileToken;function compileRules(e,a,p){var d;return e.reduce((function(e,d){return e===o.default.falseFunc?o.default.falseFunc:(0,n.compileGeneralSelector)(e,d,a,p,compileToken)}),(d=a.rootFunc)!==null&&d!==void 0?d:o.default.trueFunc)}function reduceRules(e,a){if(a===o.default.falseFunc||e===o.default.trueFunc){return e}if(e===o.default.falseFunc||a===o.default.trueFunc){return a}return function combine(p){return e(p)||a(p)}}},634:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.compileGeneralSelector=void 0;var d=p(5353);var t=p(718);var r=p(5667);function getElementParent(e,a){var p=a.getParent(e);if(p&&a.isTag(p)){return p}return null}function compileGeneralSelector(e,a,p,i,l){var o=p.adapter,m=p.equals;switch(a.type){case r.SelectorType.PseudoElement:{throw new Error("Pseudo-elements are not supported by css-select")}case r.SelectorType.ColumnCombinator:{throw new Error("Column combinators are not yet supported by css-select")}case r.SelectorType.Attribute:{if(a.namespace!=null){throw new Error("Namespaced attributes are not yet supported by css-select")}if(!p.xmlMode||p.lowerCaseAttributeNames){a.name=a.name.toLowerCase()}return d.attributeRules[a.action](e,a,p)}case r.SelectorType.Pseudo:{return(0,t.compilePseudoSelector)(e,a,p,i,l)}case r.SelectorType.Tag:{if(a.namespace!=null){throw new Error("Namespaced tag names are not yet supported by css-select")}var n=a.name;if(!p.xmlMode||p.lowerCaseTags){n=n.toLowerCase()}return function tag(a){return o.getName(a)===n&&e(a)}}case r.SelectorType.Descendant:{if(p.cacheResults===false||typeof WeakSet==="undefined"){return function descendant(a){var p=a;while(p=getElementParent(p,o)){if(e(p)){return true}}return false}}var s=new WeakSet;return function cachedDescendant(a){var p=a;while(p=getElementParent(p,o)){if(!s.has(p)){if(o.isTag(p)&&e(p)){return true}s.add(p)}}return false}}case"_flexibleDescendant":{return function flexibleDescendant(a){var p=a;do{if(e(p))return true}while(p=getElementParent(p,o));return false}}case r.SelectorType.Parent:{return function parent(a){return o.getChildren(a).some((function(a){return o.isTag(a)&&e(a)}))}}case r.SelectorType.Child:{return function child(a){var p=o.getParent(a);return p!=null&&o.isTag(p)&&e(p)}}case r.SelectorType.Sibling:{return function sibling(a){var p=o.getSiblings(a);for(var d=0;d<p.length;d++){var t=p[d];if(m(a,t))break;if(o.isTag(t)&&e(t)){return true}}return false}}case r.SelectorType.Adjacent:{if(o.prevElementSibling){return function adjacent(a){var p=o.prevElementSibling(a);return p!=null&&e(p)}}return function adjacent(a){var p=o.getSiblings(a);var d;for(var t=0;t<p.length;t++){var r=p[t];if(m(a,r))break;if(o.isTag(r)){d=r}}return!!d&&e(d)}}case r.SelectorType.Universal:{if(a.namespace!=null&&a.namespace!=="*"){throw new Error("Namespaced universal selectors are not yet supported by css-select")}return e}}}a.compileGeneralSelector=compileGeneralSelector},2842:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var p in e)if(p!=="default"&&Object.prototype.hasOwnProperty.call(e,p))d(a,e,p);t(a,e);return a};var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.aliases=a.pseudos=a.filters=a.is=a.selectOne=a.selectAll=a.prepareContext=a._compileToken=a._compileUnsafe=a.compile=void 0;var l=r(p(2357));var o=i(p(5265));var m=p(5599);var n=p(2287);var defaultEquals=function(e,a){return e===a};var s={adapter:l,equals:defaultEquals};function convertOptionFormats(e){var a,p,d,t;var r=e!==null&&e!==void 0?e:s;(a=r.adapter)!==null&&a!==void 0?a:r.adapter=l;(p=r.equals)!==null&&p!==void 0?p:r.equals=(t=(d=r.adapter)===null||d===void 0?void 0:d.equals)!==null&&t!==void 0?t:defaultEquals;return r}function wrapCompile(e){return function addAdapter(a,p,d){var t=convertOptionFormats(p);return e(a,t,d)}}a.compile=wrapCompile(m.compile);a._compileUnsafe=wrapCompile(m.compileUnsafe);a._compileToken=wrapCompile(m.compileToken);function getSelectorFunc(e){return function select(a,p,d){var t=convertOptionFormats(d);if(typeof a!=="function"){a=(0,m.compileUnsafe)(a,t,p)}var r=prepareContext(p,t.adapter,a.shouldTestNextSiblings);return e(a,r,t)}}function prepareContext(e,a,p){if(p===void 0){p=false}if(p){e=appendNextSiblings(e,a)}return Array.isArray(e)?a.removeSubsets(e):a.getChildren(e)}a.prepareContext=prepareContext;function appendNextSiblings(e,a){var p=Array.isArray(e)?e.slice(0):[e];var d=p.length;for(var t=0;t<d;t++){var r=(0,n.getNextSiblings)(p[t],a);p.push.apply(p,r)}return p}a.selectAll=getSelectorFunc((function(e,a,p){return e===o.default.falseFunc||!a||a.length===0?[]:p.adapter.findAll(e,a)}));a.selectOne=getSelectorFunc((function(e,a,p){return e===o.default.falseFunc||!a||a.length===0?null:p.adapter.findOne(e,a)}));function is(e,a,p){var d=convertOptionFormats(p);return(typeof a==="function"?a:(0,m.compile)(a,d))(e)}a.is=is;a["default"]=a.selectAll;var u=p(718);Object.defineProperty(a,"filters",{enumerable:true,get:function(){return u.filters}});Object.defineProperty(a,"pseudos",{enumerable:true,get:function(){return u.pseudos}});Object.defineProperty(a,"aliases",{enumerable:true,get:function(){return u.aliases}})},4998:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.aliases=void 0;a.aliases={"any-link":":is(a, area, link)[href]",link:":any-link:not(:visited)",disabled:":is(\\n        :is(button, input, select, textarea, optgroup, option)[disabled],\\n        optgroup[disabled] > option,\\n        fieldset[disabled]:not(fieldset[disabled] legend:first-of-type *)\\n    )",enabled:":not(:disabled)",checked:":is(:is(input[type=radio], input[type=checkbox])[checked], option:selected)",required:":is(input, select, textarea)[required]",optional:":is(input, select, textarea):not([required])",selected:"option:is([selected], select:not([multiple]):not(:has(> option[selected])) > :first-of-type)",checkbox:"[type=checkbox]",file:"[type=file]",password:"[type=password]",radio:"[type=radio]",reset:"[type=reset]",image:"[type=image]",submit:"[type=submit]",parent:":not(:empty)",header:":is(h1, h2, h3, h4, h5, h6)",button:":is(button, input[type=button])",input:":is(input, textarea, select, button)",text:"input:is(:not([type!=\'\']), [type=text])"}},1625:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.filters=void 0;var t=d(p(187));var r=d(p(5265));function getChildFunc(e,a){return function(p){var d=a.getParent(p);return d!=null&&a.isTag(d)&&e(p)}}a.filters={contains:function(e,a,p){var d=p.adapter;return function contains(p){return e(p)&&d.getText(p).includes(a)}},icontains:function(e,a,p){var d=p.adapter;var t=a.toLowerCase();return function icontains(a){return e(a)&&d.getText(a).toLowerCase().includes(t)}},"nth-child":function(e,a,p){var d=p.adapter,i=p.equals;var l=(0,t.default)(a);if(l===r.default.falseFunc)return r.default.falseFunc;if(l===r.default.trueFunc)return getChildFunc(e,d);return function nthChild(a){var p=d.getSiblings(a);var t=0;for(var r=0;r<p.length;r++){if(i(a,p[r]))break;if(d.isTag(p[r])){t++}}return l(t)&&e(a)}},"nth-last-child":function(e,a,p){var d=p.adapter,i=p.equals;var l=(0,t.default)(a);if(l===r.default.falseFunc)return r.default.falseFunc;if(l===r.default.trueFunc)return getChildFunc(e,d);return function nthLastChild(a){var p=d.getSiblings(a);var t=0;for(var r=p.length-1;r>=0;r--){if(i(a,p[r]))break;if(d.isTag(p[r])){t++}}return l(t)&&e(a)}},"nth-of-type":function(e,a,p){var d=p.adapter,i=p.equals;var l=(0,t.default)(a);if(l===r.default.falseFunc)return r.default.falseFunc;if(l===r.default.trueFunc)return getChildFunc(e,d);return function nthOfType(a){var p=d.getSiblings(a);var t=0;for(var r=0;r<p.length;r++){var o=p[r];if(i(a,o))break;if(d.isTag(o)&&d.getName(o)===d.getName(a)){t++}}return l(t)&&e(a)}},"nth-last-of-type":function(e,a,p){var d=p.adapter,i=p.equals;var l=(0,t.default)(a);if(l===r.default.falseFunc)return r.default.falseFunc;if(l===r.default.trueFunc)return getChildFunc(e,d);return function nthLastOfType(a){var p=d.getSiblings(a);var t=0;for(var r=p.length-1;r>=0;r--){var o=p[r];if(i(a,o))break;if(d.isTag(o)&&d.getName(o)===d.getName(a)){t++}}return l(t)&&e(a)}},root:function(e,a,p){var d=p.adapter;return function(a){var p=d.getParent(a);return(p==null||!d.isTag(p))&&e(a)}},scope:function(e,p,d,t){var r=d.equals;if(!t||t.length===0){return a.filters["root"](e,p,d)}if(t.length===1){return function(a){return r(t[0],a)&&e(a)}}return function(a){return t.includes(a)&&e(a)}},hover:dynamicStatePseudo("isHovered"),visited:dynamicStatePseudo("isVisited"),active:dynamicStatePseudo("isActive")};function dynamicStatePseudo(e){return function dynamicPseudo(a,p,d){var t=d.adapter;var i=t[e];if(typeof i!=="function"){return r.default.falseFunc}return function active(e){return i(e)&&a(e)}}}},718:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.compilePseudoSelector=a.aliases=a.pseudos=a.filters=void 0;var d=p(5667);var t=p(1625);Object.defineProperty(a,"filters",{enumerable:true,get:function(){return t.filters}});var r=p(609);Object.defineProperty(a,"pseudos",{enumerable:true,get:function(){return r.pseudos}});var i=p(4998);Object.defineProperty(a,"aliases",{enumerable:true,get:function(){return i.aliases}});var l=p(2287);function compilePseudoSelector(e,a,p,o,m){var n;var s=a.name,u=a.data;if(Array.isArray(u)){if(!(s in l.subselects)){throw new Error("Unknown pseudo-class :".concat(s,"(").concat(u,")"))}return l.subselects[s](e,u,p,o,m)}var c=(n=p.pseudos)===null||n===void 0?void 0:n[s];var f=typeof c==="string"?c:i.aliases[s];if(typeof f==="string"){if(u!=null){throw new Error("Pseudo ".concat(s," doesn\'t have any arguments"))}var v=(0,d.parse)(f);return l.subselects["is"](e,v,p,o,m)}if(typeof c==="function"){(0,r.verifyPseudoArgs)(c,s,u,1);return function(a){return c(a,u)&&e(a)}}if(s in t.filters){return t.filters[s](e,u,p,o)}if(s in r.pseudos){var h=r.pseudos[s];(0,r.verifyPseudoArgs)(h,s,u,2);return function(a){return h(a,p,u)&&e(a)}}throw new Error("Unknown pseudo-class :".concat(s))}a.compilePseudoSelector=compilePseudoSelector},609:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.verifyPseudoArgs=a.pseudos=void 0;a.pseudos={empty:function(e,a){var p=a.adapter;return!p.getChildren(e).some((function(e){return p.isTag(e)||p.getText(e)!==""}))},"first-child":function(e,a){var p=a.adapter,d=a.equals;if(p.prevElementSibling){return p.prevElementSibling(e)==null}var t=p.getSiblings(e).find((function(e){return p.isTag(e)}));return t!=null&&d(e,t)},"last-child":function(e,a){var p=a.adapter,d=a.equals;var t=p.getSiblings(e);for(var r=t.length-1;r>=0;r--){if(d(e,t[r]))return true;if(p.isTag(t[r]))break}return false},"first-of-type":function(e,a){var p=a.adapter,d=a.equals;var t=p.getSiblings(e);var r=p.getName(e);for(var i=0;i<t.length;i++){var l=t[i];if(d(e,l))return true;if(p.isTag(l)&&p.getName(l)===r){break}}return false},"last-of-type":function(e,a){var p=a.adapter,d=a.equals;var t=p.getSiblings(e);var r=p.getName(e);for(var i=t.length-1;i>=0;i--){var l=t[i];if(d(e,l))return true;if(p.isTag(l)&&p.getName(l)===r){break}}return false},"only-of-type":function(e,a){var p=a.adapter,d=a.equals;var t=p.getName(e);return p.getSiblings(e).every((function(a){return d(e,a)||!p.isTag(a)||p.getName(a)!==t}))},"only-child":function(e,a){var p=a.adapter,d=a.equals;return p.getSiblings(e).every((function(a){return d(e,a)||!p.isTag(a)}))}};function verifyPseudoArgs(e,a,p,d){if(p===null){if(e.length>d){throw new Error("Pseudo-class :".concat(a," requires an argument"))}}else if(e.length===d){throw new Error("Pseudo-class :".concat(a," doesn\'t have any arguments"))}}a.verifyPseudoArgs=verifyPseudoArgs},2287:function(e,a,p){"use strict";var d=this&&this.__spreadArray||function(e,a,p){if(p||arguments.length===2)for(var d=0,t=a.length,r;d<t;d++){if(r||!(d in a)){if(!r)r=Array.prototype.slice.call(a,0,d);r[d]=a[d]}}return e.concat(r||Array.prototype.slice.call(a))};var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.subselects=a.getNextSiblings=a.ensureIsTag=a.PLACEHOLDER_ELEMENT=void 0;var r=t(p(5265));var i=p(4040);a.PLACEHOLDER_ELEMENT={};function ensureIsTag(e,a){if(e===r.default.falseFunc)return r.default.falseFunc;return function(p){return a.isTag(p)&&e(p)}}a.ensureIsTag=ensureIsTag;function getNextSiblings(e,a){var p=a.getSiblings(e);if(p.length<=1)return[];var d=p.indexOf(e);if(d<0||d===p.length-1)return[];return p.slice(d+1).filter(a.isTag)}a.getNextSiblings=getNextSiblings;function copyOptions(e){return{xmlMode:!!e.xmlMode,lowerCaseAttributeNames:!!e.lowerCaseAttributeNames,lowerCaseTags:!!e.lowerCaseTags,quirksMode:!!e.quirksMode,cacheResults:!!e.cacheResults,pseudos:e.pseudos,adapter:e.adapter,equals:e.equals}}var is=function(e,a,p,d,t){var i=t(a,copyOptions(p),d);return i===r.default.trueFunc?e:i===r.default.falseFunc?r.default.falseFunc:function(a){return i(a)&&e(a)}};a.subselects={is:is,matches:is,where:is,not:function(e,a,p,d,t){var i=t(a,copyOptions(p),d);return i===r.default.falseFunc?e:i===r.default.trueFunc?r.default.falseFunc:function(a){return!i(a)&&e(a)}},has:function(e,p,t,l,o){var m=t.adapter;var n=copyOptions(t);n.relativeSelector=true;var s=p.some((function(e){return e.some(i.isTraversal)}))?[a.PLACEHOLDER_ELEMENT]:undefined;var u=o(p,n,s);if(u===r.default.falseFunc)return r.default.falseFunc;var c=ensureIsTag(u,m);if(s&&u!==r.default.trueFunc){var f=u.shouldTestNextSiblings,v=f===void 0?false:f;return function(a){if(!e(a))return false;s[0]=a;var p=m.getChildren(a);var t=v?d(d([],p,true),getNextSiblings(a,m),true):p;return m.existsOne(c,t)}}return function(a){return e(a)&&m.existsOne(c,m.getChildren(a))}}}},4040:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.isTraversal=void 0;var d=p(5667);var t=new Map([[d.SelectorType.Universal,50],[d.SelectorType.Tag,30],[d.SelectorType.Attribute,1],[d.SelectorType.Pseudo,0]]);function isTraversal(e){return!t.has(e.type)}a.isTraversal=isTraversal;var r=new Map([[d.AttributeAction.Exists,10],[d.AttributeAction.Equals,8],[d.AttributeAction.Not,7],[d.AttributeAction.Start,6],[d.AttributeAction.End,6],[d.AttributeAction.Any,5]]);function sortByProcedure(e){var a=e.map(getProcedure);for(var p=1;p<e.length;p++){var d=a[p];if(d<0)continue;for(var t=p-1;t>=0&&d<a[t];t--){var r=e[t+1];e[t+1]=e[t];e[t]=r;a[t+1]=a[t];a[t]=d}}}a["default"]=sortByProcedure;function getProcedure(e){var a,p;var i=(a=t.get(e.type))!==null&&a!==void 0?a:-1;if(e.type===d.SelectorType.Attribute){i=(p=r.get(e.action))!==null&&p!==void 0?p:4;if(e.action===d.AttributeAction.Equals&&e.name==="id"){i=9}if(e.ignoreCase){i>>=1}}else if(e.type===d.SelectorType.Pseudo){if(!e.data){i=3}else if(e.name==="has"||e.name==="contains"){i=0}else if(Array.isArray(e.data)){i=Math.min.apply(Math,e.data.map((function(e){return Math.min.apply(Math,e.map(getProcedure))})));if(i<0){i=0}}else{i=2}}return i}},5667:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});a.stringify=a.parse=a.isTraversal=void 0;t(p(4738),a);var r=p(748);Object.defineProperty(a,"isTraversal",{enumerable:true,get:function(){return r.isTraversal}});Object.defineProperty(a,"parse",{enumerable:true,get:function(){return r.parse}});var i=p(9154);Object.defineProperty(a,"stringify",{enumerable:true,get:function(){return i.stringify}})},748:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.parse=a.isTraversal=void 0;var d=p(4738);var t=/^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;var r=/\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;var i=new Map([[126,d.AttributeAction.Element],[94,d.AttributeAction.Start],[36,d.AttributeAction.End],[42,d.AttributeAction.Any],[33,d.AttributeAction.Not],[124,d.AttributeAction.Hyphen]]);var l=new Set(["has","not","matches","is","where","host","host-context"]);function isTraversal(e){switch(e.type){case d.SelectorType.Adjacent:case d.SelectorType.Child:case d.SelectorType.Descendant:case d.SelectorType.Parent:case d.SelectorType.Sibling:case d.SelectorType.ColumnCombinator:return true;default:return false}}a.isTraversal=isTraversal;var o=new Set(["contains","icontains"]);function funescape(e,a,p){var d=parseInt(a,16)-65536;return d!==d||p?a:d<0?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,d&1023|56320)}function unescapeCSS(e){return e.replace(r,funescape)}function isQuote(e){return e===39||e===34}function isWhitespace(e){return e===32||e===9||e===10||e===12||e===13}function parse(e){var a=[];var p=parseSelector(a,"".concat(e),0);if(p<e.length){throw new Error("Unmatched selector: ".concat(e.slice(p)))}return a}a.parse=parse;function parseSelector(e,a,p){var r=[];function getName(e){var d=a.slice(p+e).match(t);if(!d){throw new Error("Expected name, found ".concat(a.slice(p)))}var r=d[0];p+=e+r.length;return unescapeCSS(r)}function stripWhitespace(e){p+=e;while(p<a.length&&isWhitespace(a.charCodeAt(p))){p++}}function readValueWithParenthesis(){p+=1;var e=p;var d=1;for(;d>0&&p<a.length;p++){if(a.charCodeAt(p)===40&&!isEscaped(p)){d++}else if(a.charCodeAt(p)===41&&!isEscaped(p)){d--}}if(d){throw new Error("Parenthesis not matched")}return unescapeCSS(a.slice(e,p-1))}function isEscaped(e){var p=0;while(a.charCodeAt(--e)===92)p++;return(p&1)===1}function ensureNotTraversal(){if(r.length>0&&isTraversal(r[r.length-1])){throw new Error("Did not expect successive traversals.")}}function addTraversal(e){if(r.length>0&&r[r.length-1].type===d.SelectorType.Descendant){r[r.length-1].type=e;return}ensureNotTraversal();r.push({type:e})}function addSpecialAttribute(e,a){r.push({type:d.SelectorType.Attribute,name:e,action:a,value:getName(1),namespace:null,ignoreCase:"quirks"})}function finalizeSubselector(){if(r.length&&r[r.length-1].type===d.SelectorType.Descendant){r.pop()}if(r.length===0){throw new Error("Empty sub-selector")}e.push(r)}stripWhitespace(0);if(a.length===p){return p}e:while(p<a.length){var m=a.charCodeAt(p);switch(m){case 32:case 9:case 10:case 12:case 13:{if(r.length===0||r[0].type!==d.SelectorType.Descendant){ensureNotTraversal();r.push({type:d.SelectorType.Descendant})}stripWhitespace(1);break}case 62:{addTraversal(d.SelectorType.Child);stripWhitespace(1);break}case 60:{addTraversal(d.SelectorType.Parent);stripWhitespace(1);break}case 126:{addTraversal(d.SelectorType.Sibling);stripWhitespace(1);break}case 43:{addTraversal(d.SelectorType.Adjacent);stripWhitespace(1);break}case 46:{addSpecialAttribute("class",d.AttributeAction.Element);break}case 35:{addSpecialAttribute("id",d.AttributeAction.Equals);break}case 91:{stripWhitespace(1);var n=void 0;var s=null;if(a.charCodeAt(p)===124){n=getName(1)}else if(a.startsWith("*|",p)){s="*";n=getName(2)}else{n=getName(0);if(a.charCodeAt(p)===124&&a.charCodeAt(p+1)!==61){s=n;n=getName(1)}}stripWhitespace(0);var u=d.AttributeAction.Exists;var c=i.get(a.charCodeAt(p));if(c){u=c;if(a.charCodeAt(p+1)!==61){throw new Error("Expected `=`")}stripWhitespace(2)}else if(a.charCodeAt(p)===61){u=d.AttributeAction.Equals;stripWhitespace(1)}var f="";var v=null;if(u!=="exists"){if(isQuote(a.charCodeAt(p))){var h=a.charCodeAt(p);var g=p+1;while(g<a.length&&(a.charCodeAt(g)!==h||isEscaped(g))){g+=1}if(a.charCodeAt(g)!==h){throw new Error("Attribute value didn\'t end")}f=unescapeCSS(a.slice(p+1,g));p=g+1}else{var w=p;while(p<a.length&&(!isWhitespace(a.charCodeAt(p))&&a.charCodeAt(p)!==93||isEscaped(p))){p+=1}f=unescapeCSS(a.slice(w,p))}stripWhitespace(0);var b=a.charCodeAt(p)|32;if(b===115){v=false;stripWhitespace(1)}else if(b===105){v=true;stripWhitespace(1)}}if(a.charCodeAt(p)!==93){throw new Error("Attribute selector didn\'t terminate")}p+=1;var y={type:d.SelectorType.Attribute,name:n,action:u,value:f,namespace:s,ignoreCase:v};r.push(y);break}case 58:{if(a.charCodeAt(p+1)===58){r.push({type:d.SelectorType.PseudoElement,name:getName(2).toLowerCase(),data:a.charCodeAt(p)===40?readValueWithParenthesis():null});continue}var _=getName(1).toLowerCase();var N=null;if(a.charCodeAt(p)===40){if(l.has(_)){if(isQuote(a.charCodeAt(p+1))){throw new Error("Pseudo-selector ".concat(_," cannot be quoted"))}N=[];p=parseSelector(N,a,p+1);if(a.charCodeAt(p)!==41){throw new Error("Missing closing parenthesis in :".concat(_," (").concat(a,")"))}p+=1}else{N=readValueWithParenthesis();if(o.has(_)){var D=N.charCodeAt(0);if(D===N.charCodeAt(N.length-1)&&isQuote(D)){N=N.slice(1,-1)}}N=unescapeCSS(N)}}r.push({type:d.SelectorType.Pseudo,name:_,data:N});break}case 44:{finalizeSubselector();r=[];stripWhitespace(1);break}default:{if(a.startsWith("/*",p)){var S=a.indexOf("*/",p+2);if(S<0){throw new Error("Comment was not terminated")}p=S+2;if(r.length===0){stripWhitespace(0)}break}var s=null;var T=void 0;if(m===42){p+=1;T="*"}else if(m===124){T="";if(a.charCodeAt(p+1)===124){addTraversal(d.SelectorType.ColumnCombinator);stripWhitespace(2);break}}else if(t.test(a.slice(p))){T=getName(0)}else{break e}if(a.charCodeAt(p)===124&&a.charCodeAt(p+1)!==124){s=T;if(a.charCodeAt(p+1)===42){T="*";p+=2}else{T=getName(1)}}r.push(T==="*"?{type:d.SelectorType.Universal,namespace:s}:{type:d.SelectorType.Tag,name:T,namespace:s})}}}finalizeSubselector();return p}},9154:function(e,a,p){"use strict";var d=this&&this.__spreadArray||function(e,a,p){if(p||arguments.length===2)for(var d=0,t=a.length,r;d<t;d++){if(r||!(d in a)){if(!r)r=Array.prototype.slice.call(a,0,d);r[d]=a[d]}}return e.concat(r||Array.prototype.slice.call(a))};Object.defineProperty(a,"__esModule",{value:true});a.stringify=void 0;var t=p(4738);var r=["\\\\",\'"\'];var i=d(d([],r,true),["(",")"],false);var l=new Set(r.map((function(e){return e.charCodeAt(0)})));var o=new Set(i.map((function(e){return e.charCodeAt(0)})));var m=new Set(d(d([],i,true),["~","^","$","*","+","!","|",":","[","]"," ","."],false).map((function(e){return e.charCodeAt(0)})));function stringify(e){return e.map((function(e){return e.map(stringifyToken).join("")})).join(", ")}a.stringify=stringify;function stringifyToken(e,a,p){switch(e.type){case t.SelectorType.Child:return a===0?"> ":" > ";case t.SelectorType.Parent:return a===0?"< ":" < ";case t.SelectorType.Sibling:return a===0?"~ ":" ~ ";case t.SelectorType.Adjacent:return a===0?"+ ":" + ";case t.SelectorType.Descendant:return" ";case t.SelectorType.ColumnCombinator:return a===0?"|| ":" || ";case t.SelectorType.Universal:return e.namespace==="*"&&a+1<p.length&&"name"in p[a+1]?"":"".concat(getNamespace(e.namespace),"*");case t.SelectorType.Tag:return getNamespacedName(e);case t.SelectorType.PseudoElement:return"::".concat(escapeName(e.name,m)).concat(e.data===null?"":"(".concat(escapeName(e.data,o),")"));case t.SelectorType.Pseudo:return":".concat(escapeName(e.name,m)).concat(e.data===null?"":"(".concat(typeof e.data==="string"?escapeName(e.data,o):stringify(e.data),")"));case t.SelectorType.Attribute:{if(e.name==="id"&&e.action===t.AttributeAction.Equals&&e.ignoreCase==="quirks"&&!e.namespace){return"#".concat(escapeName(e.value,m))}if(e.name==="class"&&e.action===t.AttributeAction.Element&&e.ignoreCase==="quirks"&&!e.namespace){return".".concat(escapeName(e.value,m))}var d=getNamespacedName(e);if(e.action===t.AttributeAction.Exists){return"[".concat(d,"]")}return"[".concat(d).concat(getActionValue(e.action),\'="\').concat(escapeName(e.value,l),\'"\').concat(e.ignoreCase===null?"":e.ignoreCase?" i":" s","]")}}}function getActionValue(e){switch(e){case t.AttributeAction.Equals:return"";case t.AttributeAction.Element:return"~";case t.AttributeAction.Start:return"^";case t.AttributeAction.End:return"$";case t.AttributeAction.Any:return"*";case t.AttributeAction.Not:return"!";case t.AttributeAction.Hyphen:return"|";case t.AttributeAction.Exists:throw new Error("Shouldn\'t be here")}}function getNamespacedName(e){return"".concat(getNamespace(e.namespace)).concat(escapeName(e.name,m))}function getNamespace(e){return e!==null?"".concat(e==="*"?"*":escapeName(e,m),"|"):""}function escapeName(e,a){var p=0;var d="";for(var t=0;t<e.length;t++){if(a.has(e.charCodeAt(t))){d+="".concat(e.slice(p,t),"\\\\").concat(e.charAt(t));p=t+1}}return d.length>0?d+e.slice(p):e}},4738:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.AttributeAction=a.IgnoreCaseMode=a.SelectorType=void 0;var p;(function(e){e["Attribute"]="attribute";e["Pseudo"]="pseudo";e["PseudoElement"]="pseudo-element";e["Tag"]="tag";e["Universal"]="universal";e["Adjacent"]="adjacent";e["Child"]="child";e["Descendant"]="descendant";e["Parent"]="parent";e["Sibling"]="sibling";e["ColumnCombinator"]="column-combinator"})(p=a.SelectorType||(a.SelectorType={}));a.IgnoreCaseMode={Unknown:null,QuirksMode:"quirks",IgnoreCase:true,CaseSensitive:false};var d;(function(e){e["Any"]="any";e["Element"]="element";e["End"]="end";e["Equals"]="equals";e["Exists"]="exists";e["Hyphen"]="hyphen";e["Not"]="not";e["Start"]="start"})(d=a.AttributeAction||(a.AttributeAction={}))},5803:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.attributeNames=a.elementNames=void 0;a.elementNames=new Map(["altGlyph","altGlyphDef","altGlyphItem","animateColor","animateMotion","animateTransform","clipPath","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","foreignObject","glyphRef","linearGradient","radialGradient","textPath"].map((function(e){return[e.toLowerCase(),e]})));a.attributeNames=new Map(["definitionURL","attributeName","attributeType","baseFrequency","baseProfile","calcMode","clipPathUnits","diffuseConstant","edgeMode","filterUnits","glyphRef","gradientTransform","gradientUnits","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","numOctaves","pathLength","patternContentUnits","patternTransform","patternUnits","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","specularConstant","specularExponent","spreadMethod","startOffset","stdDeviation","stitchTiles","surfaceScale","systemLanguage","tableValues","targetX","targetY","textLength","viewBox","viewTarget","xChannelSelector","yChannelSelector","zoomAndPan"].map((function(e){return[e.toLowerCase(),e]})))},9943:function(e,a,p){"use strict";var d=this&&this.__assign||function(){d=Object.assign||function(e){for(var a,p=1,d=arguments.length;p<d;p++){a=arguments[p];for(var t in a)if(Object.prototype.hasOwnProperty.call(a,t))e[t]=a[t]}return e};return d.apply(this,arguments)};var t=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var r=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var p in e)if(p!=="default"&&Object.prototype.hasOwnProperty.call(e,p))t(a,e,p);r(a,e);return a};Object.defineProperty(a,"__esModule",{value:true});a.render=void 0;var l=i(p(1108));var o=p(8467);var m=p(5803);var n=new Set(["style","script","xmp","iframe","noembed","noframes","plaintext","noscript"]);function replaceQuotes(e){return e.replace(/"/g,"&quot;")}function formatAttributes(e,a){var p;if(!e)return;var d=((p=a.encodeEntities)!==null&&p!==void 0?p:a.decodeEntities)===false?replaceQuotes:a.xmlMode||a.encodeEntities!=="utf8"?o.encodeXML:o.escapeAttribute;return Object.keys(e).map((function(p){var t,r;var i=(t=e[p])!==null&&t!==void 0?t:"";if(a.xmlMode==="foreign"){p=(r=m.attributeNames.get(p))!==null&&r!==void 0?r:p}if(!a.emptyAttrs&&!a.xmlMode&&i===""){return p}return"".concat(p,\'="\').concat(d(i),\'"\')})).join(" ")}var s=new Set(["area","base","basefont","br","col","command","embed","frame","hr","img","input","isindex","keygen","link","meta","param","source","track","wbr"]);function render(e,a){if(a===void 0){a={}}var p="length"in e?e:[e];var d="";for(var t=0;t<p.length;t++){d+=renderNode(p[t],a)}return d}a.render=render;a["default"]=render;function renderNode(e,a){switch(e.type){case l.Root:return render(e.children,a);case l.Doctype:case l.Directive:return renderDirective(e);case l.Comment:return renderComment(e);case l.CDATA:return renderCdata(e);case l.Script:case l.Style:case l.Tag:return renderTag(e,a);case l.Text:return renderText(e,a)}}var u=new Set(["mi","mo","mn","ms","mtext","annotation-xml","foreignObject","desc","title"]);var c=new Set(["svg","math"]);function renderTag(e,a){var p;if(a.xmlMode==="foreign"){e.name=(p=m.elementNames.get(e.name))!==null&&p!==void 0?p:e.name;if(e.parent&&u.has(e.parent.name)){a=d(d({},a),{xmlMode:false})}}if(!a.xmlMode&&c.has(e.name)){a=d(d({},a),{xmlMode:"foreign"})}var t="<".concat(e.name);var r=formatAttributes(e.attribs,a);if(r){t+=" ".concat(r)}if(e.children.length===0&&(a.xmlMode?a.selfClosingTags!==false:a.selfClosingTags&&s.has(e.name))){if(!a.xmlMode)t+=" ";t+="/>"}else{t+=">";if(e.children.length>0){t+=render(e.children,a)}if(a.xmlMode||!s.has(e.name)){t+="</".concat(e.name,">")}}return t}function renderDirective(e){return"<".concat(e.data,">")}function renderText(e,a){var p;var d=e.data||"";if(((p=a.encodeEntities)!==null&&p!==void 0?p:a.decodeEntities)!==false&&!(!a.xmlMode&&e.parent&&n.has(e.parent.name))){d=a.xmlMode||a.encodeEntities!=="utf8"?(0,o.encodeXML)(d):(0,o.escapeText)(d)}return d}function renderCdata(e){return"<![CDATA[".concat(e.children[0].data,"]]>")}function renderComment(e){return"\\x3c!--".concat(e.data,"--\\x3e")}},1108:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.Doctype=a.CDATA=a.Tag=a.Style=a.Script=a.Comment=a.Directive=a.Text=a.Root=a.isTag=a.ElementType=void 0;var p;(function(e){e["Root"]="root";e["Text"]="text";e["Directive"]="directive";e["Comment"]="comment";e["Script"]="script";e["Style"]="style";e["Tag"]="tag";e["CDATA"]="cdata";e["Doctype"]="doctype"})(p=a.ElementType||(a.ElementType={}));function isTag(e){return e.type===p.Tag||e.type===p.Script||e.type===p.Style}a.isTag=isTag;a.Root=p.Root;a.Text=p.Text;a.Directive=p.Directive;a.Comment=p.Comment;a.Script=p.Script;a.Style=p.Style;a.Tag=p.Tag;a.CDATA=p.CDATA;a.Doctype=p.Doctype},7792:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});a.DomHandler=void 0;var r=p(1108);var i=p(2446);t(p(2446),a);var l={withStartIndices:false,withEndIndices:false,xmlMode:false};var o=function(){function DomHandler(e,a,p){this.dom=[];this.root=new i.Document(this.dom);this.done=false;this.tagStack=[this.root];this.lastNode=null;this.parser=null;if(typeof a==="function"){p=a;a=l}if(typeof e==="object"){a=e;e=undefined}this.callback=e!==null&&e!==void 0?e:null;this.options=a!==null&&a!==void 0?a:l;this.elementCB=p!==null&&p!==void 0?p:null}DomHandler.prototype.onparserinit=function(e){this.parser=e};DomHandler.prototype.onreset=function(){this.dom=[];this.root=new i.Document(this.dom);this.done=false;this.tagStack=[this.root];this.lastNode=null;this.parser=null};DomHandler.prototype.onend=function(){if(this.done)return;this.done=true;this.parser=null;this.handleCallback(null)};DomHandler.prototype.onerror=function(e){this.handleCallback(e)};DomHandler.prototype.onclosetag=function(){this.lastNode=null;var e=this.tagStack.pop();if(this.options.withEndIndices){e.endIndex=this.parser.endIndex}if(this.elementCB)this.elementCB(e)};DomHandler.prototype.onopentag=function(e,a){var p=this.options.xmlMode?r.ElementType.Tag:undefined;var d=new i.Element(e,a,undefined,p);this.addNode(d);this.tagStack.push(d)};DomHandler.prototype.ontext=function(e){var a=this.lastNode;if(a&&a.type===r.ElementType.Text){a.data+=e;if(this.options.withEndIndices){a.endIndex=this.parser.endIndex}}else{var p=new i.Text(e);this.addNode(p);this.lastNode=p}};DomHandler.prototype.oncomment=function(e){if(this.lastNode&&this.lastNode.type===r.ElementType.Comment){this.lastNode.data+=e;return}var a=new i.Comment(e);this.addNode(a);this.lastNode=a};DomHandler.prototype.oncommentend=function(){this.lastNode=null};DomHandler.prototype.oncdatastart=function(){var e=new i.Text("");var a=new i.CDATA([e]);this.addNode(a);e.parent=a;this.lastNode=e};DomHandler.prototype.oncdataend=function(){this.lastNode=null};DomHandler.prototype.onprocessinginstruction=function(e,a){var p=new i.ProcessingInstruction(e,a);this.addNode(p)};DomHandler.prototype.handleCallback=function(e){if(typeof this.callback==="function"){this.callback(e,this.dom)}else if(e){throw e}};DomHandler.prototype.addNode=function(e){var a=this.tagStack[this.tagStack.length-1];var p=a.children[a.children.length-1];if(this.options.withStartIndices){e.startIndex=this.parser.startIndex}if(this.options.withEndIndices){e.endIndex=this.parser.endIndex}a.children.push(e);if(p){e.prev=p;p.next=e}e.parent=a;this.lastNode=null};return DomHandler}();a.DomHandler=o;a["default"]=o},2446:function(e,a,p){"use strict";var d=this&&this.__extends||function(){var extendStatics=function(e,a){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var p in a)if(Object.prototype.hasOwnProperty.call(a,p))e[p]=a[p]};return extendStatics(e,a)};return function(e,a){if(typeof a!=="function"&&a!==null)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");extendStatics(e,a);function __(){this.constructor=e}e.prototype=a===null?Object.create(a):(__.prototype=a.prototype,new __)}}();var t=this&&this.__assign||function(){t=Object.assign||function(e){for(var a,p=1,d=arguments.length;p<d;p++){a=arguments[p];for(var t in a)if(Object.prototype.hasOwnProperty.call(a,t))e[t]=a[t]}return e};return t.apply(this,arguments)};Object.defineProperty(a,"__esModule",{value:true});a.cloneNode=a.hasChildren=a.isDocument=a.isDirective=a.isComment=a.isText=a.isCDATA=a.isTag=a.Element=a.Document=a.CDATA=a.NodeWithChildren=a.ProcessingInstruction=a.Comment=a.Text=a.DataNode=a.Node=void 0;var r=p(1108);var i=function(){function Node(){this.parent=null;this.prev=null;this.next=null;this.startIndex=null;this.endIndex=null}Object.defineProperty(Node.prototype,"parentNode",{get:function(){return this.parent},set:function(e){this.parent=e},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"previousSibling",{get:function(){return this.prev},set:function(e){this.prev=e},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"nextSibling",{get:function(){return this.next},set:function(e){this.next=e},enumerable:false,configurable:true});Node.prototype.cloneNode=function(e){if(e===void 0){e=false}return cloneNode(this,e)};return Node}();a.Node=i;var l=function(e){d(DataNode,e);function DataNode(a){var p=e.call(this)||this;p.data=a;return p}Object.defineProperty(DataNode.prototype,"nodeValue",{get:function(){return this.data},set:function(e){this.data=e},enumerable:false,configurable:true});return DataNode}(i);a.DataNode=l;var o=function(e){d(Text,e);function Text(){var a=e!==null&&e.apply(this,arguments)||this;a.type=r.ElementType.Text;return a}Object.defineProperty(Text.prototype,"nodeType",{get:function(){return 3},enumerable:false,configurable:true});return Text}(l);a.Text=o;var m=function(e){d(Comment,e);function Comment(){var a=e!==null&&e.apply(this,arguments)||this;a.type=r.ElementType.Comment;return a}Object.defineProperty(Comment.prototype,"nodeType",{get:function(){return 8},enumerable:false,configurable:true});return Comment}(l);a.Comment=m;var n=function(e){d(ProcessingInstruction,e);function ProcessingInstruction(a,p){var d=e.call(this,p)||this;d.name=a;d.type=r.ElementType.Directive;return d}Object.defineProperty(ProcessingInstruction.prototype,"nodeType",{get:function(){return 1},enumerable:false,configurable:true});return ProcessingInstruction}(l);a.ProcessingInstruction=n;var s=function(e){d(NodeWithChildren,e);function NodeWithChildren(a){var p=e.call(this)||this;p.children=a;return p}Object.defineProperty(NodeWithChildren.prototype,"firstChild",{get:function(){var e;return(e=this.children[0])!==null&&e!==void 0?e:null},enumerable:false,configurable:true});Object.defineProperty(NodeWithChildren.prototype,"lastChild",{get:function(){return this.children.length>0?this.children[this.children.length-1]:null},enumerable:false,configurable:true});Object.defineProperty(NodeWithChildren.prototype,"childNodes",{get:function(){return this.children},set:function(e){this.children=e},enumerable:false,configurable:true});return NodeWithChildren}(i);a.NodeWithChildren=s;var u=function(e){d(CDATA,e);function CDATA(){var a=e!==null&&e.apply(this,arguments)||this;a.type=r.ElementType.CDATA;return a}Object.defineProperty(CDATA.prototype,"nodeType",{get:function(){return 4},enumerable:false,configurable:true});return CDATA}(s);a.CDATA=u;var c=function(e){d(Document,e);function Document(){var a=e!==null&&e.apply(this,arguments)||this;a.type=r.ElementType.Root;return a}Object.defineProperty(Document.prototype,"nodeType",{get:function(){return 9},enumerable:false,configurable:true});return Document}(s);a.Document=c;var f=function(e){d(Element,e);function Element(a,p,d,t){if(d===void 0){d=[]}if(t===void 0){t=a==="script"?r.ElementType.Script:a==="style"?r.ElementType.Style:r.ElementType.Tag}var i=e.call(this,d)||this;i.name=a;i.attribs=p;i.type=t;return i}Object.defineProperty(Element.prototype,"nodeType",{get:function(){return 1},enumerable:false,configurable:true});Object.defineProperty(Element.prototype,"tagName",{get:function(){return this.name},set:function(e){this.name=e},enumerable:false,configurable:true});Object.defineProperty(Element.prototype,"attributes",{get:function(){var e=this;return Object.keys(this.attribs).map((function(a){var p,d;return{name:a,value:e.attribs[a],namespace:(p=e["x-attribsNamespace"])===null||p===void 0?void 0:p[a],prefix:(d=e["x-attribsPrefix"])===null||d===void 0?void 0:d[a]}}))},enumerable:false,configurable:true});return Element}(s);a.Element=f;function isTag(e){return(0,r.isTag)(e)}a.isTag=isTag;function isCDATA(e){return e.type===r.ElementType.CDATA}a.isCDATA=isCDATA;function isText(e){return e.type===r.ElementType.Text}a.isText=isText;function isComment(e){return e.type===r.ElementType.Comment}a.isComment=isComment;function isDirective(e){return e.type===r.ElementType.Directive}a.isDirective=isDirective;function isDocument(e){return e.type===r.ElementType.Root}a.isDocument=isDocument;function hasChildren(e){return Object.prototype.hasOwnProperty.call(e,"children")}a.hasChildren=hasChildren;function cloneNode(e,a){if(a===void 0){a=false}var p;if(isText(e)){p=new o(e.data)}else if(isComment(e)){p=new m(e.data)}else if(isTag(e)){var d=a?cloneChildren(e.children):[];var r=new f(e.name,t({},e.attribs),d);d.forEach((function(e){return e.parent=r}));if(e.namespace!=null){r.namespace=e.namespace}if(e["x-attribsNamespace"]){r["x-attribsNamespace"]=t({},e["x-attribsNamespace"])}if(e["x-attribsPrefix"]){r["x-attribsPrefix"]=t({},e["x-attribsPrefix"])}p=r}else if(isCDATA(e)){var d=a?cloneChildren(e.children):[];var i=new u(d);d.forEach((function(e){return e.parent=i}));p=i}else if(isDocument(e)){var d=a?cloneChildren(e.children):[];var l=new c(d);d.forEach((function(e){return e.parent=l}));if(e["x-mode"]){l["x-mode"]=e["x-mode"]}p=l}else if(isDirective(e)){var s=new n(e.name,e.data);if(e["x-name"]!=null){s["x-name"]=e["x-name"];s["x-publicId"]=e["x-publicId"];s["x-systemId"]=e["x-systemId"]}p=s}else{throw new Error("Not implemented yet: ".concat(e.type))}p.startIndex=e.startIndex;p.endIndex=e.endIndex;if(e.sourceCodeLocation!=null){p.sourceCodeLocation=e.sourceCodeLocation}return p}a.cloneNode=cloneNode;function cloneChildren(e){var a=e.map((function(e){return cloneNode(e,true)}));for(var p=1;p<a.length;p++){a[p].prev=a[p-1];a[p-1].next=a[p]}return a}},2260:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.getFeed=void 0;var d=p(7252);var t=p(2262);function getFeed(e){var a=getOneElement(isValidFeed,e);return!a?null:a.name==="feed"?getAtomFeed(a):getRssFeed(a)}a.getFeed=getFeed;function getAtomFeed(e){var a;var p=e.children;var d={type:"atom",items:(0,t.getElementsByTagName)("entry",p).map((function(e){var a;var p=e.children;var d={media:getMediaElements(p)};addConditionally(d,"id","id",p);addConditionally(d,"title","title",p);var t=(a=getOneElement("link",p))===null||a===void 0?void 0:a.attribs["href"];if(t){d.link=t}var r=fetch("summary",p)||fetch("content",p);if(r){d.description=r}var i=fetch("updated",p);if(i){d.pubDate=new Date(i)}return d}))};addConditionally(d,"id","id",p);addConditionally(d,"title","title",p);var r=(a=getOneElement("link",p))===null||a===void 0?void 0:a.attribs["href"];if(r){d.link=r}addConditionally(d,"description","subtitle",p);var i=fetch("updated",p);if(i){d.updated=new Date(i)}addConditionally(d,"author","email",p,true);return d}function getRssFeed(e){var a,p;var d=(p=(a=getOneElement("channel",e.children))===null||a===void 0?void 0:a.children)!==null&&p!==void 0?p:[];var r={type:e.name.substr(0,3),id:"",items:(0,t.getElementsByTagName)("item",e.children).map((function(e){var a=e.children;var p={media:getMediaElements(a)};addConditionally(p,"id","guid",a);addConditionally(p,"title","title",a);addConditionally(p,"link","link",a);addConditionally(p,"description","description",a);var d=fetch("pubDate",a)||fetch("dc:date",a);if(d)p.pubDate=new Date(d);return p}))};addConditionally(r,"title","title",d);addConditionally(r,"link","link",d);addConditionally(r,"description","description",d);var i=fetch("lastBuildDate",d);if(i){r.updated=new Date(i)}addConditionally(r,"author","managingEditor",d,true);return r}var r=["url","type","lang"];var i=["fileSize","bitrate","framerate","samplingrate","channels","duration","height","width"];function getMediaElements(e){return(0,t.getElementsByTagName)("media:content",e).map((function(e){var a=e.attribs;var p={medium:a["medium"],isDefault:!!a["isDefault"]};for(var d=0,t=r;d<t.length;d++){var l=t[d];if(a[l]){p[l]=a[l]}}for(var o=0,m=i;o<m.length;o++){var l=m[o];if(a[l]){p[l]=parseInt(a[l],10)}}if(a["expression"]){p.expression=a["expression"]}return p}))}function getOneElement(e,a){return(0,t.getElementsByTagName)(e,a,true,1)[0]}function fetch(e,a,p){if(p===void 0){p=false}return(0,d.textContent)((0,t.getElementsByTagName)(e,a,p,1)).trim()}function addConditionally(e,a,p,d,t){if(t===void 0){t=false}var r=fetch(p,d,t);if(r)e[a]=r}function isValidFeed(e){return e==="rss"||e==="feed"||e==="rdf:RDF"}},7776:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.uniqueSort=a.compareDocumentPosition=a.DocumentPosition=a.removeSubsets=void 0;var d=p(7792);function removeSubsets(e){var a=e.length;while(--a>=0){var p=e[a];if(a>0&&e.lastIndexOf(p,a-1)>=0){e.splice(a,1);continue}for(var d=p.parent;d;d=d.parent){if(e.includes(d)){e.splice(a,1);break}}}return e}a.removeSubsets=removeSubsets;var t;(function(e){e[e["DISCONNECTED"]=1]="DISCONNECTED";e[e["PRECEDING"]=2]="PRECEDING";e[e["FOLLOWING"]=4]="FOLLOWING";e[e["CONTAINS"]=8]="CONTAINS";e[e["CONTAINED_BY"]=16]="CONTAINED_BY"})(t=a.DocumentPosition||(a.DocumentPosition={}));function compareDocumentPosition(e,a){var p=[];var r=[];if(e===a){return 0}var i=(0,d.hasChildren)(e)?e:e.parent;while(i){p.unshift(i);i=i.parent}i=(0,d.hasChildren)(a)?a:a.parent;while(i){r.unshift(i);i=i.parent}var l=Math.min(p.length,r.length);var o=0;while(o<l&&p[o]===r[o]){o++}if(o===0){return t.DISCONNECTED}var m=p[o-1];var n=m.children;var s=p[o];var u=r[o];if(n.indexOf(s)>n.indexOf(u)){if(m===a){return t.FOLLOWING|t.CONTAINED_BY}return t.FOLLOWING}if(m===e){return t.PRECEDING|t.CONTAINS}return t.PRECEDING}a.compareDocumentPosition=compareDocumentPosition;function uniqueSort(e){e=e.filter((function(e,a,p){return!p.includes(e,a+1)}));e.sort((function(e,a){var p=compareDocumentPosition(e,a);if(p&t.PRECEDING){return-1}else if(p&t.FOLLOWING){return 1}return 0}));return e}a.uniqueSort=uniqueSort},2357:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__exportStar||function(e,a){for(var p in e)if(p!=="default"&&!Object.prototype.hasOwnProperty.call(a,p))d(a,e,p)};Object.defineProperty(a,"__esModule",{value:true});a.hasChildren=a.isDocument=a.isComment=a.isText=a.isCDATA=a.isTag=void 0;t(p(7252),a);t(p(9667),a);t(p(4456),a);t(p(7433),a);t(p(2262),a);t(p(7776),a);t(p(2260),a);var r=p(7792);Object.defineProperty(a,"isTag",{enumerable:true,get:function(){return r.isTag}});Object.defineProperty(a,"isCDATA",{enumerable:true,get:function(){return r.isCDATA}});Object.defineProperty(a,"isText",{enumerable:true,get:function(){return r.isText}});Object.defineProperty(a,"isComment",{enumerable:true,get:function(){return r.isComment}});Object.defineProperty(a,"isDocument",{enumerable:true,get:function(){return r.isDocument}});Object.defineProperty(a,"hasChildren",{enumerable:true,get:function(){return r.hasChildren}})},2262:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.getElementsByTagType=a.getElementsByTagName=a.getElementById=a.getElements=a.testElement=void 0;var d=p(7792);var t=p(7433);var r={tag_name:function(e){if(typeof e==="function"){return function(a){return(0,d.isTag)(a)&&e(a.name)}}else if(e==="*"){return d.isTag}return function(a){return(0,d.isTag)(a)&&a.name===e}},tag_type:function(e){if(typeof e==="function"){return function(a){return e(a.type)}}return function(a){return a.type===e}},tag_contains:function(e){if(typeof e==="function"){return function(a){return(0,d.isText)(a)&&e(a.data)}}return function(a){return(0,d.isText)(a)&&a.data===e}}};function getAttribCheck(e,a){if(typeof a==="function"){return function(p){return(0,d.isTag)(p)&&a(p.attribs[e])}}return function(p){return(0,d.isTag)(p)&&p.attribs[e]===a}}function combineFuncs(e,a){return function(p){return e(p)||a(p)}}function compileTest(e){var a=Object.keys(e).map((function(a){var p=e[a];return Object.prototype.hasOwnProperty.call(r,a)?r[a](p):getAttribCheck(a,p)}));return a.length===0?null:a.reduce(combineFuncs)}function testElement(e,a){var p=compileTest(e);return p?p(a):true}a.testElement=testElement;function getElements(e,a,p,d){if(d===void 0){d=Infinity}var r=compileTest(e);return r?(0,t.filter)(r,a,p,d):[]}a.getElements=getElements;function getElementById(e,a,p){if(p===void 0){p=true}if(!Array.isArray(a))a=[a];return(0,t.findOne)(getAttribCheck("id",e),a,p)}a.getElementById=getElementById;function getElementsByTagName(e,a,p,d){if(p===void 0){p=true}if(d===void 0){d=Infinity}return(0,t.filter)(r["tag_name"](e),a,p,d)}a.getElementsByTagName=getElementsByTagName;function getElementsByTagType(e,a,p,d){if(p===void 0){p=true}if(d===void 0){d=Infinity}return(0,t.filter)(r["tag_type"](e),a,p,d)}a.getElementsByTagType=getElementsByTagType},4456:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.prepend=a.prependChild=a.append=a.appendChild=a.replaceElement=a.removeElement=void 0;function removeElement(e){if(e.prev)e.prev.next=e.next;if(e.next)e.next.prev=e.prev;if(e.parent){var a=e.parent.children;var p=a.lastIndexOf(e);if(p>=0){a.splice(p,1)}}e.next=null;e.prev=null;e.parent=null}a.removeElement=removeElement;function replaceElement(e,a){var p=a.prev=e.prev;if(p){p.next=a}var d=a.next=e.next;if(d){d.prev=a}var t=a.parent=e.parent;if(t){var r=t.children;r[r.lastIndexOf(e)]=a;e.parent=null}}a.replaceElement=replaceElement;function appendChild(e,a){removeElement(a);a.next=null;a.parent=e;if(e.children.push(a)>1){var p=e.children[e.children.length-2];p.next=a;a.prev=p}else{a.prev=null}}a.appendChild=appendChild;function append(e,a){removeElement(a);var p=e.parent;var d=e.next;a.next=d;a.prev=e;e.next=a;a.parent=p;if(d){d.prev=a;if(p){var t=p.children;t.splice(t.lastIndexOf(d),0,a)}}else if(p){p.children.push(a)}}a.append=append;function prependChild(e,a){removeElement(a);a.parent=e;a.prev=null;if(e.children.unshift(a)!==1){var p=e.children[1];p.prev=a;a.next=p}else{a.next=null}}a.prependChild=prependChild;function prepend(e,a){removeElement(a);var p=e.parent;if(p){var d=p.children;d.splice(d.indexOf(e),0,a)}if(e.prev){e.prev.next=a}a.parent=p;a.prev=e.prev;a.next=e;e.prev=a}a.prepend=prepend},7433:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.findAll=a.existsOne=a.findOne=a.findOneChild=a.find=a.filter=void 0;var d=p(7792);function filter(e,a,p,d){if(p===void 0){p=true}if(d===void 0){d=Infinity}return find(e,Array.isArray(a)?a:[a],p,d)}a.filter=filter;function find(e,a,p,t){var r=[];var i=[a];var l=[0];for(;;){if(l[0]>=i[0].length){if(l.length===1){return r}i.shift();l.shift();continue}var o=i[0][l[0]++];if(e(o)){r.push(o);if(--t<=0)return r}if(p&&(0,d.hasChildren)(o)&&o.children.length>0){l.unshift(0);i.unshift(o.children)}}}a.find=find;function findOneChild(e,a){return a.find(e)}a.findOneChild=findOneChild;function findOne(e,a,p){if(p===void 0){p=true}var t=null;for(var r=0;r<a.length&&!t;r++){var i=a[r];if(!(0,d.isTag)(i)){continue}else if(e(i)){t=i}else if(p&&i.children.length>0){t=findOne(e,i.children,true)}}return t}a.findOne=findOne;function existsOne(e,a){return a.some((function(a){return(0,d.isTag)(a)&&(e(a)||existsOne(e,a.children))}))}a.existsOne=existsOne;function findAll(e,a){var p=[];var t=[a];var r=[0];for(;;){if(r[0]>=t[0].length){if(t.length===1){return p}t.shift();r.shift();continue}var i=t[0][r[0]++];if(!(0,d.isTag)(i))continue;if(e(i))p.push(i);if(i.children.length>0){r.unshift(0);t.unshift(i.children)}}}a.findAll=findAll},7252:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.innerText=a.textContent=a.getText=a.getInnerHTML=a.getOuterHTML=void 0;var t=p(7792);var r=d(p(9943));var i=p(1108);function getOuterHTML(e,a){return(0,r.default)(e,a)}a.getOuterHTML=getOuterHTML;function getInnerHTML(e,a){return(0,t.hasChildren)(e)?e.children.map((function(e){return getOuterHTML(e,a)})).join(""):""}a.getInnerHTML=getInnerHTML;function getText(e){if(Array.isArray(e))return e.map(getText).join("");if((0,t.isTag)(e))return e.name==="br"?"\\n":getText(e.children);if((0,t.isCDATA)(e))return getText(e.children);if((0,t.isText)(e))return e.data;return""}a.getText=getText;function textContent(e){if(Array.isArray(e))return e.map(textContent).join("");if((0,t.hasChildren)(e)&&!(0,t.isComment)(e)){return textContent(e.children)}if((0,t.isText)(e))return e.data;return""}a.textContent=textContent;function innerText(e){if(Array.isArray(e))return e.map(innerText).join("");if((0,t.hasChildren)(e)&&(e.type===i.ElementType.Tag||(0,t.isCDATA)(e))){return innerText(e.children)}if((0,t.isText)(e))return e.data;return""}a.innerText=innerText},9667:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.prevElementSibling=a.nextElementSibling=a.getName=a.hasAttrib=a.getAttributeValue=a.getSiblings=a.getParent=a.getChildren=void 0;var d=p(7792);function getChildren(e){return(0,d.hasChildren)(e)?e.children:[]}a.getChildren=getChildren;function getParent(e){return e.parent||null}a.getParent=getParent;function getSiblings(e){var a,p;var d=getParent(e);if(d!=null)return getChildren(d);var t=[e];var r=e.prev,i=e.next;while(r!=null){t.unshift(r);a=r,r=a.prev}while(i!=null){t.push(i);p=i,i=p.next}return t}a.getSiblings=getSiblings;function getAttributeValue(e,a){var p;return(p=e.attribs)===null||p===void 0?void 0:p[a]}a.getAttributeValue=getAttributeValue;function hasAttrib(e,a){return e.attribs!=null&&Object.prototype.hasOwnProperty.call(e.attribs,a)&&e.attribs[a]!=null}a.hasAttrib=hasAttrib;function getName(e){return e.name}a.getName=getName;function nextElementSibling(e){var a;var p=e.next;while(p!==null&&!(0,d.isTag)(p))a=p,p=a.next;return p}a.nextElementSibling=nextElementSibling;function prevElementSibling(e){var a;var p=e.prev;while(p!==null&&!(0,d.isTag)(p))a=p,p=a.prev;return p}a.prevElementSibling=prevElementSibling},1469:function(e,a,p){"use strict";var d=this&&this.__createBinding||(Object.create?function(e,a,p,d){if(d===undefined)d=p;var t=Object.getOwnPropertyDescriptor(a,p);if(!t||("get"in t?!a.__esModule:t.writable||t.configurable)){t={enumerable:true,get:function(){return a[p]}}}Object.defineProperty(e,d,t)}:function(e,a,p,d){if(d===undefined)d=p;e[d]=a[p]});var t=this&&this.__setModuleDefault||(Object.create?function(e,a){Object.defineProperty(e,"default",{enumerable:true,value:a})}:function(e,a){e["default"]=a});var r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var a={};if(e!=null)for(var p in e)if(p!=="default"&&Object.prototype.hasOwnProperty.call(e,p))d(a,e,p);t(a,e);return a};var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.decodeXML=a.decodeHTMLStrict=a.decodeHTMLAttribute=a.decodeHTML=a.determineBranch=a.EntityDecoder=a.DecodingMode=a.BinTrieFlags=a.fromCodePoint=a.replaceCodePoint=a.decodeCodePoint=a.xmlDecodeTree=a.htmlDecodeTree=void 0;var l=i(p(828));a.htmlDecodeTree=l.default;var o=i(p(2060));a.xmlDecodeTree=o.default;var m=r(p(4487));a.decodeCodePoint=m.default;var n=p(4487);Object.defineProperty(a,"replaceCodePoint",{enumerable:true,get:function(){return n.replaceCodePoint}});Object.defineProperty(a,"fromCodePoint",{enumerable:true,get:function(){return n.fromCodePoint}});var s;(function(e){e[e["NUM"]=35]="NUM";e[e["SEMI"]=59]="SEMI";e[e["EQUALS"]=61]="EQUALS";e[e["ZERO"]=48]="ZERO";e[e["NINE"]=57]="NINE";e[e["LOWER_A"]=97]="LOWER_A";e[e["LOWER_F"]=102]="LOWER_F";e[e["LOWER_X"]=120]="LOWER_X";e[e["LOWER_Z"]=122]="LOWER_Z";e[e["UPPER_A"]=65]="UPPER_A";e[e["UPPER_F"]=70]="UPPER_F";e[e["UPPER_Z"]=90]="UPPER_Z"})(s||(s={}));var u=32;var c;(function(e){e[e["VALUE_LENGTH"]=49152]="VALUE_LENGTH";e[e["BRANCH_LENGTH"]=16256]="BRANCH_LENGTH";e[e["JUMP_TABLE"]=127]="JUMP_TABLE"})(c=a.BinTrieFlags||(a.BinTrieFlags={}));function isNumber(e){return e>=s.ZERO&&e<=s.NINE}function isHexadecimalCharacter(e){return e>=s.UPPER_A&&e<=s.UPPER_F||e>=s.LOWER_A&&e<=s.LOWER_F}function isAsciiAlphaNumeric(e){return e>=s.UPPER_A&&e<=s.UPPER_Z||e>=s.LOWER_A&&e<=s.LOWER_Z||isNumber(e)}function isEntityInAttributeInvalidEnd(e){return e===s.EQUALS||isAsciiAlphaNumeric(e)}var f;(function(e){e[e["EntityStart"]=0]="EntityStart";e[e["NumericStart"]=1]="NumericStart";e[e["NumericDecimal"]=2]="NumericDecimal";e[e["NumericHex"]=3]="NumericHex";e[e["NamedEntity"]=4]="NamedEntity"})(f||(f={}));var v;(function(e){e[e["Legacy"]=0]="Legacy";e[e["Strict"]=1]="Strict";e[e["Attribute"]=2]="Attribute"})(v=a.DecodingMode||(a.DecodingMode={}));var h=function(){function EntityDecoder(e,a,p){this.decodeTree=e;this.emitCodePoint=a;this.errors=p;this.state=f.EntityStart;this.consumed=1;this.result=0;this.treeIndex=0;this.excess=1;this.decodeMode=v.Strict}EntityDecoder.prototype.startEntity=function(e){this.decodeMode=e;this.state=f.EntityStart;this.result=0;this.treeIndex=0;this.excess=1;this.consumed=1};EntityDecoder.prototype.write=function(e,a){switch(this.state){case f.EntityStart:{if(e.charCodeAt(a)===s.NUM){this.state=f.NumericStart;this.consumed+=1;return this.stateNumericStart(e,a+1)}this.state=f.NamedEntity;return this.stateNamedEntity(e,a)}case f.NumericStart:{return this.stateNumericStart(e,a)}case f.NumericDecimal:{return this.stateNumericDecimal(e,a)}case f.NumericHex:{return this.stateNumericHex(e,a)}case f.NamedEntity:{return this.stateNamedEntity(e,a)}}};EntityDecoder.prototype.stateNumericStart=function(e,a){if(a>=e.length){return-1}if((e.charCodeAt(a)|u)===s.LOWER_X){this.state=f.NumericHex;this.consumed+=1;return this.stateNumericHex(e,a+1)}this.state=f.NumericDecimal;return this.stateNumericDecimal(e,a)};EntityDecoder.prototype.addToNumericResult=function(e,a,p,d){if(a!==p){var t=p-a;this.result=this.result*Math.pow(d,t)+parseInt(e.substr(a,t),d);this.consumed+=t}};EntityDecoder.prototype.stateNumericHex=function(e,a){var p=a;while(a<e.length){var d=e.charCodeAt(a);if(isNumber(d)||isHexadecimalCharacter(d)){a+=1}else{this.addToNumericResult(e,p,a,16);return this.emitNumericEntity(d,3)}}this.addToNumericResult(e,p,a,16);return-1};EntityDecoder.prototype.stateNumericDecimal=function(e,a){var p=a;while(a<e.length){var d=e.charCodeAt(a);if(isNumber(d)){a+=1}else{this.addToNumericResult(e,p,a,10);return this.emitNumericEntity(d,2)}}this.addToNumericResult(e,p,a,10);return-1};EntityDecoder.prototype.emitNumericEntity=function(e,a){var p;if(this.consumed<=a){(p=this.errors)===null||p===void 0?void 0:p.absenceOfDigitsInNumericCharacterReference(this.consumed);return 0}if(e===s.SEMI){this.consumed+=1}else if(this.decodeMode===v.Strict){return 0}this.emitCodePoint((0,m.replaceCodePoint)(this.result),this.consumed);if(this.errors){if(e!==s.SEMI){this.errors.missingSemicolonAfterCharacterReference()}this.errors.validateNumericCharacterReference(this.result)}return this.consumed};EntityDecoder.prototype.stateNamedEntity=function(e,a){var p=this.decodeTree;var d=p[this.treeIndex];var t=(d&c.VALUE_LENGTH)>>14;for(;a<e.length;a++,this.excess++){var r=e.charCodeAt(a);this.treeIndex=determineBranch(p,d,this.treeIndex+Math.max(1,t),r);if(this.treeIndex<0){return this.result===0||this.decodeMode===v.Attribute&&(t===0||isEntityInAttributeInvalidEnd(r))?0:this.emitNotTerminatedNamedEntity()}d=p[this.treeIndex];t=(d&c.VALUE_LENGTH)>>14;if(t!==0){if(r===s.SEMI){return this.emitNamedEntityData(this.treeIndex,t,this.consumed+this.excess)}if(this.decodeMode!==v.Strict){this.result=this.treeIndex;this.consumed+=this.excess;this.excess=0}}}return-1};EntityDecoder.prototype.emitNotTerminatedNamedEntity=function(){var e;var a=this,p=a.result,d=a.decodeTree;var t=(d[p]&c.VALUE_LENGTH)>>14;this.emitNamedEntityData(p,t,this.consumed);(e=this.errors)===null||e===void 0?void 0:e.missingSemicolonAfterCharacterReference();return this.consumed};EntityDecoder.prototype.emitNamedEntityData=function(e,a,p){var d=this.decodeTree;this.emitCodePoint(a===1?d[e]&~c.VALUE_LENGTH:d[e+1],p);if(a===3){this.emitCodePoint(d[e+2],p)}return p};EntityDecoder.prototype.end=function(){var e;switch(this.state){case f.NamedEntity:{return this.result!==0&&(this.decodeMode!==v.Attribute||this.result===this.treeIndex)?this.emitNotTerminatedNamedEntity():0}case f.NumericDecimal:{return this.emitNumericEntity(0,2)}case f.NumericHex:{return this.emitNumericEntity(0,3)}case f.NumericStart:{(e=this.errors)===null||e===void 0?void 0:e.absenceOfDigitsInNumericCharacterReference(this.consumed);return 0}case f.EntityStart:{return 0}}};return EntityDecoder}();a.EntityDecoder=h;function getDecoder(e){var a="";var p=new h(e,(function(e){return a+=(0,m.fromCodePoint)(e)}));return function decodeWithTrie(e,d){var t=0;var r=0;while((r=e.indexOf("&",r))>=0){a+=e.slice(t,r);p.startEntity(d);var i=p.write(e,r+1);if(i<0){t=r+p.end();break}t=r+i;r=i===0?t+1:t}var l=a+e.slice(t);a="";return l}}function determineBranch(e,a,p,d){var t=(a&c.BRANCH_LENGTH)>>7;var r=a&c.JUMP_TABLE;if(t===0){return r!==0&&d===r?p:-1}if(r){var i=d-r;return i<0||i>=t?-1:e[p+i]-1}var l=p;var o=l+t-1;while(l<=o){var m=l+o>>>1;var n=e[m];if(n<d){l=m+1}else if(n>d){o=m-1}else{return e[m+t]}}return-1}a.determineBranch=determineBranch;var g=getDecoder(l.default);var w=getDecoder(o.default);function decodeHTML(e,a){if(a===void 0){a=v.Legacy}return g(e,a)}a.decodeHTML=decodeHTML;function decodeHTMLAttribute(e){return g(e,v.Attribute)}a.decodeHTMLAttribute=decodeHTMLAttribute;function decodeHTMLStrict(e){return g(e,v.Strict)}a.decodeHTMLStrict=decodeHTMLStrict;function decodeXML(e){return w(e,v.Strict)}a.decodeXML=decodeXML},4487:(e,a)=>{"use strict";var p;Object.defineProperty(a,"__esModule",{value:true});a.replaceCodePoint=a.fromCodePoint=void 0;var d=new Map([[0,65533],[128,8364],[130,8218],[131,402],[132,8222],[133,8230],[134,8224],[135,8225],[136,710],[137,8240],[138,352],[139,8249],[140,338],[142,381],[145,8216],[146,8217],[147,8220],[148,8221],[149,8226],[150,8211],[151,8212],[152,732],[153,8482],[154,353],[155,8250],[156,339],[158,382],[159,376]]);a.fromCodePoint=(p=String.fromCodePoint)!==null&&p!==void 0?p:function(e){var a="";if(e>65535){e-=65536;a+=String.fromCharCode(e>>>10&1023|55296);e=56320|e&1023}a+=String.fromCharCode(e);return a};function replaceCodePoint(e){var a;if(e>=55296&&e<=57343||e>1114111){return 65533}return(a=d.get(e))!==null&&a!==void 0?a:e}a.replaceCodePoint=replaceCodePoint;function decodeCodePoint(e){return(0,a.fromCodePoint)(replaceCodePoint(e))}a["default"]=decodeCodePoint},6549:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.encodeNonAsciiHTML=a.encodeHTML=void 0;var t=d(p(7261));var r=p(6104);var i=/[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;function encodeHTML(e){return encodeHTMLTrieRe(i,e)}a.encodeHTML=encodeHTML;function encodeNonAsciiHTML(e){return encodeHTMLTrieRe(r.xmlReplacer,e)}a.encodeNonAsciiHTML=encodeNonAsciiHTML;function encodeHTMLTrieRe(e,a){var p="";var d=0;var i;while((i=e.exec(a))!==null){var l=i.index;p+=a.substring(d,l);var o=a.charCodeAt(l);var m=t.default.get(o);if(typeof m==="object"){if(l+1<a.length){var n=a.charCodeAt(l+1);var s=typeof m.n==="number"?m.n===n?m.o:undefined:m.n.get(n);if(s!==undefined){p+=s;d=e.lastIndex+=1;continue}}m=m.v}if(m!==undefined){p+=m;d=l+1}else{var u=(0,r.getCodePoint)(a,l);p+="&#x".concat(u.toString(16),";");d=e.lastIndex+=Number(u!==o)}}return p+a.substr(d)}},6104:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.escapeText=a.escapeAttribute=a.escapeUTF8=a.escape=a.encodeXML=a.getCodePoint=a.xmlReplacer=void 0;a.xmlReplacer=/["&\'<>$\\x80-\\uFFFF]/g;var p=new Map([[34,"&quot;"],[38,"&amp;"],[39,"&apos;"],[60,"&lt;"],[62,"&gt;"]]);a.getCodePoint=String.prototype.codePointAt!=null?function(e,a){return e.codePointAt(a)}:function(e,a){return(e.charCodeAt(a)&64512)===55296?(e.charCodeAt(a)-55296)*1024+e.charCodeAt(a+1)-56320+65536:e.charCodeAt(a)};function encodeXML(e){var d="";var t=0;var r;while((r=a.xmlReplacer.exec(e))!==null){var i=r.index;var l=e.charCodeAt(i);var o=p.get(l);if(o!==undefined){d+=e.substring(t,i)+o;t=i+1}else{d+="".concat(e.substring(t,i),"&#x").concat((0,a.getCodePoint)(e,i).toString(16),";");t=a.xmlReplacer.lastIndex+=Number((l&64512)===55296)}}return d+e.substr(t)}a.encodeXML=encodeXML;a.escape=encodeXML;function getEscaper(e,a){return function escape(p){var d;var t=0;var r="";while(d=e.exec(p)){if(t!==d.index){r+=p.substring(t,d.index)}r+=a.get(d[0].charCodeAt(0));t=d.index+1}return r+p.substring(t)}}a.escapeUTF8=getEscaper(/[&<>\'"]/g,p);a.escapeAttribute=getEscaper(/["&\\u00A0]/g,new Map([[34,"&quot;"],[38,"&amp;"],[160,"&nbsp;"]]));a.escapeText=getEscaper(/[&<>\\u00A0]/g,new Map([[38,"&amp;"],[60,"&lt;"],[62,"&gt;"],[160,"&nbsp;"]]))},828:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a["default"]=new Uint16Array(\'ᵁ<Õıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\0\\0\\0\\0\\0\\0ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms¦³¹ÈÏlig耻Æ䃆P耻&䀦cute耻Á䃁reve;䄂Āiyx}rc耻Â䃂;䐐r;쀀𝔄rave耻À䃀pha;䎑acr;䄀d;橓Āgp¡on;䄄f;쀀𝔸plyFunction;恡ing耻Å䃅Ācs¾Ãr;쀀𝒜ign;扔ilde耻Ã䃃ml耻Ä䃄ЀaceforsuåûþėĜĢħĪĀcrêòkslash;或Ŷöø;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀𝔅pf;쀀𝔹eve;䋘còēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻©䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻Ç䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷òſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀𝒞pĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀𝔇Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\0\\0\\0͔͂\\0Ѕf;쀀𝔻ƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegraìȹoɴ͹\\0\\0ͻ»͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔eåˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\0\\0ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\0ц\\0ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\0ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀𝒟rok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻Ð䃐cute耻É䃉ƀaiyӒӗӜron;䄚rc耻Ê䃊;䐭ot;䄖r;쀀𝔈rave耻È䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\0\\0ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀𝔼silon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻Ë䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀𝔉lledɓ֗\\0\\0֣mallSquare;旼erySmallSquare;斪Ͱֺ\\0ֿ\\0\\0ׄf;쀀𝔽All;戀riertrf;愱cò׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀𝔊;拙pf;쀀𝔾eater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀𝒢;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\0ڲf;愍izontalLine;攀Āctۃۅòکrok;䄦mpńېۘownHumðįqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻Í䃍Āiyܓܘrc耻Î䃎;䐘ot;䄰r;愑rave耻Ì䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lieóϝǴ݉\\0ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀𝕀a;䎙cr;愐ilde;䄨ǫޚ\\0ޞcy;䐆l耻Ï䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀𝔍pf;쀀𝕁ǣ߇\\0ߌr;쀀𝒥rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀𝔎pf;쀀𝕂cr;쀀𝒦րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\0ࣃbleBracket;柦nǔࣈ\\0࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ightáΜs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀𝔏Ā;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊightáοightáϊf;쀀𝕃erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂòࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀𝔐nusPlus;戓pf;쀀𝕄cò੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘ë૙eryThiî૙tedĀGL૸ଆreaterGreateòٳessLesóੈLine;䀊r;쀀𝔑ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀𝒩ilde耻Ñ䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻Ó䃓Āiy෎ීrc耻Ô䃔;䐞blac;䅐r;쀀𝔒rave耻Ò䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀𝕆enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀𝒪ash耻Ø䃘iŬื฼de耻Õ䃕es;樷ml耻Ö䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀𝔓i;䎦;䎠usMinus;䂱Āipຢອncareplanåڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀𝒫;䎨ȀUfos༑༖༛༟OT耻"䀢r;쀀𝔔pf;愚cr;쀀𝒬؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻®䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r»ཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\0စbleBracket;柧nǔည\\0နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀𝔖ortȀDLRUᄪᄴᄾᅉownArrow»ОeftArrow»࢚ightArrow»࿝pArrow;憑gma;䎣allCircle;战pf;쀀𝕊ɲᅭ\\0\\0ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀𝒮ar;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Tháྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et»ሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻Þ䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀𝔗Āeiቻ኉ǲኀ\\0ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀𝕋ipleDot;惛Āctዖዛr;쀀𝒯rok;䅦ૡዷጎጚጦ\\0ጬጱ\\0\\0\\0\\0\\0ጸጽ፷ᎅ\\0᏿ᐄᐊᐐĀcrዻጁute耻Ú䃚rĀ;oጇገ憟cir;楉rǣጓ\\0጖y;䐎ve;䅬Āiyጞጣrc耻Û䃛;䐣blac;䅰r;쀀𝔘rave耻Ù䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀𝕌ЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥ownáϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀𝒰ilde;䅨ml耻Ü䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀𝔙pf;쀀𝕍cr;쀀𝒱dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀𝔚pf;쀀𝕎cr;쀀𝒲Ȁfiosᓋᓐᓒᓘr;쀀𝔛;䎞pf;쀀𝕏cr;쀀𝒳ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻Ý䃝Āiyᔉᔍrc;䅶;䐫r;쀀𝔜pf;쀀𝕐cr;쀀𝒴ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\0ᕛoWidtè૙a;䎖r;愨pf;愤cr;쀀𝒵௡ᖃᖊᖐ\\0ᖰᖶᖿ\\0\\0\\0\\0ᗆᗛᗫᙟ᙭\\0ᚕ᚛ᚲᚹ\\0ᚾcute耻á䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻â䃢te肻´̆;䐰lig耻æ䃦Ā;r²ᖺ;쀀𝔞rave耻à䃠ĀepᗊᗖĀfpᗏᗔsym;愵èᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\0\\0ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e»ᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢»¹arr;捼Āgpᙣᙧon;䄅f;쀀𝕒΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒñᚃing耻å䃥ƀctyᚡᚦᚨr;쀀𝒶;䀪mpĀ;e዁ᚯñʈilde耻ã䃣ml耻ä䃤Āciᛂᛈoninôɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e»ᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰séᜌnoõēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀𝔟g΀costuvwឍឝឳេ៕៛៞ƀaiuបពរðݠrc;旯p»፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\0\\0ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄eåᑄåᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\0ᠳƲᠯ\\0ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀𝕓Ā;tᏋᡣom»Ꮜtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻¦䂦Ȁceioᥑᥖᥚᥠr;쀀𝒷mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t»᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\0᧨ᨑᨕᨲ\\0ᨷᩐ\\0\\0᪴\\0\\0᫁\\0\\0ᬡᬮ᭍᭒\\0᯽\\0ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁îړȀaeiu᧰᧻ᨁᨅǰ᧵\\0᧸s;橍on;䄍dil耻ç䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻¸ƭptyv;榲t脀¢;eᨭᨮ䂢räƲr;쀀𝔠ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark»ᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\0\\0᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟»ཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it»᪼ˬ᫇᫔᫺\\0ᬊonĀ;eᫍᫎ䀺Ā;qÇÆɭ᫙\\0\\0᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁îᅠeĀmx᫱᫶ent»᫩eóɍǧ᫾\\0ᬇĀ;dኻᬂot;橭nôɆƀfryᬐᬔᬗ;쀀𝕔oäɔ脀©;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀𝒸Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\0\\0᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\0\\0ᯒreã᭳uã᭵ee;拎edge;拏en耻¤䂤earrowĀlrᯮ᯳eft»ᮀight»ᮽeäᯝĀciᰁᰇoninôǷnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍rò΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸òᄳhĀ;vᱚᱛ怐»ऊūᱡᱧarow;椏aã̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻°䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀𝔡arĀlrᲳᲵ»ࣜ»သʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀÷;o᳧ᳰntimes;拇nø᳷cy;䑒cɯᴆ\\0\\0ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀𝕕ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedgåúnƀadhᄮᵝᵧownarrowóᲃarpoonĀlrᵲᵶefôᲴighôᲶŢᵿᶅkaro÷གɯᶊ\\0\\0ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀𝒹;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃ròЩaòྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴoôᲉĀcsḎḔute耻é䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻ê䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀𝔢ƀ;rsṐṑṗ檚ave耻è䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et»ẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀𝕖ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on»ớ;䏵ȀcsuvỪỳἋἣĀioữḱrc»Ḯɩỹ\\0\\0ỻíՈantĀglἂἆtr»ṝess»Ṻƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯oô͒ĀahὉὋ;䎷耻ð䃰Āmrὓὗl耻ë䃫o;悬ƀcipὡὤὧl;䀡sôծĀeoὬὴctatioîՙnentialåչৡᾒ\\0ᾞ\\0ᾡᾧ\\0\\0ῆῌ\\0ΐ\\0ῦῪ \\0 ⁚llingdotseñṄy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\0\\0᾽g;耀ﬀig;耀ﬄ;쀀𝔣lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\0ῳf;쀀𝕗ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\0⁐β•‥‧‪‬\\0‮耻½䂽;慓耻¼䂼;慕;慙;慛Ƴ‴\\0‶;慔;慖ʴ‾⁁\\0\\0⁃耻¾䂾;慗;慜5;慘ƶ⁌\\0⁎;慚;慝8;慞l;恄wn;挢cr;쀀𝒻ࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lanô٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀𝔤Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox»ℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀𝕘Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\0↎proø₞r;楸qĀlqؿ↖lesó₈ií٫Āen↣↭rtneqq;쀀≩︀Å↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽ròΠȀilmr⇐⇔⇗⇛rsðᒄf»․ilôکĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it»∊lip;怦con;抹r;쀀𝔥sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀𝕙bar;怕ƀclt≯≴≸r;쀀𝒽asè⇴rok;䄧Ābp⊂⊇ull;恃hen»ᱛૡ⊣\\0⊪\\0⊸⋅⋎\\0⋕⋳\\0\\0⋸⌢⍧⍢⍿\\0⎆⎪⎴cute耻í䃭ƀ;iyݱ⊰⊵rc耻î䃮;䐸Ācx⊼⊿y;䐵cl耻¡䂡ĀfrΟ⋉;쀀𝔦rave耻ì䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓inåގarôܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝doô⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙eróᕣã⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀𝕚a;䎹uest耻¿䂿Āci⎊⎏r;쀀𝒾nʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\0⎼cy;䑖l耻ï䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀𝔧ath;䈷pf;쀀𝕛ǣ⏬\\0⏱r;쀀𝒿rcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀𝔨reen;䄸cy;䑅cy;䑜pf;쀀𝕜cr;쀀𝓀஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼rò৆òΕail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\0⒪\\0⒱\\0\\0\\0\\0\\0⒵Ⓔ\\0ⓆⓈⓍ\\0⓹ute;䄺mptyv;榴raîࡌbda;䎻gƀ;dlࢎⓁⓃ;榑åࢎ;檅uo耻«䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝ë≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼ìࢰâ┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□aé⓶arpoonĀdu▯▴own»њp»०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoonó྘quigarro÷⇰hreetimes;拋ƀ;qs▋ও◺lanôবʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋pproøⓆot;拖qĀgq♃♅ôউgtò⒌ôছiíলƀilr♕࣡♚sht;楼;쀀𝔩Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖rò◁orneòᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che»⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox»⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽rëࣁgƀlmr⛿✍✔eftĀar০✇ightá৲apsto;柼ightá৽parrowĀlr✥✩efô⓭ight;憬ƀafl✶✹✽r;榅;쀀𝕝us;樭imes;樴š❋❏st;戗áፎƀ;ef❗❘᠀旊nge»❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇ròࢨorneòᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀𝓁mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹reå◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀Å⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻¯䂯Āet⡗⡙;時Ā;e⡞⡟朠se»⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻owîҌefôएðᏑker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle»ᘦr;쀀𝔪o;愧ƀcdn⢯⢴⣉ro耻µ䂵Ȁ;acdᑤ⢽⣀⣄sôᚧir;櫰ot肻·Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛ò−ðઁĀdp⣩⣮els;抧f;쀀𝕞Āct⣸⣽r;쀀𝓂pos»ᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la»˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉roø඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\0⧣p肻 ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\0⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸uiöୣĀei⩊⩎ar;椨í஘istĀ;s஠டr;쀀𝔫ȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lanô௢ií௪Ā;rஶ⪁»ஷƀAap⪊⪍⪑rò⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹rò⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro÷⫁ightarro÷⪐ƀ;qs఻⪺⫪lanôౕĀ;sౕ⫴»శiíౝĀ;rవ⫾iĀ;eచథiäඐĀpt⬌⬑f;쀀𝕟膀¬;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lleì୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳uåಥĀ;cಘ⭸Ā;eಒ⭽ñಘȀAait⮈⮋⮝⮧rò⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow»⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉uå൅;쀀𝓃ortɭ⬅\\0\\0⯖ará⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭å೸åഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗñസȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇìௗlde耻ñ䃱çృiangleĀlrⱒⱜeftĀ;eచⱚñదightĀ;eೋⱥñ೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0ⴭ\\0ⴸⵈⵠⵥ⵲ⶄᬇ\\0\\0ⶍⶫ\\0ⷈⷎ\\0ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻ó䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻ô䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀𝔬ͯ⵹\\0\\0⵼\\0ⶂn;䋛ave耻ò䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨrò᪀Āir⶝ⶠr;榾oss;榻nå๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀𝕠ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨rò᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f»ⷿ耻ª䂪耻º䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧ò⸁ash耻ø䃸l;折iŬⸯ⸴de耻õ䃵esĀ;aǛ⸺s;樶ml耻ö䃶bar;挽ૡ⹞\\0⹽\\0⺀⺝\\0⺢⺹\\0\\0⻋ຜ\\0⼓\\0\\0⼫⾼\\0⿈rȀ;astЃ⹧⹲຅脀¶;l⹭⹮䂶leìЃɩ⹸\\0\\0⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀𝔭ƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕maô੶ne;明ƀ;tv⺿⻀⻈䏀chfork»´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎ö⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻±ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀𝕡nd耻£䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷uå໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾pproø⽃urlyeñ໙ñ໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨iíໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺ð⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴ï໻rel;抰Āci⿀⿅r;쀀𝓅;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀𝔮pf;쀀𝕢rime;恗cr;쀀𝓆ƀaeo⿸〉〓tĀei⿾々rnionóڰnt;樖stĀ;e【】䀿ñἙô༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがròႳòϝail;検aròᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕iãᅮmptyv;榳gȀ;del࿑らるろ;榒;榥å࿑uo耻»䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞ë≝ð✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶aló༞ƀabrョリヮrò៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗ì࿲âヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜnåႻarôྩt;断ƀilrㅩဣㅮsht;楽;쀀𝔯ĀaoㅷㆆrĀduㅽㅿ»ѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭaéトarpoonĀduㆻㆿowîㅾp»႒eftĀah㇊㇐rrowó࿪arpoonóՑightarrows;應quigarro÷ニhreetimes;拌g;䋚ingdotseñἲƀahm㈍㈐㈓rò࿪aòՑ;怏oustĀ;a㈞㈟掱che»㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾rëဃƀafl㉇㉊㉎r;榆;쀀𝕣us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒arò㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀𝓇Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠reåㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\0㍺㎤\\0\\0㏬㏰\\0㐨㑈㑚㒭㒱㓊㓱\\0㘖\\0\\0㘳cute;䅛quï➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\0㋼;檸on;䅡uåᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓iíሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒ë∨Ā;oਸ਼਴t耻§䂧i;䀻war;椩mĀin㍩ðnuóñt;朶rĀ;o㍶⁕쀀𝔰Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\0\\0㎜iäᑤaraì⹯耻­䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲aròᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetmé㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀𝕤aĀdr㑍ЂesĀ;u㑔㑕晠it»㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍ñᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝ñᆮƀ;afᅻ㒦ְrť㒫ֱ»ᅼaròᅈȀcemt㒹㒾㓂㓅r;쀀𝓈tmîñiì㐕aræᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psiloîỠhé⺯s»⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦pproø㋺urlyeñᇾñᇳƀaes㖂㖈㌛pproø㌚qñ㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻¹䂹耻²䂲耻³䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨ë∮Ā;oਫ਩war;椪lig耻ß䃟௡㙑㙝㙠ዎ㙳㙹\\0㙾㛂\\0\\0\\0\\0\\0㛛㜃\\0㜉㝬\\0\\0\\0㞇ɲ㙖\\0\\0㙛get;挖;䏄rë๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀𝔱Ȁeiko㚆㚝㚵㚼ǲ㚋\\0㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮pproø዁im»ኬsðኞĀas㚺㚮ð዁rn耻þ䃾Ǭ̟㛆⋧es膀×;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀á⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀𝕥rk;櫚á㍢rime;怴ƀaip㜏㜒㝤dåቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own»ᶻeftĀ;e⠀㜾ñम;扜ightĀ;e㊪㝋ñၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀𝓉;䑆cy;䑛rok;䅧Āio㞋㞎xô᝷headĀlr㞗㞠eftarro÷ࡏightarrow»ཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶ròϭar;楣Ācr㟜㟢ute耻ú䃺òᅐrǣ㟪\\0㟭y;䑞ve;䅭Āiy㟵㟺rc耻û䃻;䑃ƀabh㠃㠆㠋ròᎭlac;䅱aòᏃĀir㠓㠘sht;楾;쀀𝔲rave耻ù䃹š㠧㠱rĀlr㠬㠮»ॗ»ႃlk;斀Āct㠹㡍ɯ㠿\\0\\0㡊rnĀ;e㡅㡆挜r»㡆op;挏ri;旸Āal㡖㡚cr;䅫肻¨͉Āgp㡢㡦on;䅳f;쀀𝕦̀adhlsuᅋ㡸㡽፲㢑㢠ownáᎳarpoonĀlr㢈㢌efô㠭ighô㠯iƀ;hl㢙㢚㢜䏅»ᏺon»㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\0\\0㣁rnĀ;e㢼㢽挝r»㢽op;挎ng;䅯ri;旹cr;쀀𝓊ƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨»᠓Āam㣯㣲rò㢨l耻ü䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠ròϷarĀ;v㤦㤧櫨;櫩asèϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖appá␕othinçẖƀhir㓫⻈㥙opô⾵Ā;hᎷ㥢ïㆍĀiu㥩㥭gmá㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟etá㚜iangleĀlr㦪㦯eft»थight»ၑy;䐲ash»ံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨaòᑩr;쀀𝔳tré㦮suĀbp㧯㧱»ജ»൙pf;쀀𝕧roð໻tré㦴Ācu㨆㨋r;쀀𝓋Ābp㨐㨘nĀEe㦀㨖»㥾nĀEe㦒㨞»㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀𝔴pf;쀀𝕨Ā;eᑹ㩦atèᑹcr;쀀𝓌ૣណ㪇\\0㪋\\0㪐㪛\\0\\0㪝㪨㪫㪯\\0\\0㫃㫎\\0㫘ៜ៟tré៑r;쀀𝔵ĀAa㪔㪗ròσrò৶;䎾ĀAa㪡㪤ròθrò৫að✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀𝕩imåឲĀAa㫇㫊ròώròਁĀcq㫒ីr;쀀𝓍Āpt៖㫜ré។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻ý䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻¥䂥r;쀀𝔶cy;䑗pf;쀀𝕪cr;쀀𝓎Ācm㬦㬩y;䑎l耻ÿ䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡træᕟa;䎶r;쀀𝔷cy;䐶grarr;懝pf;쀀𝕫cr;쀀𝓏Ājn㮅㮇;怍j;怌\'.split("").map((function(e){return e.charCodeAt(0)})))},2060:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a["default"]=new Uint16Array("Ȁaglq\\t\x1Bɭ\\0\\0p;䀦os;䀧t;䀾t;䀼uot;䀢".split("").map((function(e){return e.charCodeAt(0)})))},7261:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function restoreDiff(e){for(var a=1;a<e.length;a++){e[a][0]+=e[a-1][0]+1}return e}a["default"]=new Map(restoreDiff([[9,"&Tab;"],[0,"&NewLine;"],[22,"&excl;"],[0,"&quot;"],[0,"&num;"],[0,"&dollar;"],[0,"&percnt;"],[0,"&amp;"],[0,"&apos;"],[0,"&lpar;"],[0,"&rpar;"],[0,"&ast;"],[0,"&plus;"],[0,"&comma;"],[1,"&period;"],[0,"&sol;"],[10,"&colon;"],[0,"&semi;"],[0,{v:"&lt;",n:8402,o:"&nvlt;"}],[0,{v:"&equals;",n:8421,o:"&bne;"}],[0,{v:"&gt;",n:8402,o:"&nvgt;"}],[0,"&quest;"],[0,"&commat;"],[26,"&lbrack;"],[0,"&bsol;"],[0,"&rbrack;"],[0,"&Hat;"],[0,"&lowbar;"],[0,"&DiacriticalGrave;"],[5,{n:106,o:"&fjlig;"}],[20,"&lbrace;"],[0,"&verbar;"],[0,"&rbrace;"],[34,"&nbsp;"],[0,"&iexcl;"],[0,"&cent;"],[0,"&pound;"],[0,"&curren;"],[0,"&yen;"],[0,"&brvbar;"],[0,"&sect;"],[0,"&die;"],[0,"&copy;"],[0,"&ordf;"],[0,"&laquo;"],[0,"&not;"],[0,"&shy;"],[0,"&circledR;"],[0,"&macr;"],[0,"&deg;"],[0,"&PlusMinus;"],[0,"&sup2;"],[0,"&sup3;"],[0,"&acute;"],[0,"&micro;"],[0,"&para;"],[0,"&centerdot;"],[0,"&cedil;"],[0,"&sup1;"],[0,"&ordm;"],[0,"&raquo;"],[0,"&frac14;"],[0,"&frac12;"],[0,"&frac34;"],[0,"&iquest;"],[0,"&Agrave;"],[0,"&Aacute;"],[0,"&Acirc;"],[0,"&Atilde;"],[0,"&Auml;"],[0,"&angst;"],[0,"&AElig;"],[0,"&Ccedil;"],[0,"&Egrave;"],[0,"&Eacute;"],[0,"&Ecirc;"],[0,"&Euml;"],[0,"&Igrave;"],[0,"&Iacute;"],[0,"&Icirc;"],[0,"&Iuml;"],[0,"&ETH;"],[0,"&Ntilde;"],[0,"&Ograve;"],[0,"&Oacute;"],[0,"&Ocirc;"],[0,"&Otilde;"],[0,"&Ouml;"],[0,"&times;"],[0,"&Oslash;"],[0,"&Ugrave;"],[0,"&Uacute;"],[0,"&Ucirc;"],[0,"&Uuml;"],[0,"&Yacute;"],[0,"&THORN;"],[0,"&szlig;"],[0,"&agrave;"],[0,"&aacute;"],[0,"&acirc;"],[0,"&atilde;"],[0,"&auml;"],[0,"&aring;"],[0,"&aelig;"],[0,"&ccedil;"],[0,"&egrave;"],[0,"&eacute;"],[0,"&ecirc;"],[0,"&euml;"],[0,"&igrave;"],[0,"&iacute;"],[0,"&icirc;"],[0,"&iuml;"],[0,"&eth;"],[0,"&ntilde;"],[0,"&ograve;"],[0,"&oacute;"],[0,"&ocirc;"],[0,"&otilde;"],[0,"&ouml;"],[0,"&div;"],[0,"&oslash;"],[0,"&ugrave;"],[0,"&uacute;"],[0,"&ucirc;"],[0,"&uuml;"],[0,"&yacute;"],[0,"&thorn;"],[0,"&yuml;"],[0,"&Amacr;"],[0,"&amacr;"],[0,"&Abreve;"],[0,"&abreve;"],[0,"&Aogon;"],[0,"&aogon;"],[0,"&Cacute;"],[0,"&cacute;"],[0,"&Ccirc;"],[0,"&ccirc;"],[0,"&Cdot;"],[0,"&cdot;"],[0,"&Ccaron;"],[0,"&ccaron;"],[0,"&Dcaron;"],[0,"&dcaron;"],[0,"&Dstrok;"],[0,"&dstrok;"],[0,"&Emacr;"],[0,"&emacr;"],[2,"&Edot;"],[0,"&edot;"],[0,"&Eogon;"],[0,"&eogon;"],[0,"&Ecaron;"],[0,"&ecaron;"],[0,"&Gcirc;"],[0,"&gcirc;"],[0,"&Gbreve;"],[0,"&gbreve;"],[0,"&Gdot;"],[0,"&gdot;"],[0,"&Gcedil;"],[1,"&Hcirc;"],[0,"&hcirc;"],[0,"&Hstrok;"],[0,"&hstrok;"],[0,"&Itilde;"],[0,"&itilde;"],[0,"&Imacr;"],[0,"&imacr;"],[2,"&Iogon;"],[0,"&iogon;"],[0,"&Idot;"],[0,"&imath;"],[0,"&IJlig;"],[0,"&ijlig;"],[0,"&Jcirc;"],[0,"&jcirc;"],[0,"&Kcedil;"],[0,"&kcedil;"],[0,"&kgreen;"],[0,"&Lacute;"],[0,"&lacute;"],[0,"&Lcedil;"],[0,"&lcedil;"],[0,"&Lcaron;"],[0,"&lcaron;"],[0,"&Lmidot;"],[0,"&lmidot;"],[0,"&Lstrok;"],[0,"&lstrok;"],[0,"&Nacute;"],[0,"&nacute;"],[0,"&Ncedil;"],[0,"&ncedil;"],[0,"&Ncaron;"],[0,"&ncaron;"],[0,"&napos;"],[0,"&ENG;"],[0,"&eng;"],[0,"&Omacr;"],[0,"&omacr;"],[2,"&Odblac;"],[0,"&odblac;"],[0,"&OElig;"],[0,"&oelig;"],[0,"&Racute;"],[0,"&racute;"],[0,"&Rcedil;"],[0,"&rcedil;"],[0,"&Rcaron;"],[0,"&rcaron;"],[0,"&Sacute;"],[0,"&sacute;"],[0,"&Scirc;"],[0,"&scirc;"],[0,"&Scedil;"],[0,"&scedil;"],[0,"&Scaron;"],[0,"&scaron;"],[0,"&Tcedil;"],[0,"&tcedil;"],[0,"&Tcaron;"],[0,"&tcaron;"],[0,"&Tstrok;"],[0,"&tstrok;"],[0,"&Utilde;"],[0,"&utilde;"],[0,"&Umacr;"],[0,"&umacr;"],[0,"&Ubreve;"],[0,"&ubreve;"],[0,"&Uring;"],[0,"&uring;"],[0,"&Udblac;"],[0,"&udblac;"],[0,"&Uogon;"],[0,"&uogon;"],[0,"&Wcirc;"],[0,"&wcirc;"],[0,"&Ycirc;"],[0,"&ycirc;"],[0,"&Yuml;"],[0,"&Zacute;"],[0,"&zacute;"],[0,"&Zdot;"],[0,"&zdot;"],[0,"&Zcaron;"],[0,"&zcaron;"],[19,"&fnof;"],[34,"&imped;"],[63,"&gacute;"],[65,"&jmath;"],[142,"&circ;"],[0,"&caron;"],[16,"&breve;"],[0,"&DiacriticalDot;"],[0,"&ring;"],[0,"&ogon;"],[0,"&DiacriticalTilde;"],[0,"&dblac;"],[51,"&DownBreve;"],[127,"&Alpha;"],[0,"&Beta;"],[0,"&Gamma;"],[0,"&Delta;"],[0,"&Epsilon;"],[0,"&Zeta;"],[0,"&Eta;"],[0,"&Theta;"],[0,"&Iota;"],[0,"&Kappa;"],[0,"&Lambda;"],[0,"&Mu;"],[0,"&Nu;"],[0,"&Xi;"],[0,"&Omicron;"],[0,"&Pi;"],[0,"&Rho;"],[1,"&Sigma;"],[0,"&Tau;"],[0,"&Upsilon;"],[0,"&Phi;"],[0,"&Chi;"],[0,"&Psi;"],[0,"&ohm;"],[7,"&alpha;"],[0,"&beta;"],[0,"&gamma;"],[0,"&delta;"],[0,"&epsi;"],[0,"&zeta;"],[0,"&eta;"],[0,"&theta;"],[0,"&iota;"],[0,"&kappa;"],[0,"&lambda;"],[0,"&mu;"],[0,"&nu;"],[0,"&xi;"],[0,"&omicron;"],[0,"&pi;"],[0,"&rho;"],[0,"&sigmaf;"],[0,"&sigma;"],[0,"&tau;"],[0,"&upsi;"],[0,"&phi;"],[0,"&chi;"],[0,"&psi;"],[0,"&omega;"],[7,"&thetasym;"],[0,"&Upsi;"],[2,"&phiv;"],[0,"&piv;"],[5,"&Gammad;"],[0,"&digamma;"],[18,"&kappav;"],[0,"&rhov;"],[3,"&epsiv;"],[0,"&backepsilon;"],[10,"&IOcy;"],[0,"&DJcy;"],[0,"&GJcy;"],[0,"&Jukcy;"],[0,"&DScy;"],[0,"&Iukcy;"],[0,"&YIcy;"],[0,"&Jsercy;"],[0,"&LJcy;"],[0,"&NJcy;"],[0,"&TSHcy;"],[0,"&KJcy;"],[1,"&Ubrcy;"],[0,"&DZcy;"],[0,"&Acy;"],[0,"&Bcy;"],[0,"&Vcy;"],[0,"&Gcy;"],[0,"&Dcy;"],[0,"&IEcy;"],[0,"&ZHcy;"],[0,"&Zcy;"],[0,"&Icy;"],[0,"&Jcy;"],[0,"&Kcy;"],[0,"&Lcy;"],[0,"&Mcy;"],[0,"&Ncy;"],[0,"&Ocy;"],[0,"&Pcy;"],[0,"&Rcy;"],[0,"&Scy;"],[0,"&Tcy;"],[0,"&Ucy;"],[0,"&Fcy;"],[0,"&KHcy;"],[0,"&TScy;"],[0,"&CHcy;"],[0,"&SHcy;"],[0,"&SHCHcy;"],[0,"&HARDcy;"],[0,"&Ycy;"],[0,"&SOFTcy;"],[0,"&Ecy;"],[0,"&YUcy;"],[0,"&YAcy;"],[0,"&acy;"],[0,"&bcy;"],[0,"&vcy;"],[0,"&gcy;"],[0,"&dcy;"],[0,"&iecy;"],[0,"&zhcy;"],[0,"&zcy;"],[0,"&icy;"],[0,"&jcy;"],[0,"&kcy;"],[0,"&lcy;"],[0,"&mcy;"],[0,"&ncy;"],[0,"&ocy;"],[0,"&pcy;"],[0,"&rcy;"],[0,"&scy;"],[0,"&tcy;"],[0,"&ucy;"],[0,"&fcy;"],[0,"&khcy;"],[0,"&tscy;"],[0,"&chcy;"],[0,"&shcy;"],[0,"&shchcy;"],[0,"&hardcy;"],[0,"&ycy;"],[0,"&softcy;"],[0,"&ecy;"],[0,"&yucy;"],[0,"&yacy;"],[1,"&iocy;"],[0,"&djcy;"],[0,"&gjcy;"],[0,"&jukcy;"],[0,"&dscy;"],[0,"&iukcy;"],[0,"&yicy;"],[0,"&jsercy;"],[0,"&ljcy;"],[0,"&njcy;"],[0,"&tshcy;"],[0,"&kjcy;"],[1,"&ubrcy;"],[0,"&dzcy;"],[7074,"&ensp;"],[0,"&emsp;"],[0,"&emsp13;"],[0,"&emsp14;"],[1,"&numsp;"],[0,"&puncsp;"],[0,"&ThinSpace;"],[0,"&hairsp;"],[0,"&NegativeMediumSpace;"],[0,"&zwnj;"],[0,"&zwj;"],[0,"&lrm;"],[0,"&rlm;"],[0,"&dash;"],[2,"&ndash;"],[0,"&mdash;"],[0,"&horbar;"],[0,"&Verbar;"],[1,"&lsquo;"],[0,"&CloseCurlyQuote;"],[0,"&lsquor;"],[1,"&ldquo;"],[0,"&CloseCurlyDoubleQuote;"],[0,"&bdquo;"],[1,"&dagger;"],[0,"&Dagger;"],[0,"&bull;"],[2,"&nldr;"],[0,"&hellip;"],[9,"&permil;"],[0,"&pertenk;"],[0,"&prime;"],[0,"&Prime;"],[0,"&tprime;"],[0,"&backprime;"],[3,"&lsaquo;"],[0,"&rsaquo;"],[3,"&oline;"],[2,"&caret;"],[1,"&hybull;"],[0,"&frasl;"],[10,"&bsemi;"],[7,"&qprime;"],[7,{v:"&MediumSpace;",n:8202,o:"&ThickSpace;"}],[0,"&NoBreak;"],[0,"&af;"],[0,"&InvisibleTimes;"],[0,"&ic;"],[72,"&euro;"],[46,"&tdot;"],[0,"&DotDot;"],[37,"&complexes;"],[2,"&incare;"],[4,"&gscr;"],[0,"&hamilt;"],[0,"&Hfr;"],[0,"&Hopf;"],[0,"&planckh;"],[0,"&hbar;"],[0,"&imagline;"],[0,"&Ifr;"],[0,"&lagran;"],[0,"&ell;"],[1,"&naturals;"],[0,"&numero;"],[0,"&copysr;"],[0,"&weierp;"],[0,"&Popf;"],[0,"&Qopf;"],[0,"&realine;"],[0,"&real;"],[0,"&reals;"],[0,"&rx;"],[3,"&trade;"],[1,"&integers;"],[2,"&mho;"],[0,"&zeetrf;"],[0,"&iiota;"],[2,"&bernou;"],[0,"&Cayleys;"],[1,"&escr;"],[0,"&Escr;"],[0,"&Fouriertrf;"],[1,"&Mellintrf;"],[0,"&order;"],[0,"&alefsym;"],[0,"&beth;"],[0,"&gimel;"],[0,"&daleth;"],[12,"&CapitalDifferentialD;"],[0,"&dd;"],[0,"&ee;"],[0,"&ii;"],[10,"&frac13;"],[0,"&frac23;"],[0,"&frac15;"],[0,"&frac25;"],[0,"&frac35;"],[0,"&frac45;"],[0,"&frac16;"],[0,"&frac56;"],[0,"&frac18;"],[0,"&frac38;"],[0,"&frac58;"],[0,"&frac78;"],[49,"&larr;"],[0,"&ShortUpArrow;"],[0,"&rarr;"],[0,"&darr;"],[0,"&harr;"],[0,"&updownarrow;"],[0,"&nwarr;"],[0,"&nearr;"],[0,"&LowerRightArrow;"],[0,"&LowerLeftArrow;"],[0,"&nlarr;"],[0,"&nrarr;"],[1,{v:"&rarrw;",n:824,o:"&nrarrw;"}],[0,"&Larr;"],[0,"&Uarr;"],[0,"&Rarr;"],[0,"&Darr;"],[0,"&larrtl;"],[0,"&rarrtl;"],[0,"&LeftTeeArrow;"],[0,"&mapstoup;"],[0,"&map;"],[0,"&DownTeeArrow;"],[1,"&hookleftarrow;"],[0,"&hookrightarrow;"],[0,"&larrlp;"],[0,"&looparrowright;"],[0,"&harrw;"],[0,"&nharr;"],[1,"&lsh;"],[0,"&rsh;"],[0,"&ldsh;"],[0,"&rdsh;"],[1,"&crarr;"],[0,"&cularr;"],[0,"&curarr;"],[2,"&circlearrowleft;"],[0,"&circlearrowright;"],[0,"&leftharpoonup;"],[0,"&DownLeftVector;"],[0,"&RightUpVector;"],[0,"&LeftUpVector;"],[0,"&rharu;"],[0,"&DownRightVector;"],[0,"&dharr;"],[0,"&dharl;"],[0,"&RightArrowLeftArrow;"],[0,"&udarr;"],[0,"&LeftArrowRightArrow;"],[0,"&leftleftarrows;"],[0,"&upuparrows;"],[0,"&rightrightarrows;"],[0,"&ddarr;"],[0,"&leftrightharpoons;"],[0,"&Equilibrium;"],[0,"&nlArr;"],[0,"&nhArr;"],[0,"&nrArr;"],[0,"&DoubleLeftArrow;"],[0,"&DoubleUpArrow;"],[0,"&DoubleRightArrow;"],[0,"&dArr;"],[0,"&DoubleLeftRightArrow;"],[0,"&DoubleUpDownArrow;"],[0,"&nwArr;"],[0,"&neArr;"],[0,"&seArr;"],[0,"&swArr;"],[0,"&lAarr;"],[0,"&rAarr;"],[1,"&zigrarr;"],[6,"&larrb;"],[0,"&rarrb;"],[15,"&DownArrowUpArrow;"],[7,"&loarr;"],[0,"&roarr;"],[0,"&hoarr;"],[0,"&forall;"],[0,"&comp;"],[0,{v:"&part;",n:824,o:"&npart;"}],[0,"&exist;"],[0,"&nexist;"],[0,"&empty;"],[1,"&Del;"],[0,"&Element;"],[0,"&NotElement;"],[1,"&ni;"],[0,"&notni;"],[2,"&prod;"],[0,"&coprod;"],[0,"&sum;"],[0,"&minus;"],[0,"&MinusPlus;"],[0,"&dotplus;"],[1,"&Backslash;"],[0,"&lowast;"],[0,"&compfn;"],[1,"&radic;"],[2,"&prop;"],[0,"&infin;"],[0,"&angrt;"],[0,{v:"&ang;",n:8402,o:"&nang;"}],[0,"&angmsd;"],[0,"&angsph;"],[0,"&mid;"],[0,"&nmid;"],[0,"&DoubleVerticalBar;"],[0,"&NotDoubleVerticalBar;"],[0,"&and;"],[0,"&or;"],[0,{v:"&cap;",n:65024,o:"&caps;"}],[0,{v:"&cup;",n:65024,o:"&cups;"}],[0,"&int;"],[0,"&Int;"],[0,"&iiint;"],[0,"&conint;"],[0,"&Conint;"],[0,"&Cconint;"],[0,"&cwint;"],[0,"&ClockwiseContourIntegral;"],[0,"&awconint;"],[0,"&there4;"],[0,"&becaus;"],[0,"&ratio;"],[0,"&Colon;"],[0,"&dotminus;"],[1,"&mDDot;"],[0,"&homtht;"],[0,{v:"&sim;",n:8402,o:"&nvsim;"}],[0,{v:"&backsim;",n:817,o:"&race;"}],[0,{v:"&ac;",n:819,o:"&acE;"}],[0,"&acd;"],[0,"&VerticalTilde;"],[0,"&NotTilde;"],[0,{v:"&eqsim;",n:824,o:"&nesim;"}],[0,"&sime;"],[0,"&NotTildeEqual;"],[0,"&cong;"],[0,"&simne;"],[0,"&ncong;"],[0,"&ap;"],[0,"&nap;"],[0,"&ape;"],[0,{v:"&apid;",n:824,o:"&napid;"}],[0,"&backcong;"],[0,{v:"&asympeq;",n:8402,o:"&nvap;"}],[0,{v:"&bump;",n:824,o:"&nbump;"}],[0,{v:"&bumpe;",n:824,o:"&nbumpe;"}],[0,{v:"&doteq;",n:824,o:"&nedot;"}],[0,"&doteqdot;"],[0,"&efDot;"],[0,"&erDot;"],[0,"&Assign;"],[0,"&ecolon;"],[0,"&ecir;"],[0,"&circeq;"],[1,"&wedgeq;"],[0,"&veeeq;"],[1,"&triangleq;"],[2,"&equest;"],[0,"&ne;"],[0,{v:"&Congruent;",n:8421,o:"&bnequiv;"}],[0,"&nequiv;"],[1,{v:"&le;",n:8402,o:"&nvle;"}],[0,{v:"&ge;",n:8402,o:"&nvge;"}],[0,{v:"&lE;",n:824,o:"&nlE;"}],[0,{v:"&gE;",n:824,o:"&ngE;"}],[0,{v:"&lnE;",n:65024,o:"&lvertneqq;"}],[0,{v:"&gnE;",n:65024,o:"&gvertneqq;"}],[0,{v:"&ll;",n:new Map(restoreDiff([[824,"&nLtv;"],[7577,"&nLt;"]]))}],[0,{v:"&gg;",n:new Map(restoreDiff([[824,"&nGtv;"],[7577,"&nGt;"]]))}],[0,"&between;"],[0,"&NotCupCap;"],[0,"&nless;"],[0,"&ngt;"],[0,"&nle;"],[0,"&nge;"],[0,"&lesssim;"],[0,"&GreaterTilde;"],[0,"&nlsim;"],[0,"&ngsim;"],[0,"&LessGreater;"],[0,"&gl;"],[0,"&NotLessGreater;"],[0,"&NotGreaterLess;"],[0,"&pr;"],[0,"&sc;"],[0,"&prcue;"],[0,"&sccue;"],[0,"&PrecedesTilde;"],[0,{v:"&scsim;",n:824,o:"&NotSucceedsTilde;"}],[0,"&NotPrecedes;"],[0,"&NotSucceeds;"],[0,{v:"&sub;",n:8402,o:"&NotSubset;"}],[0,{v:"&sup;",n:8402,o:"&NotSuperset;"}],[0,"&nsub;"],[0,"&nsup;"],[0,"&sube;"],[0,"&supe;"],[0,"&NotSubsetEqual;"],[0,"&NotSupersetEqual;"],[0,{v:"&subne;",n:65024,o:"&varsubsetneq;"}],[0,{v:"&supne;",n:65024,o:"&varsupsetneq;"}],[1,"&cupdot;"],[0,"&UnionPlus;"],[0,{v:"&sqsub;",n:824,o:"&NotSquareSubset;"}],[0,{v:"&sqsup;",n:824,o:"&NotSquareSuperset;"}],[0,"&sqsube;"],[0,"&sqsupe;"],[0,{v:"&sqcap;",n:65024,o:"&sqcaps;"}],[0,{v:"&sqcup;",n:65024,o:"&sqcups;"}],[0,"&CirclePlus;"],[0,"&CircleMinus;"],[0,"&CircleTimes;"],[0,"&osol;"],[0,"&CircleDot;"],[0,"&circledcirc;"],[0,"&circledast;"],[1,"&circleddash;"],[0,"&boxplus;"],[0,"&boxminus;"],[0,"&boxtimes;"],[0,"&dotsquare;"],[0,"&RightTee;"],[0,"&dashv;"],[0,"&DownTee;"],[0,"&bot;"],[1,"&models;"],[0,"&DoubleRightTee;"],[0,"&Vdash;"],[0,"&Vvdash;"],[0,"&VDash;"],[0,"&nvdash;"],[0,"&nvDash;"],[0,"&nVdash;"],[0,"&nVDash;"],[0,"&prurel;"],[1,"&LeftTriangle;"],[0,"&RightTriangle;"],[0,{v:"&LeftTriangleEqual;",n:8402,o:"&nvltrie;"}],[0,{v:"&RightTriangleEqual;",n:8402,o:"&nvrtrie;"}],[0,"&origof;"],[0,"&imof;"],[0,"&multimap;"],[0,"&hercon;"],[0,"&intcal;"],[0,"&veebar;"],[1,"&barvee;"],[0,"&angrtvb;"],[0,"&lrtri;"],[0,"&bigwedge;"],[0,"&bigvee;"],[0,"&bigcap;"],[0,"&bigcup;"],[0,"&diam;"],[0,"&sdot;"],[0,"&sstarf;"],[0,"&divideontimes;"],[0,"&bowtie;"],[0,"&ltimes;"],[0,"&rtimes;"],[0,"&leftthreetimes;"],[0,"&rightthreetimes;"],[0,"&backsimeq;"],[0,"&curlyvee;"],[0,"&curlywedge;"],[0,"&Sub;"],[0,"&Sup;"],[0,"&Cap;"],[0,"&Cup;"],[0,"&fork;"],[0,"&epar;"],[0,"&lessdot;"],[0,"&gtdot;"],[0,{v:"&Ll;",n:824,o:"&nLl;"}],[0,{v:"&Gg;",n:824,o:"&nGg;"}],[0,{v:"&leg;",n:65024,o:"&lesg;"}],[0,{v:"&gel;",n:65024,o:"&gesl;"}],[2,"&cuepr;"],[0,"&cuesc;"],[0,"&NotPrecedesSlantEqual;"],[0,"&NotSucceedsSlantEqual;"],[0,"&NotSquareSubsetEqual;"],[0,"&NotSquareSupersetEqual;"],[2,"&lnsim;"],[0,"&gnsim;"],[0,"&precnsim;"],[0,"&scnsim;"],[0,"&nltri;"],[0,"&NotRightTriangle;"],[0,"&nltrie;"],[0,"&NotRightTriangleEqual;"],[0,"&vellip;"],[0,"&ctdot;"],[0,"&utdot;"],[0,"&dtdot;"],[0,"&disin;"],[0,"&isinsv;"],[0,"&isins;"],[0,{v:"&isindot;",n:824,o:"&notindot;"}],[0,"&notinvc;"],[0,"&notinvb;"],[1,{v:"&isinE;",n:824,o:"&notinE;"}],[0,"&nisd;"],[0,"&xnis;"],[0,"&nis;"],[0,"&notnivc;"],[0,"&notnivb;"],[6,"&barwed;"],[0,"&Barwed;"],[1,"&lceil;"],[0,"&rceil;"],[0,"&LeftFloor;"],[0,"&rfloor;"],[0,"&drcrop;"],[0,"&dlcrop;"],[0,"&urcrop;"],[0,"&ulcrop;"],[0,"&bnot;"],[1,"&profline;"],[0,"&profsurf;"],[1,"&telrec;"],[0,"&target;"],[5,"&ulcorn;"],[0,"&urcorn;"],[0,"&dlcorn;"],[0,"&drcorn;"],[2,"&frown;"],[0,"&smile;"],[9,"&cylcty;"],[0,"&profalar;"],[7,"&topbot;"],[6,"&ovbar;"],[1,"&solbar;"],[60,"&angzarr;"],[51,"&lmoustache;"],[0,"&rmoustache;"],[2,"&OverBracket;"],[0,"&bbrk;"],[0,"&bbrktbrk;"],[37,"&OverParenthesis;"],[0,"&UnderParenthesis;"],[0,"&OverBrace;"],[0,"&UnderBrace;"],[2,"&trpezium;"],[4,"&elinters;"],[59,"&blank;"],[164,"&circledS;"],[55,"&boxh;"],[1,"&boxv;"],[9,"&boxdr;"],[3,"&boxdl;"],[3,"&boxur;"],[3,"&boxul;"],[3,"&boxvr;"],[7,"&boxvl;"],[7,"&boxhd;"],[7,"&boxhu;"],[7,"&boxvh;"],[19,"&boxH;"],[0,"&boxV;"],[0,"&boxdR;"],[0,"&boxDr;"],[0,"&boxDR;"],[0,"&boxdL;"],[0,"&boxDl;"],[0,"&boxDL;"],[0,"&boxuR;"],[0,"&boxUr;"],[0,"&boxUR;"],[0,"&boxuL;"],[0,"&boxUl;"],[0,"&boxUL;"],[0,"&boxvR;"],[0,"&boxVr;"],[0,"&boxVR;"],[0,"&boxvL;"],[0,"&boxVl;"],[0,"&boxVL;"],[0,"&boxHd;"],[0,"&boxhD;"],[0,"&boxHD;"],[0,"&boxHu;"],[0,"&boxhU;"],[0,"&boxHU;"],[0,"&boxvH;"],[0,"&boxVh;"],[0,"&boxVH;"],[19,"&uhblk;"],[3,"&lhblk;"],[3,"&block;"],[8,"&blk14;"],[0,"&blk12;"],[0,"&blk34;"],[13,"&square;"],[8,"&blacksquare;"],[0,"&EmptyVerySmallSquare;"],[1,"&rect;"],[0,"&marker;"],[2,"&fltns;"],[1,"&bigtriangleup;"],[0,"&blacktriangle;"],[0,"&triangle;"],[2,"&blacktriangleright;"],[0,"&rtri;"],[3,"&bigtriangledown;"],[0,"&blacktriangledown;"],[0,"&dtri;"],[2,"&blacktriangleleft;"],[0,"&ltri;"],[6,"&loz;"],[0,"&cir;"],[32,"&tridot;"],[2,"&bigcirc;"],[8,"&ultri;"],[0,"&urtri;"],[0,"&lltri;"],[0,"&EmptySmallSquare;"],[0,"&FilledSmallSquare;"],[8,"&bigstar;"],[0,"&star;"],[7,"&phone;"],[49,"&female;"],[1,"&male;"],[29,"&spades;"],[2,"&clubs;"],[1,"&hearts;"],[0,"&diamondsuit;"],[3,"&sung;"],[2,"&flat;"],[0,"&natural;"],[0,"&sharp;"],[163,"&check;"],[3,"&cross;"],[8,"&malt;"],[21,"&sext;"],[33,"&VerticalSeparator;"],[25,"&lbbrk;"],[0,"&rbbrk;"],[84,"&bsolhsub;"],[0,"&suphsol;"],[28,"&LeftDoubleBracket;"],[0,"&RightDoubleBracket;"],[0,"&lang;"],[0,"&rang;"],[0,"&Lang;"],[0,"&Rang;"],[0,"&loang;"],[0,"&roang;"],[7,"&longleftarrow;"],[0,"&longrightarrow;"],[0,"&longleftrightarrow;"],[0,"&DoubleLongLeftArrow;"],[0,"&DoubleLongRightArrow;"],[0,"&DoubleLongLeftRightArrow;"],[1,"&longmapsto;"],[2,"&dzigrarr;"],[258,"&nvlArr;"],[0,"&nvrArr;"],[0,"&nvHarr;"],[0,"&Map;"],[6,"&lbarr;"],[0,"&bkarow;"],[0,"&lBarr;"],[0,"&dbkarow;"],[0,"&drbkarow;"],[0,"&DDotrahd;"],[0,"&UpArrowBar;"],[0,"&DownArrowBar;"],[2,"&Rarrtl;"],[2,"&latail;"],[0,"&ratail;"],[0,"&lAtail;"],[0,"&rAtail;"],[0,"&larrfs;"],[0,"&rarrfs;"],[0,"&larrbfs;"],[0,"&rarrbfs;"],[2,"&nwarhk;"],[0,"&nearhk;"],[0,"&hksearow;"],[0,"&hkswarow;"],[0,"&nwnear;"],[0,"&nesear;"],[0,"&seswar;"],[0,"&swnwar;"],[8,{v:"&rarrc;",n:824,o:"&nrarrc;"}],[1,"&cudarrr;"],[0,"&ldca;"],[0,"&rdca;"],[0,"&cudarrl;"],[0,"&larrpl;"],[2,"&curarrm;"],[0,"&cularrp;"],[7,"&rarrpl;"],[2,"&harrcir;"],[0,"&Uarrocir;"],[0,"&lurdshar;"],[0,"&ldrushar;"],[2,"&LeftRightVector;"],[0,"&RightUpDownVector;"],[0,"&DownLeftRightVector;"],[0,"&LeftUpDownVector;"],[0,"&LeftVectorBar;"],[0,"&RightVectorBar;"],[0,"&RightUpVectorBar;"],[0,"&RightDownVectorBar;"],[0,"&DownLeftVectorBar;"],[0,"&DownRightVectorBar;"],[0,"&LeftUpVectorBar;"],[0,"&LeftDownVectorBar;"],[0,"&LeftTeeVector;"],[0,"&RightTeeVector;"],[0,"&RightUpTeeVector;"],[0,"&RightDownTeeVector;"],[0,"&DownLeftTeeVector;"],[0,"&DownRightTeeVector;"],[0,"&LeftUpTeeVector;"],[0,"&LeftDownTeeVector;"],[0,"&lHar;"],[0,"&uHar;"],[0,"&rHar;"],[0,"&dHar;"],[0,"&luruhar;"],[0,"&ldrdhar;"],[0,"&ruluhar;"],[0,"&rdldhar;"],[0,"&lharul;"],[0,"&llhard;"],[0,"&rharul;"],[0,"&lrhard;"],[0,"&udhar;"],[0,"&duhar;"],[0,"&RoundImplies;"],[0,"&erarr;"],[0,"&simrarr;"],[0,"&larrsim;"],[0,"&rarrsim;"],[0,"&rarrap;"],[0,"&ltlarr;"],[1,"&gtrarr;"],[0,"&subrarr;"],[1,"&suplarr;"],[0,"&lfisht;"],[0,"&rfisht;"],[0,"&ufisht;"],[0,"&dfisht;"],[5,"&lopar;"],[0,"&ropar;"],[4,"&lbrke;"],[0,"&rbrke;"],[0,"&lbrkslu;"],[0,"&rbrksld;"],[0,"&lbrksld;"],[0,"&rbrkslu;"],[0,"&langd;"],[0,"&rangd;"],[0,"&lparlt;"],[0,"&rpargt;"],[0,"&gtlPar;"],[0,"&ltrPar;"],[3,"&vzigzag;"],[1,"&vangrt;"],[0,"&angrtvbd;"],[6,"&ange;"],[0,"&range;"],[0,"&dwangle;"],[0,"&uwangle;"],[0,"&angmsdaa;"],[0,"&angmsdab;"],[0,"&angmsdac;"],[0,"&angmsdad;"],[0,"&angmsdae;"],[0,"&angmsdaf;"],[0,"&angmsdag;"],[0,"&angmsdah;"],[0,"&bemptyv;"],[0,"&demptyv;"],[0,"&cemptyv;"],[0,"&raemptyv;"],[0,"&laemptyv;"],[0,"&ohbar;"],[0,"&omid;"],[0,"&opar;"],[1,"&operp;"],[1,"&olcross;"],[0,"&odsold;"],[1,"&olcir;"],[0,"&ofcir;"],[0,"&olt;"],[0,"&ogt;"],[0,"&cirscir;"],[0,"&cirE;"],[0,"&solb;"],[0,"&bsolb;"],[3,"&boxbox;"],[3,"&trisb;"],[0,"&rtriltri;"],[0,{v:"&LeftTriangleBar;",n:824,o:"&NotLeftTriangleBar;"}],[0,{v:"&RightTriangleBar;",n:824,o:"&NotRightTriangleBar;"}],[11,"&iinfin;"],[0,"&infintie;"],[0,"&nvinfin;"],[4,"&eparsl;"],[0,"&smeparsl;"],[0,"&eqvparsl;"],[5,"&blacklozenge;"],[8,"&RuleDelayed;"],[1,"&dsol;"],[9,"&bigodot;"],[0,"&bigoplus;"],[0,"&bigotimes;"],[1,"&biguplus;"],[1,"&bigsqcup;"],[5,"&iiiint;"],[0,"&fpartint;"],[2,"&cirfnint;"],[0,"&awint;"],[0,"&rppolint;"],[0,"&scpolint;"],[0,"&npolint;"],[0,"&pointint;"],[0,"&quatint;"],[0,"&intlarhk;"],[10,"&pluscir;"],[0,"&plusacir;"],[0,"&simplus;"],[0,"&plusdu;"],[0,"&plussim;"],[0,"&plustwo;"],[1,"&mcomma;"],[0,"&minusdu;"],[2,"&loplus;"],[0,"&roplus;"],[0,"&Cross;"],[0,"&timesd;"],[0,"&timesbar;"],[1,"&smashp;"],[0,"&lotimes;"],[0,"&rotimes;"],[0,"&otimesas;"],[0,"&Otimes;"],[0,"&odiv;"],[0,"&triplus;"],[0,"&triminus;"],[0,"&tritime;"],[0,"&intprod;"],[2,"&amalg;"],[0,"&capdot;"],[1,"&ncup;"],[0,"&ncap;"],[0,"&capand;"],[0,"&cupor;"],[0,"&cupcap;"],[0,"&capcup;"],[0,"&cupbrcap;"],[0,"&capbrcup;"],[0,"&cupcup;"],[0,"&capcap;"],[0,"&ccups;"],[0,"&ccaps;"],[2,"&ccupssm;"],[2,"&And;"],[0,"&Or;"],[0,"&andand;"],[0,"&oror;"],[0,"&orslope;"],[0,"&andslope;"],[1,"&andv;"],[0,"&orv;"],[0,"&andd;"],[0,"&ord;"],[1,"&wedbar;"],[6,"&sdote;"],[3,"&simdot;"],[2,{v:"&congdot;",n:824,o:"&ncongdot;"}],[0,"&easter;"],[0,"&apacir;"],[0,{v:"&apE;",n:824,o:"&napE;"}],[0,"&eplus;"],[0,"&pluse;"],[0,"&Esim;"],[0,"&Colone;"],[0,"&Equal;"],[1,"&ddotseq;"],[0,"&equivDD;"],[0,"&ltcir;"],[0,"&gtcir;"],[0,"&ltquest;"],[0,"&gtquest;"],[0,{v:"&leqslant;",n:824,o:"&nleqslant;"}],[0,{v:"&geqslant;",n:824,o:"&ngeqslant;"}],[0,"&lesdot;"],[0,"&gesdot;"],[0,"&lesdoto;"],[0,"&gesdoto;"],[0,"&lesdotor;"],[0,"&gesdotol;"],[0,"&lap;"],[0,"&gap;"],[0,"&lne;"],[0,"&gne;"],[0,"&lnap;"],[0,"&gnap;"],[0,"&lEg;"],[0,"&gEl;"],[0,"&lsime;"],[0,"&gsime;"],[0,"&lsimg;"],[0,"&gsiml;"],[0,"&lgE;"],[0,"&glE;"],[0,"&lesges;"],[0,"&gesles;"],[0,"&els;"],[0,"&egs;"],[0,"&elsdot;"],[0,"&egsdot;"],[0,"&el;"],[0,"&eg;"],[2,"&siml;"],[0,"&simg;"],[0,"&simlE;"],[0,"&simgE;"],[0,{v:"&LessLess;",n:824,o:"&NotNestedLessLess;"}],[0,{v:"&GreaterGreater;",n:824,o:"&NotNestedGreaterGreater;"}],[1,"&glj;"],[0,"&gla;"],[0,"&ltcc;"],[0,"&gtcc;"],[0,"&lescc;"],[0,"&gescc;"],[0,"&smt;"],[0,"&lat;"],[0,{v:"&smte;",n:65024,o:"&smtes;"}],[0,{v:"&late;",n:65024,o:"&lates;"}],[0,"&bumpE;"],[0,{v:"&PrecedesEqual;",n:824,o:"&NotPrecedesEqual;"}],[0,{v:"&sce;",n:824,o:"&NotSucceedsEqual;"}],[2,"&prE;"],[0,"&scE;"],[0,"&precneqq;"],[0,"&scnE;"],[0,"&prap;"],[0,"&scap;"],[0,"&precnapprox;"],[0,"&scnap;"],[0,"&Pr;"],[0,"&Sc;"],[0,"&subdot;"],[0,"&supdot;"],[0,"&subplus;"],[0,"&supplus;"],[0,"&submult;"],[0,"&supmult;"],[0,"&subedot;"],[0,"&supedot;"],[0,{v:"&subE;",n:824,o:"&nsubE;"}],[0,{v:"&supE;",n:824,o:"&nsupE;"}],[0,"&subsim;"],[0,"&supsim;"],[2,{v:"&subnE;",n:65024,o:"&varsubsetneqq;"}],[0,{v:"&supnE;",n:65024,o:"&varsupsetneqq;"}],[2,"&csub;"],[0,"&csup;"],[0,"&csube;"],[0,"&csupe;"],[0,"&subsup;"],[0,"&supsub;"],[0,"&subsub;"],[0,"&supsup;"],[0,"&suphsub;"],[0,"&supdsub;"],[0,"&forkv;"],[0,"&topfork;"],[0,"&mlcp;"],[8,"&Dashv;"],[1,"&Vdashl;"],[0,"&Barv;"],[0,"&vBar;"],[0,"&vBarv;"],[1,"&Vbar;"],[0,"&Not;"],[0,"&bNot;"],[0,"&rnmid;"],[0,"&cirmid;"],[0,"&midcir;"],[0,"&topcir;"],[0,"&nhpar;"],[0,"&parsim;"],[9,{v:"&parsl;",n:8421,o:"&nparsl;"}],[44343,{n:new Map(restoreDiff([[56476,"&Ascr;"],[1,"&Cscr;"],[0,"&Dscr;"],[2,"&Gscr;"],[2,"&Jscr;"],[0,"&Kscr;"],[2,"&Nscr;"],[0,"&Oscr;"],[0,"&Pscr;"],[0,"&Qscr;"],[1,"&Sscr;"],[0,"&Tscr;"],[0,"&Uscr;"],[0,"&Vscr;"],[0,"&Wscr;"],[0,"&Xscr;"],[0,"&Yscr;"],[0,"&Zscr;"],[0,"&ascr;"],[0,"&bscr;"],[0,"&cscr;"],[0,"&dscr;"],[1,"&fscr;"],[1,"&hscr;"],[0,"&iscr;"],[0,"&jscr;"],[0,"&kscr;"],[0,"&lscr;"],[0,"&mscr;"],[0,"&nscr;"],[1,"&pscr;"],[0,"&qscr;"],[0,"&rscr;"],[0,"&sscr;"],[0,"&tscr;"],[0,"&uscr;"],[0,"&vscr;"],[0,"&wscr;"],[0,"&xscr;"],[0,"&yscr;"],[0,"&zscr;"],[52,"&Afr;"],[0,"&Bfr;"],[1,"&Dfr;"],[0,"&Efr;"],[0,"&Ffr;"],[0,"&Gfr;"],[2,"&Jfr;"],[0,"&Kfr;"],[0,"&Lfr;"],[0,"&Mfr;"],[0,"&Nfr;"],[0,"&Ofr;"],[0,"&Pfr;"],[0,"&Qfr;"],[1,"&Sfr;"],[0,"&Tfr;"],[0,"&Ufr;"],[0,"&Vfr;"],[0,"&Wfr;"],[0,"&Xfr;"],[0,"&Yfr;"],[1,"&afr;"],[0,"&bfr;"],[0,"&cfr;"],[0,"&dfr;"],[0,"&efr;"],[0,"&ffr;"],[0,"&gfr;"],[0,"&hfr;"],[0,"&ifr;"],[0,"&jfr;"],[0,"&kfr;"],[0,"&lfr;"],[0,"&mfr;"],[0,"&nfr;"],[0,"&ofr;"],[0,"&pfr;"],[0,"&qfr;"],[0,"&rfr;"],[0,"&sfr;"],[0,"&tfr;"],[0,"&ufr;"],[0,"&vfr;"],[0,"&wfr;"],[0,"&xfr;"],[0,"&yfr;"],[0,"&zfr;"],[0,"&Aopf;"],[0,"&Bopf;"],[1,"&Dopf;"],[0,"&Eopf;"],[0,"&Fopf;"],[0,"&Gopf;"],[1,"&Iopf;"],[0,"&Jopf;"],[0,"&Kopf;"],[0,"&Lopf;"],[0,"&Mopf;"],[1,"&Oopf;"],[3,"&Sopf;"],[0,"&Topf;"],[0,"&Uopf;"],[0,"&Vopf;"],[0,"&Wopf;"],[0,"&Xopf;"],[0,"&Yopf;"],[1,"&aopf;"],[0,"&bopf;"],[0,"&copf;"],[0,"&dopf;"],[0,"&eopf;"],[0,"&fopf;"],[0,"&gopf;"],[0,"&hopf;"],[0,"&iopf;"],[0,"&jopf;"],[0,"&kopf;"],[0,"&lopf;"],[0,"&mopf;"],[0,"&nopf;"],[0,"&oopf;"],[0,"&popf;"],[0,"&qopf;"],[0,"&ropf;"],[0,"&sopf;"],[0,"&topf;"],[0,"&uopf;"],[0,"&vopf;"],[0,"&wopf;"],[0,"&xopf;"],[0,"&yopf;"],[0,"&zopf;"]]))}],[8906,"&fflig;"],[0,"&filig;"],[0,"&fllig;"],[0,"&ffilig;"],[0,"&ffllig;"]]))},8467:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.decodeXMLStrict=a.decodeHTML5Strict=a.decodeHTML4Strict=a.decodeHTML5=a.decodeHTML4=a.decodeHTMLAttribute=a.decodeHTMLStrict=a.decodeHTML=a.decodeXML=a.DecodingMode=a.EntityDecoder=a.encodeHTML5=a.encodeHTML4=a.encodeNonAsciiHTML=a.encodeHTML=a.escapeText=a.escapeAttribute=a.escapeUTF8=a.escape=a.encodeXML=a.encode=a.decodeStrict=a.decode=a.EncodingMode=a.EntityLevel=void 0;var d=p(1469);var t=p(6549);var r=p(6104);var i;(function(e){e[e["XML"]=0]="XML";e[e["HTML"]=1]="HTML"})(i=a.EntityLevel||(a.EntityLevel={}));var l;(function(e){e[e["UTF8"]=0]="UTF8";e[e["ASCII"]=1]="ASCII";e[e["Extensive"]=2]="Extensive";e[e["Attribute"]=3]="Attribute";e[e["Text"]=4]="Text"})(l=a.EncodingMode||(a.EncodingMode={}));function decode(e,a){if(a===void 0){a=i.XML}var p=typeof a==="number"?a:a.level;if(p===i.HTML){var t=typeof a==="object"?a.mode:undefined;return(0,d.decodeHTML)(e,t)}return(0,d.decodeXML)(e)}a.decode=decode;function decodeStrict(e,a){var p;if(a===void 0){a=i.XML}var t=typeof a==="number"?{level:a}:a;(p=t.mode)!==null&&p!==void 0?p:t.mode=d.DecodingMode.Strict;return decode(e,t)}a.decodeStrict=decodeStrict;function encode(e,a){if(a===void 0){a=i.XML}var p=typeof a==="number"?{level:a}:a;if(p.mode===l.UTF8)return(0,r.escapeUTF8)(e);if(p.mode===l.Attribute)return(0,r.escapeAttribute)(e);if(p.mode===l.Text)return(0,r.escapeText)(e);if(p.level===i.HTML){if(p.mode===l.ASCII){return(0,t.encodeNonAsciiHTML)(e)}return(0,t.encodeHTML)(e)}return(0,r.encodeXML)(e)}a.encode=encode;var o=p(6104);Object.defineProperty(a,"encodeXML",{enumerable:true,get:function(){return o.encodeXML}});Object.defineProperty(a,"escape",{enumerable:true,get:function(){return o.escape}});Object.defineProperty(a,"escapeUTF8",{enumerable:true,get:function(){return o.escapeUTF8}});Object.defineProperty(a,"escapeAttribute",{enumerable:true,get:function(){return o.escapeAttribute}});Object.defineProperty(a,"escapeText",{enumerable:true,get:function(){return o.escapeText}});var m=p(6549);Object.defineProperty(a,"encodeHTML",{enumerable:true,get:function(){return m.encodeHTML}});Object.defineProperty(a,"encodeNonAsciiHTML",{enumerable:true,get:function(){return m.encodeNonAsciiHTML}});Object.defineProperty(a,"encodeHTML4",{enumerable:true,get:function(){return m.encodeHTML}});Object.defineProperty(a,"encodeHTML5",{enumerable:true,get:function(){return m.encodeHTML}});var n=p(1469);Object.defineProperty(a,"EntityDecoder",{enumerable:true,get:function(){return n.EntityDecoder}});Object.defineProperty(a,"DecodingMode",{enumerable:true,get:function(){return n.DecodingMode}});Object.defineProperty(a,"decodeXML",{enumerable:true,get:function(){return n.decodeXML}});Object.defineProperty(a,"decodeHTML",{enumerable:true,get:function(){return n.decodeHTML}});Object.defineProperty(a,"decodeHTMLStrict",{enumerable:true,get:function(){return n.decodeHTMLStrict}});Object.defineProperty(a,"decodeHTMLAttribute",{enumerable:true,get:function(){return n.decodeHTMLAttribute}});Object.defineProperty(a,"decodeHTML4",{enumerable:true,get:function(){return n.decodeHTML}});Object.defineProperty(a,"decodeHTML5",{enumerable:true,get:function(){return n.decodeHTML}});Object.defineProperty(a,"decodeHTML4Strict",{enumerable:true,get:function(){return n.decodeHTMLStrict}});Object.defineProperty(a,"decodeHTML5Strict",{enumerable:true,get:function(){return n.decodeHTMLStrict}});Object.defineProperty(a,"decodeXMLStrict",{enumerable:true,get:function(){return n.decodeXML}})},1528:function(e,a,p){e=p.nmd(e);\n/*! https://mths.be/he v1.2.0 by @mathias | MIT license */(function(p){var d=true&&a;var t=true&&e&&e.exports==d&&e;var r=typeof global=="object"&&global;if(r.global===r||r.window===r){p=r}var i=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;var l=/[\\x01-\\x7F]/g;var o=/[\\x01-\\t\\x0B\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g;var m=/<\\u20D2|=\\u20E5|>\\u20D2|\\u205F\\u200A|\\u219D\\u0338|\\u2202\\u0338|\\u2220\\u20D2|\\u2229\\uFE00|\\u222A\\uFE00|\\u223C\\u20D2|\\u223D\\u0331|\\u223E\\u0333|\\u2242\\u0338|\\u224B\\u0338|\\u224D\\u20D2|\\u224E\\u0338|\\u224F\\u0338|\\u2250\\u0338|\\u2261\\u20E5|\\u2264\\u20D2|\\u2265\\u20D2|\\u2266\\u0338|\\u2267\\u0338|\\u2268\\uFE00|\\u2269\\uFE00|\\u226A\\u0338|\\u226A\\u20D2|\\u226B\\u0338|\\u226B\\u20D2|\\u227F\\u0338|\\u2282\\u20D2|\\u2283\\u20D2|\\u228A\\uFE00|\\u228B\\uFE00|\\u228F\\u0338|\\u2290\\u0338|\\u2293\\uFE00|\\u2294\\uFE00|\\u22B4\\u20D2|\\u22B5\\u20D2|\\u22D8\\u0338|\\u22D9\\u0338|\\u22DA\\uFE00|\\u22DB\\uFE00|\\u22F5\\u0338|\\u22F9\\u0338|\\u2933\\u0338|\\u29CF\\u0338|\\u29D0\\u0338|\\u2A6D\\u0338|\\u2A70\\u0338|\\u2A7D\\u0338|\\u2A7E\\u0338|\\u2AA1\\u0338|\\u2AA2\\u0338|\\u2AAC\\uFE00|\\u2AAD\\uFE00|\\u2AAF\\u0338|\\u2AB0\\u0338|\\u2AC5\\u0338|\\u2AC6\\u0338|\\u2ACB\\uFE00|\\u2ACC\\uFE00|\\u2AFD\\u20E5|[\\xA0-\\u0113\\u0116-\\u0122\\u0124-\\u012B\\u012E-\\u014D\\u0150-\\u017E\\u0192\\u01B5\\u01F5\\u0237\\u02C6\\u02C7\\u02D8-\\u02DD\\u0311\\u0391-\\u03A1\\u03A3-\\u03A9\\u03B1-\\u03C9\\u03D1\\u03D2\\u03D5\\u03D6\\u03DC\\u03DD\\u03F0\\u03F1\\u03F5\\u03F6\\u0401-\\u040C\\u040E-\\u044F\\u0451-\\u045C\\u045E\\u045F\\u2002-\\u2005\\u2007-\\u2010\\u2013-\\u2016\\u2018-\\u201A\\u201C-\\u201E\\u2020-\\u2022\\u2025\\u2026\\u2030-\\u2035\\u2039\\u203A\\u203E\\u2041\\u2043\\u2044\\u204F\\u2057\\u205F-\\u2063\\u20AC\\u20DB\\u20DC\\u2102\\u2105\\u210A-\\u2113\\u2115-\\u211E\\u2122\\u2124\\u2127-\\u2129\\u212C\\u212D\\u212F-\\u2131\\u2133-\\u2138\\u2145-\\u2148\\u2153-\\u215E\\u2190-\\u219B\\u219D-\\u21A7\\u21A9-\\u21AE\\u21B0-\\u21B3\\u21B5-\\u21B7\\u21BA-\\u21DB\\u21DD\\u21E4\\u21E5\\u21F5\\u21FD-\\u2205\\u2207-\\u2209\\u220B\\u220C\\u220F-\\u2214\\u2216-\\u2218\\u221A\\u221D-\\u2238\\u223A-\\u2257\\u2259\\u225A\\u225C\\u225F-\\u2262\\u2264-\\u228B\\u228D-\\u229B\\u229D-\\u22A5\\u22A7-\\u22B0\\u22B2-\\u22BB\\u22BD-\\u22DB\\u22DE-\\u22E3\\u22E6-\\u22F7\\u22F9-\\u22FE\\u2305\\u2306\\u2308-\\u2310\\u2312\\u2313\\u2315\\u2316\\u231C-\\u231F\\u2322\\u2323\\u232D\\u232E\\u2336\\u233D\\u233F\\u237C\\u23B0\\u23B1\\u23B4-\\u23B6\\u23DC-\\u23DF\\u23E2\\u23E7\\u2423\\u24C8\\u2500\\u2502\\u250C\\u2510\\u2514\\u2518\\u251C\\u2524\\u252C\\u2534\\u253C\\u2550-\\u256C\\u2580\\u2584\\u2588\\u2591-\\u2593\\u25A1\\u25AA\\u25AB\\u25AD\\u25AE\\u25B1\\u25B3-\\u25B5\\u25B8\\u25B9\\u25BD-\\u25BF\\u25C2\\u25C3\\u25CA\\u25CB\\u25EC\\u25EF\\u25F8-\\u25FC\\u2605\\u2606\\u260E\\u2640\\u2642\\u2660\\u2663\\u2665\\u2666\\u266A\\u266D-\\u266F\\u2713\\u2717\\u2720\\u2736\\u2758\\u2772\\u2773\\u27C8\\u27C9\\u27E6-\\u27ED\\u27F5-\\u27FA\\u27FC\\u27FF\\u2902-\\u2905\\u290C-\\u2913\\u2916\\u2919-\\u2920\\u2923-\\u292A\\u2933\\u2935-\\u2939\\u293C\\u293D\\u2945\\u2948-\\u294B\\u294E-\\u2976\\u2978\\u2979\\u297B-\\u297F\\u2985\\u2986\\u298B-\\u2996\\u299A\\u299C\\u299D\\u29A4-\\u29B7\\u29B9\\u29BB\\u29BC\\u29BE-\\u29C5\\u29C9\\u29CD-\\u29D0\\u29DC-\\u29DE\\u29E3-\\u29E5\\u29EB\\u29F4\\u29F6\\u2A00-\\u2A02\\u2A04\\u2A06\\u2A0C\\u2A0D\\u2A10-\\u2A17\\u2A22-\\u2A27\\u2A29\\u2A2A\\u2A2D-\\u2A31\\u2A33-\\u2A3C\\u2A3F\\u2A40\\u2A42-\\u2A4D\\u2A50\\u2A53-\\u2A58\\u2A5A-\\u2A5D\\u2A5F\\u2A66\\u2A6A\\u2A6D-\\u2A75\\u2A77-\\u2A9A\\u2A9D-\\u2AA2\\u2AA4-\\u2AB0\\u2AB3-\\u2AC8\\u2ACB\\u2ACC\\u2ACF-\\u2ADB\\u2AE4\\u2AE6-\\u2AE9\\u2AEB-\\u2AF3\\u2AFD\\uFB00-\\uFB04]|\\uD835[\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDCCF\\uDD04\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDD6B]/g;var n={"­":"shy","‌":"zwnj","‍":"zwj","‎":"lrm","⁣":"ic","⁢":"it","⁡":"af","‏":"rlm","​":"ZeroWidthSpace","⁠":"NoBreak","̑":"DownBreve","⃛":"tdot","⃜":"DotDot","\\t":"Tab","\\n":"NewLine"," ":"puncsp"," ":"MediumSpace"," ":"thinsp"," ":"hairsp"," ":"emsp13"," ":"ensp"," ":"emsp14"," ":"emsp"," ":"numsp"," ":"nbsp","  ":"ThickSpace","‾":"oline",_:"lowbar","‐":"dash","–":"ndash","—":"mdash","―":"horbar",",":"comma",";":"semi","⁏":"bsemi",":":"colon","⩴":"Colone","!":"excl","¡":"iexcl","?":"quest","¿":"iquest",".":"period","‥":"nldr","…":"mldr","·":"middot","\'":"apos","‘":"lsquo","’":"rsquo","‚":"sbquo","‹":"lsaquo","›":"rsaquo",\'"\':"quot","“":"ldquo","”":"rdquo","„":"bdquo","«":"laquo","»":"raquo","(":"lpar",")":"rpar","[":"lsqb","]":"rsqb","{":"lcub","}":"rcub","⌈":"lceil","⌉":"rceil","⌊":"lfloor","⌋":"rfloor","⦅":"lopar","⦆":"ropar","⦋":"lbrke","⦌":"rbrke","⦍":"lbrkslu","⦎":"rbrksld","⦏":"lbrksld","⦐":"rbrkslu","⦑":"langd","⦒":"rangd","⦓":"lparlt","⦔":"rpargt","⦕":"gtlPar","⦖":"ltrPar","⟦":"lobrk","⟧":"robrk","⟨":"lang","⟩":"rang","⟪":"Lang","⟫":"Rang","⟬":"loang","⟭":"roang","❲":"lbbrk","❳":"rbbrk","‖":"Vert","§":"sect","¶":"para","@":"commat","*":"ast","/":"sol",undefined:null,"&":"amp","#":"num","%":"percnt","‰":"permil","‱":"pertenk","†":"dagger","‡":"Dagger","•":"bull","⁃":"hybull","′":"prime","″":"Prime","‴":"tprime","⁗":"qprime","‵":"bprime","⁁":"caret","`":"grave","´":"acute","˜":"tilde","^":"Hat","¯":"macr","˘":"breve","˙":"dot","¨":"die","˚":"ring","˝":"dblac","¸":"cedil","˛":"ogon","ˆ":"circ","ˇ":"caron","°":"deg","©":"copy","®":"reg","℗":"copysr","℘":"wp","℞":"rx","℧":"mho","℩":"iiota","←":"larr","↚":"nlarr","→":"rarr","↛":"nrarr","↑":"uarr","↓":"darr","↔":"harr","↮":"nharr","↕":"varr","↖":"nwarr","↗":"nearr","↘":"searr","↙":"swarr","↝":"rarrw","↝̸":"nrarrw","↞":"Larr","↟":"Uarr","↠":"Rarr","↡":"Darr","↢":"larrtl","↣":"rarrtl","↤":"mapstoleft","↥":"mapstoup","↦":"map","↧":"mapstodown","↩":"larrhk","↪":"rarrhk","↫":"larrlp","↬":"rarrlp","↭":"harrw","↰":"lsh","↱":"rsh","↲":"ldsh","↳":"rdsh","↵":"crarr","↶":"cularr","↷":"curarr","↺":"olarr","↻":"orarr","↼":"lharu","↽":"lhard","↾":"uharr","↿":"uharl","⇀":"rharu","⇁":"rhard","⇂":"dharr","⇃":"dharl","⇄":"rlarr","⇅":"udarr","⇆":"lrarr","⇇":"llarr","⇈":"uuarr","⇉":"rrarr","⇊":"ddarr","⇋":"lrhar","⇌":"rlhar","⇐":"lArr","⇍":"nlArr","⇑":"uArr","⇒":"rArr","⇏":"nrArr","⇓":"dArr","⇔":"iff","⇎":"nhArr","⇕":"vArr","⇖":"nwArr","⇗":"neArr","⇘":"seArr","⇙":"swArr","⇚":"lAarr","⇛":"rAarr","⇝":"zigrarr","⇤":"larrb","⇥":"rarrb","⇵":"duarr","⇽":"loarr","⇾":"roarr","⇿":"hoarr","∀":"forall","∁":"comp","∂":"part","∂̸":"npart","∃":"exist","∄":"nexist","∅":"empty","∇":"Del","∈":"in","∉":"notin","∋":"ni","∌":"notni","϶":"bepsi","∏":"prod","∐":"coprod","∑":"sum","+":"plus","±":"pm","÷":"div","×":"times","<":"lt","≮":"nlt","<⃒":"nvlt","=":"equals","≠":"ne","=⃥":"bne","⩵":"Equal",">":"gt","≯":"ngt",">⃒":"nvgt","¬":"not","|":"vert","¦":"brvbar","−":"minus","∓":"mp","∔":"plusdo","⁄":"frasl","∖":"setmn","∗":"lowast","∘":"compfn","√":"Sqrt","∝":"prop","∞":"infin","∟":"angrt","∠":"ang","∠⃒":"nang","∡":"angmsd","∢":"angsph","∣":"mid","∤":"nmid","∥":"par","∦":"npar","∧":"and","∨":"or","∩":"cap","∩︀":"caps","∪":"cup","∪︀":"cups","∫":"int","∬":"Int","∭":"tint","⨌":"qint","∮":"oint","∯":"Conint","∰":"Cconint","∱":"cwint","∲":"cwconint","∳":"awconint","∴":"there4","∵":"becaus","∶":"ratio","∷":"Colon","∸":"minusd","∺":"mDDot","∻":"homtht","∼":"sim","≁":"nsim","∼⃒":"nvsim","∽":"bsim","∽̱":"race","∾":"ac","∾̳":"acE","∿":"acd","≀":"wr","≂":"esim","≂̸":"nesim","≃":"sime","≄":"nsime","≅":"cong","≇":"ncong","≆":"simne","≈":"ap","≉":"nap","≊":"ape","≋":"apid","≋̸":"napid","≌":"bcong","≍":"CupCap","≭":"NotCupCap","≍⃒":"nvap","≎":"bump","≎̸":"nbump","≏":"bumpe","≏̸":"nbumpe","≐":"doteq","≐̸":"nedot","≑":"eDot","≒":"efDot","≓":"erDot","≔":"colone","≕":"ecolon","≖":"ecir","≗":"cire","≙":"wedgeq","≚":"veeeq","≜":"trie","≟":"equest","≡":"equiv","≢":"nequiv","≡⃥":"bnequiv","≤":"le","≰":"nle","≤⃒":"nvle","≥":"ge","≱":"nge","≥⃒":"nvge","≦":"lE","≦̸":"nlE","≧":"gE","≧̸":"ngE","≨︀":"lvnE","≨":"lnE","≩":"gnE","≩︀":"gvnE","≪":"ll","≪̸":"nLtv","≪⃒":"nLt","≫":"gg","≫̸":"nGtv","≫⃒":"nGt","≬":"twixt","≲":"lsim","≴":"nlsim","≳":"gsim","≵":"ngsim","≶":"lg","≸":"ntlg","≷":"gl","≹":"ntgl","≺":"pr","⊀":"npr","≻":"sc","⊁":"nsc","≼":"prcue","⋠":"nprcue","≽":"sccue","⋡":"nsccue","≾":"prsim","≿":"scsim","≿̸":"NotSucceedsTilde","⊂":"sub","⊄":"nsub","⊂⃒":"vnsub","⊃":"sup","⊅":"nsup","⊃⃒":"vnsup","⊆":"sube","⊈":"nsube","⊇":"supe","⊉":"nsupe","⊊︀":"vsubne","⊊":"subne","⊋︀":"vsupne","⊋":"supne","⊍":"cupdot","⊎":"uplus","⊏":"sqsub","⊏̸":"NotSquareSubset","⊐":"sqsup","⊐̸":"NotSquareSuperset","⊑":"sqsube","⋢":"nsqsube","⊒":"sqsupe","⋣":"nsqsupe","⊓":"sqcap","⊓︀":"sqcaps","⊔":"sqcup","⊔︀":"sqcups","⊕":"oplus","⊖":"ominus","⊗":"otimes","⊘":"osol","⊙":"odot","⊚":"ocir","⊛":"oast","⊝":"odash","⊞":"plusb","⊟":"minusb","⊠":"timesb","⊡":"sdotb","⊢":"vdash","⊬":"nvdash","⊣":"dashv","⊤":"top","⊥":"bot","⊧":"models","⊨":"vDash","⊭":"nvDash","⊩":"Vdash","⊮":"nVdash","⊪":"Vvdash","⊫":"VDash","⊯":"nVDash","⊰":"prurel","⊲":"vltri","⋪":"nltri","⊳":"vrtri","⋫":"nrtri","⊴":"ltrie","⋬":"nltrie","⊴⃒":"nvltrie","⊵":"rtrie","⋭":"nrtrie","⊵⃒":"nvrtrie","⊶":"origof","⊷":"imof","⊸":"mumap","⊹":"hercon","⊺":"intcal","⊻":"veebar","⊽":"barvee","⊾":"angrtvb","⊿":"lrtri","⋀":"Wedge","⋁":"Vee","⋂":"xcap","⋃":"xcup","⋄":"diam","⋅":"sdot","⋆":"Star","⋇":"divonx","⋈":"bowtie","⋉":"ltimes","⋊":"rtimes","⋋":"lthree","⋌":"rthree","⋍":"bsime","⋎":"cuvee","⋏":"cuwed","⋐":"Sub","⋑":"Sup","⋒":"Cap","⋓":"Cup","⋔":"fork","⋕":"epar","⋖":"ltdot","⋗":"gtdot","⋘":"Ll","⋘̸":"nLl","⋙":"Gg","⋙̸":"nGg","⋚︀":"lesg","⋚":"leg","⋛":"gel","⋛︀":"gesl","⋞":"cuepr","⋟":"cuesc","⋦":"lnsim","⋧":"gnsim","⋨":"prnsim","⋩":"scnsim","⋮":"vellip","⋯":"ctdot","⋰":"utdot","⋱":"dtdot","⋲":"disin","⋳":"isinsv","⋴":"isins","⋵":"isindot","⋵̸":"notindot","⋶":"notinvc","⋷":"notinvb","⋹":"isinE","⋹̸":"notinE","⋺":"nisd","⋻":"xnis","⋼":"nis","⋽":"notnivc","⋾":"notnivb","⌅":"barwed","⌆":"Barwed","⌌":"drcrop","⌍":"dlcrop","⌎":"urcrop","⌏":"ulcrop","⌐":"bnot","⌒":"profline","⌓":"profsurf","⌕":"telrec","⌖":"target","⌜":"ulcorn","⌝":"urcorn","⌞":"dlcorn","⌟":"drcorn","⌢":"frown","⌣":"smile","⌭":"cylcty","⌮":"profalar","⌶":"topbot","⌽":"ovbar","⌿":"solbar","⍼":"angzarr","⎰":"lmoust","⎱":"rmoust","⎴":"tbrk","⎵":"bbrk","⎶":"bbrktbrk","⏜":"OverParenthesis","⏝":"UnderParenthesis","⏞":"OverBrace","⏟":"UnderBrace","⏢":"trpezium","⏧":"elinters","␣":"blank","─":"boxh","│":"boxv","┌":"boxdr","┐":"boxdl","└":"boxur","┘":"boxul","├":"boxvr","┤":"boxvl","┬":"boxhd","┴":"boxhu","┼":"boxvh","═":"boxH","║":"boxV","╒":"boxdR","╓":"boxDr","╔":"boxDR","╕":"boxdL","╖":"boxDl","╗":"boxDL","╘":"boxuR","╙":"boxUr","╚":"boxUR","╛":"boxuL","╜":"boxUl","╝":"boxUL","╞":"boxvR","╟":"boxVr","╠":"boxVR","╡":"boxvL","╢":"boxVl","╣":"boxVL","╤":"boxHd","╥":"boxhD","╦":"boxHD","╧":"boxHu","╨":"boxhU","╩":"boxHU","╪":"boxvH","╫":"boxVh","╬":"boxVH","▀":"uhblk","▄":"lhblk","█":"block","░":"blk14","▒":"blk12","▓":"blk34","□":"squ","▪":"squf","▫":"EmptyVerySmallSquare","▭":"rect","▮":"marker","▱":"fltns","△":"xutri","▴":"utrif","▵":"utri","▸":"rtrif","▹":"rtri","▽":"xdtri","▾":"dtrif","▿":"dtri","◂":"ltrif","◃":"ltri","◊":"loz","○":"cir","◬":"tridot","◯":"xcirc","◸":"ultri","◹":"urtri","◺":"lltri","◻":"EmptySmallSquare","◼":"FilledSmallSquare","★":"starf","☆":"star","☎":"phone","♀":"female","♂":"male","♠":"spades","♣":"clubs","♥":"hearts","♦":"diams","♪":"sung","✓":"check","✗":"cross","✠":"malt","✶":"sext","❘":"VerticalSeparator","⟈":"bsolhsub","⟉":"suphsol","⟵":"xlarr","⟶":"xrarr","⟷":"xharr","⟸":"xlArr","⟹":"xrArr","⟺":"xhArr","⟼":"xmap","⟿":"dzigrarr","⤂":"nvlArr","⤃":"nvrArr","⤄":"nvHarr","⤅":"Map","⤌":"lbarr","⤍":"rbarr","⤎":"lBarr","⤏":"rBarr","⤐":"RBarr","⤑":"DDotrahd","⤒":"UpArrowBar","⤓":"DownArrowBar","⤖":"Rarrtl","⤙":"latail","⤚":"ratail","⤛":"lAtail","⤜":"rAtail","⤝":"larrfs","⤞":"rarrfs","⤟":"larrbfs","⤠":"rarrbfs","⤣":"nwarhk","⤤":"nearhk","⤥":"searhk","⤦":"swarhk","⤧":"nwnear","⤨":"toea","⤩":"tosa","⤪":"swnwar","⤳":"rarrc","⤳̸":"nrarrc","⤵":"cudarrr","⤶":"ldca","⤷":"rdca","⤸":"cudarrl","⤹":"larrpl","⤼":"curarrm","⤽":"cularrp","⥅":"rarrpl","⥈":"harrcir","⥉":"Uarrocir","⥊":"lurdshar","⥋":"ldrushar","⥎":"LeftRightVector","⥏":"RightUpDownVector","⥐":"DownLeftRightVector","⥑":"LeftUpDownVector","⥒":"LeftVectorBar","⥓":"RightVectorBar","⥔":"RightUpVectorBar","⥕":"RightDownVectorBar","⥖":"DownLeftVectorBar","⥗":"DownRightVectorBar","⥘":"LeftUpVectorBar","⥙":"LeftDownVectorBar","⥚":"LeftTeeVector","⥛":"RightTeeVector","⥜":"RightUpTeeVector","⥝":"RightDownTeeVector","⥞":"DownLeftTeeVector","⥟":"DownRightTeeVector","⥠":"LeftUpTeeVector","⥡":"LeftDownTeeVector","⥢":"lHar","⥣":"uHar","⥤":"rHar","⥥":"dHar","⥦":"luruhar","⥧":"ldrdhar","⥨":"ruluhar","⥩":"rdldhar","⥪":"lharul","⥫":"llhard","⥬":"rharul","⥭":"lrhard","⥮":"udhar","⥯":"duhar","⥰":"RoundImplies","⥱":"erarr","⥲":"simrarr","⥳":"larrsim","⥴":"rarrsim","⥵":"rarrap","⥶":"ltlarr","⥸":"gtrarr","⥹":"subrarr","⥻":"suplarr","⥼":"lfisht","⥽":"rfisht","⥾":"ufisht","⥿":"dfisht","⦚":"vzigzag","⦜":"vangrt","⦝":"angrtvbd","⦤":"ange","⦥":"range","⦦":"dwangle","⦧":"uwangle","⦨":"angmsdaa","⦩":"angmsdab","⦪":"angmsdac","⦫":"angmsdad","⦬":"angmsdae","⦭":"angmsdaf","⦮":"angmsdag","⦯":"angmsdah","⦰":"bemptyv","⦱":"demptyv","⦲":"cemptyv","⦳":"raemptyv","⦴":"laemptyv","⦵":"ohbar","⦶":"omid","⦷":"opar","⦹":"operp","⦻":"olcross","⦼":"odsold","⦾":"olcir","⦿":"ofcir","⧀":"olt","⧁":"ogt","⧂":"cirscir","⧃":"cirE","⧄":"solb","⧅":"bsolb","⧉":"boxbox","⧍":"trisb","⧎":"rtriltri","⧏":"LeftTriangleBar","⧏̸":"NotLeftTriangleBar","⧐":"RightTriangleBar","⧐̸":"NotRightTriangleBar","⧜":"iinfin","⧝":"infintie","⧞":"nvinfin","⧣":"eparsl","⧤":"smeparsl","⧥":"eqvparsl","⧫":"lozf","⧴":"RuleDelayed","⧶":"dsol","⨀":"xodot","⨁":"xoplus","⨂":"xotime","⨄":"xuplus","⨆":"xsqcup","⨍":"fpartint","⨐":"cirfnint","⨑":"awint","⨒":"rppolint","⨓":"scpolint","⨔":"npolint","⨕":"pointint","⨖":"quatint","⨗":"intlarhk","⨢":"pluscir","⨣":"plusacir","⨤":"simplus","⨥":"plusdu","⨦":"plussim","⨧":"plustwo","⨩":"mcomma","⨪":"minusdu","⨭":"loplus","⨮":"roplus","⨯":"Cross","⨰":"timesd","⨱":"timesbar","⨳":"smashp","⨴":"lotimes","⨵":"rotimes","⨶":"otimesas","⨷":"Otimes","⨸":"odiv","⨹":"triplus","⨺":"triminus","⨻":"tritime","⨼":"iprod","⨿":"amalg","⩀":"capdot","⩂":"ncup","⩃":"ncap","⩄":"capand","⩅":"cupor","⩆":"cupcap","⩇":"capcup","⩈":"cupbrcap","⩉":"capbrcup","⩊":"cupcup","⩋":"capcap","⩌":"ccups","⩍":"ccaps","⩐":"ccupssm","⩓":"And","⩔":"Or","⩕":"andand","⩖":"oror","⩗":"orslope","⩘":"andslope","⩚":"andv","⩛":"orv","⩜":"andd","⩝":"ord","⩟":"wedbar","⩦":"sdote","⩪":"simdot","⩭":"congdot","⩭̸":"ncongdot","⩮":"easter","⩯":"apacir","⩰":"apE","⩰̸":"napE","⩱":"eplus","⩲":"pluse","⩳":"Esim","⩷":"eDDot","⩸":"equivDD","⩹":"ltcir","⩺":"gtcir","⩻":"ltquest","⩼":"gtquest","⩽":"les","⩽̸":"nles","⩾":"ges","⩾̸":"nges","⩿":"lesdot","⪀":"gesdot","⪁":"lesdoto","⪂":"gesdoto","⪃":"lesdotor","⪄":"gesdotol","⪅":"lap","⪆":"gap","⪇":"lne","⪈":"gne","⪉":"lnap","⪊":"gnap","⪋":"lEg","⪌":"gEl","⪍":"lsime","⪎":"gsime","⪏":"lsimg","⪐":"gsiml","⪑":"lgE","⪒":"glE","⪓":"lesges","⪔":"gesles","⪕":"els","⪖":"egs","⪗":"elsdot","⪘":"egsdot","⪙":"el","⪚":"eg","⪝":"siml","⪞":"simg","⪟":"simlE","⪠":"simgE","⪡":"LessLess","⪡̸":"NotNestedLessLess","⪢":"GreaterGreater","⪢̸":"NotNestedGreaterGreater","⪤":"glj","⪥":"gla","⪦":"ltcc","⪧":"gtcc","⪨":"lescc","⪩":"gescc","⪪":"smt","⪫":"lat","⪬":"smte","⪬︀":"smtes","⪭":"late","⪭︀":"lates","⪮":"bumpE","⪯":"pre","⪯̸":"npre","⪰":"sce","⪰̸":"nsce","⪳":"prE","⪴":"scE","⪵":"prnE","⪶":"scnE","⪷":"prap","⪸":"scap","⪹":"prnap","⪺":"scnap","⪻":"Pr","⪼":"Sc","⪽":"subdot","⪾":"supdot","⪿":"subplus","⫀":"supplus","⫁":"submult","⫂":"supmult","⫃":"subedot","⫄":"supedot","⫅":"subE","⫅̸":"nsubE","⫆":"supE","⫆̸":"nsupE","⫇":"subsim","⫈":"supsim","⫋︀":"vsubnE","⫋":"subnE","⫌︀":"vsupnE","⫌":"supnE","⫏":"csub","⫐":"csup","⫑":"csube","⫒":"csupe","⫓":"subsup","⫔":"supsub","⫕":"subsub","⫖":"supsup","⫗":"suphsub","⫘":"supdsub","⫙":"forkv","⫚":"topfork","⫛":"mlcp","⫤":"Dashv","⫦":"Vdashl","⫧":"Barv","⫨":"vBar","⫩":"vBarv","⫫":"Vbar","⫬":"Not","⫭":"bNot","⫮":"rnmid","⫯":"cirmid","⫰":"midcir","⫱":"topcir","⫲":"nhpar","⫳":"parsim","⫽":"parsl","⫽⃥":"nparsl","♭":"flat","♮":"natur","♯":"sharp","¤":"curren","¢":"cent",$:"dollar","£":"pound","¥":"yen","€":"euro","¹":"sup1","½":"half","⅓":"frac13","¼":"frac14","⅕":"frac15","⅙":"frac16","⅛":"frac18","²":"sup2","⅔":"frac23","⅖":"frac25","³":"sup3","¾":"frac34","⅗":"frac35","⅜":"frac38","⅘":"frac45","⅚":"frac56","⅝":"frac58","⅞":"frac78","𝒶":"ascr","𝕒":"aopf","𝔞":"afr","𝔸":"Aopf","𝔄":"Afr","𝒜":"Ascr","ª":"ordf","á":"aacute","Á":"Aacute","à":"agrave","À":"Agrave","ă":"abreve","Ă":"Abreve","â":"acirc","Â":"Acirc","å":"aring","Å":"angst","ä":"auml","Ä":"Auml","ã":"atilde","Ã":"Atilde","ą":"aogon","Ą":"Aogon","ā":"amacr","Ā":"Amacr","æ":"aelig","Æ":"AElig","𝒷":"bscr","𝕓":"bopf","𝔟":"bfr","𝔹":"Bopf","ℬ":"Bscr","𝔅":"Bfr","𝔠":"cfr","𝒸":"cscr","𝕔":"copf","ℭ":"Cfr","𝒞":"Cscr","ℂ":"Copf","ć":"cacute","Ć":"Cacute","ĉ":"ccirc","Ĉ":"Ccirc","č":"ccaron","Č":"Ccaron","ċ":"cdot","Ċ":"Cdot","ç":"ccedil","Ç":"Ccedil","℅":"incare","𝔡":"dfr","ⅆ":"dd","𝕕":"dopf","𝒹":"dscr","𝒟":"Dscr","𝔇":"Dfr","ⅅ":"DD","𝔻":"Dopf","ď":"dcaron","Ď":"Dcaron","đ":"dstrok","Đ":"Dstrok","ð":"eth","Ð":"ETH","ⅇ":"ee","ℯ":"escr","𝔢":"efr","𝕖":"eopf","ℰ":"Escr","𝔈":"Efr","𝔼":"Eopf","é":"eacute","É":"Eacute","è":"egrave","È":"Egrave","ê":"ecirc","Ê":"Ecirc","ě":"ecaron","Ě":"Ecaron","ë":"euml","Ë":"Euml","ė":"edot","Ė":"Edot","ę":"eogon","Ę":"Eogon","ē":"emacr","Ē":"Emacr","𝔣":"ffr","𝕗":"fopf","𝒻":"fscr","𝔉":"Ffr","𝔽":"Fopf","ℱ":"Fscr","ﬀ":"fflig","ﬃ":"ffilig","ﬄ":"ffllig","ﬁ":"filig",fj:"fjlig","ﬂ":"fllig","ƒ":"fnof","ℊ":"gscr","𝕘":"gopf","𝔤":"gfr","𝒢":"Gscr","𝔾":"Gopf","𝔊":"Gfr","ǵ":"gacute","ğ":"gbreve","Ğ":"Gbreve","ĝ":"gcirc","Ĝ":"Gcirc","ġ":"gdot","Ġ":"Gdot","Ģ":"Gcedil","𝔥":"hfr","ℎ":"planckh","𝒽":"hscr","𝕙":"hopf","ℋ":"Hscr","ℌ":"Hfr","ℍ":"Hopf","ĥ":"hcirc","Ĥ":"Hcirc","ℏ":"hbar","ħ":"hstrok","Ħ":"Hstrok","𝕚":"iopf","𝔦":"ifr","𝒾":"iscr","ⅈ":"ii","𝕀":"Iopf","ℐ":"Iscr","ℑ":"Im","í":"iacute","Í":"Iacute","ì":"igrave","Ì":"Igrave","î":"icirc","Î":"Icirc","ï":"iuml","Ï":"Iuml","ĩ":"itilde","Ĩ":"Itilde","İ":"Idot","į":"iogon","Į":"Iogon","ī":"imacr","Ī":"Imacr","ĳ":"ijlig","Ĳ":"IJlig","ı":"imath","𝒿":"jscr","𝕛":"jopf","𝔧":"jfr","𝒥":"Jscr","𝔍":"Jfr","𝕁":"Jopf","ĵ":"jcirc","Ĵ":"Jcirc","ȷ":"jmath","𝕜":"kopf","𝓀":"kscr","𝔨":"kfr","𝒦":"Kscr","𝕂":"Kopf","𝔎":"Kfr","ķ":"kcedil","Ķ":"Kcedil","𝔩":"lfr","𝓁":"lscr","ℓ":"ell","𝕝":"lopf","ℒ":"Lscr","𝔏":"Lfr","𝕃":"Lopf","ĺ":"lacute","Ĺ":"Lacute","ľ":"lcaron","Ľ":"Lcaron","ļ":"lcedil","Ļ":"Lcedil","ł":"lstrok","Ł":"Lstrok","ŀ":"lmidot","Ŀ":"Lmidot","𝔪":"mfr","𝕞":"mopf","𝓂":"mscr","𝔐":"Mfr","𝕄":"Mopf","ℳ":"Mscr","𝔫":"nfr","𝕟":"nopf","𝓃":"nscr","ℕ":"Nopf","𝒩":"Nscr","𝔑":"Nfr","ń":"nacute","Ń":"Nacute","ň":"ncaron","Ň":"Ncaron","ñ":"ntilde","Ñ":"Ntilde","ņ":"ncedil","Ņ":"Ncedil","№":"numero","ŋ":"eng","Ŋ":"ENG","𝕠":"oopf","𝔬":"ofr","ℴ":"oscr","𝒪":"Oscr","𝔒":"Ofr","𝕆":"Oopf","º":"ordm","ó":"oacute","Ó":"Oacute","ò":"ograve","Ò":"Ograve","ô":"ocirc","Ô":"Ocirc","ö":"ouml","Ö":"Ouml","ő":"odblac","Ő":"Odblac","õ":"otilde","Õ":"Otilde","ø":"oslash","Ø":"Oslash","ō":"omacr","Ō":"Omacr","œ":"oelig","Œ":"OElig","𝔭":"pfr","𝓅":"pscr","𝕡":"popf","ℙ":"Popf","𝔓":"Pfr","𝒫":"Pscr","𝕢":"qopf","𝔮":"qfr","𝓆":"qscr","𝒬":"Qscr","𝔔":"Qfr","ℚ":"Qopf","ĸ":"kgreen","𝔯":"rfr","𝕣":"ropf","𝓇":"rscr","ℛ":"Rscr","ℜ":"Re","ℝ":"Ropf","ŕ":"racute","Ŕ":"Racute","ř":"rcaron","Ř":"Rcaron","ŗ":"rcedil","Ŗ":"Rcedil","𝕤":"sopf","𝓈":"sscr","𝔰":"sfr","𝕊":"Sopf","𝔖":"Sfr","𝒮":"Sscr","Ⓢ":"oS","ś":"sacute","Ś":"Sacute","ŝ":"scirc","Ŝ":"Scirc","š":"scaron","Š":"Scaron","ş":"scedil","Ş":"Scedil","ß":"szlig","𝔱":"tfr","𝓉":"tscr","𝕥":"topf","𝒯":"Tscr","𝔗":"Tfr","𝕋":"Topf","ť":"tcaron","Ť":"Tcaron","ţ":"tcedil","Ţ":"Tcedil","™":"trade","ŧ":"tstrok","Ŧ":"Tstrok","𝓊":"uscr","𝕦":"uopf","𝔲":"ufr","𝕌":"Uopf","𝔘":"Ufr","𝒰":"Uscr","ú":"uacute","Ú":"Uacute","ù":"ugrave","Ù":"Ugrave","ŭ":"ubreve","Ŭ":"Ubreve","û":"ucirc","Û":"Ucirc","ů":"uring","Ů":"Uring","ü":"uuml","Ü":"Uuml","ű":"udblac","Ű":"Udblac","ũ":"utilde","Ũ":"Utilde","ų":"uogon","Ų":"Uogon","ū":"umacr","Ū":"Umacr","𝔳":"vfr","𝕧":"vopf","𝓋":"vscr","𝔙":"Vfr","𝕍":"Vopf","𝒱":"Vscr","𝕨":"wopf","𝓌":"wscr","𝔴":"wfr","𝒲":"Wscr","𝕎":"Wopf","𝔚":"Wfr","ŵ":"wcirc","Ŵ":"Wcirc","𝔵":"xfr","𝓍":"xscr","𝕩":"xopf","𝕏":"Xopf","𝔛":"Xfr","𝒳":"Xscr","𝔶":"yfr","𝓎":"yscr","𝕪":"yopf","𝒴":"Yscr","𝔜":"Yfr","𝕐":"Yopf","ý":"yacute","Ý":"Yacute","ŷ":"ycirc","Ŷ":"Ycirc","ÿ":"yuml","Ÿ":"Yuml","𝓏":"zscr","𝔷":"zfr","𝕫":"zopf","ℨ":"Zfr","ℤ":"Zopf","𝒵":"Zscr","ź":"zacute","Ź":"Zacute","ž":"zcaron","Ž":"Zcaron","ż":"zdot","Ż":"Zdot","Ƶ":"imped","þ":"thorn","Þ":"THORN","ŉ":"napos","α":"alpha","Α":"Alpha","β":"beta","Β":"Beta","γ":"gamma","Γ":"Gamma","δ":"delta","Δ":"Delta","ε":"epsi","ϵ":"epsiv","Ε":"Epsilon","ϝ":"gammad","Ϝ":"Gammad","ζ":"zeta","Ζ":"Zeta","η":"eta","Η":"Eta","θ":"theta","ϑ":"thetav","Θ":"Theta","ι":"iota","Ι":"Iota","κ":"kappa","ϰ":"kappav","Κ":"Kappa","λ":"lambda","Λ":"Lambda","μ":"mu","µ":"micro","Μ":"Mu","ν":"nu","Ν":"Nu","ξ":"xi","Ξ":"Xi","ο":"omicron","Ο":"Omicron","π":"pi","ϖ":"piv","Π":"Pi","ρ":"rho","ϱ":"rhov","Ρ":"Rho","σ":"sigma","Σ":"Sigma","ς":"sigmaf","τ":"tau","Τ":"Tau","υ":"upsi","Υ":"Upsilon","ϒ":"Upsi","φ":"phi","ϕ":"phiv","Φ":"Phi","χ":"chi","Χ":"Chi","ψ":"psi","Ψ":"Psi","ω":"omega","Ω":"ohm","а":"acy","А":"Acy","б":"bcy","Б":"Bcy","в":"vcy","В":"Vcy","г":"gcy","Г":"Gcy","ѓ":"gjcy","Ѓ":"GJcy","д":"dcy","Д":"Dcy","ђ":"djcy","Ђ":"DJcy","е":"iecy","Е":"IEcy","ё":"iocy","Ё":"IOcy","є":"jukcy","Є":"Jukcy","ж":"zhcy","Ж":"ZHcy","з":"zcy","З":"Zcy","ѕ":"dscy","Ѕ":"DScy","и":"icy","И":"Icy","і":"iukcy","І":"Iukcy","ї":"yicy","Ї":"YIcy","й":"jcy","Й":"Jcy","ј":"jsercy","Ј":"Jsercy","к":"kcy","К":"Kcy","ќ":"kjcy","Ќ":"KJcy","л":"lcy","Л":"Lcy","љ":"ljcy","Љ":"LJcy","м":"mcy","М":"Mcy","н":"ncy","Н":"Ncy","њ":"njcy","Њ":"NJcy","о":"ocy","О":"Ocy","п":"pcy","П":"Pcy","р":"rcy","Р":"Rcy","с":"scy","С":"Scy","т":"tcy","Т":"Tcy","ћ":"tshcy","Ћ":"TSHcy","у":"ucy","У":"Ucy","ў":"ubrcy","Ў":"Ubrcy","ф":"fcy","Ф":"Fcy","х":"khcy","Х":"KHcy","ц":"tscy","Ц":"TScy","ч":"chcy","Ч":"CHcy","џ":"dzcy","Џ":"DZcy","ш":"shcy","Ш":"SHcy","щ":"shchcy","Щ":"SHCHcy","ъ":"hardcy","Ъ":"HARDcy","ы":"ycy","Ы":"Ycy","ь":"softcy","Ь":"SOFTcy","э":"ecy","Э":"Ecy","ю":"yucy","Ю":"YUcy","я":"yacy","Я":"YAcy","ℵ":"aleph","ℶ":"beth","ℷ":"gimel","ℸ":"daleth"};var s=/["&\'<>`]/g;var u={\'"\':"&quot;","&":"&amp;","\'":"&#x27;","<":"&lt;",">":"&gt;","`":"&#x60;"};var c=/&#(?:[xX][^a-fA-F0-9]|[^0-9xX])/;var f=/[\\0-\\x08\\x0B\\x0E-\\x1F\\x7F-\\x9F\\uFDD0-\\uFDEF\\uFFFE\\uFFFF]|[\\uD83F\\uD87F\\uD8BF\\uD8FF\\uD93F\\uD97F\\uD9BF\\uD9FF\\uDA3F\\uDA7F\\uDABF\\uDAFF\\uDB3F\\uDB7F\\uDBBF\\uDBFF][\\uDFFE\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;var v=/&(CounterClockwiseContourIntegral|DoubleLongLeftRightArrow|ClockwiseContourIntegral|NotNestedGreaterGreater|NotSquareSupersetEqual|DiacriticalDoubleAcute|NotRightTriangleEqual|NotSucceedsSlantEqual|NotPrecedesSlantEqual|CloseCurlyDoubleQuote|NegativeVeryThinSpace|DoubleContourIntegral|FilledVerySmallSquare|CapitalDifferentialD|OpenCurlyDoubleQuote|EmptyVerySmallSquare|NestedGreaterGreater|DoubleLongRightArrow|NotLeftTriangleEqual|NotGreaterSlantEqual|ReverseUpEquilibrium|DoubleLeftRightArrow|NotSquareSubsetEqual|NotDoubleVerticalBar|RightArrowLeftArrow|NotGreaterFullEqual|NotRightTriangleBar|SquareSupersetEqual|DownLeftRightVector|DoubleLongLeftArrow|leftrightsquigarrow|LeftArrowRightArrow|NegativeMediumSpace|blacktriangleright|RightDownVectorBar|PrecedesSlantEqual|RightDoubleBracket|SucceedsSlantEqual|NotLeftTriangleBar|RightTriangleEqual|SquareIntersection|RightDownTeeVector|ReverseEquilibrium|NegativeThickSpace|longleftrightarrow|Longleftrightarrow|LongLeftRightArrow|DownRightTeeVector|DownRightVectorBar|GreaterSlantEqual|SquareSubsetEqual|LeftDownVectorBar|LeftDoubleBracket|VerticalSeparator|rightleftharpoons|NotGreaterGreater|NotSquareSuperset|blacktriangleleft|blacktriangledown|NegativeThinSpace|LeftDownTeeVector|NotLessSlantEqual|leftrightharpoons|DoubleUpDownArrow|DoubleVerticalBar|LeftTriangleEqual|FilledSmallSquare|twoheadrightarrow|NotNestedLessLess|DownLeftTeeVector|DownLeftVectorBar|RightAngleBracket|NotTildeFullEqual|NotReverseElement|RightUpDownVector|DiacriticalTilde|NotSucceedsTilde|circlearrowright|NotPrecedesEqual|rightharpoondown|DoubleRightArrow|NotSucceedsEqual|NonBreakingSpace|NotRightTriangle|LessEqualGreater|RightUpTeeVector|LeftAngleBracket|GreaterFullEqual|DownArrowUpArrow|RightUpVectorBar|twoheadleftarrow|GreaterEqualLess|downharpoonright|RightTriangleBar|ntrianglerighteq|NotSupersetEqual|LeftUpDownVector|DiacriticalAcute|rightrightarrows|vartriangleright|UpArrowDownArrow|DiacriticalGrave|UnderParenthesis|EmptySmallSquare|LeftUpVectorBar|leftrightarrows|DownRightVector|downharpoonleft|trianglerighteq|ShortRightArrow|OverParenthesis|DoubleLeftArrow|DoubleDownArrow|NotSquareSubset|bigtriangledown|ntrianglelefteq|UpperRightArrow|curvearrowright|vartriangleleft|NotLeftTriangle|nleftrightarrow|LowerRightArrow|NotHumpDownHump|NotGreaterTilde|rightthreetimes|LeftUpTeeVector|NotGreaterEqual|straightepsilon|LeftTriangleBar|rightsquigarrow|ContourIntegral|rightleftarrows|CloseCurlyQuote|RightDownVector|LeftRightVector|nLeftrightarrow|leftharpoondown|circlearrowleft|SquareSuperset|OpenCurlyQuote|hookrightarrow|HorizontalLine|DiacriticalDot|NotLessGreater|ntriangleright|DoubleRightTee|InvisibleComma|InvisibleTimes|LowerLeftArrow|DownLeftVector|NotSubsetEqual|curvearrowleft|trianglelefteq|NotVerticalBar|TildeFullEqual|downdownarrows|NotGreaterLess|RightTeeVector|ZeroWidthSpace|looparrowright|LongRightArrow|doublebarwedge|ShortLeftArrow|ShortDownArrow|RightVectorBar|GreaterGreater|ReverseElement|rightharpoonup|LessSlantEqual|leftthreetimes|upharpoonright|rightarrowtail|LeftDownVector|Longrightarrow|NestedLessLess|UpperLeftArrow|nshortparallel|leftleftarrows|leftrightarrow|Leftrightarrow|LeftRightArrow|longrightarrow|upharpoonleft|RightArrowBar|ApplyFunction|LeftTeeVector|leftarrowtail|NotEqualTilde|varsubsetneqq|varsupsetneqq|RightTeeArrow|SucceedsEqual|SucceedsTilde|LeftVectorBar|SupersetEqual|hookleftarrow|DifferentialD|VerticalTilde|VeryThinSpace|blacktriangle|bigtriangleup|LessFullEqual|divideontimes|leftharpoonup|UpEquilibrium|ntriangleleft|RightTriangle|measuredangle|shortparallel|longleftarrow|Longleftarrow|LongLeftArrow|DoubleLeftTee|Poincareplane|PrecedesEqual|triangleright|DoubleUpArrow|RightUpVector|fallingdotseq|looparrowleft|PrecedesTilde|NotTildeEqual|NotTildeTilde|smallsetminus|Proportional|triangleleft|triangledown|UnderBracket|NotHumpEqual|exponentiale|ExponentialE|NotLessTilde|HilbertSpace|RightCeiling|blacklozenge|varsupsetneq|HumpDownHump|GreaterEqual|VerticalLine|LeftTeeArrow|NotLessEqual|DownTeeArrow|LeftTriangle|varsubsetneq|Intersection|NotCongruent|DownArrowBar|LeftUpVector|LeftArrowBar|risingdotseq|GreaterTilde|RoundImplies|SquareSubset|ShortUpArrow|NotSuperset|quaternions|precnapprox|backepsilon|preccurlyeq|OverBracket|blacksquare|MediumSpace|VerticalBar|circledcirc|circleddash|CircleMinus|CircleTimes|LessGreater|curlyeqprec|curlyeqsucc|diamondsuit|UpDownArrow|Updownarrow|RuleDelayed|Rrightarrow|updownarrow|RightVector|nRightarrow|nrightarrow|eqslantless|LeftCeiling|Equilibrium|SmallCircle|expectation|NotSucceeds|thickapprox|GreaterLess|SquareUnion|NotPrecedes|NotLessLess|straightphi|succnapprox|succcurlyeq|SubsetEqual|sqsupseteq|Proportion|Laplacetrf|ImaginaryI|supsetneqq|NotGreater|gtreqqless|NotElement|ThickSpace|TildeEqual|TildeTilde|Fouriertrf|rmoustache|EqualTilde|eqslantgtr|UnderBrace|LeftVector|UpArrowBar|nLeftarrow|nsubseteqq|subsetneqq|nsupseteqq|nleftarrow|succapprox|lessapprox|UpTeeArrow|upuparrows|curlywedge|lesseqqgtr|varepsilon|varnothing|RightFloor|complement|CirclePlus|sqsubseteq|Lleftarrow|circledast|RightArrow|Rightarrow|rightarrow|lmoustache|Bernoullis|precapprox|mapstoleft|mapstodown|longmapsto|dotsquare|downarrow|DoubleDot|nsubseteq|supsetneq|leftarrow|nsupseteq|subsetneq|ThinSpace|ngeqslant|subseteqq|HumpEqual|NotSubset|triangleq|NotCupCap|lesseqgtr|heartsuit|TripleDot|Leftarrow|Coproduct|Congruent|varpropto|complexes|gvertneqq|LeftArrow|LessTilde|supseteqq|MinusPlus|CircleDot|nleqslant|NotExists|gtreqless|nparallel|UnionPlus|LeftFloor|checkmark|CenterDot|centerdot|Mellintrf|gtrapprox|bigotimes|OverBrace|spadesuit|therefore|pitchfork|rationals|PlusMinus|Backslash|Therefore|DownBreve|backsimeq|backprime|DownArrow|nshortmid|Downarrow|lvertneqq|eqvparsl|imagline|imagpart|infintie|integers|Integral|intercal|LessLess|Uarrocir|intlarhk|sqsupset|angmsdaf|sqsubset|llcorner|vartheta|cupbrcap|lnapprox|Superset|SuchThat|succnsim|succneqq|angmsdag|biguplus|curlyvee|trpezium|Succeeds|NotTilde|bigwedge|angmsdah|angrtvbd|triminus|cwconint|fpartint|lrcorner|smeparsl|subseteq|urcorner|lurdshar|laemptyv|DDotrahd|approxeq|ldrushar|awconint|mapstoup|backcong|shortmid|triangle|geqslant|gesdotol|timesbar|circledR|circledS|setminus|multimap|naturals|scpolint|ncongdot|RightTee|boxminus|gnapprox|boxtimes|andslope|thicksim|angmsdaa|varsigma|cirfnint|rtriltri|angmsdab|rppolint|angmsdac|barwedge|drbkarow|clubsuit|thetasym|bsolhsub|capbrcup|dzigrarr|doteqdot|DotEqual|dotminus|UnderBar|NotEqual|realpart|otimesas|ulcorner|hksearow|hkswarow|parallel|PartialD|elinters|emptyset|plusacir|bbrktbrk|angmsdad|pointint|bigoplus|angmsdae|Precedes|bigsqcup|varkappa|notindot|supseteq|precneqq|precnsim|profalar|profline|profsurf|leqslant|lesdotor|raemptyv|subplus|notnivb|notnivc|subrarr|zigrarr|vzigzag|submult|subedot|Element|between|cirscir|larrbfs|larrsim|lotimes|lbrksld|lbrkslu|lozenge|ldrdhar|dbkarow|bigcirc|epsilon|simrarr|simplus|ltquest|Epsilon|luruhar|gtquest|maltese|npolint|eqcolon|npreceq|bigodot|ddagger|gtrless|bnequiv|harrcir|ddotseq|equivDD|backsim|demptyv|nsqsube|nsqsupe|Upsilon|nsubset|upsilon|minusdu|nsucceq|swarrow|nsupset|coloneq|searrow|boxplus|napprox|natural|asympeq|alefsym|congdot|nearrow|bigstar|diamond|supplus|tritime|LeftTee|nvinfin|triplus|NewLine|nvltrie|nvrtrie|nwarrow|nexists|Diamond|ruluhar|Implies|supmult|angzarr|suplarr|suphsub|questeq|because|digamma|Because|olcross|bemptyv|omicron|Omicron|rotimes|NoBreak|intprod|angrtvb|orderof|uwangle|suphsol|lesdoto|orslope|DownTee|realine|cudarrl|rdldhar|OverBar|supedot|lessdot|supdsub|topfork|succsim|rbrkslu|rbrksld|pertenk|cudarrr|isindot|planckh|lessgtr|pluscir|gesdoto|plussim|plustwo|lesssim|cularrp|rarrsim|Cayleys|notinva|notinvb|notinvc|UpArrow|Uparrow|uparrow|NotLess|dwangle|precsim|Product|curarrm|Cconint|dotplus|rarrbfs|ccupssm|Cedilla|cemptyv|notniva|quatint|frac35|frac38|frac45|frac56|frac58|frac78|tridot|xoplus|gacute|gammad|Gammad|lfisht|lfloor|bigcup|sqsupe|gbreve|Gbreve|lharul|sqsube|sqcups|Gcedil|apacir|llhard|lmidot|Lmidot|lmoust|andand|sqcaps|approx|Abreve|spades|circeq|tprime|divide|topcir|Assign|topbot|gesdot|divonx|xuplus|timesd|gesles|atilde|solbar|SOFTcy|loplus|timesb|lowast|lowbar|dlcorn|dlcrop|softcy|dollar|lparlt|thksim|lrhard|Atilde|lsaquo|smashp|bigvee|thinsp|wreath|bkarow|lsquor|lstrok|Lstrok|lthree|ltimes|ltlarr|DotDot|simdot|ltrPar|weierp|xsqcup|angmsd|sigmav|sigmaf|zeetrf|Zcaron|zcaron|mapsto|vsupne|thetav|cirmid|marker|mcomma|Zacute|vsubnE|there4|gtlPar|vsubne|bottom|gtrarr|SHCHcy|shchcy|midast|midcir|middot|minusb|minusd|gtrdot|bowtie|sfrown|mnplus|models|colone|seswar|Colone|mstpos|searhk|gtrsim|nacute|Nacute|boxbox|telrec|hairsp|Tcedil|nbumpe|scnsim|ncaron|Ncaron|ncedil|Ncedil|hamilt|Scedil|nearhk|hardcy|HARDcy|tcedil|Tcaron|commat|nequiv|nesear|tcaron|target|hearts|nexist|varrho|scedil|Scaron|scaron|hellip|Sacute|sacute|hercon|swnwar|compfn|rtimes|rthree|rsquor|rsaquo|zacute|wedgeq|homtht|barvee|barwed|Barwed|rpargt|horbar|conint|swarhk|roplus|nltrie|hslash|hstrok|Hstrok|rmoust|Conint|bprime|hybull|hyphen|iacute|Iacute|supsup|supsub|supsim|varphi|coprod|brvbar|agrave|Supset|supset|igrave|Igrave|notinE|Agrave|iiiint|iinfin|copysr|wedbar|Verbar|vangrt|becaus|incare|verbar|inodot|bullet|drcorn|intcal|drcrop|cularr|vellip|Utilde|bumpeq|cupcap|dstrok|Dstrok|CupCap|cupcup|cupdot|eacute|Eacute|supdot|iquest|easter|ecaron|Ecaron|ecolon|isinsv|utilde|itilde|Itilde|curarr|succeq|Bumpeq|cacute|ulcrop|nparsl|Cacute|nprcue|egrave|Egrave|nrarrc|nrarrw|subsup|subsub|nrtrie|jsercy|nsccue|Jsercy|kappav|kcedil|Kcedil|subsim|ulcorn|nsimeq|egsdot|veebar|kgreen|capand|elsdot|Subset|subset|curren|aacute|lacute|Lacute|emptyv|ntilde|Ntilde|lagran|lambda|Lambda|capcap|Ugrave|langle|subdot|emsp13|numero|emsp14|nvdash|nvDash|nVdash|nVDash|ugrave|ufisht|nvHarr|larrfs|nvlArr|larrhk|larrlp|larrpl|nvrArr|Udblac|nwarhk|larrtl|nwnear|oacute|Oacute|latail|lAtail|sstarf|lbrace|odblac|Odblac|lbrack|udblac|odsold|eparsl|lcaron|Lcaron|ograve|Ograve|lcedil|Lcedil|Aacute|ssmile|ssetmn|squarf|ldquor|capcup|ominus|cylcty|rharul|eqcirc|dagger|rfloor|rfisht|Dagger|daleth|equals|origof|capdot|equest|dcaron|Dcaron|rdquor|oslash|Oslash|otilde|Otilde|otimes|Otimes|urcrop|Ubreve|ubreve|Yacute|Uacute|uacute|Rcedil|rcedil|urcorn|parsim|Rcaron|Vdashl|rcaron|Tstrok|percnt|period|permil|Exists|yacute|rbrack|rbrace|phmmat|ccaron|Ccaron|planck|ccedil|plankv|tstrok|female|plusdo|plusdu|ffilig|plusmn|ffllig|Ccedil|rAtail|dfisht|bernou|ratail|Rarrtl|rarrtl|angsph|rarrpl|rarrlp|rarrhk|xwedge|xotime|forall|ForAll|Vvdash|vsupnE|preceq|bigcap|frac12|frac13|frac14|primes|rarrfs|prnsim|frac15|Square|frac16|square|lesdot|frac18|frac23|propto|prurel|rarrap|rangle|puncsp|frac25|Racute|qprime|racute|lesges|frac34|abreve|AElig|eqsim|utdot|setmn|urtri|Equal|Uring|seArr|uring|searr|dashv|Dashv|mumap|nabla|iogon|Iogon|sdote|sdotb|scsim|napid|napos|equiv|natur|Acirc|dblac|erarr|nbump|iprod|erDot|ucirc|awint|esdot|angrt|ncong|isinE|scnap|Scirc|scirc|ndash|isins|Ubrcy|nearr|neArr|isinv|nedot|ubrcy|acute|Ycirc|iukcy|Iukcy|xutri|nesim|caret|jcirc|Jcirc|caron|twixt|ddarr|sccue|exist|jmath|sbquo|ngeqq|angst|ccaps|lceil|ngsim|UpTee|delta|Delta|rtrif|nharr|nhArr|nhpar|rtrie|jukcy|Jukcy|kappa|rsquo|Kappa|nlarr|nlArr|TSHcy|rrarr|aogon|Aogon|fflig|xrarr|tshcy|ccirc|nleqq|filig|upsih|nless|dharl|nlsim|fjlig|ropar|nltri|dharr|robrk|roarr|fllig|fltns|roang|rnmid|subnE|subne|lAarr|trisb|Ccirc|acirc|ccups|blank|VDash|forkv|Vdash|langd|cedil|blk12|blk14|laquo|strns|diams|notin|vDash|larrb|blk34|block|disin|uplus|vdash|vBarv|aelig|starf|Wedge|check|xrArr|lates|lbarr|lBarr|notni|lbbrk|bcong|frasl|lbrke|frown|vrtri|vprop|vnsup|gamma|Gamma|wedge|xodot|bdquo|srarr|doteq|ldquo|boxdl|boxdL|gcirc|Gcirc|boxDl|boxDL|boxdr|boxdR|boxDr|TRADE|trade|rlhar|boxDR|vnsub|npart|vltri|rlarr|boxhd|boxhD|nprec|gescc|nrarr|nrArr|boxHd|boxHD|boxhu|boxhU|nrtri|boxHu|clubs|boxHU|times|colon|Colon|gimel|xlArr|Tilde|nsime|tilde|nsmid|nspar|THORN|thorn|xlarr|nsube|nsubE|thkap|xhArr|comma|nsucc|boxul|boxuL|nsupe|nsupE|gneqq|gnsim|boxUl|boxUL|grave|boxur|boxuR|boxUr|boxUR|lescc|angle|bepsi|boxvh|varpi|boxvH|numsp|Theta|gsime|gsiml|theta|boxVh|boxVH|boxvl|gtcir|gtdot|boxvL|boxVl|boxVL|crarr|cross|Cross|nvsim|boxvr|nwarr|nwArr|sqsup|dtdot|Uogon|lhard|lharu|dtrif|ocirc|Ocirc|lhblk|duarr|odash|sqsub|Hacek|sqcup|llarr|duhar|oelig|OElig|ofcir|boxvR|uogon|lltri|boxVr|csube|uuarr|ohbar|csupe|ctdot|olarr|olcir|harrw|oline|sqcap|omacr|Omacr|omega|Omega|boxVR|aleph|lneqq|lnsim|loang|loarr|rharu|lobrk|hcirc|operp|oplus|rhard|Hcirc|orarr|Union|order|ecirc|Ecirc|cuepr|szlig|cuesc|breve|reals|eDDot|Breve|hoarr|lopar|utrif|rdquo|Umacr|umacr|efDot|swArr|ultri|alpha|rceil|ovbar|swarr|Wcirc|wcirc|smtes|smile|bsemi|lrarr|aring|parsl|lrhar|bsime|uhblk|lrtri|cupor|Aring|uharr|uharl|slarr|rbrke|bsolb|lsime|rbbrk|RBarr|lsimg|phone|rBarr|rbarr|icirc|lsquo|Icirc|emacr|Emacr|ratio|simne|plusb|simlE|simgE|simeq|pluse|ltcir|ltdot|empty|xharr|xdtri|iexcl|Alpha|ltrie|rarrw|pound|ltrif|xcirc|bumpe|prcue|bumpE|asymp|amacr|cuvee|Sigma|sigma|iiint|udhar|iiota|ijlig|IJlig|supnE|imacr|Imacr|prime|Prime|image|prnap|eogon|Eogon|rarrc|mdash|mDDot|cuwed|imath|supne|imped|Amacr|udarr|prsim|micro|rarrb|cwint|raquo|infin|eplus|range|rangd|Ucirc|radic|minus|amalg|veeeq|rAarr|epsiv|ycirc|quest|sharp|quot|zwnj|Qscr|race|qscr|Qopf|qopf|qint|rang|Rang|Zscr|zscr|Zopf|zopf|rarr|rArr|Rarr|Pscr|pscr|prop|prod|prnE|prec|ZHcy|zhcy|prap|Zeta|zeta|Popf|popf|Zdot|plus|zdot|Yuml|yuml|phiv|YUcy|yucy|Yscr|yscr|perp|Yopf|yopf|part|para|YIcy|Ouml|rcub|yicy|YAcy|rdca|ouml|osol|Oscr|rdsh|yacy|real|oscr|xvee|andd|rect|andv|Xscr|oror|ordm|ordf|xscr|ange|aopf|Aopf|rHar|Xopf|opar|Oopf|xopf|xnis|rhov|oopf|omid|xmap|oint|apid|apos|ogon|ascr|Ascr|odot|odiv|xcup|xcap|ocir|oast|nvlt|nvle|nvgt|nvge|nvap|Wscr|wscr|auml|ntlg|ntgl|nsup|nsub|nsim|Nscr|nscr|nsce|Wopf|ring|npre|wopf|npar|Auml|Barv|bbrk|Nopf|nopf|nmid|nLtv|beta|ropf|Ropf|Beta|beth|nles|rpar|nleq|bnot|bNot|nldr|NJcy|rscr|Rscr|Vscr|vscr|rsqb|njcy|bopf|nisd|Bopf|rtri|Vopf|nGtv|ngtr|vopf|boxh|boxH|boxv|nges|ngeq|boxV|bscr|scap|Bscr|bsim|Vert|vert|bsol|bull|bump|caps|cdot|ncup|scnE|ncap|nbsp|napE|Cdot|cent|sdot|Vbar|nang|vBar|chcy|Mscr|mscr|sect|semi|CHcy|Mopf|mopf|sext|circ|cire|mldr|mlcp|cirE|comp|shcy|SHcy|vArr|varr|cong|copf|Copf|copy|COPY|malt|male|macr|lvnE|cscr|ltri|sime|ltcc|simg|Cscr|siml|csub|Uuml|lsqb|lsim|uuml|csup|Lscr|lscr|utri|smid|lpar|cups|smte|lozf|darr|Lopf|Uscr|solb|lopf|sopf|Sopf|lneq|uscr|spar|dArr|lnap|Darr|dash|Sqrt|LJcy|ljcy|lHar|dHar|Upsi|upsi|diam|lesg|djcy|DJcy|leqq|dopf|Dopf|dscr|Dscr|dscy|ldsh|ldca|squf|DScy|sscr|Sscr|dsol|lcub|late|star|Star|Uopf|Larr|lArr|larr|uopf|dtri|dzcy|sube|subE|Lang|lang|Kscr|kscr|Kopf|kopf|KJcy|kjcy|KHcy|khcy|DZcy|ecir|edot|eDot|Jscr|jscr|succ|Jopf|jopf|Edot|uHar|emsp|ensp|Iuml|iuml|eopf|isin|Iscr|iscr|Eopf|epar|sung|epsi|escr|sup1|sup2|sup3|Iota|iota|supe|supE|Iopf|iopf|IOcy|iocy|Escr|esim|Esim|imof|Uarr|QUOT|uArr|uarr|euml|IEcy|iecy|Idot|Euml|euro|excl|Hscr|hscr|Hopf|hopf|TScy|tscy|Tscr|hbar|tscr|flat|tbrk|fnof|hArr|harr|half|fopf|Fopf|tdot|gvnE|fork|trie|gtcc|fscr|Fscr|gdot|gsim|Gscr|gscr|Gopf|gopf|gneq|Gdot|tosa|gnap|Topf|topf|geqq|toea|GJcy|gjcy|tint|gesl|mid|Sfr|ggg|top|ges|gla|glE|glj|geq|gne|gEl|gel|gnE|Gcy|gcy|gap|Tfr|tfr|Tcy|tcy|Hat|Tau|Ffr|tau|Tab|hfr|Hfr|ffr|Fcy|fcy|icy|Icy|iff|ETH|eth|ifr|Ifr|Eta|eta|int|Int|Sup|sup|ucy|Ucy|Sum|sum|jcy|ENG|ufr|Ufr|eng|Jcy|jfr|els|ell|egs|Efr|efr|Jfr|uml|kcy|Kcy|Ecy|ecy|kfr|Kfr|lap|Sub|sub|lat|lcy|Lcy|leg|Dot|dot|lEg|leq|les|squ|div|die|lfr|Lfr|lgE|Dfr|dfr|Del|deg|Dcy|dcy|lne|lnE|sol|loz|smt|Cup|lrm|cup|lsh|Lsh|sim|shy|map|Map|mcy|Mcy|mfr|Mfr|mho|gfr|Gfr|sfr|cir|Chi|chi|nap|Cfr|vcy|Vcy|cfr|Scy|scy|ncy|Ncy|vee|Vee|Cap|cap|nfr|scE|sce|Nfr|nge|ngE|nGg|vfr|Vfr|ngt|bot|nGt|nis|niv|Rsh|rsh|nle|nlE|bne|Bfr|bfr|nLl|nlt|nLt|Bcy|bcy|not|Not|rlm|wfr|Wfr|npr|nsc|num|ocy|ast|Ocy|ofr|xfr|Xfr|Ofr|ogt|ohm|apE|olt|Rho|ape|rho|Rfr|rfr|ord|REG|ang|reg|orv|And|and|AMP|Rcy|amp|Afr|ycy|Ycy|yen|yfr|Yfr|rcy|par|pcy|Pcy|pfr|Pfr|phi|Phi|afr|Acy|acy|zcy|Zcy|piv|acE|acd|zfr|Zfr|pre|prE|psi|Psi|qfr|Qfr|zwj|Or|ge|Gg|gt|gg|el|oS|lt|Lt|LT|Re|lg|gl|eg|ne|Im|it|le|DD|wp|wr|nu|Nu|dd|lE|Sc|sc|pi|Pi|ee|af|ll|Ll|rx|gE|xi|pm|Xi|ic|pr|Pr|in|ni|mp|mu|ac|Mu|or|ap|Gt|GT|ii);|&(Aacute|Agrave|Atilde|Ccedil|Eacute|Egrave|Iacute|Igrave|Ntilde|Oacute|Ograve|Oslash|Otilde|Uacute|Ugrave|Yacute|aacute|agrave|atilde|brvbar|ccedil|curren|divide|eacute|egrave|frac12|frac14|frac34|iacute|igrave|iquest|middot|ntilde|oacute|ograve|oslash|otilde|plusmn|uacute|ugrave|yacute|AElig|Acirc|Aring|Ecirc|Icirc|Ocirc|THORN|Ucirc|acirc|acute|aelig|aring|cedil|ecirc|icirc|iexcl|laquo|micro|ocirc|pound|raquo|szlig|thorn|times|ucirc|Auml|COPY|Euml|Iuml|Ouml|QUOT|Uuml|auml|cent|copy|euml|iuml|macr|nbsp|ordf|ordm|ouml|para|quot|sect|sup1|sup2|sup3|uuml|yuml|AMP|ETH|REG|amp|deg|eth|not|reg|shy|uml|yen|GT|LT|gt|lt)(?!;)([=a-zA-Z0-9]?)|&#([0-9]+)(;?)|&#[xX]([a-fA-F0-9]+)(;?)|&([0-9a-zA-Z]+)/g;var h={aacute:"á",Aacute:"Á",abreve:"ă",Abreve:"Ă",ac:"∾",acd:"∿",acE:"∾̳",acirc:"â",Acirc:"Â",acute:"´",acy:"а",Acy:"А",aelig:"æ",AElig:"Æ",af:"⁡",afr:"𝔞",Afr:"𝔄",agrave:"à",Agrave:"À",alefsym:"ℵ",aleph:"ℵ",alpha:"α",Alpha:"Α",amacr:"ā",Amacr:"Ā",amalg:"⨿",amp:"&",AMP:"&",and:"∧",And:"⩓",andand:"⩕",andd:"⩜",andslope:"⩘",andv:"⩚",ang:"∠",ange:"⦤",angle:"∠",angmsd:"∡",angmsdaa:"⦨",angmsdab:"⦩",angmsdac:"⦪",angmsdad:"⦫",angmsdae:"⦬",angmsdaf:"⦭",angmsdag:"⦮",angmsdah:"⦯",angrt:"∟",angrtvb:"⊾",angrtvbd:"⦝",angsph:"∢",angst:"Å",angzarr:"⍼",aogon:"ą",Aogon:"Ą",aopf:"𝕒",Aopf:"𝔸",ap:"≈",apacir:"⩯",ape:"≊",apE:"⩰",apid:"≋",apos:"\'",ApplyFunction:"⁡",approx:"≈",approxeq:"≊",aring:"å",Aring:"Å",ascr:"𝒶",Ascr:"𝒜",Assign:"≔",ast:"*",asymp:"≈",asympeq:"≍",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",awconint:"∳",awint:"⨑",backcong:"≌",backepsilon:"϶",backprime:"‵",backsim:"∽",backsimeq:"⋍",Backslash:"∖",Barv:"⫧",barvee:"⊽",barwed:"⌅",Barwed:"⌆",barwedge:"⌅",bbrk:"⎵",bbrktbrk:"⎶",bcong:"≌",bcy:"б",Bcy:"Б",bdquo:"„",becaus:"∵",because:"∵",Because:"∵",bemptyv:"⦰",bepsi:"϶",bernou:"ℬ",Bernoullis:"ℬ",beta:"β",Beta:"Β",beth:"ℶ",between:"≬",bfr:"𝔟",Bfr:"𝔅",bigcap:"⋂",bigcirc:"◯",bigcup:"⋃",bigodot:"⨀",bigoplus:"⨁",bigotimes:"⨂",bigsqcup:"⨆",bigstar:"★",bigtriangledown:"▽",bigtriangleup:"△",biguplus:"⨄",bigvee:"⋁",bigwedge:"⋀",bkarow:"⤍",blacklozenge:"⧫",blacksquare:"▪",blacktriangle:"▴",blacktriangledown:"▾",blacktriangleleft:"◂",blacktriangleright:"▸",blank:"␣",blk12:"▒",blk14:"░",blk34:"▓",block:"█",bne:"=⃥",bnequiv:"≡⃥",bnot:"⌐",bNot:"⫭",bopf:"𝕓",Bopf:"𝔹",bot:"⊥",bottom:"⊥",bowtie:"⋈",boxbox:"⧉",boxdl:"┐",boxdL:"╕",boxDl:"╖",boxDL:"╗",boxdr:"┌",boxdR:"╒",boxDr:"╓",boxDR:"╔",boxh:"─",boxH:"═",boxhd:"┬",boxhD:"╥",boxHd:"╤",boxHD:"╦",boxhu:"┴",boxhU:"╨",boxHu:"╧",boxHU:"╩",boxminus:"⊟",boxplus:"⊞",boxtimes:"⊠",boxul:"┘",boxuL:"╛",boxUl:"╜",boxUL:"╝",boxur:"└",boxuR:"╘",boxUr:"╙",boxUR:"╚",boxv:"│",boxV:"║",boxvh:"┼",boxvH:"╪",boxVh:"╫",boxVH:"╬",boxvl:"┤",boxvL:"╡",boxVl:"╢",boxVL:"╣",boxvr:"├",boxvR:"╞",boxVr:"╟",boxVR:"╠",bprime:"‵",breve:"˘",Breve:"˘",brvbar:"¦",bscr:"𝒷",Bscr:"ℬ",bsemi:"⁏",bsim:"∽",bsime:"⋍",bsol:"\\\\",bsolb:"⧅",bsolhsub:"⟈",bull:"•",bullet:"•",bump:"≎",bumpe:"≏",bumpE:"⪮",bumpeq:"≏",Bumpeq:"≎",cacute:"ć",Cacute:"Ć",cap:"∩",Cap:"⋒",capand:"⩄",capbrcup:"⩉",capcap:"⩋",capcup:"⩇",capdot:"⩀",CapitalDifferentialD:"ⅅ",caps:"∩︀",caret:"⁁",caron:"ˇ",Cayleys:"ℭ",ccaps:"⩍",ccaron:"č",Ccaron:"Č",ccedil:"ç",Ccedil:"Ç",ccirc:"ĉ",Ccirc:"Ĉ",Cconint:"∰",ccups:"⩌",ccupssm:"⩐",cdot:"ċ",Cdot:"Ċ",cedil:"¸",Cedilla:"¸",cemptyv:"⦲",cent:"¢",centerdot:"·",CenterDot:"·",cfr:"𝔠",Cfr:"ℭ",chcy:"ч",CHcy:"Ч",check:"✓",checkmark:"✓",chi:"χ",Chi:"Χ",cir:"○",circ:"ˆ",circeq:"≗",circlearrowleft:"↺",circlearrowright:"↻",circledast:"⊛",circledcirc:"⊚",circleddash:"⊝",CircleDot:"⊙",circledR:"®",circledS:"Ⓢ",CircleMinus:"⊖",CirclePlus:"⊕",CircleTimes:"⊗",cire:"≗",cirE:"⧃",cirfnint:"⨐",cirmid:"⫯",cirscir:"⧂",ClockwiseContourIntegral:"∲",CloseCurlyDoubleQuote:"”",CloseCurlyQuote:"’",clubs:"♣",clubsuit:"♣",colon:":",Colon:"∷",colone:"≔",Colone:"⩴",coloneq:"≔",comma:",",commat:"@",comp:"∁",compfn:"∘",complement:"∁",complexes:"ℂ",cong:"≅",congdot:"⩭",Congruent:"≡",conint:"∮",Conint:"∯",ContourIntegral:"∮",copf:"𝕔",Copf:"ℂ",coprod:"∐",Coproduct:"∐",copy:"©",COPY:"©",copysr:"℗",CounterClockwiseContourIntegral:"∳",crarr:"↵",cross:"✗",Cross:"⨯",cscr:"𝒸",Cscr:"𝒞",csub:"⫏",csube:"⫑",csup:"⫐",csupe:"⫒",ctdot:"⋯",cudarrl:"⤸",cudarrr:"⤵",cuepr:"⋞",cuesc:"⋟",cularr:"↶",cularrp:"⤽",cup:"∪",Cup:"⋓",cupbrcap:"⩈",cupcap:"⩆",CupCap:"≍",cupcup:"⩊",cupdot:"⊍",cupor:"⩅",cups:"∪︀",curarr:"↷",curarrm:"⤼",curlyeqprec:"⋞",curlyeqsucc:"⋟",curlyvee:"⋎",curlywedge:"⋏",curren:"¤",curvearrowleft:"↶",curvearrowright:"↷",cuvee:"⋎",cuwed:"⋏",cwconint:"∲",cwint:"∱",cylcty:"⌭",dagger:"†",Dagger:"‡",daleth:"ℸ",darr:"↓",dArr:"⇓",Darr:"↡",dash:"‐",dashv:"⊣",Dashv:"⫤",dbkarow:"⤏",dblac:"˝",dcaron:"ď",Dcaron:"Ď",dcy:"д",Dcy:"Д",dd:"ⅆ",DD:"ⅅ",ddagger:"‡",ddarr:"⇊",DDotrahd:"⤑",ddotseq:"⩷",deg:"°",Del:"∇",delta:"δ",Delta:"Δ",demptyv:"⦱",dfisht:"⥿",dfr:"𝔡",Dfr:"𝔇",dHar:"⥥",dharl:"⇃",dharr:"⇂",DiacriticalAcute:"´",DiacriticalDot:"˙",DiacriticalDoubleAcute:"˝",DiacriticalGrave:"`",DiacriticalTilde:"˜",diam:"⋄",diamond:"⋄",Diamond:"⋄",diamondsuit:"♦",diams:"♦",die:"¨",DifferentialD:"ⅆ",digamma:"ϝ",disin:"⋲",div:"÷",divide:"÷",divideontimes:"⋇",divonx:"⋇",djcy:"ђ",DJcy:"Ђ",dlcorn:"⌞",dlcrop:"⌍",dollar:"$",dopf:"𝕕",Dopf:"𝔻",dot:"˙",Dot:"¨",DotDot:"⃜",doteq:"≐",doteqdot:"≑",DotEqual:"≐",dotminus:"∸",dotplus:"∔",dotsquare:"⊡",doublebarwedge:"⌆",DoubleContourIntegral:"∯",DoubleDot:"¨",DoubleDownArrow:"⇓",DoubleLeftArrow:"⇐",DoubleLeftRightArrow:"⇔",DoubleLeftTee:"⫤",DoubleLongLeftArrow:"⟸",DoubleLongLeftRightArrow:"⟺",DoubleLongRightArrow:"⟹",DoubleRightArrow:"⇒",DoubleRightTee:"⊨",DoubleUpArrow:"⇑",DoubleUpDownArrow:"⇕",DoubleVerticalBar:"∥",downarrow:"↓",Downarrow:"⇓",DownArrow:"↓",DownArrowBar:"⤓",DownArrowUpArrow:"⇵",DownBreve:"̑",downdownarrows:"⇊",downharpoonleft:"⇃",downharpoonright:"⇂",DownLeftRightVector:"⥐",DownLeftTeeVector:"⥞",DownLeftVector:"↽",DownLeftVectorBar:"⥖",DownRightTeeVector:"⥟",DownRightVector:"⇁",DownRightVectorBar:"⥗",DownTee:"⊤",DownTeeArrow:"↧",drbkarow:"⤐",drcorn:"⌟",drcrop:"⌌",dscr:"𝒹",Dscr:"𝒟",dscy:"ѕ",DScy:"Ѕ",dsol:"⧶",dstrok:"đ",Dstrok:"Đ",dtdot:"⋱",dtri:"▿",dtrif:"▾",duarr:"⇵",duhar:"⥯",dwangle:"⦦",dzcy:"џ",DZcy:"Џ",dzigrarr:"⟿",eacute:"é",Eacute:"É",easter:"⩮",ecaron:"ě",Ecaron:"Ě",ecir:"≖",ecirc:"ê",Ecirc:"Ê",ecolon:"≕",ecy:"э",Ecy:"Э",eDDot:"⩷",edot:"ė",eDot:"≑",Edot:"Ė",ee:"ⅇ",efDot:"≒",efr:"𝔢",Efr:"𝔈",eg:"⪚",egrave:"è",Egrave:"È",egs:"⪖",egsdot:"⪘",el:"⪙",Element:"∈",elinters:"⏧",ell:"ℓ",els:"⪕",elsdot:"⪗",emacr:"ē",Emacr:"Ē",empty:"∅",emptyset:"∅",EmptySmallSquare:"◻",emptyv:"∅",EmptyVerySmallSquare:"▫",emsp:" ",emsp13:" ",emsp14:" ",eng:"ŋ",ENG:"Ŋ",ensp:" ",eogon:"ę",Eogon:"Ę",eopf:"𝕖",Eopf:"𝔼",epar:"⋕",eparsl:"⧣",eplus:"⩱",epsi:"ε",epsilon:"ε",Epsilon:"Ε",epsiv:"ϵ",eqcirc:"≖",eqcolon:"≕",eqsim:"≂",eqslantgtr:"⪖",eqslantless:"⪕",Equal:"⩵",equals:"=",EqualTilde:"≂",equest:"≟",Equilibrium:"⇌",equiv:"≡",equivDD:"⩸",eqvparsl:"⧥",erarr:"⥱",erDot:"≓",escr:"ℯ",Escr:"ℰ",esdot:"≐",esim:"≂",Esim:"⩳",eta:"η",Eta:"Η",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",euro:"€",excl:"!",exist:"∃",Exists:"∃",expectation:"ℰ",exponentiale:"ⅇ",ExponentialE:"ⅇ",fallingdotseq:"≒",fcy:"ф",Fcy:"Ф",female:"♀",ffilig:"ﬃ",fflig:"ﬀ",ffllig:"ﬄ",ffr:"𝔣",Ffr:"𝔉",filig:"ﬁ",FilledSmallSquare:"◼",FilledVerySmallSquare:"▪",fjlig:"fj",flat:"♭",fllig:"ﬂ",fltns:"▱",fnof:"ƒ",fopf:"𝕗",Fopf:"𝔽",forall:"∀",ForAll:"∀",fork:"⋔",forkv:"⫙",Fouriertrf:"ℱ",fpartint:"⨍",frac12:"½",frac13:"⅓",frac14:"¼",frac15:"⅕",frac16:"⅙",frac18:"⅛",frac23:"⅔",frac25:"⅖",frac34:"¾",frac35:"⅗",frac38:"⅜",frac45:"⅘",frac56:"⅚",frac58:"⅝",frac78:"⅞",frasl:"⁄",frown:"⌢",fscr:"𝒻",Fscr:"ℱ",gacute:"ǵ",gamma:"γ",Gamma:"Γ",gammad:"ϝ",Gammad:"Ϝ",gap:"⪆",gbreve:"ğ",Gbreve:"Ğ",Gcedil:"Ģ",gcirc:"ĝ",Gcirc:"Ĝ",gcy:"г",Gcy:"Г",gdot:"ġ",Gdot:"Ġ",ge:"≥",gE:"≧",gel:"⋛",gEl:"⪌",geq:"≥",geqq:"≧",geqslant:"⩾",ges:"⩾",gescc:"⪩",gesdot:"⪀",gesdoto:"⪂",gesdotol:"⪄",gesl:"⋛︀",gesles:"⪔",gfr:"𝔤",Gfr:"𝔊",gg:"≫",Gg:"⋙",ggg:"⋙",gimel:"ℷ",gjcy:"ѓ",GJcy:"Ѓ",gl:"≷",gla:"⪥",glE:"⪒",glj:"⪤",gnap:"⪊",gnapprox:"⪊",gne:"⪈",gnE:"≩",gneq:"⪈",gneqq:"≩",gnsim:"⋧",gopf:"𝕘",Gopf:"𝔾",grave:"`",GreaterEqual:"≥",GreaterEqualLess:"⋛",GreaterFullEqual:"≧",GreaterGreater:"⪢",GreaterLess:"≷",GreaterSlantEqual:"⩾",GreaterTilde:"≳",gscr:"ℊ",Gscr:"𝒢",gsim:"≳",gsime:"⪎",gsiml:"⪐",gt:">",Gt:"≫",GT:">",gtcc:"⪧",gtcir:"⩺",gtdot:"⋗",gtlPar:"⦕",gtquest:"⩼",gtrapprox:"⪆",gtrarr:"⥸",gtrdot:"⋗",gtreqless:"⋛",gtreqqless:"⪌",gtrless:"≷",gtrsim:"≳",gvertneqq:"≩︀",gvnE:"≩︀",Hacek:"ˇ",hairsp:" ",half:"½",hamilt:"ℋ",hardcy:"ъ",HARDcy:"Ъ",harr:"↔",hArr:"⇔",harrcir:"⥈",harrw:"↭",Hat:"^",hbar:"ℏ",hcirc:"ĥ",Hcirc:"Ĥ",hearts:"♥",heartsuit:"♥",hellip:"…",hercon:"⊹",hfr:"𝔥",Hfr:"ℌ",HilbertSpace:"ℋ",hksearow:"⤥",hkswarow:"⤦",hoarr:"⇿",homtht:"∻",hookleftarrow:"↩",hookrightarrow:"↪",hopf:"𝕙",Hopf:"ℍ",horbar:"―",HorizontalLine:"─",hscr:"𝒽",Hscr:"ℋ",hslash:"ℏ",hstrok:"ħ",Hstrok:"Ħ",HumpDownHump:"≎",HumpEqual:"≏",hybull:"⁃",hyphen:"‐",iacute:"í",Iacute:"Í",ic:"⁣",icirc:"î",Icirc:"Î",icy:"и",Icy:"И",Idot:"İ",iecy:"е",IEcy:"Е",iexcl:"¡",iff:"⇔",ifr:"𝔦",Ifr:"ℑ",igrave:"ì",Igrave:"Ì",ii:"ⅈ",iiiint:"⨌",iiint:"∭",iinfin:"⧜",iiota:"℩",ijlig:"ĳ",IJlig:"Ĳ",Im:"ℑ",imacr:"ī",Imacr:"Ī",image:"ℑ",ImaginaryI:"ⅈ",imagline:"ℐ",imagpart:"ℑ",imath:"ı",imof:"⊷",imped:"Ƶ",Implies:"⇒",in:"∈",incare:"℅",infin:"∞",infintie:"⧝",inodot:"ı",int:"∫",Int:"∬",intcal:"⊺",integers:"ℤ",Integral:"∫",intercal:"⊺",Intersection:"⋂",intlarhk:"⨗",intprod:"⨼",InvisibleComma:"⁣",InvisibleTimes:"⁢",iocy:"ё",IOcy:"Ё",iogon:"į",Iogon:"Į",iopf:"𝕚",Iopf:"𝕀",iota:"ι",Iota:"Ι",iprod:"⨼",iquest:"¿",iscr:"𝒾",Iscr:"ℐ",isin:"∈",isindot:"⋵",isinE:"⋹",isins:"⋴",isinsv:"⋳",isinv:"∈",it:"⁢",itilde:"ĩ",Itilde:"Ĩ",iukcy:"і",Iukcy:"І",iuml:"ï",Iuml:"Ï",jcirc:"ĵ",Jcirc:"Ĵ",jcy:"й",Jcy:"Й",jfr:"𝔧",Jfr:"𝔍",jmath:"ȷ",jopf:"𝕛",Jopf:"𝕁",jscr:"𝒿",Jscr:"𝒥",jsercy:"ј",Jsercy:"Ј",jukcy:"є",Jukcy:"Є",kappa:"κ",Kappa:"Κ",kappav:"ϰ",kcedil:"ķ",Kcedil:"Ķ",kcy:"к",Kcy:"К",kfr:"𝔨",Kfr:"𝔎",kgreen:"ĸ",khcy:"х",KHcy:"Х",kjcy:"ќ",KJcy:"Ќ",kopf:"𝕜",Kopf:"𝕂",kscr:"𝓀",Kscr:"𝒦",lAarr:"⇚",lacute:"ĺ",Lacute:"Ĺ",laemptyv:"⦴",lagran:"ℒ",lambda:"λ",Lambda:"Λ",lang:"⟨",Lang:"⟪",langd:"⦑",langle:"⟨",lap:"⪅",Laplacetrf:"ℒ",laquo:"«",larr:"←",lArr:"⇐",Larr:"↞",larrb:"⇤",larrbfs:"⤟",larrfs:"⤝",larrhk:"↩",larrlp:"↫",larrpl:"⤹",larrsim:"⥳",larrtl:"↢",lat:"⪫",latail:"⤙",lAtail:"⤛",late:"⪭",lates:"⪭︀",lbarr:"⤌",lBarr:"⤎",lbbrk:"❲",lbrace:"{",lbrack:"[",lbrke:"⦋",lbrksld:"⦏",lbrkslu:"⦍",lcaron:"ľ",Lcaron:"Ľ",lcedil:"ļ",Lcedil:"Ļ",lceil:"⌈",lcub:"{",lcy:"л",Lcy:"Л",ldca:"⤶",ldquo:"“",ldquor:"„",ldrdhar:"⥧",ldrushar:"⥋",ldsh:"↲",le:"≤",lE:"≦",LeftAngleBracket:"⟨",leftarrow:"←",Leftarrow:"⇐",LeftArrow:"←",LeftArrowBar:"⇤",LeftArrowRightArrow:"⇆",leftarrowtail:"↢",LeftCeiling:"⌈",LeftDoubleBracket:"⟦",LeftDownTeeVector:"⥡",LeftDownVector:"⇃",LeftDownVectorBar:"⥙",LeftFloor:"⌊",leftharpoondown:"↽",leftharpoonup:"↼",leftleftarrows:"⇇",leftrightarrow:"↔",Leftrightarrow:"⇔",LeftRightArrow:"↔",leftrightarrows:"⇆",leftrightharpoons:"⇋",leftrightsquigarrow:"↭",LeftRightVector:"⥎",LeftTee:"⊣",LeftTeeArrow:"↤",LeftTeeVector:"⥚",leftthreetimes:"⋋",LeftTriangle:"⊲",LeftTriangleBar:"⧏",LeftTriangleEqual:"⊴",LeftUpDownVector:"⥑",LeftUpTeeVector:"⥠",LeftUpVector:"↿",LeftUpVectorBar:"⥘",LeftVector:"↼",LeftVectorBar:"⥒",leg:"⋚",lEg:"⪋",leq:"≤",leqq:"≦",leqslant:"⩽",les:"⩽",lescc:"⪨",lesdot:"⩿",lesdoto:"⪁",lesdotor:"⪃",lesg:"⋚︀",lesges:"⪓",lessapprox:"⪅",lessdot:"⋖",lesseqgtr:"⋚",lesseqqgtr:"⪋",LessEqualGreater:"⋚",LessFullEqual:"≦",LessGreater:"≶",lessgtr:"≶",LessLess:"⪡",lesssim:"≲",LessSlantEqual:"⩽",LessTilde:"≲",lfisht:"⥼",lfloor:"⌊",lfr:"𝔩",Lfr:"𝔏",lg:"≶",lgE:"⪑",lHar:"⥢",lhard:"↽",lharu:"↼",lharul:"⥪",lhblk:"▄",ljcy:"љ",LJcy:"Љ",ll:"≪",Ll:"⋘",llarr:"⇇",llcorner:"⌞",Lleftarrow:"⇚",llhard:"⥫",lltri:"◺",lmidot:"ŀ",Lmidot:"Ŀ",lmoust:"⎰",lmoustache:"⎰",lnap:"⪉",lnapprox:"⪉",lne:"⪇",lnE:"≨",lneq:"⪇",lneqq:"≨",lnsim:"⋦",loang:"⟬",loarr:"⇽",lobrk:"⟦",longleftarrow:"⟵",Longleftarrow:"⟸",LongLeftArrow:"⟵",longleftrightarrow:"⟷",Longleftrightarrow:"⟺",LongLeftRightArrow:"⟷",longmapsto:"⟼",longrightarrow:"⟶",Longrightarrow:"⟹",LongRightArrow:"⟶",looparrowleft:"↫",looparrowright:"↬",lopar:"⦅",lopf:"𝕝",Lopf:"𝕃",loplus:"⨭",lotimes:"⨴",lowast:"∗",lowbar:"_",LowerLeftArrow:"↙",LowerRightArrow:"↘",loz:"◊",lozenge:"◊",lozf:"⧫",lpar:"(",lparlt:"⦓",lrarr:"⇆",lrcorner:"⌟",lrhar:"⇋",lrhard:"⥭",lrm:"‎",lrtri:"⊿",lsaquo:"‹",lscr:"𝓁",Lscr:"ℒ",lsh:"↰",Lsh:"↰",lsim:"≲",lsime:"⪍",lsimg:"⪏",lsqb:"[",lsquo:"‘",lsquor:"‚",lstrok:"ł",Lstrok:"Ł",lt:"<",Lt:"≪",LT:"<",ltcc:"⪦",ltcir:"⩹",ltdot:"⋖",lthree:"⋋",ltimes:"⋉",ltlarr:"⥶",ltquest:"⩻",ltri:"◃",ltrie:"⊴",ltrif:"◂",ltrPar:"⦖",lurdshar:"⥊",luruhar:"⥦",lvertneqq:"≨︀",lvnE:"≨︀",macr:"¯",male:"♂",malt:"✠",maltese:"✠",map:"↦",Map:"⤅",mapsto:"↦",mapstodown:"↧",mapstoleft:"↤",mapstoup:"↥",marker:"▮",mcomma:"⨩",mcy:"м",Mcy:"М",mdash:"—",mDDot:"∺",measuredangle:"∡",MediumSpace:" ",Mellintrf:"ℳ",mfr:"𝔪",Mfr:"𝔐",mho:"℧",micro:"µ",mid:"∣",midast:"*",midcir:"⫰",middot:"·",minus:"−",minusb:"⊟",minusd:"∸",minusdu:"⨪",MinusPlus:"∓",mlcp:"⫛",mldr:"…",mnplus:"∓",models:"⊧",mopf:"𝕞",Mopf:"𝕄",mp:"∓",mscr:"𝓂",Mscr:"ℳ",mstpos:"∾",mu:"μ",Mu:"Μ",multimap:"⊸",mumap:"⊸",nabla:"∇",nacute:"ń",Nacute:"Ń",nang:"∠⃒",nap:"≉",napE:"⩰̸",napid:"≋̸",napos:"ŉ",napprox:"≉",natur:"♮",natural:"♮",naturals:"ℕ",nbsp:" ",nbump:"≎̸",nbumpe:"≏̸",ncap:"⩃",ncaron:"ň",Ncaron:"Ň",ncedil:"ņ",Ncedil:"Ņ",ncong:"≇",ncongdot:"⩭̸",ncup:"⩂",ncy:"н",Ncy:"Н",ndash:"–",ne:"≠",nearhk:"⤤",nearr:"↗",neArr:"⇗",nearrow:"↗",nedot:"≐̸",NegativeMediumSpace:"​",NegativeThickSpace:"​",NegativeThinSpace:"​",NegativeVeryThinSpace:"​",nequiv:"≢",nesear:"⤨",nesim:"≂̸",NestedGreaterGreater:"≫",NestedLessLess:"≪",NewLine:"\\n",nexist:"∄",nexists:"∄",nfr:"𝔫",Nfr:"𝔑",nge:"≱",ngE:"≧̸",ngeq:"≱",ngeqq:"≧̸",ngeqslant:"⩾̸",nges:"⩾̸",nGg:"⋙̸",ngsim:"≵",ngt:"≯",nGt:"≫⃒",ngtr:"≯",nGtv:"≫̸",nharr:"↮",nhArr:"⇎",nhpar:"⫲",ni:"∋",nis:"⋼",nisd:"⋺",niv:"∋",njcy:"њ",NJcy:"Њ",nlarr:"↚",nlArr:"⇍",nldr:"‥",nle:"≰",nlE:"≦̸",nleftarrow:"↚",nLeftarrow:"⇍",nleftrightarrow:"↮",nLeftrightarrow:"⇎",nleq:"≰",nleqq:"≦̸",nleqslant:"⩽̸",nles:"⩽̸",nless:"≮",nLl:"⋘̸",nlsim:"≴",nlt:"≮",nLt:"≪⃒",nltri:"⋪",nltrie:"⋬",nLtv:"≪̸",nmid:"∤",NoBreak:"⁠",NonBreakingSpace:" ",nopf:"𝕟",Nopf:"ℕ",not:"¬",Not:"⫬",NotCongruent:"≢",NotCupCap:"≭",NotDoubleVerticalBar:"∦",NotElement:"∉",NotEqual:"≠",NotEqualTilde:"≂̸",NotExists:"∄",NotGreater:"≯",NotGreaterEqual:"≱",NotGreaterFullEqual:"≧̸",NotGreaterGreater:"≫̸",NotGreaterLess:"≹",NotGreaterSlantEqual:"⩾̸",NotGreaterTilde:"≵",NotHumpDownHump:"≎̸",NotHumpEqual:"≏̸",notin:"∉",notindot:"⋵̸",notinE:"⋹̸",notinva:"∉",notinvb:"⋷",notinvc:"⋶",NotLeftTriangle:"⋪",NotLeftTriangleBar:"⧏̸",NotLeftTriangleEqual:"⋬",NotLess:"≮",NotLessEqual:"≰",NotLessGreater:"≸",NotLessLess:"≪̸",NotLessSlantEqual:"⩽̸",NotLessTilde:"≴",NotNestedGreaterGreater:"⪢̸",NotNestedLessLess:"⪡̸",notni:"∌",notniva:"∌",notnivb:"⋾",notnivc:"⋽",NotPrecedes:"⊀",NotPrecedesEqual:"⪯̸",NotPrecedesSlantEqual:"⋠",NotReverseElement:"∌",NotRightTriangle:"⋫",NotRightTriangleBar:"⧐̸",NotRightTriangleEqual:"⋭",NotSquareSubset:"⊏̸",NotSquareSubsetEqual:"⋢",NotSquareSuperset:"⊐̸",NotSquareSupersetEqual:"⋣",NotSubset:"⊂⃒",NotSubsetEqual:"⊈",NotSucceeds:"⊁",NotSucceedsEqual:"⪰̸",NotSucceedsSlantEqual:"⋡",NotSucceedsTilde:"≿̸",NotSuperset:"⊃⃒",NotSupersetEqual:"⊉",NotTilde:"≁",NotTildeEqual:"≄",NotTildeFullEqual:"≇",NotTildeTilde:"≉",NotVerticalBar:"∤",npar:"∦",nparallel:"∦",nparsl:"⫽⃥",npart:"∂̸",npolint:"⨔",npr:"⊀",nprcue:"⋠",npre:"⪯̸",nprec:"⊀",npreceq:"⪯̸",nrarr:"↛",nrArr:"⇏",nrarrc:"⤳̸",nrarrw:"↝̸",nrightarrow:"↛",nRightarrow:"⇏",nrtri:"⋫",nrtrie:"⋭",nsc:"⊁",nsccue:"⋡",nsce:"⪰̸",nscr:"𝓃",Nscr:"𝒩",nshortmid:"∤",nshortparallel:"∦",nsim:"≁",nsime:"≄",nsimeq:"≄",nsmid:"∤",nspar:"∦",nsqsube:"⋢",nsqsupe:"⋣",nsub:"⊄",nsube:"⊈",nsubE:"⫅̸",nsubset:"⊂⃒",nsubseteq:"⊈",nsubseteqq:"⫅̸",nsucc:"⊁",nsucceq:"⪰̸",nsup:"⊅",nsupe:"⊉",nsupE:"⫆̸",nsupset:"⊃⃒",nsupseteq:"⊉",nsupseteqq:"⫆̸",ntgl:"≹",ntilde:"ñ",Ntilde:"Ñ",ntlg:"≸",ntriangleleft:"⋪",ntrianglelefteq:"⋬",ntriangleright:"⋫",ntrianglerighteq:"⋭",nu:"ν",Nu:"Ν",num:"#",numero:"№",numsp:" ",nvap:"≍⃒",nvdash:"⊬",nvDash:"⊭",nVdash:"⊮",nVDash:"⊯",nvge:"≥⃒",nvgt:">⃒",nvHarr:"⤄",nvinfin:"⧞",nvlArr:"⤂",nvle:"≤⃒",nvlt:"<⃒",nvltrie:"⊴⃒",nvrArr:"⤃",nvrtrie:"⊵⃒",nvsim:"∼⃒",nwarhk:"⤣",nwarr:"↖",nwArr:"⇖",nwarrow:"↖",nwnear:"⤧",oacute:"ó",Oacute:"Ó",oast:"⊛",ocir:"⊚",ocirc:"ô",Ocirc:"Ô",ocy:"о",Ocy:"О",odash:"⊝",odblac:"ő",Odblac:"Ő",odiv:"⨸",odot:"⊙",odsold:"⦼",oelig:"œ",OElig:"Œ",ofcir:"⦿",ofr:"𝔬",Ofr:"𝔒",ogon:"˛",ograve:"ò",Ograve:"Ò",ogt:"⧁",ohbar:"⦵",ohm:"Ω",oint:"∮",olarr:"↺",olcir:"⦾",olcross:"⦻",oline:"‾",olt:"⧀",omacr:"ō",Omacr:"Ō",omega:"ω",Omega:"Ω",omicron:"ο",Omicron:"Ο",omid:"⦶",ominus:"⊖",oopf:"𝕠",Oopf:"𝕆",opar:"⦷",OpenCurlyDoubleQuote:"“",OpenCurlyQuote:"‘",operp:"⦹",oplus:"⊕",or:"∨",Or:"⩔",orarr:"↻",ord:"⩝",order:"ℴ",orderof:"ℴ",ordf:"ª",ordm:"º",origof:"⊶",oror:"⩖",orslope:"⩗",orv:"⩛",oS:"Ⓢ",oscr:"ℴ",Oscr:"𝒪",oslash:"ø",Oslash:"Ø",osol:"⊘",otilde:"õ",Otilde:"Õ",otimes:"⊗",Otimes:"⨷",otimesas:"⨶",ouml:"ö",Ouml:"Ö",ovbar:"⌽",OverBar:"‾",OverBrace:"⏞",OverBracket:"⎴",OverParenthesis:"⏜",par:"∥",para:"¶",parallel:"∥",parsim:"⫳",parsl:"⫽",part:"∂",PartialD:"∂",pcy:"п",Pcy:"П",percnt:"%",period:".",permil:"‰",perp:"⊥",pertenk:"‱",pfr:"𝔭",Pfr:"𝔓",phi:"φ",Phi:"Φ",phiv:"ϕ",phmmat:"ℳ",phone:"☎",pi:"π",Pi:"Π",pitchfork:"⋔",piv:"ϖ",planck:"ℏ",planckh:"ℎ",plankv:"ℏ",plus:"+",plusacir:"⨣",plusb:"⊞",pluscir:"⨢",plusdo:"∔",plusdu:"⨥",pluse:"⩲",PlusMinus:"±",plusmn:"±",plussim:"⨦",plustwo:"⨧",pm:"±",Poincareplane:"ℌ",pointint:"⨕",popf:"𝕡",Popf:"ℙ",pound:"£",pr:"≺",Pr:"⪻",prap:"⪷",prcue:"≼",pre:"⪯",prE:"⪳",prec:"≺",precapprox:"⪷",preccurlyeq:"≼",Precedes:"≺",PrecedesEqual:"⪯",PrecedesSlantEqual:"≼",PrecedesTilde:"≾",preceq:"⪯",precnapprox:"⪹",precneqq:"⪵",precnsim:"⋨",precsim:"≾",prime:"′",Prime:"″",primes:"ℙ",prnap:"⪹",prnE:"⪵",prnsim:"⋨",prod:"∏",Product:"∏",profalar:"⌮",profline:"⌒",profsurf:"⌓",prop:"∝",Proportion:"∷",Proportional:"∝",propto:"∝",prsim:"≾",prurel:"⊰",pscr:"𝓅",Pscr:"𝒫",psi:"ψ",Psi:"Ψ",puncsp:" ",qfr:"𝔮",Qfr:"𝔔",qint:"⨌",qopf:"𝕢",Qopf:"ℚ",qprime:"⁗",qscr:"𝓆",Qscr:"𝒬",quaternions:"ℍ",quatint:"⨖",quest:"?",questeq:"≟",quot:\'"\',QUOT:\'"\',rAarr:"⇛",race:"∽̱",racute:"ŕ",Racute:"Ŕ",radic:"√",raemptyv:"⦳",rang:"⟩",Rang:"⟫",rangd:"⦒",range:"⦥",rangle:"⟩",raquo:"»",rarr:"→",rArr:"⇒",Rarr:"↠",rarrap:"⥵",rarrb:"⇥",rarrbfs:"⤠",rarrc:"⤳",rarrfs:"⤞",rarrhk:"↪",rarrlp:"↬",rarrpl:"⥅",rarrsim:"⥴",rarrtl:"↣",Rarrtl:"⤖",rarrw:"↝",ratail:"⤚",rAtail:"⤜",ratio:"∶",rationals:"ℚ",rbarr:"⤍",rBarr:"⤏",RBarr:"⤐",rbbrk:"❳",rbrace:"}",rbrack:"]",rbrke:"⦌",rbrksld:"⦎",rbrkslu:"⦐",rcaron:"ř",Rcaron:"Ř",rcedil:"ŗ",Rcedil:"Ŗ",rceil:"⌉",rcub:"}",rcy:"р",Rcy:"Р",rdca:"⤷",rdldhar:"⥩",rdquo:"”",rdquor:"”",rdsh:"↳",Re:"ℜ",real:"ℜ",realine:"ℛ",realpart:"ℜ",reals:"ℝ",rect:"▭",reg:"®",REG:"®",ReverseElement:"∋",ReverseEquilibrium:"⇋",ReverseUpEquilibrium:"⥯",rfisht:"⥽",rfloor:"⌋",rfr:"𝔯",Rfr:"ℜ",rHar:"⥤",rhard:"⇁",rharu:"⇀",rharul:"⥬",rho:"ρ",Rho:"Ρ",rhov:"ϱ",RightAngleBracket:"⟩",rightarrow:"→",Rightarrow:"⇒",RightArrow:"→",RightArrowBar:"⇥",RightArrowLeftArrow:"⇄",rightarrowtail:"↣",RightCeiling:"⌉",RightDoubleBracket:"⟧",RightDownTeeVector:"⥝",RightDownVector:"⇂",RightDownVectorBar:"⥕",RightFloor:"⌋",rightharpoondown:"⇁",rightharpoonup:"⇀",rightleftarrows:"⇄",rightleftharpoons:"⇌",rightrightarrows:"⇉",rightsquigarrow:"↝",RightTee:"⊢",RightTeeArrow:"↦",RightTeeVector:"⥛",rightthreetimes:"⋌",RightTriangle:"⊳",RightTriangleBar:"⧐",RightTriangleEqual:"⊵",RightUpDownVector:"⥏",RightUpTeeVector:"⥜",RightUpVector:"↾",RightUpVectorBar:"⥔",RightVector:"⇀",RightVectorBar:"⥓",ring:"˚",risingdotseq:"≓",rlarr:"⇄",rlhar:"⇌",rlm:"‏",rmoust:"⎱",rmoustache:"⎱",rnmid:"⫮",roang:"⟭",roarr:"⇾",robrk:"⟧",ropar:"⦆",ropf:"𝕣",Ropf:"ℝ",roplus:"⨮",rotimes:"⨵",RoundImplies:"⥰",rpar:")",rpargt:"⦔",rppolint:"⨒",rrarr:"⇉",Rrightarrow:"⇛",rsaquo:"›",rscr:"𝓇",Rscr:"ℛ",rsh:"↱",Rsh:"↱",rsqb:"]",rsquo:"’",rsquor:"’",rthree:"⋌",rtimes:"⋊",rtri:"▹",rtrie:"⊵",rtrif:"▸",rtriltri:"⧎",RuleDelayed:"⧴",ruluhar:"⥨",rx:"℞",sacute:"ś",Sacute:"Ś",sbquo:"‚",sc:"≻",Sc:"⪼",scap:"⪸",scaron:"š",Scaron:"Š",sccue:"≽",sce:"⪰",scE:"⪴",scedil:"ş",Scedil:"Ş",scirc:"ŝ",Scirc:"Ŝ",scnap:"⪺",scnE:"⪶",scnsim:"⋩",scpolint:"⨓",scsim:"≿",scy:"с",Scy:"С",sdot:"⋅",sdotb:"⊡",sdote:"⩦",searhk:"⤥",searr:"↘",seArr:"⇘",searrow:"↘",sect:"§",semi:";",seswar:"⤩",setminus:"∖",setmn:"∖",sext:"✶",sfr:"𝔰",Sfr:"𝔖",sfrown:"⌢",sharp:"♯",shchcy:"щ",SHCHcy:"Щ",shcy:"ш",SHcy:"Ш",ShortDownArrow:"↓",ShortLeftArrow:"←",shortmid:"∣",shortparallel:"∥",ShortRightArrow:"→",ShortUpArrow:"↑",shy:"­",sigma:"σ",Sigma:"Σ",sigmaf:"ς",sigmav:"ς",sim:"∼",simdot:"⩪",sime:"≃",simeq:"≃",simg:"⪞",simgE:"⪠",siml:"⪝",simlE:"⪟",simne:"≆",simplus:"⨤",simrarr:"⥲",slarr:"←",SmallCircle:"∘",smallsetminus:"∖",smashp:"⨳",smeparsl:"⧤",smid:"∣",smile:"⌣",smt:"⪪",smte:"⪬",smtes:"⪬︀",softcy:"ь",SOFTcy:"Ь",sol:"/",solb:"⧄",solbar:"⌿",sopf:"𝕤",Sopf:"𝕊",spades:"♠",spadesuit:"♠",spar:"∥",sqcap:"⊓",sqcaps:"⊓︀",sqcup:"⊔",sqcups:"⊔︀",Sqrt:"√",sqsub:"⊏",sqsube:"⊑",sqsubset:"⊏",sqsubseteq:"⊑",sqsup:"⊐",sqsupe:"⊒",sqsupset:"⊐",sqsupseteq:"⊒",squ:"□",square:"□",Square:"□",SquareIntersection:"⊓",SquareSubset:"⊏",SquareSubsetEqual:"⊑",SquareSuperset:"⊐",SquareSupersetEqual:"⊒",SquareUnion:"⊔",squarf:"▪",squf:"▪",srarr:"→",sscr:"𝓈",Sscr:"𝒮",ssetmn:"∖",ssmile:"⌣",sstarf:"⋆",star:"☆",Star:"⋆",starf:"★",straightepsilon:"ϵ",straightphi:"ϕ",strns:"¯",sub:"⊂",Sub:"⋐",subdot:"⪽",sube:"⊆",subE:"⫅",subedot:"⫃",submult:"⫁",subne:"⊊",subnE:"⫋",subplus:"⪿",subrarr:"⥹",subset:"⊂",Subset:"⋐",subseteq:"⊆",subseteqq:"⫅",SubsetEqual:"⊆",subsetneq:"⊊",subsetneqq:"⫋",subsim:"⫇",subsub:"⫕",subsup:"⫓",succ:"≻",succapprox:"⪸",succcurlyeq:"≽",Succeeds:"≻",SucceedsEqual:"⪰",SucceedsSlantEqual:"≽",SucceedsTilde:"≿",succeq:"⪰",succnapprox:"⪺",succneqq:"⪶",succnsim:"⋩",succsim:"≿",SuchThat:"∋",sum:"∑",Sum:"∑",sung:"♪",sup:"⊃",Sup:"⋑",sup1:"¹",sup2:"²",sup3:"³",supdot:"⪾",supdsub:"⫘",supe:"⊇",supE:"⫆",supedot:"⫄",Superset:"⊃",SupersetEqual:"⊇",suphsol:"⟉",suphsub:"⫗",suplarr:"⥻",supmult:"⫂",supne:"⊋",supnE:"⫌",supplus:"⫀",supset:"⊃",Supset:"⋑",supseteq:"⊇",supseteqq:"⫆",supsetneq:"⊋",supsetneqq:"⫌",supsim:"⫈",supsub:"⫔",supsup:"⫖",swarhk:"⤦",swarr:"↙",swArr:"⇙",swarrow:"↙",swnwar:"⤪",szlig:"ß",Tab:"\\t",target:"⌖",tau:"τ",Tau:"Τ",tbrk:"⎴",tcaron:"ť",Tcaron:"Ť",tcedil:"ţ",Tcedil:"Ţ",tcy:"т",Tcy:"Т",tdot:"⃛",telrec:"⌕",tfr:"𝔱",Tfr:"𝔗",there4:"∴",therefore:"∴",Therefore:"∴",theta:"θ",Theta:"Θ",thetasym:"ϑ",thetav:"ϑ",thickapprox:"≈",thicksim:"∼",ThickSpace:"  ",thinsp:" ",ThinSpace:" ",thkap:"≈",thksim:"∼",thorn:"þ",THORN:"Þ",tilde:"˜",Tilde:"∼",TildeEqual:"≃",TildeFullEqual:"≅",TildeTilde:"≈",times:"×",timesb:"⊠",timesbar:"⨱",timesd:"⨰",tint:"∭",toea:"⤨",top:"⊤",topbot:"⌶",topcir:"⫱",topf:"𝕥",Topf:"𝕋",topfork:"⫚",tosa:"⤩",tprime:"‴",trade:"™",TRADE:"™",triangle:"▵",triangledown:"▿",triangleleft:"◃",trianglelefteq:"⊴",triangleq:"≜",triangleright:"▹",trianglerighteq:"⊵",tridot:"◬",trie:"≜",triminus:"⨺",TripleDot:"⃛",triplus:"⨹",trisb:"⧍",tritime:"⨻",trpezium:"⏢",tscr:"𝓉",Tscr:"𝒯",tscy:"ц",TScy:"Ц",tshcy:"ћ",TSHcy:"Ћ",tstrok:"ŧ",Tstrok:"Ŧ",twixt:"≬",twoheadleftarrow:"↞",twoheadrightarrow:"↠",uacute:"ú",Uacute:"Ú",uarr:"↑",uArr:"⇑",Uarr:"↟",Uarrocir:"⥉",ubrcy:"ў",Ubrcy:"Ў",ubreve:"ŭ",Ubreve:"Ŭ",ucirc:"û",Ucirc:"Û",ucy:"у",Ucy:"У",udarr:"⇅",udblac:"ű",Udblac:"Ű",udhar:"⥮",ufisht:"⥾",ufr:"𝔲",Ufr:"𝔘",ugrave:"ù",Ugrave:"Ù",uHar:"⥣",uharl:"↿",uharr:"↾",uhblk:"▀",ulcorn:"⌜",ulcorner:"⌜",ulcrop:"⌏",ultri:"◸",umacr:"ū",Umacr:"Ū",uml:"¨",UnderBar:"_",UnderBrace:"⏟",UnderBracket:"⎵",UnderParenthesis:"⏝",Union:"⋃",UnionPlus:"⊎",uogon:"ų",Uogon:"Ų",uopf:"𝕦",Uopf:"𝕌",uparrow:"↑",Uparrow:"⇑",UpArrow:"↑",UpArrowBar:"⤒",UpArrowDownArrow:"⇅",updownarrow:"↕",Updownarrow:"⇕",UpDownArrow:"↕",UpEquilibrium:"⥮",upharpoonleft:"↿",upharpoonright:"↾",uplus:"⊎",UpperLeftArrow:"↖",UpperRightArrow:"↗",upsi:"υ",Upsi:"ϒ",upsih:"ϒ",upsilon:"υ",Upsilon:"Υ",UpTee:"⊥",UpTeeArrow:"↥",upuparrows:"⇈",urcorn:"⌝",urcorner:"⌝",urcrop:"⌎",uring:"ů",Uring:"Ů",urtri:"◹",uscr:"𝓊",Uscr:"𝒰",utdot:"⋰",utilde:"ũ",Utilde:"Ũ",utri:"▵",utrif:"▴",uuarr:"⇈",uuml:"ü",Uuml:"Ü",uwangle:"⦧",vangrt:"⦜",varepsilon:"ϵ",varkappa:"ϰ",varnothing:"∅",varphi:"ϕ",varpi:"ϖ",varpropto:"∝",varr:"↕",vArr:"⇕",varrho:"ϱ",varsigma:"ς",varsubsetneq:"⊊︀",varsubsetneqq:"⫋︀",varsupsetneq:"⊋︀",varsupsetneqq:"⫌︀",vartheta:"ϑ",vartriangleleft:"⊲",vartriangleright:"⊳",vBar:"⫨",Vbar:"⫫",vBarv:"⫩",vcy:"в",Vcy:"В",vdash:"⊢",vDash:"⊨",Vdash:"⊩",VDash:"⊫",Vdashl:"⫦",vee:"∨",Vee:"⋁",veebar:"⊻",veeeq:"≚",vellip:"⋮",verbar:"|",Verbar:"‖",vert:"|",Vert:"‖",VerticalBar:"∣",VerticalLine:"|",VerticalSeparator:"❘",VerticalTilde:"≀",VeryThinSpace:" ",vfr:"𝔳",Vfr:"𝔙",vltri:"⊲",vnsub:"⊂⃒",vnsup:"⊃⃒",vopf:"𝕧",Vopf:"𝕍",vprop:"∝",vrtri:"⊳",vscr:"𝓋",Vscr:"𝒱",vsubne:"⊊︀",vsubnE:"⫋︀",vsupne:"⊋︀",vsupnE:"⫌︀",Vvdash:"⊪",vzigzag:"⦚",wcirc:"ŵ",Wcirc:"Ŵ",wedbar:"⩟",wedge:"∧",Wedge:"⋀",wedgeq:"≙",weierp:"℘",wfr:"𝔴",Wfr:"𝔚",wopf:"𝕨",Wopf:"𝕎",wp:"℘",wr:"≀",wreath:"≀",wscr:"𝓌",Wscr:"𝒲",xcap:"⋂",xcirc:"◯",xcup:"⋃",xdtri:"▽",xfr:"𝔵",Xfr:"𝔛",xharr:"⟷",xhArr:"⟺",xi:"ξ",Xi:"Ξ",xlarr:"⟵",xlArr:"⟸",xmap:"⟼",xnis:"⋻",xodot:"⨀",xopf:"𝕩",Xopf:"𝕏",xoplus:"⨁",xotime:"⨂",xrarr:"⟶",xrArr:"⟹",xscr:"𝓍",Xscr:"𝒳",xsqcup:"⨆",xuplus:"⨄",xutri:"△",xvee:"⋁",xwedge:"⋀",yacute:"ý",Yacute:"Ý",yacy:"я",YAcy:"Я",ycirc:"ŷ",Ycirc:"Ŷ",ycy:"ы",Ycy:"Ы",yen:"¥",yfr:"𝔶",Yfr:"𝔜",yicy:"ї",YIcy:"Ї",yopf:"𝕪",Yopf:"𝕐",yscr:"𝓎",Yscr:"𝒴",yucy:"ю",YUcy:"Ю",yuml:"ÿ",Yuml:"Ÿ",zacute:"ź",Zacute:"Ź",zcaron:"ž",Zcaron:"Ž",zcy:"з",Zcy:"З",zdot:"ż",Zdot:"Ż",zeetrf:"ℨ",ZeroWidthSpace:"​",zeta:"ζ",Zeta:"Ζ",zfr:"𝔷",Zfr:"ℨ",zhcy:"ж",ZHcy:"Ж",zigrarr:"⇝",zopf:"𝕫",Zopf:"ℤ",zscr:"𝓏",Zscr:"𝒵",zwj:"‍",zwnj:"‌"};var g={aacute:"á",Aacute:"Á",acirc:"â",Acirc:"Â",acute:"´",aelig:"æ",AElig:"Æ",agrave:"à",Agrave:"À",amp:"&",AMP:"&",aring:"å",Aring:"Å",atilde:"ã",Atilde:"Ã",auml:"ä",Auml:"Ä",brvbar:"¦",ccedil:"ç",Ccedil:"Ç",cedil:"¸",cent:"¢",copy:"©",COPY:"©",curren:"¤",deg:"°",divide:"÷",eacute:"é",Eacute:"É",ecirc:"ê",Ecirc:"Ê",egrave:"è",Egrave:"È",eth:"ð",ETH:"Ð",euml:"ë",Euml:"Ë",frac12:"½",frac14:"¼",frac34:"¾",gt:">",GT:">",iacute:"í",Iacute:"Í",icirc:"î",Icirc:"Î",iexcl:"¡",igrave:"ì",Igrave:"Ì",iquest:"¿",iuml:"ï",Iuml:"Ï",laquo:"«",lt:"<",LT:"<",macr:"¯",micro:"µ",middot:"·",nbsp:" ",not:"¬",ntilde:"ñ",Ntilde:"Ñ",oacute:"ó",Oacute:"Ó",ocirc:"ô",Ocirc:"Ô",ograve:"ò",Ograve:"Ò",ordf:"ª",ordm:"º",oslash:"ø",Oslash:"Ø",otilde:"õ",Otilde:"Õ",ouml:"ö",Ouml:"Ö",para:"¶",plusmn:"±",pound:"£",quot:\'"\',QUOT:\'"\',raquo:"»",reg:"®",REG:"®",sect:"§",shy:"­",sup1:"¹",sup2:"²",sup3:"³",szlig:"ß",thorn:"þ",THORN:"Þ",times:"×",uacute:"ú",Uacute:"Ú",ucirc:"û",Ucirc:"Û",ugrave:"ù",Ugrave:"Ù",uml:"¨",uuml:"ü",Uuml:"Ü",yacute:"ý",Yacute:"Ý",yen:"¥",yuml:"ÿ"};var w={0:"�",128:"€",130:"‚",131:"ƒ",132:"„",133:"…",134:"†",135:"‡",136:"ˆ",137:"‰",138:"Š",139:"‹",140:"Œ",142:"Ž",145:"‘",146:"’",147:"“",148:"”",149:"•",150:"–",151:"—",152:"˜",153:"™",154:"š",155:"›",156:"œ",158:"ž",159:"Ÿ"};var b=[1,2,3,4,5,6,7,8,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,64976,64977,64978,64979,64980,64981,64982,64983,64984,64985,64986,64987,64988,64989,64990,64991,64992,64993,64994,64995,64996,64997,64998,64999,65e3,65001,65002,65003,65004,65005,65006,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1048574,1048575,1114110,1114111];var y=String.fromCharCode;var _={};var N=_.hasOwnProperty;var has=function(e,a){return N.call(e,a)};var contains=function(e,a){var p=-1;var d=e.length;while(++p<d){if(e[p]==a){return true}}return false};var merge=function(e,a){if(!e){return a}var p={};var d;for(d in a){p[d]=has(e,d)?e[d]:a[d]}return p};var codePointToSymbol=function(e,a){var p="";if(e>=55296&&e<=57343||e>1114111){if(a){parseError("character reference outside the permissible Unicode range")}return"�"}if(has(w,e)){if(a){parseError("disallowed character reference")}return w[e]}if(a&&contains(b,e)){parseError("disallowed character reference")}if(e>65535){e-=65536;p+=y(e>>>10&1023|55296);e=56320|e&1023}p+=y(e);return p};var hexEscape=function(e){return"&#x"+e.toString(16).toUpperCase()+";"};var decEscape=function(e){return"&#"+e+";"};var parseError=function(e){throw Error("Parse error: "+e)};var encode=function(e,a){a=merge(a,encode.options);var p=a.strict;if(p&&f.test(e)){parseError("forbidden code point")}var d=a.encodeEverything;var t=a.useNamedReferences;var r=a.allowUnsafeSymbols;var u=a.decimal?decEscape:hexEscape;var escapeBmpSymbol=function(e){return u(e.charCodeAt(0))};if(d){e=e.replace(l,(function(e){if(t&&has(n,e)){return"&"+n[e]+";"}return escapeBmpSymbol(e)}));if(t){e=e.replace(/&gt;\\u20D2/g,"&nvgt;").replace(/&lt;\\u20D2/g,"&nvlt;").replace(/&#x66;&#x6A;/g,"&fjlig;")}if(t){e=e.replace(m,(function(e){return"&"+n[e]+";"}))}}else if(t){if(!r){e=e.replace(s,(function(e){return"&"+n[e]+";"}))}e=e.replace(/&gt;\\u20D2/g,"&nvgt;").replace(/&lt;\\u20D2/g,"&nvlt;");e=e.replace(m,(function(e){return"&"+n[e]+";"}))}else if(!r){e=e.replace(s,escapeBmpSymbol)}return e.replace(i,(function(e){var a=e.charCodeAt(0);var p=e.charCodeAt(1);var d=(a-55296)*1024+p-56320+65536;return u(d)})).replace(o,escapeBmpSymbol)};encode.options={allowUnsafeSymbols:false,encodeEverything:false,strict:false,useNamedReferences:false,decimal:false};var decode=function(e,a){a=merge(a,decode.options);var p=a.strict;if(p&&c.test(e)){parseError("malformed character reference")}return e.replace(v,(function(e,d,t,r,i,l,o,m,n){var s;var u;var c;var f;var v;var w;if(d){v=d;return h[v]}if(t){v=t;w=r;if(w&&a.isAttributeValue){if(p&&w=="="){parseError("`&` did not start a character reference")}return e}else{if(p){parseError("named character reference was not terminated by a semicolon")}return g[v]+(w||"")}}if(i){c=i;u=l;if(p&&!u){parseError("character reference was not terminated by a semicolon")}s=parseInt(c,10);return codePointToSymbol(s,p)}if(o){f=o;u=m;if(p&&!u){parseError("character reference was not terminated by a semicolon")}s=parseInt(f,16);return codePointToSymbol(s,p)}if(p){parseError("named character reference was not terminated by a semicolon")}return e}))};decode.options={isAttributeValue:false,strict:false};var escape=function(e){return e.replace(s,(function(e){return u[e]}))};var D={version:"1.2.0",encode:encode,decode:decode,escape:escape,unescape:decode};if(typeof define=="function"&&typeof define.amd=="object"&&define.amd){define((function(){return D}))}else if(d&&!d.nodeType){if(t){t.exports=D}else{for(var S in D){has(D,S)&&(d[S]=D[S])}}}else{p.he=D}})(this)},6705:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var d=_interopDefault(p(2203));var t=_interopDefault(p(8611));var r=_interopDefault(p(7016));var i=_interopDefault(p(2686));var l=_interopDefault(p(5692));var o=_interopDefault(p(3106));const m=d.Readable;const n=Symbol("buffer");const s=Symbol("type");class Blob{constructor(){this[s]="";const e=arguments[0];const a=arguments[1];const p=[];let d=0;if(e){const a=e;const t=Number(a.length);for(let e=0;e<t;e++){const t=a[e];let r;if(t instanceof Buffer){r=t}else if(ArrayBuffer.isView(t)){r=Buffer.from(t.buffer,t.byteOffset,t.byteLength)}else if(t instanceof ArrayBuffer){r=Buffer.from(t)}else if(t instanceof Blob){r=t[n]}else{r=Buffer.from(typeof t==="string"?t:String(t))}d+=r.length;p.push(r)}}this[n]=Buffer.concat(p);let t=a&&a.type!==undefined&&String(a.type).toLowerCase();if(t&&!/[^\\u0020-\\u007E]/.test(t)){this[s]=t}}get size(){return this[n].length}get type(){return this[s]}text(){return Promise.resolve(this[n].toString())}arrayBuffer(){const e=this[n];const a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new m;e._read=function(){};e.push(this[n]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const a=arguments[0];const p=arguments[1];let d,t;if(a===undefined){d=0}else if(a<0){d=Math.max(e+a,0)}else{d=Math.min(a,e)}if(p===undefined){t=e}else if(p<0){t=Math.max(e+p,0)}else{t=Math.min(p,e)}const r=Math.max(t-d,0);const i=this[n];const l=i.slice(d,d+r);const o=new Blob([],{type:arguments[2]});o[n]=l;return o}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,a,p){Error.call(this,e);this.message=e;this.type=a;if(p){this.code=this.errno=p.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let u;try{u=p(2078).convert}catch(e){}const c=Symbol("Body internals");const f=d.PassThrough;function Body(e){var a=this;var p=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},t=p.size;let r=t===undefined?0:t;var i=p.timeout;let l=i===undefined?0:i;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e));else if(Buffer.isBuffer(e));else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof d);else{e=Buffer.from(String(e))}this[c]={body:e,disturbed:false,error:null};this.size=r;this.timeout=l;if(e instanceof d){e.on("error",(function(e){const p=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[c].error=p}))}}Body.prototype={get body(){return this[c].body},get bodyUsed(){return this[c].disturbed},arrayBuffer(){return consumeBody.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then((function(a){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[n]:a})}))},json(){var e=this;return consumeBody.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return consumeBody.call(this).then((function(e){return e.toString()}))},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then((function(a){return convertBody(a,e.headers)}))}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const a of Object.getOwnPropertyNames(Body.prototype)){if(!(a in e)){const p=Object.getOwnPropertyDescriptor(Body.prototype,a);Object.defineProperty(e,a,p)}}};function consumeBody(){var e=this;if(this[c].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[c].disturbed=true;if(this[c].error){return Body.Promise.reject(this[c].error)}let a=this.body;if(a===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(a)){a=a.stream()}if(Buffer.isBuffer(a)){return Body.Promise.resolve(a)}if(!(a instanceof d)){return Body.Promise.resolve(Buffer.alloc(0))}let p=[];let t=0;let r=false;return new Body.Promise((function(d,i){let l;if(e.timeout){l=setTimeout((function(){r=true;i(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)}a.on("error",(function(a){if(a.name==="AbortError"){r=true;i(a)}else{i(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))}}));a.on("data",(function(a){if(r||a===null){return}if(e.size&&t+a.length>e.size){r=true;i(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}t+=a.length;p.push(a)}));a.on("end",(function(){if(r){return}clearTimeout(l);try{d(Buffer.concat(p,t))}catch(a){i(new FetchError(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}))}))}function convertBody(e,a){if(typeof u!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const p=a.get("content-type");let d="utf-8";let t,r;if(p){t=/charset=([^;]*)/i.exec(p)}r=e.slice(0,1024).toString();if(!t&&r){t=/<meta.+?charset=([\'"])(.+?)\\1/i.exec(r)}if(!t&&r){t=/<meta[\\s]+?http-equiv=([\'"])content-type\\1[\\s]+?content=([\'"])(.+?)\\2/i.exec(r);if(!t){t=/<meta[\\s]+?content=([\'"])(.+?)\\1[\\s]+?http-equiv=([\'"])content-type\\3/i.exec(r);if(t){t.pop()}}if(t){t=/charset=(.*)/i.exec(t.pop())}}if(!t&&r){t=/<\\?xml.+?encoding=([\'"])(.+?)\\1/i.exec(r)}if(t){d=t.pop();if(d==="gb2312"||d==="gbk"){d="gb18030"}}return u(e,"UTF-8",d).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let a,p;let t=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(t instanceof d&&typeof t.getBoundary!=="function"){a=new f;p=new f;t.pipe(a);t.pipe(p);e[c].body=a;t=p}return t}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof d){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const a=e.body;if(a===null){return 0}else if(isBlob(a)){return a.size}else if(Buffer.isBuffer(a)){return a.length}else if(a&&typeof a.getLengthSync==="function"){if(a._lengthRetrievers&&a._lengthRetrievers.length==0||a.hasKnownLength&&a.hasKnownLength()){return a.getLengthSync()}return null}else{return null}}function writeToStream(e,a){const p=a.body;if(p===null){e.end()}else if(isBlob(p)){p.stream().pipe(e)}else if(Buffer.isBuffer(p)){e.write(p);e.end()}else{p.pipe(e)}}Body.Promise=global.Promise;const v=/[^\\^_`a-zA-Z\\-0-9!#$%&\'*+.|~]/;const h=/[^\\t\\x20-\\x7e\\x80-\\xff]/;function validateName(e){e=`${e}`;if(v.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(h.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,a){a=a.toLowerCase();for(const p in e){if(p.toLowerCase()===a){return p}}return undefined}const g=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[g]=Object.create(null);if(e instanceof Headers){const a=e.raw();const p=Object.keys(a);for(const e of p){for(const p of a[e]){this.append(e,p)}}return}if(e==null);else if(typeof e==="object"){const a=e[Symbol.iterator];if(a!=null){if(typeof a!=="function"){throw new TypeError("Header pairs must be iterable")}const p=[];for(const a of e){if(typeof a!=="object"||typeof a[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}p.push(Array.from(a))}for(const e of p){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const a of Object.keys(e)){const p=e[a];this.append(a,p)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const a=find(this[g],e);if(a===undefined){return null}return this[g][a].join(", ")}forEach(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let p=getHeaders(this);let d=0;while(d<p.length){var t=p[d];const r=t[0],i=t[1];e.call(a,i,r,this);p=getHeaders(this);d++}}set(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const p=find(this[g],e);this[g][p!==undefined?p:e]=[a]}append(e,a){e=`${e}`;a=`${a}`;validateName(e);validateValue(a);const p=find(this[g],e);if(p!==undefined){this[g][p].push(a)}else{this[g][e]=[a]}}has(e){e=`${e}`;validateName(e);return find(this[g],e)!==undefined}delete(e){e=`${e}`;validateName(e);const a=find(this[g],e);if(a!==undefined){delete this[g][a]}}raw(){return this[g]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const p=Object.keys(e[g]).sort();return p.map(a==="key"?function(e){return e.toLowerCase()}:a==="value"?function(a){return e[g][a].join(", ")}:function(a){return[a.toLowerCase(),e[g][a].join(", ")]})}const w=Symbol("internal");function createHeadersIterator(e,a){const p=Object.create(b);p[w]={target:e,kind:a,index:0};return p}const b=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==b){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[w];const a=e.target,p=e.kind,d=e.index;const t=getHeaders(a,p);const r=t.length;if(d>=r){return{value:undefined,done:true}}this[w].index=d+1;return{value:t[d],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(b,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const a=Object.assign({__proto__:null},e[g]);const p=find(e[g],"Host");if(p!==undefined){a[p]=a[p][0]}return a}function createHeadersLenient(e){const a=new Headers;for(const p of Object.keys(e)){if(v.test(p)){continue}if(Array.isArray(e[p])){for(const d of e[p]){if(h.test(d)){continue}if(a[g][p]===undefined){a[g][p]=[d]}else{a[g][p].push(d)}}}else if(!h.test(e[p])){a[g][p]=[e[p]]}}return a}const y=Symbol("Response internals");const _=t.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,a);const p=a.status||200;const d=new Headers(a.headers);if(e!=null&&!d.has("Content-Type")){const a=extractContentType(e);if(a){d.append("Content-Type",a)}}this[y]={url:a.url,status:p,statusText:a.statusText||_[p],headers:d,counter:a.counter}}get url(){return this[y].url||""}get status(){return this[y].status}get ok(){return this[y].status>=200&&this[y].status<300}get redirected(){return this[y].counter>0}get statusText(){return this[y].statusText}get headers(){return this[y].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const N=Symbol("Request internals");const D=r.URL||i.URL;const S=r.parse;const T=r.format;function parseURL(e){if(/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(e)){e=new D(e).toString()}return S(e)}const E="destroy"in d.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[N]==="object"}function isAbortSignal(e){const a=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(a&&a.constructor.name==="AbortSignal")}class Request{constructor(e){let a=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let p;if(!isRequest(e)){if(e&&e.href){p=parseURL(e.href)}else{p=parseURL(`${e}`)}e={}}else{p=parseURL(e.url)}let d=a.method||e.method||"GET";d=d.toUpperCase();if((a.body!=null||isRequest(e)&&e.body!==null)&&(d==="GET"||d==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let t=a.body!=null?a.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,t,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const r=new Headers(a.headers||e.headers||{});if(t!=null&&!r.has("Content-Type")){const e=extractContentType(t);if(e){r.append("Content-Type",e)}}let i=isRequest(e)?e.signal:null;if("signal"in a)i=a.signal;if(i!=null&&!isAbortSignal(i)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[N]={method:d,redirect:a.redirect||e.redirect||"follow",headers:r,parsedURL:p,signal:i};this.follow=a.follow!==undefined?a.follow:e.follow!==undefined?e.follow:20;this.compress=a.compress!==undefined?a.compress:e.compress!==undefined?e.compress:true;this.counter=a.counter||e.counter||0;this.agent=a.agent||e.agent}get method(){return this[N].method}get url(){return T(this[N].parsedURL)}get headers(){return this[N].headers}get redirect(){return this[N].redirect}get signal(){return this[N].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const a=e[N].parsedURL;const p=new Headers(e[N].headers);if(!p.has("Accept")){p.set("Accept","*/*")}if(!a.protocol||!a.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(a.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof d.Readable&&!E){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let t=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){t="0"}if(e.body!=null){const a=getTotalBytes(e);if(typeof a==="number"){t=String(a)}}if(t){p.set("Content-Length",t)}if(!p.has("User-Agent")){p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!p.has("Accept-Encoding")){p.set("Accept-Encoding","gzip,deflate")}let r=e.agent;if(typeof r==="function"){r=r(a)}if(!p.has("Connection")&&!r){p.set("Connection","close")}return Object.assign({},a,{method:e.method,headers:exportNodeCompatibleHeaders(p),agent:r})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const A=r.URL||i.URL;const V=d.PassThrough;const C=function isDomainOrSubdomain(e,a){const p=new A(a).hostname;const d=new A(e).hostname;return p===d||p[p.length-d.length-1]==="."&&p.endsWith(d)};const x=function isSameProtocol(e,a){const p=new A(a).protocol;const d=new A(e).protocol;return p===d};function fetch(e,a){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise((function(p,r){const i=new Request(e,a);const m=getNodeRequestOptions(i);const n=(m.protocol==="https:"?l:t).request;const s=i.signal;let u=null;const c=function abort(){let e=new AbortError("The user aborted a request.");r(e);if(i.body&&i.body instanceof d.Readable){destroyStream(i.body,e)}if(!u||!u.body)return;u.body.emit("error",e)};if(s&&s.aborted){c();return}const f=function abortAndFinalize(){c();finalize()};const v=n(m);let h;if(s){s.addEventListener("abort",f)}function finalize(){v.abort();if(s)s.removeEventListener("abort",f);clearTimeout(h)}if(i.timeout){v.once("socket",(function(e){h=setTimeout((function(){r(new FetchError(`network timeout at: ${i.url}`,"request-timeout"));finalize()}),i.timeout)}))}v.on("error",(function(e){r(new FetchError(`request to ${i.url} failed, reason: ${e.message}`,"system",e));if(u&&u.body){destroyStream(u.body,e)}finalize()}));fixResponseChunkedTransferBadEnding(v,(function(e){if(s&&s.aborted){return}if(u&&u.body){destroyStream(u.body,e)}}));if(parseInt(process.version.substring(1))<14){v.on("socket",(function(e){e.addListener("close",(function(a){const p=e.listenerCount("data")>0;if(u&&p&&!a&&!(s&&s.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";u.body.emit("error",e)}}))}))}v.on("response",(function(e){clearTimeout(h);const a=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const d=a.get("Location");let t=null;try{t=d===null?null:new A(d,i.url).toString()}catch(e){if(i.redirect!=="manual"){r(new FetchError(`uri requested responds with an invalid redirect URL: ${d}`,"invalid-redirect"));finalize();return}}switch(i.redirect){case"error":r(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect"));finalize();return;case"manual":if(t!==null){try{a.set("Location",t)}catch(e){r(e)}}break;case"follow":if(t===null){break}if(i.counter>=i.follow){r(new FetchError(`maximum redirect reached at: ${i.url}`,"max-redirect"));finalize();return}const d={headers:new Headers(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!C(i.url,t)||!x(i.url,t)){for(const e of["authorization","www-authenticate","cookie","cookie2"]){d.headers.delete(e)}}if(e.statusCode!==303&&i.body&&getTotalBytes(i)===null){r(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&i.method==="POST"){d.method="GET";d.body=undefined;d.headers.delete("content-length")}p(fetch(new Request(t,d)));finalize();return}}e.once("end",(function(){if(s)s.removeEventListener("abort",f)}));let d=e.pipe(new V);const t={url:i.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:i.size,timeout:i.timeout,counter:i.counter};const l=a.get("Content-Encoding");if(!i.compress||i.method==="HEAD"||l===null||e.statusCode===204||e.statusCode===304){u=new Response(d,t);p(u);return}const m={flush:o.Z_SYNC_FLUSH,finishFlush:o.Z_SYNC_FLUSH};if(l=="gzip"||l=="x-gzip"){d=d.pipe(o.createGunzip(m));u=new Response(d,t);p(u);return}if(l=="deflate"||l=="x-deflate"){const a=e.pipe(new V);a.once("data",(function(e){if((e[0]&15)===8){d=d.pipe(o.createInflate())}else{d=d.pipe(o.createInflateRaw())}u=new Response(d,t);p(u)}));a.on("end",(function(){if(!u){u=new Response(d,t);p(u)}}));return}if(l=="br"&&typeof o.createBrotliDecompress==="function"){d=d.pipe(o.createBrotliDecompress());u=new Response(d,t);p(u);return}u=new Response(d,t);p(u)}));writeToStream(v,i)}))}function fixResponseChunkedTransferBadEnding(e,a){let p;e.on("socket",(function(e){p=e}));e.on("response",(function(e){const d=e.headers;if(d["transfer-encoding"]==="chunked"&&!d["content-length"]){e.once("close",(function(e){const d=p.listenerCount("data")>0;if(d&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE";a(e)}}))}}))}function destroyStream(e,a){if(e.destroy){e.destroy(a)}else{e.emit("error",a);e.end()}}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=a=fetch;Object.defineProperty(a,"__esModule",{value:true});a["default"]=a;a.Headers=Headers;a.Request=Request;a.Response=Response;a.FetchError=FetchError},3600:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});function arr_back(e){return e[e.length-1]}a["default"]=arr_back},3203:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.NodeType=a.TextNode=a.Node=a.valid=a.CommentNode=a.HTMLElement=a.parse=void 0;var t=d(p(1008));a.CommentNode=t.default;var r=d(p(6992));a.HTMLElement=r.default;var i=d(p(6637));a.Node=i.default;var l=d(p(7734));a.TextNode=l.default;var o=d(p(5977));a.NodeType=o.default;var m=d(p(4636));var n=d(p(2421));a.valid=n.default;function parse(e,a){if(a===void 0){a={}}return(0,m.default)(e,a)}a["default"]=parse;a.parse=parse;parse.parse=m.default;parse.HTMLElement=r.default;parse.CommentNode=t.default;parse.valid=n.default;parse.Node=i.default;parse.TextNode=l.default;parse.NodeType=o.default},8205:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});var t=d(p(5977));function isTag(e){return e&&e.nodeType===t.default.ELEMENT_NODE}function getAttributeValue(e,a){return isTag(e)?e.getAttribute(a):undefined}function getName(e){return(e&&e.rawTagName||"").toLowerCase()}function getChildren(e){return e&&e.childNodes}function getParent(e){return e?e.parentNode:null}function getText(e){return e.text}function removeSubsets(e){var a=e.length;var p;var d;var t;while(--a>-1){p=d=e[a];e[a]=null;t=true;while(d){if(e.indexOf(d)>-1){t=false;e.splice(a,1);break}d=getParent(d)}if(t){e[a]=p}}return e}function existsOne(e,a){return a.some((function(a){return isTag(a)?e(a)||existsOne(e,getChildren(a)):false}))}function getSiblings(e){var a=getParent(e);return a?getChildren(a):[]}function hasAttrib(e,a){return getAttributeValue(e,a)!==undefined}function findOne(e,a){var p=null;for(var d=0,t=a===null||a===void 0?void 0:a.length;d<t&&!p;d++){var r=a[d];if(e(r)){p=r}else{var i=getChildren(r);if(i&&i.length>0){p=findOne(e,i)}}}return p}function findAll(e,a){var p=[];for(var d=0,t=a.length;d<t;d++){if(!isTag(a[d]))continue;if(e(a[d]))p.push(a[d]);var r=getChildren(a[d]);if(r)p=p.concat(findAll(e,r))}return p}a["default"]={isTag:isTag,getAttributeValue:getAttributeValue,getName:getName,getChildren:getChildren,getParent:getParent,getText:getText,removeSubsets:removeSubsets,existsOne:existsOne,getSiblings:getSiblings,hasAttrib:hasAttrib,findOne:findOne,findAll:findAll}},1008:function(e,a,p){"use strict";var d=this&&this.__extends||function(){var extendStatics=function(e,a){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var p in a)if(Object.prototype.hasOwnProperty.call(a,p))e[p]=a[p]};return extendStatics(e,a)};return function(e,a){if(typeof a!=="function"&&a!==null)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");extendStatics(e,a);function __(){this.constructor=e}e.prototype=a===null?Object.create(a):(__.prototype=a.prototype,new __)}}();var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});var r=t(p(6637));var i=t(p(5977));var l=function(e){d(CommentNode,e);function CommentNode(a,p,d,t){if(p===void 0){p=null}if(t===void 0){t="!--"}var r=e.call(this,p,d)||this;r.rawText=a;r.rawTagName=t;r.nodeType=i.default.COMMENT_NODE;return r}CommentNode.prototype.clone=function(){return new CommentNode(this.rawText,null,undefined,this.rawTagName)};Object.defineProperty(CommentNode.prototype,"text",{get:function(){return this.rawText},enumerable:false,configurable:true});CommentNode.prototype.toString=function(){return"\\x3c!--".concat(this.rawText,"--\\x3e")};return CommentNode}(r.default);a["default"]=l},6992:function(e,a,p){"use strict";var d=this&&this.__extends||function(){var extendStatics=function(e,a){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var p in a)if(Object.prototype.hasOwnProperty.call(a,p))e[p]=a[p]};return extendStatics(e,a)};return function(e,a){if(typeof a!=="function"&&a!==null)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");extendStatics(e,a);function __(){this.constructor=e}e.prototype=a===null?Object.create(a):(__.prototype=a.prototype,new __)}}();var t=this&&this.__assign||function(){t=Object.assign||function(e){for(var a,p=1,d=arguments.length;p<d;p++){a=arguments[p];for(var t in a)if(Object.prototype.hasOwnProperty.call(a,t))e[t]=a[t]}return e};return t.apply(this,arguments)};var r=this&&this.__spreadArray||function(e,a,p){if(p||arguments.length===2)for(var d=0,t=a.length,r;d<t;d++){if(r||!(d in a)){if(!r)r=Array.prototype.slice.call(a,0,d);r[d]=a[d]}}return e.concat(r||Array.prototype.slice.call(a))};var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.parse=a.base_parse=void 0;var l=p(2842);var o=i(p(1528));var m=i(p(3600));var n=i(p(8205));var s=i(p(6872));var u=i(p(1008));var c=i(p(6637));var f=i(p(7734));var v=i(p(5977));function decode(e){return JSON.parse(JSON.stringify(o.default.decode(e)))}var h=["h1","h2","h3","h4","h5","h6","header","hgroup"];var g=["details","dialog","dd","div","dt"];var w=["fieldset","figcaption","figure","footer","form"];var b=["table","td","tr"];var y=["address","article","aside","blockquote","br","hr","li","main","nav","ol","p","pre","section","ul"];var _=new Set;function addToKBlockElement(){var e=[];for(var a=0;a<arguments.length;a++){e[a]=arguments[a]}var addToSet=function(e){for(var a=0;a<e.length;a++){var p=e[a];_.add(p);_.add(p.toUpperCase())}};for(var p=0,d=e;p<d.length;p++){var t=d[p];addToSet(t)}}addToKBlockElement(h,g,w,b,y);var N=function(){function DOMTokenList(e,a){if(e===void 0){e=[]}if(a===void 0){a=function(){return null}}this._set=new Set(e);this._afterUpdate=a}DOMTokenList.prototype._validate=function(e){if(/\\s/.test(e)){throw new Error("DOMException in DOMTokenList.add: The token \'".concat(e,"\' contains HTML space characters, which are not valid in tokens."))}};DOMTokenList.prototype.add=function(e){this._validate(e);this._set.add(e);this._afterUpdate(this)};DOMTokenList.prototype.replace=function(e,a){this._validate(a);this._set.delete(e);this._set.add(a);this._afterUpdate(this)};DOMTokenList.prototype.remove=function(e){this._set.delete(e)&&this._afterUpdate(this)};DOMTokenList.prototype.toggle=function(e){this._validate(e);if(this._set.has(e))this._set.delete(e);else this._set.add(e);this._afterUpdate(this)};DOMTokenList.prototype.contains=function(e){return this._set.has(e)};Object.defineProperty(DOMTokenList.prototype,"length",{get:function(){return this._set.size},enumerable:false,configurable:true});DOMTokenList.prototype.values=function(){return this._set.values()};Object.defineProperty(DOMTokenList.prototype,"value",{get:function(){return Array.from(this._set.values())},enumerable:false,configurable:true});DOMTokenList.prototype.toString=function(){return Array.from(this._set.values()).join(" ")};return DOMTokenList}();var D=function(e){d(HTMLElement,e);function HTMLElement(a,p,d,t,r,i,l){if(d===void 0){d=""}if(t===void 0){t=null}if(i===void 0){i=new s.default}if(l===void 0){l={}}var o=e.call(this,t,r)||this;o.rawAttrs=d;o.voidTag=i;o.nodeType=v.default.ELEMENT_NODE;o.rawTagName=a;o.rawAttrs=d||"";o.id=p.id||"";o.childNodes=[];o._parseOptions=l;o.classList=new N(p.class?p.class.split(/\\s+/):[],(function(e){return o.setAttribute("class",e.toString())}));if(p.id){if(!d){o.rawAttrs=\'id="\'.concat(p.id,\'"\')}}if(p.class){if(!d){var m=\'class="\'.concat(o.classList.toString(),\'"\');if(o.rawAttrs){o.rawAttrs+=" ".concat(m)}else{o.rawAttrs=m}}}return o}HTMLElement.prototype.quoteAttribute=function(e){if(e==null){return"null"}return JSON.stringify(e.replace(/"/g,"&quot;")).replace(/\\\\t/g,"\\t").replace(/\\\\n/g,"\\n").replace(/\\\\r/g,"\\r").replace(/\\\\/g,"")};HTMLElement.prototype.removeChild=function(e){this.childNodes=this.childNodes.filter((function(a){return a!==e}));return this};HTMLElement.prototype.exchangeChild=function(e,a){var p=this.childNodes;this.childNodes=p.map((function(p){if(p===e){return a}return p}));return this};Object.defineProperty(HTMLElement.prototype,"tagName",{get:function(){return this.rawTagName?this.rawTagName.toUpperCase():this.rawTagName},set:function(e){this.rawTagName=e.toLowerCase()},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"localName",{get:function(){return this.rawTagName.toLowerCase()},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"isVoidElement",{get:function(){return this.voidTag.isVoidElement(this.localName)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"rawText",{get:function(){if(/^br$/i.test(this.rawTagName)){return"\\n"}return this.childNodes.reduce((function(e,a){return e+=a.rawText}),"")},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"textContent",{get:function(){return decode(this.rawText)},set:function(e){var a=[new f.default(e,this)];this.childNodes=a},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"text",{get:function(){return decode(this.rawText)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"structuredText",{get:function(){var e=[];var a=[e];function dfs(p){if(p.nodeType===v.default.ELEMENT_NODE){if(_.has(p.rawTagName)){if(e.length>0){a.push(e=[])}p.childNodes.forEach(dfs);if(e.length>0){a.push(e=[])}}else{p.childNodes.forEach(dfs)}}else if(p.nodeType===v.default.TEXT_NODE){if(p.isWhitespace){e.prependWhitespace=true}else{var d=p.trimmedText;if(e.prependWhitespace){d=" ".concat(d);e.prependWhitespace=false}e.push(d)}}}dfs(this);return a.map((function(e){return e.join("").replace(/\\s{2,}/g," ")})).join("\\n").replace(/\\s+$/,"")},enumerable:false,configurable:true});HTMLElement.prototype.toString=function(){var e=this.rawTagName;if(e){var a=this.rawAttrs?" ".concat(this.rawAttrs):"";return this.voidTag.formatNode(e,a,this.innerHTML)}return this.innerHTML};Object.defineProperty(HTMLElement.prototype,"innerHTML",{get:function(){return this.childNodes.map((function(e){return e.toString()})).join("")},set:function(e){var a=parse(e,this._parseOptions);var p=a.childNodes.length?a.childNodes:[new f.default(e,this)];resetParent(p,this);resetParent(this.childNodes,null);this.childNodes=p},enumerable:false,configurable:true});HTMLElement.prototype.set_content=function(e,a){if(a===void 0){a={}}if(e instanceof c.default){e=[e]}else if(typeof e=="string"){a=t(t({},this._parseOptions),a);var p=parse(e,a);e=p.childNodes.length?p.childNodes:[new f.default(p.innerHTML,this)]}resetParent(this.childNodes,null);resetParent(e,this);this.childNodes=e;return this};HTMLElement.prototype.replaceWith=function(){var e=this;var a=[];for(var p=0;p<arguments.length;p++){a[p]=arguments[p]}var d=this.parentNode;var t=a.map((function(a){if(a instanceof c.default){return[a]}else if(typeof a=="string"){var p=parse(a,e._parseOptions);return p.childNodes.length?p.childNodes:[new f.default(a,e)]}return[]})).flat();var i=d.childNodes.findIndex((function(a){return a===e}));resetParent([this],null);d.childNodes=r(r(r([],d.childNodes.slice(0,i),true),resetParent(t,d),true),d.childNodes.slice(i+1),true);return this};Object.defineProperty(HTMLElement.prototype,"outerHTML",{get:function(){return this.toString()},enumerable:false,configurable:true});HTMLElement.prototype.trimRight=function(e){for(var a=0;a<this.childNodes.length;a++){var p=this.childNodes[a];if(p.nodeType===v.default.ELEMENT_NODE){p.trimRight(e)}else{var d=p.rawText.search(e);if(d>-1){p.rawText=p.rawText.substr(0,d);this.childNodes.length=a+1}}}return this};Object.defineProperty(HTMLElement.prototype,"structure",{get:function(){var e=[];var a=0;function write(p){e.push("  ".repeat(a)+p)}function dfs(e){var p=e.id?"#".concat(e.id):"";var d=e.classList.length?".".concat(e.classList.value.join(".")):"";write("".concat(e.rawTagName).concat(p).concat(d));a++;e.childNodes.forEach((function(e){if(e.nodeType===v.default.ELEMENT_NODE){dfs(e)}else if(e.nodeType===v.default.TEXT_NODE){if(!e.isWhitespace){write("#text")}}}));a--}dfs(this);return e.join("\\n")},enumerable:false,configurable:true});HTMLElement.prototype.removeWhitespace=function(){var e=this;var a=0;this.childNodes.forEach((function(p){if(p.nodeType===v.default.TEXT_NODE){if(p.isWhitespace){return}p.rawText=p.trimmedRawText}else if(p.nodeType===v.default.ELEMENT_NODE){p.removeWhitespace()}e.childNodes[a++]=p}));this.childNodes.length=a;return this};HTMLElement.prototype.querySelectorAll=function(e){return(0,l.selectAll)(e,this,{xmlMode:true,adapter:n.default})};HTMLElement.prototype.querySelector=function(e){return(0,l.selectOne)(e,this,{xmlMode:true,adapter:n.default})};HTMLElement.prototype.getElementsByTagName=function(e){var a=e.toUpperCase();var p=[];var d=[];var t=this;var r=0;while(r!==undefined){var i=void 0;do{i=t.childNodes[r++]}while(r<t.childNodes.length&&i===undefined);if(i===undefined){t=t.parentNode;r=d.pop();continue}if(i.nodeType===v.default.ELEMENT_NODE){if(e==="*"||i.tagName===a)p.push(i);if(i.childNodes.length>0){d.push(r);t=i;r=0}}}return p};HTMLElement.prototype.getElementById=function(e){var a=[];var p=this;var d=0;while(d!==undefined){var t=void 0;do{t=p.childNodes[d++]}while(d<p.childNodes.length&&t===undefined);if(t===undefined){p=p.parentNode;d=a.pop();continue}if(t.nodeType===v.default.ELEMENT_NODE){if(t.id===e){return t}if(t.childNodes.length>0){a.push(d);p=t;d=0}}}return null};HTMLElement.prototype.closest=function(e){var a=new Map;var p=this;var d=null;function findOne(e,p){var d=null;for(var t=0,r=p.length;t<r&&!d;t++){var i=p[t];if(e(i)){d=i}else{var l=a.get(i);if(l){d=findOne(e,[l])}}}return d}while(p){a.set(p,d);d=p;p=p.parentNode}p=this;while(p){var r=(0,l.selectOne)(e,p,{xmlMode:true,adapter:t(t({},n.default),{getChildren:function(e){var p=a.get(e);return p&&[p]},getSiblings:function(e){return[e]},findOne:findOne,findAll:function(){return[]}})});if(r){return r}p=p.parentNode}return null};HTMLElement.prototype.appendChild=function(e){e.remove();this.childNodes.push(e);e.parentNode=this;return e};Object.defineProperty(HTMLElement.prototype,"firstChild",{get:function(){return this.childNodes[0]},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"lastChild",{get:function(){return(0,m.default)(this.childNodes)},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"attrs",{get:function(){if(this._attrs){return this._attrs}this._attrs={};var e=this.rawAttributes;for(var a in e){var p=e[a]||"";this._attrs[a.toLowerCase()]=decode(p)}return this._attrs},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"attributes",{get:function(){var e={};var a=this.rawAttributes;for(var p in a){var d=a[p]||"";e[p]=decode(d)}return e},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"rawAttributes",{get:function(){if(this._rawAttrs){return this._rawAttrs}var e={};if(this.rawAttrs){var a=/([a-zA-Z()[\\]#@$.?:][a-zA-Z0-9-_:()[\\]#]*)(?:\\s*=\\s*((?:\'[^\']*\')|(?:"[^"]*")|\\S+))?/g;var p=void 0;while(p=a.exec(this.rawAttrs)){var d=p[1];var t=p[2]||null;if(t&&(t[0]==="\'"||t[0]===\'"\'))t=t.slice(1,t.length-1);e[d]=e[d]||t}}this._rawAttrs=e;return e},enumerable:false,configurable:true});HTMLElement.prototype.removeAttribute=function(e){var a=this;var p=this.rawAttributes;delete p[e];if(this._attrs){delete this._attrs[e]}this.rawAttrs=Object.keys(p).map((function(e){var d=a.quoteAttribute(p[e]);if(d==="null"||d===\'""\')return e;return"".concat(e,"=").concat(d)})).join(" ");if(e==="id"){this.id=""}return this};HTMLElement.prototype.hasAttribute=function(e){return e.toLowerCase()in this.attrs};HTMLElement.prototype.getAttribute=function(e){return this.attrs[e.toLowerCase()]};HTMLElement.prototype.setAttribute=function(e,a){var p=this;if(arguments.length<2){throw new Error("Failed to execute \'setAttribute\' on \'Element\'")}var d=e.toLowerCase();var t=this.rawAttributes;for(var r in t){if(r.toLowerCase()===d){e=r;break}}t[e]=String(a);if(this._attrs){this._attrs[d]=decode(t[e])}this.rawAttrs=Object.keys(t).map((function(e){var a=p.quoteAttribute(t[e]);if(a==="null"||a===\'""\')return e;return"".concat(e,"=").concat(a)})).join(" ");if(e==="id"){this.id=a}return this};HTMLElement.prototype.setAttributes=function(e){var a=this;if(this._attrs){delete this._attrs}if(this._rawAttrs){delete this._rawAttrs}this.rawAttrs=Object.keys(e).map((function(p){var d=e[p];if(d==="null"||d===\'""\')return p;return"".concat(p,"=").concat(a.quoteAttribute(String(d)))})).join(" ");return this};HTMLElement.prototype.insertAdjacentHTML=function(e,a){var p,d,t;var i=this;if(arguments.length<2){throw new Error("2 arguments required")}var l=parse(a,this._parseOptions);if(e==="afterend"){var o=this.parentNode.childNodes.findIndex((function(e){return e===i}));resetParent(l.childNodes,this.parentNode);(p=this.parentNode.childNodes).splice.apply(p,r([o+1,0],l.childNodes,false))}else if(e==="afterbegin"){resetParent(l.childNodes,this);(d=this.childNodes).unshift.apply(d,l.childNodes)}else if(e==="beforeend"){l.childNodes.forEach((function(e){i.appendChild(e)}))}else if(e==="beforebegin"){var o=this.parentNode.childNodes.findIndex((function(e){return e===i}));resetParent(l.childNodes,this.parentNode);(t=this.parentNode.childNodes).splice.apply(t,r([o,0],l.childNodes,false))}else{throw new Error("The value provided (\'".concat(e,"\') is not one of \'beforebegin\', \'afterbegin\', \'beforeend\', or \'afterend\'"))}return this};Object.defineProperty(HTMLElement.prototype,"nextSibling",{get:function(){if(this.parentNode){var e=this.parentNode.childNodes;var a=0;while(a<e.length){var p=e[a++];if(this===p)return e[a]||null}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"nextElementSibling",{get:function(){if(this.parentNode){var e=this.parentNode.childNodes;var a=0;var p=false;while(a<e.length){var d=e[a++];if(p){if(d instanceof HTMLElement){return d||null}}else if(this===d){p=true}}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"previousSibling",{get:function(){if(this.parentNode){var e=this.parentNode.childNodes;var a=e.length;while(a>0){var p=e[--a];if(this===p)return e[a-1]||null}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"previousElementSibling",{get:function(){if(this.parentNode){var e=this.parentNode.childNodes;var a=e.length;var p=false;while(a>0){var d=e[--a];if(p){if(d instanceof HTMLElement){return d||null}}else if(this===d){p=true}}return null}},enumerable:false,configurable:true});Object.defineProperty(HTMLElement.prototype,"classNames",{get:function(){return this.classList.toString()},enumerable:false,configurable:true});HTMLElement.prototype.clone=function(){return parse(this.toString(),this._parseOptions).firstChild};return HTMLElement}(c.default);a["default"]=D;var S=/<!--[\\s\\S]*?-->|<(\\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\\s+[^>]*?(?:(?:\'[^\']*\')|(?:"[^"]*"))?)*)\\s*(\\/?)>/g;var T=/(?:^|\\s)(id|class)\\s*=\\s*((?:\'[^\']*\')|(?:"[^"]*")|\\S+)/gi;var E={li:{li:true,LI:true},LI:{li:true,LI:true},p:{p:true,div:true,P:true,DIV:true},P:{p:true,div:true,P:true,DIV:true},b:{div:true,DIV:true},B:{div:true,DIV:true},td:{td:true,th:true,TD:true,TH:true},TD:{td:true,th:true,TD:true,TH:true},th:{td:true,th:true,TD:true,TH:true},TH:{td:true,th:true,TD:true,TH:true},h1:{h1:true,H1:true},H1:{h1:true,H1:true},h2:{h2:true,H2:true},H2:{h2:true,H2:true},h3:{h3:true,H3:true},H3:{h3:true,H3:true},h4:{h4:true,H4:true},H4:{h4:true,H4:true},h5:{h5:true,H5:true},H5:{h5:true,H5:true},h6:{h6:true,H6:true},H6:{h6:true,H6:true}};var A={li:{ul:true,ol:true,UL:true,OL:true},LI:{ul:true,ol:true,UL:true,OL:true},a:{div:true,DIV:true},A:{div:true,DIV:true},b:{div:true,DIV:true},B:{div:true,DIV:true},i:{div:true,DIV:true},I:{div:true,DIV:true},p:{div:true,DIV:true},P:{div:true,DIV:true},td:{tr:true,table:true,TR:true,TABLE:true},TD:{tr:true,table:true,TR:true,TABLE:true},th:{tr:true,table:true,TR:true,TABLE:true},TH:{tr:true,table:true,TR:true,TABLE:true}};var V="documentfragmentcontainer";function base_parse(e,a){var p,d;if(a===void 0){a={}}var t=new s.default((p=a===null||a===void 0?void 0:a.voidTag)===null||p===void 0?void 0:p.closingSlash,(d=a===null||a===void 0?void 0:a.voidTag)===null||d===void 0?void 0:d.tags);var r=a.blockTextElements||{script:true,noscript:true,style:true,pre:true};var i=Object.keys(r);var l=i.map((function(e){return new RegExp("^".concat(e,"$"),"i")}));var o=i.filter((function(e){return Boolean(r[e])})).map((function(e){return new RegExp("^".concat(e,"$"),"i")}));function element_should_be_ignore(e){return o.some((function(a){return a.test(e)}))}function is_block_text_element(e){return l.some((function(a){return a.test(e)}))}var createRange=function(e,a){return[e-N,a-N]};var n=new D(null,{},"",null,[0,e.length],t,a);var c=n;var v=[n];var h=-1;var g=undefined;var w;e="<".concat(V,">").concat(e,"</").concat(V,">");var b=a.lowerCaseTagName,y=a.fixNestedATags;var _=e.length-(V.length+2);var N=V.length+2;while(w=S.exec(e)){var C=w[0],x=w[1],L=w[2],O=w[3],q=w[4];var P=C.length;var B=S.lastIndex-P;var R=S.lastIndex;if(h>-1){if(h+P<R){var k=e.substring(h,B);c.appendChild(new f.default(k,c,createRange(h,B)))}}h=S.lastIndex;if(L===V)continue;if(C[1]==="!"){if(a.comment){var k=e.substring(B+4,R-3);c.appendChild(new u.default(k,c,createRange(B,R)))}continue}if(b)L=L.toLowerCase();if(!x){var M={};for(var U=void 0;U=T.exec(O);){var F=U[1],j=U[2];var I=j[0]==="\'"||j[0]===\'"\';M[F.toLowerCase()]=I?j.slice(1,j.length-1):j}var H=c.rawTagName;if(!q&&E[H]){if(E[H][L]){v.pop();c=(0,m.default)(v)}}if(y&&(L==="a"||L==="A")){if(g!==undefined){v.splice(g);c=(0,m.default)(v)}g=v.length}var z=S.lastIndex;var G=z-P;c=c.appendChild(new D(L,M,O.slice(1),null,createRange(G,z),t,a));v.push(c);if(is_block_text_element(L)){var W="</".concat(L,">");var $=b?e.toLocaleLowerCase().indexOf(W,S.lastIndex):e.indexOf(W,S.lastIndex);var Y=$===-1?_:$;if(element_should_be_ignore(L)){var k=e.substring(z,Y);if(k.length>0&&/\\S/.test(k)){c.appendChild(new f.default(k,c,createRange(z,Y)))}}if($===-1){h=S.lastIndex=e.length+1}else{h=S.lastIndex=$+W.length;x="/"}}}if(x||q||t.isVoidElement(L)){while(true){if(g!=null&&(L==="a"||L==="A"))g=undefined;if(c.rawTagName===L){c.range[1]=createRange(-1,Math.max(h,R))[1];v.pop();c=(0,m.default)(v);break}else{var H=c.tagName;if(A[H]){if(A[H][L]){v.pop();c=(0,m.default)(v);continue}}break}}}}return v}a.base_parse=base_parse;function parse(e,a){if(a===void 0){a={}}var p=base_parse(e,a);var d=p[0];var _loop_1=function(){var e=p.pop();var d=(0,m.default)(p);if(e.parentNode&&e.parentNode.parentNode){if(e.parentNode===d&&e.tagName===d.tagName){if(a.parseNoneClosedTags!==true){d.removeChild(e);e.childNodes.forEach((function(e){d.parentNode.appendChild(e)}));p.pop()}}else{if(a.parseNoneClosedTags!==true){d.removeChild(e);e.childNodes.forEach((function(e){d.appendChild(e)}))}}}else{}};while(p.length>1){_loop_1()}return d}a.parse=parse;function resetParent(e,a){return e.map((function(e){e.parentNode=a;return e}))}},6637:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});var d=p(1528);var t=function(){function Node(e,a){if(e===void 0){e=null}this.parentNode=e;this.childNodes=[];Object.defineProperty(this,"range",{enumerable:false,writable:true,configurable:true,value:a!==null&&a!==void 0?a:[-1,-1]})}Node.prototype.remove=function(){var e=this;if(this.parentNode){var a=this.parentNode.childNodes;this.parentNode.childNodes=a.filter((function(a){return e!==a}));this.parentNode=null}return this};Object.defineProperty(Node.prototype,"innerText",{get:function(){return this.rawText},enumerable:false,configurable:true});Object.defineProperty(Node.prototype,"textContent",{get:function(){return(0,d.decode)(this.rawText)},set:function(e){this.rawText=(0,d.encode)(e)},enumerable:false,configurable:true});return Node}();a["default"]=t},7734:function(e,a,p){"use strict";var d=this&&this.__extends||function(){var extendStatics=function(e,a){extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,a){e.__proto__=a}||function(e,a){for(var p in a)if(Object.prototype.hasOwnProperty.call(a,p))e[p]=a[p]};return extendStatics(e,a)};return function(e,a){if(typeof a!=="function"&&a!==null)throw new TypeError("Class extends value "+String(a)+" is not a constructor or null");extendStatics(e,a);function __(){this.constructor=e}e.prototype=a===null?Object.create(a):(__.prototype=a.prototype,new __)}}();var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});var r=p(1528);var i=t(p(6637));var l=t(p(5977));var o=function(e){d(TextNode,e);function TextNode(a,p,d){if(p===void 0){p=null}var t=e.call(this,p,d)||this;t.nodeType=l.default.TEXT_NODE;t.rawTagName="";t._rawText=a;return t}TextNode.prototype.clone=function(){return new TextNode(this._rawText,null)};Object.defineProperty(TextNode.prototype,"rawText",{get:function(){return this._rawText},set:function(e){this._rawText=e;this._trimmedRawText=void 0;this._trimmedText=void 0},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"trimmedRawText",{get:function(){if(this._trimmedRawText!==undefined)return this._trimmedRawText;this._trimmedRawText=trimText(this.rawText);return this._trimmedRawText},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"trimmedText",{get:function(){if(this._trimmedText!==undefined)return this._trimmedText;this._trimmedText=trimText(this.text);return this._trimmedText},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"text",{get:function(){return(0,r.decode)(this.rawText)},enumerable:false,configurable:true});Object.defineProperty(TextNode.prototype,"isWhitespace",{get:function(){return/^(\\s|&nbsp;)*$/.test(this.rawText)},enumerable:false,configurable:true});TextNode.prototype.toString=function(){return this.rawText};return TextNode}(i.default);a["default"]=o;function trimText(e){var a=0;var p;var d;while(a>=0&&a<e.length){if(/\\S/.test(e[a])){if(p===undefined){p=a;a=e.length}else{d=a;a=void 0}}if(p===undefined)a++;else a--}if(p===undefined)p=0;if(d===undefined)d=e.length-1;var t=p>0&&/[^\\S\\r\\n]/.test(e[p-1]);var r=d<e.length-1&&/[^\\S\\r\\n]/.test(e[d+1]);return(t?" ":"")+e.slice(p,d+1)+(r?" ":"")}},5977:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});var p;(function(e){e[e["ELEMENT_NODE"]=1]="ELEMENT_NODE";e[e["TEXT_NODE"]=3]="TEXT_NODE";e[e["COMMENT_NODE"]=8]="COMMENT_NODE"})(p||(p={}));a["default"]=p},4636:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a["default"]=void 0;var d=p(6992);Object.defineProperty(a,"default",{enumerable:true,get:function(){return d.parse}})},2421:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});var d=p(6992);function valid(e,a){if(a===void 0){a={}}var p=(0,d.base_parse)(e,a);return Boolean(p.length===1)}a["default"]=valid},6872:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});var p=function(){function VoidTag(e,a){if(e===void 0){e=false}this.addClosingSlash=e;if(Array.isArray(a)){this.voidTags=a.reduce((function(e,a){return e.add(a.toLowerCase()).add(a.toUpperCase()).add(a)}),new Set)}else{this.voidTags=["area","base","br","col","embed","hr","img","input","link","meta","param","source","track","wbr"].reduce((function(e,a){return e.add(a.toLowerCase()).add(a.toUpperCase()).add(a)}),new Set)}}VoidTag.prototype.formatNode=function(e,a,p){var d=this.addClosingSlash;var t=d&&a&&!a.endsWith(" ")?" ":"";var r=d?"".concat(t,"/"):"";return this.isVoidElement(e.toLowerCase())?"<".concat(e).concat(a).concat(r,">"):"<".concat(e).concat(a,">").concat(p,"</").concat(e,">")};VoidTag.prototype.isVoidElement=function(e){return this.voidTags.has(e)};return VoidTag}();a["default"]=p},6694:function(e,a,p){"use strict";var d=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(a,"__esModule",{value:true});a.generate=a.compile=void 0;var t=d(p(5265));function compile(e){var a=e[0];var p=e[1]-1;if(p<0&&a<=0)return t.default.falseFunc;if(a===-1)return function(e){return e<=p};if(a===0)return function(e){return e===p};if(a===1)return p<0?t.default.trueFunc:function(e){return e>=p};var d=Math.abs(a);var r=(p%d+d)%d;return a>1?function(e){return e>=p&&e%d===r}:function(e){return e<=p&&e%d===r}}a.compile=compile;function generate(e){var a=e[0];var p=e[1]-1;var d=0;if(a<0){var t=-a;var r=(p%t+t)%t;return function(){var e=r+t*d++;return e>p?null:e}}if(a===0)return p<0?function(){return null}:function(){return d++===0?p:null};if(p<0){p+=a*Math.ceil(-p/a)}return function(){return a*d+++p}}a.generate=generate},187:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.sequence=a.generate=a.compile=a.parse=void 0;var d=p(436);Object.defineProperty(a,"parse",{enumerable:true,get:function(){return d.parse}});var t=p(6694);Object.defineProperty(a,"compile",{enumerable:true,get:function(){return t.compile}});Object.defineProperty(a,"generate",{enumerable:true,get:function(){return t.generate}});function nthCheck(e){return(0,t.compile)((0,d.parse)(e))}a["default"]=nthCheck;function sequence(e){return(0,t.generate)((0,d.parse)(e))}a.sequence=sequence},436:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:true});a.parse=void 0;var p=new Set([9,10,12,13,32]);var d="0".charCodeAt(0);var t="9".charCodeAt(0);function parse(e){e=e.trim().toLowerCase();if(e==="even"){return[2,0]}else if(e==="odd"){return[2,1]}var a=0;var r=0;var i=readSign();var l=readNumber();if(a<e.length&&e.charAt(a)==="n"){a++;r=i*(l!==null&&l!==void 0?l:1);skipWhitespace();if(a<e.length){i=readSign();skipWhitespace();l=readNumber()}else{i=l=0}}if(l===null||a<e.length){throw new Error("n-th rule couldn\'t be parsed (\'".concat(e,"\')"))}return[r,i*l];function readSign(){if(e.charAt(a)==="-"){a++;return-1}if(e.charAt(a)==="+"){a++}return 1}function readNumber(){var p=a;var r=0;while(a<e.length&&e.charCodeAt(a)>=d&&e.charCodeAt(a)<=t){r=r*10+(e.charCodeAt(a)-d);a++}return a===p?null:r}function skipWhitespace(){while(a<e.length&&p.has(e.charCodeAt(a))){a++}}}a.parse=parse},1552:(e,a,p)=>{"use strict";var d=p(4876);var t=p(2472);var r={TRANSITIONAL:0,NONTRANSITIONAL:1};function normalize(e){return e.split("\\0").map((function(e){return e.normalize("NFC")})).join("\\0")}function findStatus(e){var a=0;var p=t.length-1;while(a<=p){var d=Math.floor((a+p)/2);var r=t[d];if(r[0][0]<=e&&r[0][1]>=e){return r}else if(r[0][0]>e){p=d-1}else{a=d+1}}return null}var i=/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;function countSymbols(e){return e.replace(i,"_").length}function mapChars(e,a,p){var d=false;var t="";var i=countSymbols(e);for(var l=0;l<i;++l){var o=e.codePointAt(l);var m=findStatus(o);switch(m[1]){case"disallowed":d=true;t+=String.fromCodePoint(o);break;case"ignored":break;case"mapped":t+=String.fromCodePoint.apply(String,m[2]);break;case"deviation":if(p===r.TRANSITIONAL){t+=String.fromCodePoint.apply(String,m[2])}else{t+=String.fromCodePoint(o)}break;case"valid":t+=String.fromCodePoint(o);break;case"disallowed_STD3_mapped":if(a){d=true;t+=String.fromCodePoint(o)}else{t+=String.fromCodePoint.apply(String,m[2])}break;case"disallowed_STD3_valid":if(a){d=true}t+=String.fromCodePoint(o);break}}return{string:t,error:d}}var l=/[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;function validateLabel(e,a){if(e.substr(0,4)==="xn--"){e=d.toUnicode(e);a=r.NONTRANSITIONAL}var p=false;if(normalize(e)!==e||e[3]==="-"&&e[4]==="-"||e[0]==="-"||e[e.length-1]==="-"||e.indexOf(".")!==-1||e.search(l)===0){p=true}var t=countSymbols(e);for(var i=0;i<t;++i){var o=findStatus(e.codePointAt(i));if(processing===r.TRANSITIONAL&&o[1]!=="valid"||processing===r.NONTRANSITIONAL&&o[1]!=="valid"&&o[1]!=="deviation"){p=true;break}}return{label:e,error:p}}function processing(e,a,p){var d=mapChars(e,a,p);d.string=normalize(d.string);var t=d.string.split(".");for(var r=0;r<t.length;++r){try{var i=validateLabel(t[r]);t[r]=i.label;d.error=d.error||i.error}catch(e){d.error=true}}return{string:t.join("."),error:d.error}}e.exports.toASCII=function(e,a,p,t){var r=processing(e,a,p);var i=r.string.split(".");i=i.map((function(e){try{return d.toASCII(e)}catch(a){r.error=true;return e}}));if(t){var l=i.slice(0,i.length-1).join(".").length;if(l.length>253||l.length===0){r.error=true}for(var o=0;o<i.length;++o){if(i.length>63||i.length===0){r.error=true;break}}}if(r.error)return null;return i.join(".")};e.exports.toUnicode=function(e,a){var p=processing(e,a,r.NONTRANSITIONAL);return{domain:p.string,error:p.error}};e.exports.PROCESSING_OPTIONS=r},7125:e=>{"use strict";var a={};e.exports=a;function sign(e){return e<0?-1:1}function evenRound(e){if(e%1===.5&&(e&1)===0){return Math.floor(e)}else{return Math.round(e)}}function createNumberConversion(e,a){if(!a.unsigned){--e}const p=a.unsigned?0:-Math.pow(2,e);const d=Math.pow(2,e)-1;const t=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e);const r=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,i){if(!i)i={};let l=+e;if(i.enforceRange){if(!Number.isFinite(l)){throw new TypeError("Argument is not a finite number")}l=sign(l)*Math.floor(Math.abs(l));if(l<p||l>d){throw new TypeError("Argument is not in byte range")}return l}if(!isNaN(l)&&i.clamp){l=evenRound(l);if(l<p)l=p;if(l>d)l=d;return l}if(!Number.isFinite(l)||l===0){return 0}l=sign(l)*Math.floor(Math.abs(l));l=l%t;if(!a.unsigned&&l>=r){return l-t}else if(a.unsigned){if(l<0){l+=t}else if(l===-0){return 0}}return l}}a["void"]=function(){return undefined};a["boolean"]=function(e){return!!e};a["byte"]=createNumberConversion(8,{unsigned:false});a["octet"]=createNumberConversion(8,{unsigned:true});a["short"]=createNumberConversion(16,{unsigned:false});a["unsigned short"]=createNumberConversion(16,{unsigned:true});a["long"]=createNumberConversion(32,{unsigned:false});a["unsigned long"]=createNumberConversion(32,{unsigned:true});a["long long"]=createNumberConversion(32,{unsigned:false,moduloBitLength:64});a["unsigned long long"]=createNumberConversion(32,{unsigned:true,moduloBitLength:64});a["double"]=function(e){const a=+e;if(!Number.isFinite(a)){throw new TypeError("Argument is not a finite floating-point value")}return a};a["unrestricted double"]=function(e){const a=+e;if(isNaN(a)){throw new TypeError("Argument is NaN")}return a};a["float"]=a["double"];a["unrestricted float"]=a["unrestricted double"];a["DOMString"]=function(e,a){if(!a)a={};if(a.treatNullAsEmptyString&&e===null){return""}return String(e)};a["ByteString"]=function(e,a){const p=String(e);let d=undefined;for(let e=0;(d=p.codePointAt(e))!==undefined;++e){if(d>255){throw new TypeError("Argument is not a valid bytestring")}}return p};a["USVString"]=function(e){const a=String(e);const p=a.length;const d=[];for(let e=0;e<p;++e){const t=a.charCodeAt(e);if(t<55296||t>57343){d.push(String.fromCodePoint(t))}else if(56320<=t&&t<=57343){d.push(String.fromCodePoint(65533))}else{if(e===p-1){d.push(String.fromCodePoint(65533))}else{const p=a.charCodeAt(e+1);if(56320<=p&&p<=57343){const a=t&1023;const r=p&1023;d.push(String.fromCodePoint((2<<15)+(2<<9)*a+r));++e}else{d.push(String.fromCodePoint(65533))}}}}return d.join("")};a["Date"]=function(e,a){if(!(e instanceof Date)){throw new TypeError("Argument is not a Date object")}if(isNaN(e)){return undefined}return e};a["RegExp"]=function(e,a){if(!(e instanceof RegExp)){e=new RegExp(e)}return e}},3184:(e,a,p)=>{"use strict";const d=p(905);a.implementation=class URLImpl{constructor(e){const a=e[0];const p=e[1];let t=null;if(p!==undefined){t=d.basicURLParse(p);if(t==="failure"){throw new TypeError("Invalid base URL")}}const r=d.basicURLParse(a,{baseURL:t});if(r==="failure"){throw new TypeError("Invalid URL")}this._url=r}get href(){return d.serializeURL(this._url)}set href(e){const a=d.basicURLParse(e);if(a==="failure"){throw new TypeError("Invalid URL")}this._url=a}get origin(){return d.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){d.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}d.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}d.setThePassword(this._url,e)}get host(){const e=this._url;if(e.host===null){return""}if(e.port===null){return d.serializeHost(e.host)}return d.serializeHost(e.host)+":"+d.serializeInteger(e.port)}set host(e){if(this._url.cannotBeABaseURL){return}d.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){if(this._url.host===null){return""}return d.serializeHost(this._url.host)}set hostname(e){if(this._url.cannotBeABaseURL){return}d.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){if(this._url.port===null){return""}return d.serializeInteger(this._url.port)}set port(e){if(d.cannotHaveAUsernamePasswordPort(this._url)){return}if(e===""){this._url.port=null}else{d.basicURLParse(e,{url:this._url,stateOverride:"port"})}}get pathname(){if(this._url.cannotBeABaseURL){return this._url.path[0]}if(this._url.path.length===0){return""}return"/"+this._url.path.join("/")}set pathname(e){if(this._url.cannotBeABaseURL){return}this._url.path=[];d.basicURLParse(e,{url:this._url,stateOverride:"path start"})}get search(){if(this._url.query===null||this._url.query===""){return""}return"?"+this._url.query}set search(e){const a=this._url;if(e===""){a.query=null;return}const p=e[0]==="?"?e.substring(1):e;a.query="";d.basicURLParse(p,{url:a,stateOverride:"query"})}get hash(){if(this._url.fragment===null||this._url.fragment===""){return""}return"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}const a=e[0]==="#"?e.substring(1):e;this._url.fragment="";d.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},6633:(e,a,p)=>{"use strict";const d=p(7125);const t=p(9857);const r=p(3184);const i=t.implSymbol;function URL(a){if(!this||this[i]||!(this instanceof URL)){throw new TypeError("Failed to construct \'URL\': Please use the \'new\' operator, this DOM object constructor cannot be called as a function.")}if(arguments.length<1){throw new TypeError("Failed to construct \'URL\': 1 argument required, but only "+arguments.length+" present.")}const p=[];for(let e=0;e<arguments.length&&e<2;++e){p[e]=arguments[e]}p[0]=d["USVString"](p[0]);if(p[1]!==undefined){p[1]=d["USVString"](p[1])}e.exports.setup(this,p)}URL.prototype.toJSON=function toJSON(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}const a=[];for(let e=0;e<arguments.length&&e<0;++e){a[e]=arguments[e]}return this[i].toJSON.apply(this[i],a)};Object.defineProperty(URL.prototype,"href",{get(){return this[i].href},set(e){e=d["USVString"](e);this[i].href=e},enumerable:true,configurable:true});URL.prototype.toString=function(){if(!this||!e.exports.is(this)){throw new TypeError("Illegal invocation")}return this.href};Object.defineProperty(URL.prototype,"origin",{get(){return this[i].origin},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"protocol",{get(){return this[i].protocol},set(e){e=d["USVString"](e);this[i].protocol=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"username",{get(){return this[i].username},set(e){e=d["USVString"](e);this[i].username=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"password",{get(){return this[i].password},set(e){e=d["USVString"](e);this[i].password=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"host",{get(){return this[i].host},set(e){e=d["USVString"](e);this[i].host=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hostname",{get(){return this[i].hostname},set(e){e=d["USVString"](e);this[i].hostname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"port",{get(){return this[i].port},set(e){e=d["USVString"](e);this[i].port=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"pathname",{get(){return this[i].pathname},set(e){e=d["USVString"](e);this[i].pathname=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"search",{get(){return this[i].search},set(e){e=d["USVString"](e);this[i].search=e},enumerable:true,configurable:true});Object.defineProperty(URL.prototype,"hash",{get(){return this[i].hash},set(e){e=d["USVString"](e);this[i].hash=e},enumerable:true,configurable:true});e.exports={is(e){return!!e&&e[i]instanceof r.implementation},create(e,a){let p=Object.create(URL.prototype);this.setup(p,e,a);return p},setup(e,a,p){if(!p)p={};p.wrapper=e;e[i]=new r.implementation(a,p);e[i][t.wrapperSymbol]=e},interface:URL,expose:{Window:{URL:URL},Worker:{URL:URL}}}},2686:(e,a,p)=>{"use strict";a.URL=p(6633)["interface"];a.serializeURL=p(905).serializeURL;a.serializeURLOrigin=p(905).serializeURLOrigin;a.basicURLParse=p(905).basicURLParse;a.setTheUsername=p(905).setTheUsername;a.setThePassword=p(905).setThePassword;a.serializeHost=p(905).serializeHost;a.serializeInteger=p(905).serializeInteger;a.parseURL=p(905).parseURL},905:(e,a,p)=>{"use strict";const d=p(4876);const t=p(1552);const r={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443};const i=Symbol("failure");function countSymbols(e){return d.ucs2.decode(e).length}function at(e,a){const p=e[a];return isNaN(p)?undefined:String.fromCodePoint(p)}function isASCIIDigit(e){return e>=48&&e<=57}function isASCIIAlpha(e){return e>=65&&e<=90||e>=97&&e<=122}function isASCIIAlphanumeric(e){return isASCIIAlpha(e)||isASCIIDigit(e)}function isASCIIHex(e){return isASCIIDigit(e)||e>=65&&e<=70||e>=97&&e<=102}function isSingleDot(e){return e==="."||e.toLowerCase()==="%2e"}function isDoubleDot(e){e=e.toLowerCase();return e===".."||e==="%2e."||e===".%2e"||e==="%2e%2e"}function isWindowsDriveLetterCodePoints(e,a){return isASCIIAlpha(e)&&(a===58||a===124)}function isWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&(e[1]===":"||e[1]==="|")}function isNormalizedWindowsDriveLetterString(e){return e.length===2&&isASCIIAlpha(e.codePointAt(0))&&e[1]===":"}function containsForbiddenHostCodePoint(e){return e.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function containsForbiddenHostCodePointExcludingPercent(e){return e.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/)!==-1}function isSpecialScheme(e){return r[e]!==undefined}function isSpecial(e){return isSpecialScheme(e.scheme)}function defaultPort(e){return r[e]}function percentEncode(e){let a=e.toString(16).toUpperCase();if(a.length===1){a="0"+a}return"%"+a}function utf8PercentEncode(e){const a=new Buffer(e);let p="";for(let e=0;e<a.length;++e){p+=percentEncode(a[e])}return p}function utf8PercentDecode(e){const a=new Buffer(e);const p=[];for(let e=0;e<a.length;++e){if(a[e]!==37){p.push(a[e])}else if(a[e]===37&&isASCIIHex(a[e+1])&&isASCIIHex(a[e+2])){p.push(parseInt(a.slice(e+1,e+3).toString(),16));e+=2}else{p.push(a[e])}}return new Buffer(p).toString()}function isC0ControlPercentEncode(e){return e<=31||e>126}const l=new Set([32,34,35,60,62,63,96,123,125]);function isPathPercentEncode(e){return isC0ControlPercentEncode(e)||l.has(e)}const o=new Set([47,58,59,61,64,91,92,93,94,124]);function isUserinfoPercentEncode(e){return isPathPercentEncode(e)||o.has(e)}function percentEncodeChar(e,a){const p=String.fromCodePoint(e);if(a(e)){return utf8PercentEncode(p)}return p}function parseIPv4Number(e){let a=10;if(e.length>=2&&e.charAt(0)==="0"&&e.charAt(1).toLowerCase()==="x"){e=e.substring(2);a=16}else if(e.length>=2&&e.charAt(0)==="0"){e=e.substring(1);a=8}if(e===""){return 0}const p=a===10?/[^0-9]/:a===16?/[^0-9A-Fa-f]/:/[^0-7]/;if(p.test(e)){return i}return parseInt(e,a)}function parseIPv4(e){const a=e.split(".");if(a[a.length-1]===""){if(a.length>1){a.pop()}}if(a.length>4){return e}const p=[];for(const d of a){if(d===""){return e}const a=parseIPv4Number(d);if(a===i){return e}p.push(a)}for(let e=0;e<p.length-1;++e){if(p[e]>255){return i}}if(p[p.length-1]>=Math.pow(256,5-p.length)){return i}let d=p.pop();let t=0;for(const e of p){d+=e*Math.pow(256,3-t);++t}return d}function serializeIPv4(e){let a="";let p=e;for(let e=1;e<=4;++e){a=String(p%256)+a;if(e!==4){a="."+a}p=Math.floor(p/256)}return a}function parseIPv6(e){const a=[0,0,0,0,0,0,0,0];let p=0;let t=null;let r=0;e=d.ucs2.decode(e);if(e[r]===58){if(e[r+1]!==58){return i}r+=2;++p;t=p}while(r<e.length){if(p===8){return i}if(e[r]===58){if(t!==null){return i}++r;++p;t=p;continue}let d=0;let l=0;while(l<4&&isASCIIHex(e[r])){d=d*16+parseInt(at(e,r),16);++r;++l}if(e[r]===46){if(l===0){return i}r-=l;if(p>6){return i}let d=0;while(e[r]!==undefined){let t=null;if(d>0){if(e[r]===46&&d<4){++r}else{return i}}if(!isASCIIDigit(e[r])){return i}while(isASCIIDigit(e[r])){const a=parseInt(at(e,r));if(t===null){t=a}else if(t===0){return i}else{t=t*10+a}if(t>255){return i}++r}a[p]=a[p]*256+t;++d;if(d===2||d===4){++p}}if(d!==4){return i}break}else if(e[r]===58){++r;if(e[r]===undefined){return i}}else if(e[r]!==undefined){return i}a[p]=d;++p}if(t!==null){let e=p-t;p=7;while(p!==0&&e>0){const d=a[t+e-1];a[t+e-1]=a[p];a[p]=d;--p;--e}}else if(t===null&&p!==8){return i}return a}function serializeIPv6(e){let a="";const p=findLongestZeroSequence(e);const d=p.idx;let t=false;for(let p=0;p<=7;++p){if(t&&e[p]===0){continue}else if(t){t=false}if(d===p){const e=p===0?"::":":";a+=e;t=true;continue}a+=e[p].toString(16);if(p!==7){a+=":"}}return a}function parseHost(e,a){if(e[0]==="["){if(e[e.length-1]!=="]"){return i}return parseIPv6(e.substring(1,e.length-1))}if(!a){return parseOpaqueHost(e)}const p=utf8PercentDecode(e);const d=t.toASCII(p,false,t.PROCESSING_OPTIONS.NONTRANSITIONAL,false);if(d===null){return i}if(containsForbiddenHostCodePoint(d)){return i}const r=parseIPv4(d);if(typeof r==="number"||r===i){return r}return d}function parseOpaqueHost(e){if(containsForbiddenHostCodePointExcludingPercent(e)){return i}let a="";const p=d.ucs2.decode(e);for(let e=0;e<p.length;++e){a+=percentEncodeChar(p[e],isC0ControlPercentEncode)}return a}function findLongestZeroSequence(e){let a=null;let p=1;let d=null;let t=0;for(let r=0;r<e.length;++r){if(e[r]!==0){if(t>p){a=d;p=t}d=null;t=0}else{if(d===null){d=r}++t}}if(t>p){a=d;p=t}return{idx:a,len:p}}function serializeHost(e){if(typeof e==="number"){return serializeIPv4(e)}if(e instanceof Array){return"["+serializeIPv6(e)+"]"}return e}function trimControlChars(e){return e.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g,"")}function trimTabAndNewline(e){return e.replace(/\\u0009|\\u000A|\\u000D/g,"")}function shortenPath(e){const a=e.path;if(a.length===0){return}if(e.scheme==="file"&&a.length===1&&isNormalizedWindowsDriveLetter(a[0])){return}a.pop()}function includesCredentials(e){return e.username!==""||e.password!==""}function cannotHaveAUsernamePasswordPort(e){return e.host===null||e.host===""||e.cannotBeABaseURL||e.scheme==="file"}function isNormalizedWindowsDriveLetter(e){return/^[A-Za-z]:$/.test(e)}function URLStateMachine(e,a,p,t,r){this.pointer=0;this.input=e;this.base=a||null;this.encodingOverride=p||"utf-8";this.stateOverride=r;this.url=t;this.failure=false;this.parseError=false;if(!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:false};const e=trimControlChars(this.input);if(e!==this.input){this.parseError=true}this.input=e}const l=trimTabAndNewline(this.input);if(l!==this.input){this.parseError=true}this.input=l;this.state=r||"scheme start";this.buffer="";this.atFlag=false;this.arrFlag=false;this.passwordTokenSeenFlag=false;this.input=d.ucs2.decode(this.input);for(;this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer];const a=isNaN(e)?undefined:String.fromCodePoint(e);const p=this["parse "+this.state](e,a);if(!p){break}else if(p===i){this.failure=true;break}}}URLStateMachine.prototype["parse scheme start"]=function parseSchemeStart(e,a){if(isASCIIAlpha(e)){this.buffer+=a.toLowerCase();this.state="scheme"}else if(!this.stateOverride){this.state="no scheme";--this.pointer}else{this.parseError=true;return i}return true};URLStateMachine.prototype["parse scheme"]=function parseScheme(e,a){if(isASCIIAlphanumeric(e)||e===43||e===45||e===46){this.buffer+=a.toLowerCase()}else if(e===58){if(this.stateOverride){if(isSpecial(this.url)&&!isSpecialScheme(this.buffer)){return false}if(!isSpecial(this.url)&&isSpecialScheme(this.buffer)){return false}if((includesCredentials(this.url)||this.url.port!==null)&&this.buffer==="file"){return false}if(this.url.scheme==="file"&&(this.url.host===""||this.url.host===null)){return false}}this.url.scheme=this.buffer;this.buffer="";if(this.stateOverride){return false}if(this.url.scheme==="file"){if(this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47){this.parseError=true}this.state="file"}else if(isSpecial(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme){this.state="special relative or authority"}else if(isSpecial(this.url)){this.state="special authority slashes"}else if(this.input[this.pointer+1]===47){this.state="path or authority";++this.pointer}else{this.url.cannotBeABaseURL=true;this.url.path.push("");this.state="cannot-be-a-base-URL path"}}else if(!this.stateOverride){this.buffer="";this.state="no scheme";this.pointer=-1}else{this.parseError=true;return i}return true};URLStateMachine.prototype["parse no scheme"]=function parseNoScheme(e){if(this.base===null||this.base.cannotBeABaseURL&&e!==35){return i}else if(this.base.cannotBeABaseURL&&e===35){this.url.scheme=this.base.scheme;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.url.cannotBeABaseURL=true;this.state="fragment"}else if(this.base.scheme==="file"){this.state="file";--this.pointer}else{this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse special relative or authority"]=function parseSpecialRelativeOrAuthority(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="relative";--this.pointer}return true};URLStateMachine.prototype["parse path or authority"]=function parsePathOrAuthority(e){if(e===47){this.state="authority"}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative"]=function parseRelative(e){this.url.scheme=this.base.scheme;if(isNaN(e)){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===47){this.state="relative slash"}else if(e===63){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else if(isSpecial(this.url)&&e===92){this.parseError=true;this.state="relative slash"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.url.path=this.base.path.slice(0,this.base.path.length-1);this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse relative slash"]=function parseRelativeSlash(e){if(isSpecial(this.url)&&(e===47||e===92)){if(e===92){this.parseError=true}this.state="special authority ignore slashes"}else if(e===47){this.state="authority"}else{this.url.username=this.base.username;this.url.password=this.base.password;this.url.host=this.base.host;this.url.port=this.base.port;this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse special authority slashes"]=function parseSpecialAuthoritySlashes(e){if(e===47&&this.input[this.pointer+1]===47){this.state="special authority ignore slashes";++this.pointer}else{this.parseError=true;this.state="special authority ignore slashes";--this.pointer}return true};URLStateMachine.prototype["parse special authority ignore slashes"]=function parseSpecialAuthorityIgnoreSlashes(e){if(e!==47&&e!==92){this.state="authority";--this.pointer}else{this.parseError=true}return true};URLStateMachine.prototype["parse authority"]=function parseAuthority(e,a){if(e===64){this.parseError=true;if(this.atFlag){this.buffer="%40"+this.buffer}this.atFlag=true;const e=countSymbols(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(e===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=true;continue}const p=percentEncodeChar(e,isUserinfoPercentEncode);if(this.passwordTokenSeenFlag){this.url.password+=p}else{this.url.username+=p}}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){if(this.atFlag&&this.buffer===""){this.parseError=true;return i}this.pointer-=countSymbols(this.buffer)+1;this.buffer="";this.state="host"}else{this.buffer+=a}return true};URLStateMachine.prototype["parse hostname"]=URLStateMachine.prototype["parse host"]=function parseHostName(e,a){if(this.stateOverride&&this.url.scheme==="file"){--this.pointer;this.state="file host"}else if(e===58&&!this.arrFlag){if(this.buffer===""){this.parseError=true;return i}const e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}this.url.host=e;this.buffer="";this.state="port";if(this.stateOverride==="hostname"){return false}}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92){--this.pointer;if(isSpecial(this.url)&&this.buffer===""){this.parseError=true;return i}else if(this.stateOverride&&this.buffer===""&&(includesCredentials(this.url)||this.url.port!==null)){this.parseError=true;return false}const e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}this.url.host=e;this.buffer="";this.state="path start";if(this.stateOverride){return false}}else{if(e===91){this.arrFlag=true}else if(e===93){this.arrFlag=false}this.buffer+=a}return true};URLStateMachine.prototype["parse port"]=function parsePort(e,a){if(isASCIIDigit(e)){this.buffer+=a}else if(isNaN(e)||e===47||e===63||e===35||isSpecial(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1){this.parseError=true;return i}this.url.port=e===defaultPort(this.url.scheme)?null:e;this.buffer=""}if(this.stateOverride){return false}this.state="path start";--this.pointer}else{this.parseError=true;return i}return true};const m=new Set([47,92,63,35]);URLStateMachine.prototype["parse file"]=function parseFile(e){this.url.scheme="file";if(e===47||e===92){if(e===92){this.parseError=true}this.state="file slash"}else if(this.base!==null&&this.base.scheme==="file"){if(isNaN(e)){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query}else if(e===63){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query="";this.state="query"}else if(e===35){this.url.host=this.base.host;this.url.path=this.base.path.slice();this.url.query=this.base.query;this.url.fragment="";this.state="fragment"}else{if(this.input.length-this.pointer-1===0||!isWindowsDriveLetterCodePoints(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!m.has(this.input[this.pointer+2])){this.url.host=this.base.host;this.url.path=this.base.path.slice();shortenPath(this.url)}else{this.parseError=true}this.state="path";--this.pointer}}else{this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file slash"]=function parseFileSlash(e){if(e===47||e===92){if(e===92){this.parseError=true}this.state="file host"}else{if(this.base!==null&&this.base.scheme==="file"){if(isNormalizedWindowsDriveLetterString(this.base.path[0])){this.url.path.push(this.base.path[0])}else{this.url.host=this.base.host}}this.state="path";--this.pointer}return true};URLStateMachine.prototype["parse file host"]=function parseFileHost(e,a){if(isNaN(e)||e===47||e===92||e===63||e===35){--this.pointer;if(!this.stateOverride&&isWindowsDriveLetterString(this.buffer)){this.parseError=true;this.state="path"}else if(this.buffer===""){this.url.host="";if(this.stateOverride){return false}this.state="path start"}else{let e=parseHost(this.buffer,isSpecial(this.url));if(e===i){return i}if(e==="localhost"){e=""}this.url.host=e;if(this.stateOverride){return false}this.buffer="";this.state="path start"}}else{this.buffer+=a}return true};URLStateMachine.prototype["parse path start"]=function parsePathStart(e){if(isSpecial(this.url)){if(e===92){this.parseError=true}this.state="path";if(e!==47&&e!==92){--this.pointer}}else if(!this.stateOverride&&e===63){this.url.query="";this.state="query"}else if(!this.stateOverride&&e===35){this.url.fragment="";this.state="fragment"}else if(e!==undefined){this.state="path";if(e!==47){--this.pointer}}return true};URLStateMachine.prototype["parse path"]=function parsePath(e){if(isNaN(e)||e===47||isSpecial(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(isSpecial(this.url)&&e===92){this.parseError=true}if(isDoubleDot(this.buffer)){shortenPath(this.url);if(e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}}else if(isSingleDot(this.buffer)&&e!==47&&!(isSpecial(this.url)&&e===92)){this.url.path.push("")}else if(!isSingleDot(this.buffer)){if(this.url.scheme==="file"&&this.url.path.length===0&&isWindowsDriveLetterString(this.buffer)){if(this.url.host!==""&&this.url.host!==null){this.parseError=true;this.url.host=""}this.buffer=this.buffer[0]+":"}this.url.path.push(this.buffer)}this.buffer="";if(this.url.scheme==="file"&&(e===undefined||e===63||e===35)){while(this.url.path.length>1&&this.url.path[0]===""){this.parseError=true;this.url.path.shift()}}if(e===63){this.url.query="";this.state="query"}if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=percentEncodeChar(e,isPathPercentEncode)}return true};URLStateMachine.prototype["parse cannot-be-a-base-URL path"]=function parseCannotBeABaseURLPath(e){if(e===63){this.url.query="";this.state="query"}else if(e===35){this.url.fragment="";this.state="fragment"}else{if(!isNaN(e)&&e!==37){this.parseError=true}if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}if(!isNaN(e)){this.url.path[0]=this.url.path[0]+percentEncodeChar(e,isC0ControlPercentEncode)}}return true};URLStateMachine.prototype["parse query"]=function parseQuery(e,a){if(isNaN(e)||!this.stateOverride&&e===35){if(!isSpecial(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss"){this.encodingOverride="utf-8"}const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e){if(a[e]<33||a[e]>126||a[e]===34||a[e]===35||a[e]===60||a[e]===62){this.url.query+=percentEncode(a[e])}else{this.url.query+=String.fromCodePoint(a[e])}}this.buffer="";if(e===35){this.url.fragment="";this.state="fragment"}}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.buffer+=a}return true};URLStateMachine.prototype["parse fragment"]=function parseFragment(e){if(isNaN(e)){}else if(e===0){this.parseError=true}else{if(e===37&&(!isASCIIHex(this.input[this.pointer+1])||!isASCIIHex(this.input[this.pointer+2]))){this.parseError=true}this.url.fragment+=percentEncodeChar(e,isC0ControlPercentEncode)}return true};function serializeURL(e,a){let p=e.scheme+":";if(e.host!==null){p+="//";if(e.username!==""||e.password!==""){p+=e.username;if(e.password!==""){p+=":"+e.password}p+="@"}p+=serializeHost(e.host);if(e.port!==null){p+=":"+e.port}}else if(e.host===null&&e.scheme==="file"){p+="//"}if(e.cannotBeABaseURL){p+=e.path[0]}else{for(const a of e.path){p+="/"+a}}if(e.query!==null){p+="?"+e.query}if(!a&&e.fragment!==null){p+="#"+e.fragment}return p}function serializeOrigin(e){let a=e.scheme+"://";a+=serializeHost(e.host);if(e.port!==null){a+=":"+e.port}return a}e.exports.serializeURL=serializeURL;e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return serializeOrigin({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}};e.exports.basicURLParse=function(e,a){if(a===undefined){a={}}const p=new URLStateMachine(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);if(p.failure){return"failure"}return p.url};e.exports.setTheUsername=function(e,a){e.username="";const p=d.ucs2.decode(a);for(let a=0;a<p.length;++a){e.username+=percentEncodeChar(p[a],isUserinfoPercentEncode)}};e.exports.setThePassword=function(e,a){e.password="";const p=d.ucs2.decode(a);for(let a=0;a<p.length;++a){e.password+=percentEncodeChar(p[a],isUserinfoPercentEncode)}};e.exports.serializeHost=serializeHost;e.exports.cannotHaveAUsernamePasswordPort=cannotHaveAUsernamePasswordPort;e.exports.serializeInteger=function(e){return String(e)};e.exports.parseURL=function(a,p){if(p===undefined){p={}}return e.exports.basicURLParse(a,{baseURL:p.baseURL,encodingOverride:p.encodingOverride})}},9857:e=>{"use strict";e.exports.mixin=function mixin(e,a){const p=Object.getOwnPropertyNames(a);for(let d=0;d<p.length;++d){Object.defineProperty(e,p[d],Object.getOwnPropertyDescriptor(a,p[d]))}};e.exports.wrapperSymbol=Symbol("wrapper");e.exports.implSymbol=Symbol("impl");e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]};e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}},2078:module=>{module.exports=eval("require")("encoding")},8611:e=>{"use strict";e.exports=require("http")},5692:e=>{"use strict";e.exports=require("https")},4876:e=>{"use strict";e.exports=require("punycode")},2203:e=>{"use strict";e.exports=require("stream")},7016:e=>{"use strict";e.exports=require("url")},3106:e=>{"use strict";e.exports=require("zlib")},453:e=>{"use strict";e.exports=JSON.parse(\'[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]\')},2472:e=>{"use strict";e.exports=JSON.parse(\'[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]\')}};var __webpack_module_cache__={};function __nccwpck_require__(e){var a=__webpack_module_cache__[e];if(a!==undefined){return a.exports}var p=__webpack_module_cache__[e]={id:e,loaded:false,exports:{}};var d=true;try{__webpack_modules__[e].call(p.exports,p,p.exports,__nccwpck_require__);d=false}finally{if(d)delete __webpack_module_cache__[e]}p.loaded=true;return p.exports}(()=>{__nccwpck_require__.n=e=>{var a=e&&e.__esModule?()=>e["default"]:()=>e;__nccwpck_require__.d(a,{a:a});return a}})();(()=>{__nccwpck_require__.d=(e,a)=>{for(var p in a){if(__nccwpck_require__.o(a,p)&&!__nccwpck_require__.o(e,p)){Object.defineProperty(e,p,{enumerable:true,get:a[p]})}}}})();(()=>{__nccwpck_require__.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a)})();(()=>{__nccwpck_require__.r=e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})}})();(()=>{__nccwpck_require__.nmd=e=>{e.paths=[];if(!e.children)e.children=[];return e}})();if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{"use strict";__nccwpck_require__.r(__webpack_exports__);__nccwpck_require__.d(__webpack_exports__,{default:()=>Xe});var e=__nccwpck_require__(5437);const a=require("fs");const p=require("path");const d=require("crypto");var t=__nccwpck_require__(3724);var r=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function getUrlHash(e){return createHash("sha256").update(e).digest("hex")}function getCacheFilename(e){const a=getUrlHash(e);return path.join(__dirname,"cache",`${a}.txt`)}function fetchFromCache(e,a){return r(this,void 0,void 0,(function*(){const p=getCacheFilename(e);try{const e=yield fs.stat(p);const d=Date.now()-e.mtimeMs;if(!a.timeCacheMs||d>a.timeCacheMs){const e=yield fs.readFile(p);return new Response(e)}}catch(e){}return null}))}function fetchWithCache(e,a,p){return r(this,void 0,void 0,(function*(){if(!p){return fetch(e,a)}const d=yield fetchFromCache(e,p);if(d)return d;const t=yield fetch(e,a);if(t.ok){const a=getCacheFilename(e);const p=yield t.clone().text();yield fs.mkdir(path.dirname(a),{recursive:true});yield fs.writeFile(a,p)}return t}))}function createConsoleLogger(e){const loggerCurrentRef=a=>{console.debug(`${e}# ${a}`);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.debug=(a,p)=>{console.debug(`${e}# ${a}`,p);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.info=(a,p)=>{console.info(`${e}# ${a}`,p);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.log=(a,p)=>{console.log(`${e}# ${a}`,p);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.warning=(a,p)=>{console.warn(`${e}# ${a}`,p);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.error=(a,p)=>{console.error(`${e}# ${a}`,p);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.empty=()=>{console.debug("");return requireNotNull(loggerCurrentRef)};loggerCurrentRef.with=a=>createConsoleLogger(`${e}#${a}`);return loggerCurrentRef}function createLogger(e,a){const loggerCurrentRef=p=>{e.debug(`${a}# ${p}`);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.debug=(p,d)=>{e.debug(`${a}# ${p}`,d);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.info=(p,d)=>{e.info(`${a}# ${p}`,d);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.log=(p,d)=>{e.log(`${a}# ${p}`,d);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.warning=(p,d)=>{e.warning(`${a}# ${p}`,d);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.error=(p,d)=>{e.error(`${a}# ${p}`,d);return requireNotNull(loggerCurrentRef)};loggerCurrentRef.empty=()=>{e.debug("");return requireNotNull(loggerCurrentRef)};loggerCurrentRef.with=p=>createLogger(e,`${a}#${p}`);return loggerCurrentRef}function requireNotNull(e){if(e===null||e===undefined){throw new Error("required value is null")}return e}var i=__nccwpck_require__(7016);function createThumbnail({imageBaseUrl:e,portraitPath:a,landscapePath:p}){const d=a?{small:{uri:new URL(`${e}w300/${a}`)},medium:{uri:new URL(`${e}w780/${a}`)},large:{uri:new URL(`${e}original/${a}`)}}:undefined;const t=p?{small:{uri:new URL(`${e}w300/${p}`)},medium:{uri:new URL(`${e}w780/${p}`)},large:{uri:new URL(`${e}original/${p}`)}}:undefined;return{portrait:d,landscape:t}}function resolveUrl(e,a){if(!a)return e;const p=new i.URL(e);if(/^(http|https):\\/\\//.test(a)){return a}const d=new i.URL(a,p);return d.href}var l=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};const o={football:{url:"https://streamsgate.tv/api/sport/football",title:"Football",createIdUrl:e=>`https://fan.soccerstreams100.io/api/game/football/${e}`,createLogoUrl:e=>`https://new.soccerstreams-100.tv/api/img/soccer/${e}.png?w=256&h=256`},nba:{url:"https://streamsgate.tv/api/sport/nba",title:"NBA",createIdUrl:e=>`https://nba-100.com/api/game/nba/${e}`,createLogoUrl:e=>`https://a3.espncdn.com/i/teamlogos/nba/500/${e}.png?w=256&h=256`},nfl:{url:"https://streamsgate.tv/api/sport/nfl",title:"NFL",createIdUrl:e=>`https://nflbite.nflstreams100.com/api/game/nfl/${e}`,createLogoUrl:e=>`https://a3.espncdn.com/i/teamlogos/nfl/500/${e}.png?w=256&h=256`},mlb:{url:"https://streamsgate.tv/api/sport/mlb",title:"MLB",createIdUrl:e=>`https://TODO/${e}`},nhl:{url:"https://streamsgate.tv/api/sport/nhl",title:"NHL",createIdUrl:e=>`https://new.nhlstreams100.com/api/game/nhl/${e}`,createLogoUrl:e=>`https://a3.espncdn.com/i/teamlogos/nhl/500/${e}.png?w=256&h=256`},mma:{url:"https://streamsgate.tv/api/sport/mma",title:"MMA",createIdUrl:e=>`https://m.mmastreams100.com/api/sport/mma/ufc/${e}`},boxing:{url:"https://streamsgate.tv/api/sport/boxing",title:"Boxing",createIdUrl:e=>`https://heavyweight.boxingstreams100.com/api/sport/boxing/event/${e}`},f1:{url:"https://streamsgate.tv/api/sport/f1",title:"F1",createIdUrl:e=>`https://f1-100.com/api/sport/f1/race/${e}`},motogp:{url:"https://streamsgate.tv/api/sport/motogp",title:"MotoGP",createIdUrl:e=>`https://main.motogpstreams100.com/api/sport/motogp/${e}`}};function getSportTypes(){return l(this,void 0,void 0,(function*(){return Object.values(o)}))}function extractSportTypeFromUrl(e){const a=e.match(/sport\\/([^/?]+)/);return a?a[1]:null}function extractDomain(e){try{return new i.URL(e).host}catch(e){return null}}function isSportTypeUrl(e){var a;const p=(a=extractDomain(e))===null||a===void 0?void 0:a.toLowerCase();if(!p)return false;return Object.values(o).some((e=>{const a=extractDomain(e.url);return(a===null||a===void 0?void 0:a.toLowerCase())===p}))}var m=__nccwpck_require__(6705);var n=__nccwpck_require__.n(m);var s=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function fetchGamesFromSportTypeUrl(e){return s(this,void 0,void 0,(function*(){return n()(e,{headers:{accept:"application/json, text/plain, */*","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',Referer:"https://streamsgate.tv/","Referrer-Policy":"strict-origin-when-cross-origin"},method:"GET"}).then((e=>e.json())).then((e=>e)).then((a=>mapToListApiResponse(a,e)))}))}function mapToListApiResponse(e=[],a){const p=extractSportTypeFromUrl(a);if(!p)return[];return e.map((e=>{var a,d,t,r;return{leagueName:(a=e.lgn)!==null&&a!==void 0?a:"",leagueSlug:(d=e.slug)!==null&&d!==void 0?d:"",games:(r=(t=e.gs)===null||t===void 0?void 0:t.map((e=>{var a,d,t,r,i,l,m,n,s,u,c,f,v,h,g,w,b,y,_;const N=new Date((a=e.d)!==null&&a!==void 0?a:"");const D=(r=(t=(d=e.s)===null||d===void 0?void 0:d.tp)===null||t===void 0?void 0:t.cm)!==null&&r!==void 0?r:false;const S=(m=(l=(i=e.s)===null||i===void 0?void 0:i.tp)===null||l===void 0?void 0:l.st)!==null&&m!==void 0?m:"";const T=new Date;const E=N<=T&&!D&&S==="in";return{id:e.i,url:(n=o[p])===null||n===void 0?void 0:n.createIdUrl(e.i),competitors:(f=(c=(u=(s=e.c)===null||s===void 0?void 0:s.slice())===null||u===void 0?void 0:u.reverse())===null||c===void 0?void 0:c.map((e=>{var a,d,t,r,i,l,m,n,s,u,c;return{id:(a=e.i)!==null&&a!==void 0?a:"",score:(d=e.sc)!==null&&d!==void 0?d:0,team:{abbreviation:(r=(t=e.t)===null||t===void 0?void 0:t.ab)!==null&&r!==void 0?r:"N/A",shortDescription:(l=(i=e.t)===null||i===void 0?void 0:i.sd)!==null&&l!==void 0?l:"",name:(n=(m=e.t)===null||m===void 0?void 0:m.n)!==null&&n!==void 0?n:"",imageURL:p&&((s=e.t)===null||s===void 0?void 0:s.i)?(c=(u=o[p])===null||u===void 0?void 0:u.createLogoUrl)===null||c===void 0?void 0:c.call(u,e.t.i):undefined}}})))!==null&&f!==void 0?f:[],date:(v=e.d)!==null&&v!==void 0?v:"",location:(h=e.l)!==null&&h!==void 0?h:"",name:(g=e.n)!==null&&g!==void 0?g:"",isLive:E,isCompleted:D,venue:{fullName:(b=(w=e.v)===null||w===void 0?void 0:w.fn)!==null&&b!==void 0?b:"",id:(_=(y=e.v)===null||y===void 0?void 0:y.i)!==null&&_!==void 0?_:""}}})))!==null&&r!==void 0?r:[]}}))}var u=__nccwpck_require__(3203);var c=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function fetchStreamDescriptions(e){return c(this,void 0,void 0,(function*(){var a,p,d,t,r;const i=yield n()(e,{headers:{accept:"application/json, text/plain, */*","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',Referer:e,"Referrer-Policy":"strict-origin-when-cross-origin"},method:"GET"}).then((e=>e.json()));const l=i.s;return{details:{gameTitle:`${(p=(a=i.h)===null||a===void 0?void 0:a.t)===null||p===void 0?void 0:p.n} - ${(t=(d=i.a)===null||d===void 0?void 0:d.t)===null||t===void 0?void 0:t.n}`,description:i.d},streams:(r=l===null||l===void 0?void 0:l.filter((e=>{var a;return isSupportedStreamSite((a=e.u)!==null&&a!==void 0?a:"")})).map((e=>{var a,p,d,t,r,i,l,o;return{channel:(a=e.c)!==null&&a!==void 0?a:"",gameTitle:(p=e.g)!==null&&p!==void 0?p:"",gameId:(d=e.gi)!==null&&d!==void 0?d:"",quality:(t=e.q)!==null&&t!==void 0?t:"",language:(r=e.ln)!==null&&r!==void 0?r:"",link:(i=e.l)!==null&&i!==void 0?i:"",verified:(l=e.v)!==null&&l!==void 0?l:false,source:(o=e.u)!==null&&o!==void 0?o:""}})))!==null&&r!==void 0?r:[]}}))}const f={fhdstreams(e){return c(this,void 0,void 0,(function*(){function extractVideoUrl(e){const a=/player\\.load\\(\\{source:\\s*\'([^\']+)\'/;const p=e.match(a);return p?p[1]:null}const a=yield _fetchHtmlContent(e);const p=(0,u.parse)(a);const d=p.querySelector(".player iframe");const t=d===null||d===void 0?void 0:d.getAttribute("src");if(!t)return null;const r=yield _fetchHtmlContent(t);return{directLink:extractVideoUrl(r)}}))},Poscitechstream(e){return c(this,void 0,void 0,(function*(){var a;function extractVideoUrl(e){const a=/player\\.load\\(\\s*\\{source:\\s*window\\.atob\\(\'([^\']+)\'\\)\\s*\\}\\s*\\)/;const p=a.exec(e);if(p&&p[1]){return Buffer.from(p[1],"base64").toString("utf-8")}return null}const p=yield _fetchHtmlContent(e);const d=(0,u.parse)(p);const t=d.querySelector(".cm-content iframe");const r=resolveUrl(e,t===null||t===void 0?void 0:t.getAttribute("src"));if(!r)return null;const i=yield _fetchHtmlContent(r);const l=(0,u.parse)(i);const o=l.querySelector("body iframe");const m=resolveUrl(r,o===null||o===void 0?void 0:o.getAttribute("src"));if(!m)return null;const n=yield _fetchHtmlContent(m);return{directLink:resolveUrl(m,(a=extractVideoUrl(n))!==null&&a!==void 0?a:undefined),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site",Referer:"https://live.poscishd.online/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},Weak__Spell(e){return c(this,void 0,void 0,(function*(){var a;function extractVideoUrl(e){const a=/source:\\s*"(https?:\\/\\/[^"]+)"/;const p=e.match(a);return p?p[1]:null}const p=yield _fetchHtmlContent(e);const d=(0,u.parse)(p);const t=d.querySelector("#player-section iframe");const r=resolveUrl(e,t===null||t===void 0?void 0:t.getAttribute("src"));if(!r)return null;const i=yield _fetchHtmlContent(r);return{directLink:resolveUrl(r,(a=extractVideoUrl(i))!==null&&a!==void 0?a:undefined),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site",Referer:"https://v3.bestsolaris.com/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},ovostreams(e){return c(this,void 0,void 0,(function*(){function extractVideoUrl(e){const a=/var source = \'([^\']+)\';/;const p=e.match(a);return p?p[1]:null}const a=yield _fetchHtmlContent(e);const p=(0,u.parse)(a);const d=p.querySelector(".stream-container .stream iframe");const t=d===null||d===void 0?void 0:d.getAttribute("src");if(!t)return null;const r=yield _fetchHtmlContent(t);return{directLink:extractVideoUrl(r),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin",Referer:"https://engageboost.xyz/soccer/stream1/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},sritaanya(e){return c(this,void 0,void 0,(function*(){function extractVideoUrl(e){const a=/source:\\s*[\'"]?(https?:\\/\\/[^\'"]+\\.m3u8)[\'"]?/;const p=e.match(a);if(!p){return null}const d=p[1];return d}const a=yield _fetchHtmlContent(e);const p=(0,u.parse)(a);const d=p.querySelector("body center iframe");const t=resolveUrl(e,d===null||d===void 0?void 0:d.getAttribute("src"));if(!t)return null;const r=yield _fetchHtmlContent(t);return{directLink:extractVideoUrl(r),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site",Referer:"https://gamehdlive.online/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},MazyStreams(e){return c(this,void 0,void 0,(function*(){function extractVideoUrl(e){const a=/var servs = \\[(.*?)\\];/;const p=e.match(a);if(!p){return null}const d=p[1];const t=d.split(",").map((e=>e.trim().replace(/[\'"]/g,"")));const r=Math.floor(Math.random()*t.length);const i=t[r];const l=`https://${i}2.m3u8`;const o=/^https:\\/\\/.*?2\\.m3u8$/;if(o.test(l)){return l}else{return null}}const a=yield _fetchHtmlContent(e);const p=(0,u.parse)(a);const d=p.querySelector("#str iframe");const t=d===null||d===void 0?void 0:d.getAttribute("src");if(!t)return null;const r=resolveUrl(e,t);if(!r)return null;const i=yield _fetchHtmlContent(r);return{directLink:extractVideoUrl(i),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin",Referer:"https://engageboost.xyz/soccer/stream1/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},gmstreams(e){return c(this,void 0,void 0,(function*(){var a;function extractVideoUrl(e){const a=/player\\.load\\(\\s*\\{source:\\s*window\\.atob\\(\'([^\']+)\'\\)\\s*\\}\\s*\\)/;const p=a.exec(e);if(p&&p[1]){return Buffer.from(p[1],"base64").toString("utf-8")}return null}const p=yield _fetchHtmlContent(e);const d=(0,u.parse)(p);const t=d.querySelector("body iframe");const r=resolveUrl(e,t===null||t===void 0?void 0:t.getAttribute("src"));if(!r)return null;const i=yield _fetchHtmlContent(r);const l=(0,u.parse)(i);const o=l.querySelector("body iframe");const m=resolveUrl(r,o===null||o===void 0?void 0:o.getAttribute("src"));if(!m)return null;const n=yield _fetchHtmlContent(m);return{directLink:resolveUrl(m,(a=extractVideoUrl(n))!==null&&a!==void 0?a:undefined),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site",Referer:"https://live.aimage.click/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},_1stream(e){return c(this,void 0,void 0,(function*(){var a;function extractVideoUrl(e){const a=/player\\.load\\(\\s*\\{\\s*source:\\s*window\\.atob\\(\'([^\']+)\'\\),\\s*mimeType:\\s*[\'"]application\\/vnd\\.apple\\.mpegurl[\'"]\\s*\\}\\s*\\)/;const p=a.exec(e);if(p&&p[1]){return Buffer.from(p[1],"base64").toString("utf-8")}return null}const p=yield _fetchHtmlContent(e);const d=(0,u.parse)(p);const t=d.querySelector(".iframe-container iframe");const r=resolveUrl(e,t===null||t===void 0?void 0:t.getAttribute("src"));if(!r)return null;const i=yield _fetchHtmlContent(r);return{directLink:resolveUrl(r,(a=extractVideoUrl(i))!==null&&a!==void 0?a:undefined),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"same-origin",Referer:"https://trendtale.info/s/play1.php","Referrer-Policy":"strict-origin-when-cross-origin"}}}))},nativesurge(e){return c(this,void 0,void 0,(function*(){var a;function extractVideoUrl(e){const a=/player\\.src\\(\\s*\\{\\s*src:\\s*window\\.atob\\(\'([^\']+)\'\\),\\s*type:\\s*["\']application\\/x-mpegURL["\']\\s*\\}\\s*\\)/;const p=a.exec(e);if(p&&p[1]){return Buffer.from(p[1],"base64").toString("utf-8")}return null}const p=yield _fetchHtmlContent(e);const d=(0,u.parse)(p);const t=d.querySelector(".elementor-widget-container iframe");const r=resolveUrl(e,t===null||t===void 0?void 0:t.getAttribute("src"));if(!r)return null;const i=yield _fetchHtmlContent(r);return{directLink:resolveUrl(r,(a=extractVideoUrl(i))!==null&&a!==void 0?a:undefined),headers:{accept:"*/*","accept-language":"en-US,en;q=0.9",priority:"u=1, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"empty","sec-fetch-mode":"cors","sec-fetch-site":"cross-site",Referer:"https://nativesurge.info/","Referrer-Policy":"strict-origin-when-cross-origin"}}}))}};function isSupportedStreamSite(e){const a=e.replace(/^_/,"").toLowerCase();return Object.keys(f).some((e=>e.replace(/^_/,"").toLowerCase()===a))}function getDirectStream(e,a){return c(this,void 0,void 0,(function*(){if(!isSupportedStreamSite(a)){return[]}const p=f[a];return yield p(e)}))}function _fetchHtmlContent(e){return c(this,void 0,void 0,(function*(){return n()(e,{headers:{accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-language":"en-US,en;q=0.9",priority:"u=0, i","sec-ch-ua":\'"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"\',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":\'"Windows"\',"sec-fetch-dest":"iframe","sec-fetch-mode":"navigate","sec-fetch-site":"same-origin","upgrade-insecure-requests":"1",Referer:e,"Referrer-Policy":"strict-origin-when-cross-origin"},method:"GET"}).then((e=>e.text()))}))}var v=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function SportCategoriesExtractor({logger:a}){return{next(){return v(this,void 0,void 0,(function*(){a.debug("next");const p=yield getSportTypes();return p.map((a=>(0,e.createCategory)({uri:new i.URL(a.url),name:a.title})))}))}}}var h=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function SportCategoryExtractor({category:a,logger:p,gamesExtractor:d}){const t=d(a);return{next(){return h(this,void 0,void 0,(function*(){p.debug("next");return t.next()}))},getCategory(){return h(this,void 0,void 0,(function*(){p.debug("getCategory");const d=yield getSportTypes();const t=d.find((e=>e.url.toLowerCase()==a.toString().toLowerCase()));if(t){return(0,e.createCategory)({name:t.title,uri:new i.URL(t.url)})}throw new e.CategoryNotFoundError(a)}))}}}const g={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};const formatDistance=(e,a,p)=>{let d;const t=g[e];if(typeof t==="string"){d=t}else if(a===1){d=t.one}else{d=t.other.replace("{{count}}",a.toString())}if(p?.addSuffix){if(p.comparison&&p.comparison>0){return"in "+d}else{return d+" ago"}}return d};function buildFormatLongFn(e){return(a={})=>{const p=a.width?String(a.width):e.defaultWidth;const d=e.formats[p]||e.formats[e.defaultWidth];return d}}const w={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"};const b={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"};const y={full:"{{date}} \'at\' {{time}}",long:"{{date}} \'at\' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"};const _={date:buildFormatLongFn({formats:w,defaultWidth:"full"}),time:buildFormatLongFn({formats:b,defaultWidth:"full"}),dateTime:buildFormatLongFn({formats:y,defaultWidth:"full"})};const N={lastWeek:"\'last\' eeee \'at\' p",yesterday:"\'yesterday at\' p",today:"\'today at\' p",tomorrow:"\'tomorrow at\' p",nextWeek:"eeee \'at\' p",other:"P"};const formatRelative=(e,a,p,d)=>N[e];function buildLocalizeFn(e){return(a,p)=>{const d=p?.context?String(p.context):"standalone";let t;if(d==="formatting"&&e.formattingValues){const a=e.defaultFormattingWidth||e.defaultWidth;const d=p?.width?String(p.width):a;t=e.formattingValues[d]||e.formattingValues[a]}else{const a=e.defaultWidth;const d=p?.width?String(p.width):e.defaultWidth;t=e.values[d]||e.values[a]}const r=e.argumentCallback?e.argumentCallback(a):a;return t[r]}}const D={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]};const S={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]};const T={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]};const E={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]};const A={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}};const V={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}};const ordinalNumber=(e,a)=>{const p=Number(e);const d=p%100;if(d>20||d<10){switch(d%10){case 1:return p+"st";case 2:return p+"nd";case 3:return p+"rd"}}return p+"th"};const C={ordinalNumber:ordinalNumber,era:buildLocalizeFn({values:D,defaultWidth:"wide"}),quarter:buildLocalizeFn({values:S,defaultWidth:"wide",argumentCallback:e=>e-1}),month:buildLocalizeFn({values:T,defaultWidth:"wide"}),day:buildLocalizeFn({values:E,defaultWidth:"wide"}),dayPeriod:buildLocalizeFn({values:A,defaultWidth:"wide",formattingValues:V,defaultFormattingWidth:"wide"})};function buildMatchFn(e){return(a,p={})=>{const d=p.width;const t=d&&e.matchPatterns[d]||e.matchPatterns[e.defaultMatchWidth];const r=a.match(t);if(!r){return null}const i=r[0];const l=d&&e.parsePatterns[d]||e.parsePatterns[e.defaultParseWidth];const o=Array.isArray(l)?findIndex(l,(e=>e.test(i))):findKey(l,(e=>e.test(i)));let m;m=e.valueCallback?e.valueCallback(o):o;m=p.valueCallback?p.valueCallback(m):m;const n=a.slice(i.length);return{value:m,rest:n}}}function findKey(e,a){for(const p in e){if(Object.prototype.hasOwnProperty.call(e,p)&&a(e[p])){return p}}return undefined}function findIndex(e,a){for(let p=0;p<e.length;p++){if(a(e[p])){return p}}return undefined}function buildMatchPatternFn(e){return(a,p={})=>{const d=a.match(e.matchPattern);if(!d)return null;const t=d[0];const r=a.match(e.parsePattern);if(!r)return null;let i=e.valueCallback?e.valueCallback(r[0]):r[0];i=p.valueCallback?p.valueCallback(i):i;const l=a.slice(t.length);return{value:i,rest:l}}}const x=/^(\\d+)(th|st|nd|rd)?/i;const L=/\\d+/i;const O={narrow:/^(b|a)/i,abbreviated:/^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i};const q={any:[/^b/i,/^(a|c)/i]};const P={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i};const B={any:[/1/i,/2/i,/3/i,/4/i]};const R={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i};const k={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]};const M={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i};const U={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]};const F={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i};const j={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}};const I={ordinalNumber:buildMatchPatternFn({matchPattern:x,parsePattern:L,valueCallback:e=>parseInt(e,10)}),era:buildMatchFn({matchPatterns:O,defaultMatchWidth:"wide",parsePatterns:q,defaultParseWidth:"any"}),quarter:buildMatchFn({matchPatterns:P,defaultMatchWidth:"wide",parsePatterns:B,defaultParseWidth:"any",valueCallback:e=>e+1}),month:buildMatchFn({matchPatterns:R,defaultMatchWidth:"wide",parsePatterns:k,defaultParseWidth:"any"}),day:buildMatchFn({matchPatterns:M,defaultMatchWidth:"wide",parsePatterns:U,defaultParseWidth:"any"}),dayPeriod:buildMatchFn({matchPatterns:F,defaultMatchWidth:"any",parsePatterns:j,defaultParseWidth:"any"})};const H={code:"en-US",formatDistance:formatDistance,formatLong:_,formatRelative:formatRelative,localize:C,match:I,options:{weekStartsOn:0,firstWeekContainsDate:1}};const z=null&&H;let G={};function getDefaultOptions(){return G}function setDefaultOptions(e){G=e}const W=7;const $=365.2425;const Y=Math.pow(10,8)*24*60*60*1e3;const Z=-Y;const J=6048e5;const X=864e5;const Q=6e4;const K=36e5;const ee=1e3;const ae=525600;const pe=43200;const de=1440;const te=60;const re=3;const ie=12;const le=4;const oe=3600;const me=60;const ne=oe*24;const se=ne*7;const ue=ne*$;const ce=ue/12;const fe=ce*3;const ve=Symbol.for("constructDateFrom");function constructFrom(e,a){if(typeof e==="function")return e(a);if(e&&typeof e==="object"&&ve in e)return e[ve](a);if(e instanceof Date)return new e.constructor(a);return new Date(a)}const he=null&&constructFrom;function toDate(e,a){return constructFrom(a||e,e)}const ge=null&&toDate;function getTimezoneOffsetInMilliseconds(e){const a=toDate(e);const p=new Date(Date.UTC(a.getFullYear(),a.getMonth(),a.getDate(),a.getHours(),a.getMinutes(),a.getSeconds(),a.getMilliseconds()));p.setUTCFullYear(a.getFullYear());return+e-+p}function normalizeDates(e,...a){const p=constructFrom.bind(null,e||a.find((e=>typeof e==="object")));return a.map(p)}function startOfDay(e,a){const p=toDate(e,a?.in);p.setHours(0,0,0,0);return p}const we=null&&startOfDay;function differenceInCalendarDays(e,a,p){const[d,t]=normalizeDates(p?.in,e,a);const r=startOfDay(d);const i=startOfDay(t);const l=+r-getTimezoneOffsetInMilliseconds(r);const o=+i-getTimezoneOffsetInMilliseconds(i);return Math.round((l-o)/X)}const be=null&&differenceInCalendarDays;function startOfYear(e,a){const p=toDate(e,a?.in);p.setFullYear(p.getFullYear(),0,1);p.setHours(0,0,0,0);return p}const ye=null&&startOfYear;function getDayOfYear(e,a){const p=toDate(e,a?.in);const d=differenceInCalendarDays(p,startOfYear(p));const t=d+1;return t}const _e=null&&getDayOfYear;function startOfWeek(e,a){const p=getDefaultOptions();const d=a?.weekStartsOn??a?.locale?.options?.weekStartsOn??p.weekStartsOn??p.locale?.options?.weekStartsOn??0;const t=toDate(e,a?.in);const r=t.getDay();const i=(r<d?7:0)+r-d;t.setDate(t.getDate()-i);t.setHours(0,0,0,0);return t}const Ne=null&&startOfWeek;function startOfISOWeek(e,a){return startOfWeek(e,{...a,weekStartsOn:1})}const De=null&&startOfISOWeek;function getISOWeekYear(e,a){const p=toDate(e,a?.in);const d=p.getFullYear();const t=constructFrom(p,0);t.setFullYear(d+1,0,4);t.setHours(0,0,0,0);const r=startOfISOWeek(t);const i=constructFrom(p,0);i.setFullYear(d,0,4);i.setHours(0,0,0,0);const l=startOfISOWeek(i);if(p.getTime()>=r.getTime()){return d+1}else if(p.getTime()>=l.getTime()){return d}else{return d-1}}const Se=null&&getISOWeekYear;function startOfISOWeekYear(e,a){const p=getISOWeekYear(e,a);const d=constructFrom(a?.in||e,0);d.setFullYear(p,0,4);d.setHours(0,0,0,0);return startOfISOWeek(d)}const Te=null&&startOfISOWeekYear;function getISOWeek(e,a){const p=toDate(e,a?.in);const d=+startOfISOWeek(p)-+startOfISOWeekYear(p);return Math.round(d/J)+1}const Ee=null&&getISOWeek;function getWeekYear(e,a){const p=toDate(e,a?.in);const d=p.getFullYear();const t=getDefaultOptions();const r=a?.firstWeekContainsDate??a?.locale?.options?.firstWeekContainsDate??t.firstWeekContainsDate??t.locale?.options?.firstWeekContainsDate??1;const i=constructFrom(a?.in||e,0);i.setFullYear(d+1,0,r);i.setHours(0,0,0,0);const l=startOfWeek(i,a);const o=constructFrom(a?.in||e,0);o.setFullYear(d,0,r);o.setHours(0,0,0,0);const m=startOfWeek(o,a);if(+p>=+l){return d+1}else if(+p>=+m){return d}else{return d-1}}const Ae=null&&getWeekYear;function startOfWeekYear(e,a){const p=getDefaultOptions();const d=a?.firstWeekContainsDate??a?.locale?.options?.firstWeekContainsDate??p.firstWeekContainsDate??p.locale?.options?.firstWeekContainsDate??1;const t=getWeekYear(e,a);const r=constructFrom(a?.in||e,0);r.setFullYear(t,0,d);r.setHours(0,0,0,0);const i=startOfWeek(r,a);return i}const Ve=null&&startOfWeekYear;function getWeek(e,a){const p=toDate(e,a?.in);const d=+startOfWeek(p,a)-+startOfWeekYear(p,a);return Math.round(d/J)+1}const Ce=null&&getWeek;function addLeadingZeros(e,a){const p=e<0?"-":"";const d=Math.abs(e).toString().padStart(a,"0");return p+d}const xe={y(e,a){const p=e.getFullYear();const d=p>0?p:1-p;return addLeadingZeros(a==="yy"?d%100:d,a.length)},M(e,a){const p=e.getMonth();return a==="M"?String(p+1):addLeadingZeros(p+1,2)},d(e,a){return addLeadingZeros(e.getDate(),a.length)},a(e,a){const p=e.getHours()/12>=1?"pm":"am";switch(a){case"a":case"aa":return p.toUpperCase();case"aaa":return p;case"aaaaa":return p[0];case"aaaa":default:return p==="am"?"a.m.":"p.m."}},h(e,a){return addLeadingZeros(e.getHours()%12||12,a.length)},H(e,a){return addLeadingZeros(e.getHours(),a.length)},m(e,a){return addLeadingZeros(e.getMinutes(),a.length)},s(e,a){return addLeadingZeros(e.getSeconds(),a.length)},S(e,a){const p=a.length;const d=e.getMilliseconds();const t=Math.trunc(d*Math.pow(10,p-3));return addLeadingZeros(t,a.length)}};const Le={am:"am",pm:"pm",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"};const Oe={G:function(e,a,p){const d=e.getFullYear()>0?1:0;switch(a){case"G":case"GG":case"GGG":return p.era(d,{width:"abbreviated"});case"GGGGG":return p.era(d,{width:"narrow"});case"GGGG":default:return p.era(d,{width:"wide"})}},y:function(e,a,p){if(a==="yo"){const a=e.getFullYear();const d=a>0?a:1-a;return p.ordinalNumber(d,{unit:"year"})}return xe.y(e,a)},Y:function(e,a,p,d){const t=getWeekYear(e,d);const r=t>0?t:1-t;if(a==="YY"){const e=r%100;return addLeadingZeros(e,2)}if(a==="Yo"){return p.ordinalNumber(r,{unit:"year"})}return addLeadingZeros(r,a.length)},R:function(e,a){const p=getISOWeekYear(e);return addLeadingZeros(p,a.length)},u:function(e,a){const p=e.getFullYear();return addLeadingZeros(p,a.length)},Q:function(e,a,p){const d=Math.ceil((e.getMonth()+1)/3);switch(a){case"Q":return String(d);case"QQ":return addLeadingZeros(d,2);case"Qo":return p.ordinalNumber(d,{unit:"quarter"});case"QQQ":return p.quarter(d,{width:"abbreviated",context:"formatting"});case"QQQQQ":return p.quarter(d,{width:"narrow",context:"formatting"});case"QQQQ":default:return p.quarter(d,{width:"wide",context:"formatting"})}},q:function(e,a,p){const d=Math.ceil((e.getMonth()+1)/3);switch(a){case"q":return String(d);case"qq":return addLeadingZeros(d,2);case"qo":return p.ordinalNumber(d,{unit:"quarter"});case"qqq":return p.quarter(d,{width:"abbreviated",context:"standalone"});case"qqqqq":return p.quarter(d,{width:"narrow",context:"standalone"});case"qqqq":default:return p.quarter(d,{width:"wide",context:"standalone"})}},M:function(e,a,p){const d=e.getMonth();switch(a){case"M":case"MM":return xe.M(e,a);case"Mo":return p.ordinalNumber(d+1,{unit:"month"});case"MMM":return p.month(d,{width:"abbreviated",context:"formatting"});case"MMMMM":return p.month(d,{width:"narrow",context:"formatting"});case"MMMM":default:return p.month(d,{width:"wide",context:"formatting"})}},L:function(e,a,p){const d=e.getMonth();switch(a){case"L":return String(d+1);case"LL":return addLeadingZeros(d+1,2);case"Lo":return p.ordinalNumber(d+1,{unit:"month"});case"LLL":return p.month(d,{width:"abbreviated",context:"standalone"});case"LLLLL":return p.month(d,{width:"narrow",context:"standalone"});case"LLLL":default:return p.month(d,{width:"wide",context:"standalone"})}},w:function(e,a,p,d){const t=getWeek(e,d);if(a==="wo"){return p.ordinalNumber(t,{unit:"week"})}return addLeadingZeros(t,a.length)},I:function(e,a,p){const d=getISOWeek(e);if(a==="Io"){return p.ordinalNumber(d,{unit:"week"})}return addLeadingZeros(d,a.length)},d:function(e,a,p){if(a==="do"){return p.ordinalNumber(e.getDate(),{unit:"date"})}return xe.d(e,a)},D:function(e,a,p){const d=getDayOfYear(e);if(a==="Do"){return p.ordinalNumber(d,{unit:"dayOfYear"})}return addLeadingZeros(d,a.length)},E:function(e,a,p){const d=e.getDay();switch(a){case"E":case"EE":case"EEE":return p.day(d,{width:"abbreviated",context:"formatting"});case"EEEEE":return p.day(d,{width:"narrow",context:"formatting"});case"EEEEEE":return p.day(d,{width:"short",context:"formatting"});case"EEEE":default:return p.day(d,{width:"wide",context:"formatting"})}},e:function(e,a,p,d){const t=e.getDay();const r=(t-d.weekStartsOn+8)%7||7;switch(a){case"e":return String(r);case"ee":return addLeadingZeros(r,2);case"eo":return p.ordinalNumber(r,{unit:"day"});case"eee":return p.day(t,{width:"abbreviated",context:"formatting"});case"eeeee":return p.day(t,{width:"narrow",context:"formatting"});case"eeeeee":return p.day(t,{width:"short",context:"formatting"});case"eeee":default:return p.day(t,{width:"wide",context:"formatting"})}},c:function(e,a,p,d){const t=e.getDay();const r=(t-d.weekStartsOn+8)%7||7;switch(a){case"c":return String(r);case"cc":return addLeadingZeros(r,a.length);case"co":return p.ordinalNumber(r,{unit:"day"});case"ccc":return p.day(t,{width:"abbreviated",context:"standalone"});case"ccccc":return p.day(t,{width:"narrow",context:"standalone"});case"cccccc":return p.day(t,{width:"short",context:"standalone"});case"cccc":default:return p.day(t,{width:"wide",context:"standalone"})}},i:function(e,a,p){const d=e.getDay();const t=d===0?7:d;switch(a){case"i":return String(t);case"ii":return addLeadingZeros(t,a.length);case"io":return p.ordinalNumber(t,{unit:"day"});case"iii":return p.day(d,{width:"abbreviated",context:"formatting"});case"iiiii":return p.day(d,{width:"narrow",context:"formatting"});case"iiiiii":return p.day(d,{width:"short",context:"formatting"});case"iiii":default:return p.day(d,{width:"wide",context:"formatting"})}},a:function(e,a,p){const d=e.getHours();const t=d/12>=1?"pm":"am";switch(a){case"a":case"aa":return p.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"aaa":return p.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return p.dayPeriod(t,{width:"narrow",context:"formatting"});case"aaaa":default:return p.dayPeriod(t,{width:"wide",context:"formatting"})}},b:function(e,a,p){const d=e.getHours();let t;if(d===12){t=Le.noon}else if(d===0){t=Le.midnight}else{t=d/12>=1?"pm":"am"}switch(a){case"b":case"bb":return p.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"bbb":return p.dayPeriod(t,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return p.dayPeriod(t,{width:"narrow",context:"formatting"});case"bbbb":default:return p.dayPeriod(t,{width:"wide",context:"formatting"})}},B:function(e,a,p){const d=e.getHours();let t;if(d>=17){t=Le.evening}else if(d>=12){t=Le.afternoon}else if(d>=4){t=Le.morning}else{t=Le.night}switch(a){case"B":case"BB":case"BBB":return p.dayPeriod(t,{width:"abbreviated",context:"formatting"});case"BBBBB":return p.dayPeriod(t,{width:"narrow",context:"formatting"});case"BBBB":default:return p.dayPeriod(t,{width:"wide",context:"formatting"})}},h:function(e,a,p){if(a==="ho"){let a=e.getHours()%12;if(a===0)a=12;return p.ordinalNumber(a,{unit:"hour"})}return xe.h(e,a)},H:function(e,a,p){if(a==="Ho"){return p.ordinalNumber(e.getHours(),{unit:"hour"})}return xe.H(e,a)},K:function(e,a,p){const d=e.getHours()%12;if(a==="Ko"){return p.ordinalNumber(d,{unit:"hour"})}return addLeadingZeros(d,a.length)},k:function(e,a,p){let d=e.getHours();if(d===0)d=24;if(a==="ko"){return p.ordinalNumber(d,{unit:"hour"})}return addLeadingZeros(d,a.length)},m:function(e,a,p){if(a==="mo"){return p.ordinalNumber(e.getMinutes(),{unit:"minute"})}return xe.m(e,a)},s:function(e,a,p){if(a==="so"){return p.ordinalNumber(e.getSeconds(),{unit:"second"})}return xe.s(e,a)},S:function(e,a){return xe.S(e,a)},X:function(e,a,p){const d=e.getTimezoneOffset();if(d===0){return"Z"}switch(a){case"X":return formatTimezoneWithOptionalMinutes(d);case"XXXX":case"XX":return formatTimezone(d);case"XXXXX":case"XXX":default:return formatTimezone(d,":")}},x:function(e,a,p){const d=e.getTimezoneOffset();switch(a){case"x":return formatTimezoneWithOptionalMinutes(d);case"xxxx":case"xx":return formatTimezone(d);case"xxxxx":case"xxx":default:return formatTimezone(d,":")}},O:function(e,a,p){const d=e.getTimezoneOffset();switch(a){case"O":case"OO":case"OOO":return"GMT"+formatTimezoneShort(d,":");case"OOOO":default:return"GMT"+formatTimezone(d,":")}},z:function(e,a,p){const d=e.getTimezoneOffset();switch(a){case"z":case"zz":case"zzz":return"GMT"+formatTimezoneShort(d,":");case"zzzz":default:return"GMT"+formatTimezone(d,":")}},t:function(e,a,p){const d=Math.trunc(+e/1e3);return addLeadingZeros(d,a.length)},T:function(e,a,p){return addLeadingZeros(+e,a.length)}};function formatTimezoneShort(e,a=""){const p=e>0?"-":"+";const d=Math.abs(e);const t=Math.trunc(d/60);const r=d%60;if(r===0){return p+String(t)}return p+String(t)+a+addLeadingZeros(r,2)}function formatTimezoneWithOptionalMinutes(e,a){if(e%60===0){const a=e>0?"-":"+";return a+addLeadingZeros(Math.abs(e)/60,2)}return formatTimezone(e,a)}function formatTimezone(e,a=""){const p=e>0?"-":"+";const d=Math.abs(e);const t=addLeadingZeros(Math.trunc(d/60),2);const r=addLeadingZeros(d%60,2);return p+t+a+r}const dateLongFormatter=(e,a)=>{switch(e){case"P":return a.date({width:"short"});case"PP":return a.date({width:"medium"});case"PPP":return a.date({width:"long"});case"PPPP":default:return a.date({width:"full"})}};const timeLongFormatter=(e,a)=>{switch(e){case"p":return a.time({width:"short"});case"pp":return a.time({width:"medium"});case"ppp":return a.time({width:"long"});case"pppp":default:return a.time({width:"full"})}};const dateTimeLongFormatter=(e,a)=>{const p=e.match(/(P+)(p+)?/)||[];const d=p[1];const t=p[2];if(!t){return dateLongFormatter(e,a)}let r;switch(d){case"P":r=a.dateTime({width:"short"});break;case"PP":r=a.dateTime({width:"medium"});break;case"PPP":r=a.dateTime({width:"long"});break;case"PPPP":default:r=a.dateTime({width:"full"});break}return r.replace("{{date}}",dateLongFormatter(d,a)).replace("{{time}}",timeLongFormatter(t,a))};const qe={p:timeLongFormatter,P:dateTimeLongFormatter};const Pe=/^D+$/;const Be=/^Y+$/;const Re=["D","DD","YY","YYYY"];function isProtectedDayOfYearToken(e){return Pe.test(e)}function isProtectedWeekYearToken(e){return Be.test(e)}function warnOrThrowProtectedError(e,a,p){const d=message(e,a,p);console.warn(d);if(Re.includes(e))throw new RangeError(d)}function message(e,a,p){const d=e[0]==="Y"?"years":"days of the month";return`Use \\`${e.toLowerCase()}\\` instead of \\`${e}\\` (in \\`${a}\\`) for formatting ${d} to the input \\`${p}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`}function isDate(e){return e instanceof Date||typeof e==="object"&&Object.prototype.toString.call(e)==="[object Date]"}const ke=null&&isDate;function isValid(e){return!(!isDate(e)&&typeof e!=="number"||isNaN(+toDate(e)))}const Me=null&&isValid;const Ue=/[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|\'\'|\'(\'\'|[^\'])+(\'|$)|./g;const Fe=/P+p+|P+|p+|\'\'|\'(\'\'|[^\'])+(\'|$)|./g;const je=/^\'([^]*?)\'?$/;const Ie=/\'\'/g;const He=/[a-zA-Z]/;function format(e,a,p){const d=getDefaultOptions();const t=p?.locale??d.locale??H;const r=p?.firstWeekContainsDate??p?.locale?.options?.firstWeekContainsDate??d.firstWeekContainsDate??d.locale?.options?.firstWeekContainsDate??1;const i=p?.weekStartsOn??p?.locale?.options?.weekStartsOn??d.weekStartsOn??d.locale?.options?.weekStartsOn??0;const l=toDate(e,p?.in);if(!isValid(l)){throw new RangeError("Invalid time value")}let o=a.match(Fe).map((e=>{const a=e[0];if(a==="p"||a==="P"){const p=qe[a];return p(e,t.formatLong)}return e})).join("").match(Ue).map((e=>{if(e==="\'\'"){return{isToken:false,value:"\'"}}const a=e[0];if(a==="\'"){return{isToken:false,value:cleanEscapedString(e)}}if(Oe[a]){return{isToken:true,value:e}}if(a.match(He)){throw new RangeError("Format string contains an unescaped latin alphabet character `"+a+"`")}return{isToken:false,value:e}}));if(t.localize.preprocessor){o=t.localize.preprocessor(l,o)}const m={firstWeekContainsDate:r,weekStartsOn:i,locale:t};return o.map((d=>{if(!d.isToken)return d.value;const r=d.value;if(!p?.useAdditionalWeekYearTokens&&isProtectedWeekYearToken(r)||!p?.useAdditionalDayOfYearTokens&&isProtectedDayOfYearToken(r)){warnOrThrowProtectedError(r,a,String(e))}const i=Oe[r[0]];return i(l,r,t.localize,m)})).join("")}function cleanEscapedString(e){const a=e.match(je);if(!a){return e}return a[1].replace(Ie,"\'")}const ze=null&&format;const Ge="media";function isMedia(e){return e.searchParams.has(Ge)}function mapGameToMedia(a){var p,d,t,r,l;const{name:o,competitors:m,date:n,isLive:s,isCompleted:u,url:c}=a;const f=n?format(new Date(n),"MMM dd, HH:mm a"):"";const v=[f,m.map((e=>e.score)).join("-"),s?"Live":"",u?"Completed":""].filter((e=>!!e));const h=v.join("\\n");const g=(t=(d=(p=m[0])===null||p===void 0?void 0:p.team)===null||d===void 0?void 0:d.imageURL)!==null&&t!==void 0?t:(l=(r=m[1])===null||r===void 0?void 0:r.team)===null||l===void 0?void 0:l.imageURL;const w=new i.URL(c);w.searchParams.set("media","true");return(0,e.createMedia)({name:o,description:h,uri:w,thumbnail:g?{portrait:{small:{uri:new i.URL(g)}}}:undefined,isVideo:true,browse:true})}function mapListApiResponseToMedia(e){return e.flatMap((e=>e.games)).filter((e=>!e.isCompleted)).sort(((e,a)=>Number(a.isLive)-Number(e.isLive))).map(mapGameToMedia)}var We=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function SportGamesExtractor(e){return{next(){return We(this,void 0,void 0,(function*(){const a=yield fetchGamesFromSportTypeUrl(e.toString());return mapListApiResponseToMedia(a)}))}}}var $e=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};function SportMediaExtractor({logger:a,uri:p,streamExtractor:d}){let t;return{getTrailer(){return $e(this,void 0,void 0,(function*(){a.debug("getTrailer");return null}))},getSubtitles(){return $e(this,void 0,void 0,(function*(){a.debug("getSubtitles");return[]}))},getMedia(){return $e(this,void 0,void 0,(function*(){if(!t){const{details:a}=yield fetchStreamDescriptions(p.toString());t=(0,e.createMediaDetail)({uri:p,isVideo:true,browse:true,name:a.gameTitle,description:a.description})}return t}))},getMixedVideoStream(){return $e(this,void 0,void 0,(function*(){a.debug("getMixedVideoStream");return d.getStreams(p)}))},getAudioStream(){return $e(this,void 0,void 0,(function*(){a.debug("getAudioStream");return[]}))},getVideoOnlyStream(){return $e(this,void 0,void 0,(function*(){a.debug("getVideoOnlyStream");return[]}))},next(){return $e(this,void 0,void 0,(function*(){a.debug("next");return[]}))}}}var Ye=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};const Ze="source";function isDescriptionStream(e){return e.searchParams.has(Ze)}function SportStreamExtractor(){return{next(){return Ye(this,void 0,void 0,(function*(){return[]}))},getStreams(a){return Ye(this,void 0,void 0,(function*(){const p=a.searchParams.get(Ze);if(!p){const{streams:p}=yield fetchStreamDescriptions(a.toString());return p.map((a=>{const p=new i.URL(a.link);p.searchParams.set(Ze,a.source);return(0,e.createStreamDescription)({name:a.channel,uri:p,description:`${a.gameTitle}\\nVerified: ${a.verified}\\nLanguage:${a.language}\\nQuality:${a.quality}`})}))}const d=new i.URL(a.toString());d.searchParams.delete(Ze);const t=yield getDirectStream(d.toString(),p);if(!t)return[];return[(0,e.createDirectStream)({uri:new i.URL(t.directLink),headers:t.headers,mimeType:"application/x-mpegURL"})]}))},getStreamDescription(a){return Ye(this,void 0,void 0,(function*(){return(0,e.createStreamDescription)({name:a.toString(),uri:a})}))}}}var Je=undefined&&undefined.__awaiter||function(e,a,p,d){function adopt(e){return e instanceof p?e:new p((function(a){a(e)}))}return new(p||(p=Promise))((function(p,t){function fulfilled(e){try{step(d.next(e))}catch(e){t(e)}}function rejected(e){try{step(d["throw"](e))}catch(e){t(e)}}function step(e){e.done?p(e.value):adopt(e.value).then(fulfilled,rejected)}step((d=d.apply(e,a||[])).next())}))};const SportExtractor=({logger:a})=>{const p=createLogger(a,"SportExtractor");return{getAccountExtractor(){return Je(this,void 0,void 0,(function*(){p("getAccountExtractor");throw new e.ExtractorNotImplementedError}))},getAlbumExtractor(){return Je(this,void 0,void 0,(function*(){p("getAlbumExtractor");throw new e.ExtractorNotImplementedError}))},getAlbumsExtractor(){return Je(this,void 0,void 0,(function*(){p("getAlbumsExtractor");throw new e.ExtractorNotImplementedError}))},getAuthorExtractor(){return Je(this,void 0,void 0,(function*(){p("getAuthorExtractor");throw new e.ExtractorNotImplementedError}))},getAuthorsExtractor(){return Je(this,void 0,void 0,(function*(){p("getAuthorsExtractor");throw new e.ExtractorNotImplementedError}))},getAutocompleteExtractor(){return Je(this,void 0,void 0,(function*(){p("getAutocompleteExtractor");throw new e.ExtractorNotImplementedError}))},getSearchExtractor(){return Je(this,void 0,void 0,(function*(){p("getSearchExtractor");throw new e.ExtractorNotImplementedError}))},getCategoriesExtractor(){return Je(this,void 0,void 0,(function*(){const e=p.with(`getCategoriesExtractor`).empty();return SportCategoriesExtractor({logger:e})}))},getCategoryExtractor(e){return Je(this,void 0,void 0,(function*(){const a=p.with(`getCategoryExtractor (${e})`).empty();return SportCategoryExtractor({logger:a,category:e,gamesExtractor:SportGamesExtractor})}))},getFeedExtractor(){return Je(this,void 0,void 0,(function*(){const e=p.with(`getFeedExtractor`).empty();return SportCategoryExtractor({logger:e,category:new i.URL(o.football.url),gamesExtractor:SportGamesExtractor})}))},getHeaders(e){return Je(this,void 0,void 0,(function*(){p(`getHeaders (${e})`);return{}}))},getMediaExtractor(e){return Je(this,void 0,void 0,(function*(){const a=p.with(`getMediaExtractor (${e})`).empty();return SportMediaExtractor({logger:a,uri:e,streamExtractor:SportStreamExtractor()})}))},getStreamExtractor(){return Je(this,void 0,void 0,(function*(){return SportStreamExtractor()}))},isAlbum(){return Je(this,void 0,void 0,(function*(){return false}))},isAuthor(){return Je(this,void 0,void 0,(function*(){return false}))},isCategory(e){return Je(this,void 0,void 0,(function*(){return isSportTypeUrl(e.toString())}))},isDirectStream(e){return Je(this,void 0,void 0,(function*(){return!(isSportTypeUrl(e.toString())||isMedia(e)||isDescriptionStream(e))}))},isDescriptionStream(e){return Je(this,void 0,void 0,(function*(){return isDescriptionStream(e)}))},isMediaTrack(e){return Je(this,void 0,void 0,(function*(){return isMedia(e)}))},isSupported(e){return Je(this,void 0,void 0,(function*(){return isSportTypeUrl(e.toString())||isMedia(e)||isDescriptionStream(e)}))}}};const Xe=SportExtractor})();module.exports=__webpack_exports__})();',Dv={id:fv,name:hv,description:vv,config:gv,version:yv,versionName:bv,targetVersion:wv,website:Sv,iconUrl:_v,updateUrl:Tv,script:Ev};function Cv(){const e=()=>{const a={...Dv};bm(JSON.stringify(a),"sport.json")},t=()=>{const r=wm({downloadUrl:"https://androidplayer1.github.io/tmdb-ui/assets/sport.json"});window.open(`anplayer://plugin/install?${r}`,"_blank")};return b.jsx(cd,{maxW:"2xl",p:"4",children:b.jsxs(Je,{gap:"4",children:[b.jsx(Er,{variant:"outline",w:"full",h:"sm",children:b.jsx(Dr,{justifyContent:"center",alignItems:"center",children:b.jsx(zt,{children:"Configuration coming soon..."})})}),b.jsxs(md,{gap:"3",children:[b.jsx(xt,{flex:"1",variant:"outline",onClick:e,children:"Download"}),b.jsx(xt,{flex:"1",onClick:t,children:"Install"})]})]})})}const Nv=M5([{path:"/",element:b.jsx(Hh,{}),children:[{path:"/",element:b.jsx(bf,{})},{path:"/docs",element:b.jsx(Wh,{})},{path:"/configuration",element:b.jsx(s0,{})},{path:"/tmdb",element:b.jsx(s0,{})},{path:"/sport",element:b.jsx(Cv,{})}]}]),xv=()=>b.jsx(y.StrictMode,{children:b.jsx(G5,{router:Nv})}),Av=C6(document.getElementById("root"));Av.render(b.jsx(xv,{}));
